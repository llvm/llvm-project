# Test that the plugin.cplusplus.display.function-name-format setting
# doesn't print into the frame-format setting unless all its format variables
# were successful.

# RUN: split-file %s %t
# RUN: %build %t/main.cpp -o %t.out
# RUN: %lldb -x -b -s %t/commands.input %t.out -o exit 2>&1 \
# RUN:       | FileCheck %s

#--- main.cpp
template<typename T> T gunc(int x = 10) {
  return T{};
}

int main(int argc, const char *argv[]) {
  gunc<int>();
  return 0;
}

#--- commands.input
settings set plugin.cplusplus.display.function-name-format "${function.basename}${script.target:invalid_func}"
settings set -f frame-format "custom-frame '${function.name-with-args}'\n"
break set -n gunc

run
bt

# CHECK: custom-frame 'int gunc<int>(x=10)'
# CHECK: custom-frame 'main(argc=1, argv={{.*}})'
