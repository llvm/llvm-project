# REQUIRES: system-darwin
#
# Tests that LLDB correctly finds the implementation
# DIE (with a `DW_AT_APPLE_objc_complete_type`)
# given an interface DIE (without said attribute).
#
# RUN: split-file %s %t
# RUN: %clangxx_host %t/lib.m  -c -g -o %t/lib.o
# RUN: %clangxx_host %t/main.m -c -g -o %t/main.o
# RUN: %clangxx_host %t/main.o %t/lib.o -o %t/a.out -framework Foundation
#
# RUN: %lldb %t/a.out \
# RUN:       -o "breakpoint set -p 'return' -X main" \
# RUN:       -o run \
# RUN:       -o "expression *f" \
# RUN:       -o exit | FileCheck %s

# CHECK:      (lldb) expression *f
# CHECK:      (Foo) ${{[0-9]+}} = {
# CHECK:         y = 2 
# CHECK-NEXT:    i = 1 

#--- main.m
#import <Foundation/Foundation.h>
#import "lib.h"

extern Foo * func();

int main() {
    Foo * f = func();
    return 0;
}

#--- lib.m
#import <Foundation/Foundation.h>
#import "lib.h"

@implementation Foo {
int i;
}

- (id)init {
  self->i = 1;
  self->y = 2;

  return self;
}
@end

Foo * func() {
  return [[Foo alloc] init];
}

#--- lib.h
#ifndef LIB_H_IN
#define LIB_H_IN

#import <Foundation/Foundation.h>

@interface Foo : NSObject {
int y;
}
@end

#endif  // _H_IN
