# Test unwinding through stack frames that aren't aligned to 16 bytes.
# (In real world code, this happens when unwinding through
# KiUserExceptionDispatcher and KiUserCallbackDispatcher in ntdll.dll.)

# REQUIRES: target-x86_64, native, system-windows

# RUN: %build %p/Inputs/windows-unaligned-x86_64.cpp %p/Inputs/windows-unaligned-x86_64-asm.s -o %t
# RUN: %lldb %t -s %s -o exit | FileCheck %s

# Future TODO: If %build could compile the source file in C mode, the symbol
# name handling would be easier across msvc and mingw build configurations.
# (In mingw mode, the extern C symbol "func" is printed as "::func" while
# it's plain "func" in msvc mode. Without the extern C, it's "func(..." in
# mingw mode, but "void __cdecl func(..." in msvc mode.)

breakpoint set -n func
# CHECK: Breakpoint 1: where = {{.*}}`{{(::)?}}func

process launch
# CHECK: stop reason = breakpoint 1.1

thread backtrace
# CHECK: frame #0: {{.*}}`{{(::)?}}func
# CHECK: frame #1: {{.*}}`realign_stack
# CHECK: frame #2: {{.*}}`call_func
# CHECK: frame #3: {{.*}}`main
