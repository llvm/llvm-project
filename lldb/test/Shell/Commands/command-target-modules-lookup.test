# RUN: yaml2obj %S/Inputs/symbols.yaml -o %t

# RUN: %lldb %t -b -o "target modules lookup -A -r -s some" | FileCheck %s -DMODULE=%basename_t.tmp --implicit-check-not ignoreThisFunction
# CHECK:      4 symbols match the regular expression 'some' in {{.*}}[[MODULE]]:
# CHECK-NEXT: Address: [[MODULE]][0x0000000000000000] ([[MODULE]]..text + 0)
# CHECK-NEXT: Summary: [[MODULE]]`someFunc(int, int, int)
# CHECK-NEXT: Address: [[MODULE]][0x000000000000001c] ([[MODULE]]..text + 28)
# CHECK-NEXT: Summary: [[MODULE]]`someFunc(char, int)
# CHECK-NEXT: Address: [[MODULE]][0x0000000000000034] ([[MODULE]]..text + 52)
# CHECK-NEXT: Summary: [[MODULE]]`someOtherFunc()
# CHECK-NEXT: Address: [[MODULE]][0x0000000000000038] ([[MODULE]]..text + 56)
# CHECK-NEXT: Summary: [[MODULE]]`someOtherFunc(double)

# RUN: %lldb %t -b -o "target modules lookup -r -n \".*someFunc\"" | FileCheck %s -DMODULE=%basename_t.tmp --check-prefix CHECKFN
# CHECKFN:     2 matches found in {{.*}}[[MODULE]]:
# CHECKFN-NEXT: Address: [[MODULE]][0x0000000000000000] ([[MODULE]]..text + 0)
# CHECKFN-NEXT: Summary: [[MODULE]]`someFunc(int, int, int)
# CHECKFN-NEXT: Address: [[MODULE]][0x000000000000001c] ([[MODULE]]..text + 28)
# CHECKFN-NEXT: Summary: [[MODULE]]`someFunc(char, int)