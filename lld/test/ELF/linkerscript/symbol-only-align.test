# REQUIRES: x86
# RUN: echo '.text; ret; .data; .quad 0' > %t.s
# RUN: llvm-mc -filetype=obj -triple=x86_64-unknown-linux %t.s -o %t.o
# RUN: ld.lld -o %t --script %s %t.o -shared
# RUN: llvm-readelf -S --symbols -l %t | FileCheck %s

PHDRS {
  text PT_LOAD FLAGS(0x5);
  data PT_LOAD FLAGS(0x6);
}

SECTIONS {
  . = SIZEOF_HEADERS;
  .text : { *(.text) } : text
  . = ALIGN(CONSTANT(MAXPAGESIZE));
  foo : { __start_foo = .; *(foo); __end_foo = .; } : data
  .data : { *(.data) }
  .dynamic : { *(.dynamic) }
}

## Check that foo, the symbol only section, has the expected aligned address and
## file offset. Also check that the section's symbols and the data segment's
## offset and addresses match.

# CHECK: Section Headers
# CHECK:      .text     PROGBITS
# CHECK-NEXT: foo       PROGBITS 0000000000001000 001000 000000
# CHECK-NEXT: .dynsym   DYNSYM   0000000000001000 001000

# CHECK: Program Headers
# CHECK:      LOAD
# CHECK-NEXT: LOAD 0x001000   0x0000000000001000   0x0000000000001000

# CHECK: Symbol table
# CHECK: 0000000000001000   0 NOTYPE GLOBAL DEFAULT [[#]] __start_foo
# CHECK: 0000000000001000   0 NOTYPE GLOBAL DEFAULT [[#]] __end_foo
