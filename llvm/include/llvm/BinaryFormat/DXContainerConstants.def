
#ifdef CONTAINER_PART
CONTAINER_PART(DXIL)
CONTAINER_PART(SFI0)
CONTAINER_PART(HASH)
CONTAINER_PART(PSV0)

#undef CONTAINER_PART
#endif 

#ifdef SHADER_FLAG

SHADER_FLAG(0, Doubles, "Double-precision floating point")
SHADER_FLAG(1, ComputeShadersPlusRawAndStructuredBuffers, "Raw and Structured buffers")
SHADER_FLAG(2, UAVsAtEveryStage, "UAVs at every shader stage")
SHADER_FLAG(3, Max64UAVs, "64 UAV slots")
SHADER_FLAG(4, MinimumPrecision, "Minimum-precision data types")
SHADER_FLAG(5, DX11_1_DoubleExtensions, "Double-precision extensions for 11.1")
SHADER_FLAG(6, DX11_1_ShaderExtensions, "Shader extensions for 11.1")
SHADER_FLAG(7, LEVEL9ComparisonFiltering, "Comparison filtering for feature level 9")
SHADER_FLAG(8, TiledResources, "Tiled resources")
SHADER_FLAG(9, StencilRef, "PS Output Stencil Ref")
SHADER_FLAG(10, InnerCoverage, "PS Inner Coverage")
SHADER_FLAG(11, TypedUAVLoadAdditionalFormats, "Typed UAV Load Additional Formats")
SHADER_FLAG(12, ROVs, "Raster Ordered UAVs")
SHADER_FLAG(13, ViewportAndRTArrayIndexFromAnyShaderFeedingRasterizer, "SV_RenderTargetArrayIndex or SV_ViewportArrayIndex from any shader feeding rasterizer")
SHADER_FLAG(14, WaveOps, "Wave level operations")
SHADER_FLAG(15, Int64Ops, "64-Bit integer")
SHADER_FLAG(16, ViewID, "View Instancing")
SHADER_FLAG(17, Barycentrics, "Barycentrics")
SHADER_FLAG(18, NativeLowPrecision, "Use native low precision")
SHADER_FLAG(19, ShadingRate, "Shading Rate")
SHADER_FLAG(20, Raytracing_Tier_1_1, "Raytracing tier 1.1 features")
SHADER_FLAG(21, SamplerFeedback, "Sampler feedback")
SHADER_FLAG(22, AtomicInt64OnTypedResource, "64-bit Atomics on Typed Resources")
SHADER_FLAG(23, AtomicInt64OnGroupShared, "64-bit Atomics on Group Shared")
SHADER_FLAG(24, DerivativesInMeshAndAmpShaders, "Derivatives in mesh and amplification shaders")
SHADER_FLAG(25, ResourceDescriptorHeapIndexing, "Resource descriptor heap indexing")
SHADER_FLAG(26, SamplerDescriptorHeapIndexing, "Sampler descriptor heap indexing")
SHADER_FLAG(27, RESERVED, "<RESERVED>")
SHADER_FLAG(28, AtomicInt64OnHeapResource, "64-bit Atomics on Heap Resources")
SHADER_FLAG(29, AdvancedTextureOps, "Advanced Texture Ops")
SHADER_FLAG(30, WriteableMSAATextures, "Writeable MSAA Textures")

SHADER_FLAG(31, NextUnusedBit, "Next reserved shader flag bit (not a flag)")

#undef SHADER_FLAG
#endif
