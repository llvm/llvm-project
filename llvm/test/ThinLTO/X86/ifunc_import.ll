; RUN: opt -module-summary %s -o %t1.bc
; RUN: opt -module-summary %p/Inputs/ifunc_import.ll -o %t2.bc
; RUN: llvm-lto -thinlto-action=thinlink -o %t.index.bc %t1.bc %t2.bc
; RUN: llvm-lto -thinlto-action=promote -thinlto-index %t.index.bc %t2.bc -o - | llvm-dis -o - | FileCheck -allow-deprecated-dag-overlap %s --check-prefix=PROMOTE
; RUN: llvm-lto -thinlto-action=import -thinlto-index %t.index.bc %t1.bc -o - | llvm-dis -o - | FileCheck -allow-deprecated-dag-overlap %s --check-prefix=IMPORT
; XFAIL: *

; PROMOTE-DAG: @globalIfunc = ifunc void (), bitcast (void ()* ()* @globalResolver to void ()*)
; PROMOTE-DAG: @globalWeakIfunc = weak ifunc void (), bitcast (void ()* ()* @globalResolver to void ()*)
; PROMOTE-DAG: @globalLinkonceIfunc = linkonce ifunc void (), bitcast (void ()* ()* @globalResolver to void ()*)
; PROMOTE-DAG: @globalWeakODRIfunc = weak_odr ifunc void (), bitcast (void ()* ()* @globalResolver to void ()*)
; PROMOTE-DAG: @globalLinkonceODRIfunc = linkonce_odr ifunc void (), bitcast (void ()* ()* @globalResolver to void ()*)
; PROMOTE-DAG: @internalIfunc = ifunc void (), bitcast (void ()* ()* @internalResolver to void ()*)
; PROMOTE-DAG: @internalWeakIfunc = weak ifunc void (), bitcast (void ()* ()* @internalResolver to void ()*)
; PROMOTE-DAG: @internalLinkonceIfunc = linkonce ifunc void (), bitcast (void ()* ()* @internalResolver to void ()*)
; PROMOTE-DAG: @internalWeakODRIfunc = weak_odr ifunc void (), bitcast (void ()* ()* @internalResolver to void ()*)
; PROMOTE-DAG: @internalLinkonceODRIfunc = linkonce_odr ifunc void (), bitcast (void ()* ()* @internalResolver to void ()*)
; PROMOTE-DAG: @linkonceODRIfunc = ifunc void (), bitcast (void ()* ()* @linkonceODRResolver to void ()*)
; PROMOTE-DAG: @linkonceODRWeakIfunc = weak ifunc void (), bitcast (void ()* ()* @linkonceODRResolver to void ()*)
; PROMOTE-DAG: @linkonceODRLinkonceIfunc = linkonce ifunc void (), bitcast (void ()* ()* @linkonceODRResolver to void ()*)
; PROMOTE-DAG: @linkonceODRWeakODRIfunc = weak_odr ifunc void (), bitcast (void ()* ()* @linkonceODRResolver to void ()*)
; PROMOTE-DAG: @linkonceODRLinkonceODRIfunc = linkonce_odr ifunc void (), bitcast (void ()* ()* @linkonceODRResolver to void ()*)
; PROMOTE-DAG: @weakODRIfunc = ifunc void (), bitcast (void ()* ()* @weakODRResolver to void ()*)
; PROMOTE-DAG: @weakODRWeakIfunc = weak ifunc void (), bitcast (void ()* ()* @weakODRResolver to void ()*)
; PROMOTE-DAG: @weakODRLinkonceIfunc = linkonce ifunc void (), bitcast (void ()* ()* @weakODRResolver to void ()*)
; PROMOTE-DAG: @weakODRWeakODRIfunc = weak_odr ifunc void (), bitcast (void ()* ()* @weakODRResolver to void ()*)
; PROMOTE-DAG: @weakODRLinkonceODRIfunc = linkonce_odr ifunc void (), bitcast (void ()* ()* @weakODRResolver to void ()*)
; PROMOTE-DAG: @linkonceIfunc = ifunc void (), bitcast (void ()* ()* @linkonceResolver to void ()*)
; PROMOTE-DAG: @linkonceWeakIfunc = weak ifunc void (), bitcast (void ()* ()* @linkonceResolver to void ()*)
; PROMOTE-DAG: @linkonceLinkonceIfunc = linkonce ifunc void (), bitcast (void ()* ()* @linkonceResolver to void ()*)
; PROMOTE-DAG: @linkonceWeakODRIfunc = weak_odr ifunc void (), bitcast (void ()* ()* @linkonceResolver to void ()*)
; PROMOTE-DAG: @linkonceLinkonceODRIfunc = linkonce_odr ifunc void (), bitcast (void ()* ()* @linkonceResolver to void ()*)
; PROMOTE-DAG: @weakIfunc = ifunc void (), bitcast (void ()* ()* @weakResolver to void ()*)
; PROMOTE-DAG: @weakWeakIfunc = weak ifunc void (), bitcast (void ()* ()* @weakResolver to void ()*)
; PROMOTE-DAG: @weakLinkonceIfunc = linkonce ifunc void (), bitcast (void ()* ()* @weakResolver to void ()*)
; PROMOTE-DAG: @weakWeakODRIfunc = weak_odr ifunc void (), bitcast (void ()* ()* @weakResolver to void ()*)
; PROMOTE-DAG: @weakLinkonceODRIfunc = linkonce_odr ifunc void (), bitcast (void ()* ()* @weakResolver to void ()*)

; PROMOTE-DAG: define hidden void ()* @globalResolver()
; PROMOTE-DAG: define internal void ()* @internalResolver()
; PROMOTE-DAG: define weak_odr void ()* @linkonceODRResolver()
; PROMOTE-DAG: define weak_odr void ()* @weakODRResolver()
; PROMOTE-DAG: define weak void ()*  @linkonceResolver()
; PROMOTE-DAG: define weak void ()* @weakResolver()

; IMPORT-DAG: declare void @globalIfunc()
; IMPORT-DAG: declare void @globalWeakIfunc()
; IMPORT-DAG: declare void @globalLinkonceIfunc()
; IMPORT-DAG: declare void @globalWeakODRIfunc()
; IMPORT-DAG: declare void @globalLinkonceODRIfunc()
; IMPORT-DAG: declare void @internalIfunc()
; IMPORT-DAG: declare void @internalWeakIfunc()
; IMPORT-DAG: declare void @internalLinkonceIfunc()
; IMPORT-DAG: declare void @internalWeakODRIfunc()
; IMPORT-DAG: declare void @internalLinkonceODRIfunc()
; IMPORT-DAG: declare void @linkonceODRIfunc()
; IMPORT-DAG: declare void @linkonceODRWeakIfunc()
; IMPORT-DAG: declare void @linkonceODRLinkonceIfunc()
; IMPORT-DAG: declare void @linkonceODRWeakODRIfunc()
; IMPORT-DAG: declare void @linkonceODRLinkonceODRIfunc()
; IMPORT-DAG: declare void @weakODRIfunc()
; IMPORT-DAG: declare void @weakODRWeakIfunc()
; IMPORT-DAG: declare void @weakODRLinkonceIfunc()
; IMPORT-DAG: declare void @weakODRWeakODRIfunc()
; IMPORT-DAG: declare void @weakODRLinkonceODRIfunc()
; IMPORT-DAG: declare void @linkonceIfunc()
; IMPORT-DAG: declare void @linkonceWeakIfunc()
; IMPORT-DAG: declare void @linkonceLinkonceIfunc()
; IMPORT-DAG: declare void @linkonceWeakODRIfunc()
; IMPORT-DAG: declare void @linkonceLinkonceODRIfunc()
; IMPORT-DAG: declare void @weakIfunc()
; IMPORT-DAG: declare void @weakWeakIfunc()
; IMPORT-DAG: declare void @weakLinkonceIfunc()
; IMPORT-DAG: declare void @weakWeakODRIfunc()
; IMPORT-DAG: declare void @weakLinkonceODRIfunc()

target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"

define i32 @main() {
entry:
  call void @globalIfunc()
  call void @globalWeakIfunc()
  call void @globalLinkonceIfunc()
  call void @globalWeakODRIfunc()
  call void @globalLinkonceODRIfunc()

  call void @internalIfunc()
  call void @internalWeakIfunc()
  call void @internalLinkonceIfunc()
  call void @internalWeakODRIfunc()
  call void @internalLinkonceODRIfunc()

  call void @linkonceODRIfunc()
  call void @linkonceODRWeakIfunc()
  call void @linkonceODRLinkonceIfunc()
  call void @linkonceODRWeakODRIfunc()
  call void @linkonceODRLinkonceODRIfunc()

  call void @weakODRIfunc()
  call void @weakODRWeakIfunc()
  call void @weakODRLinkonceIfunc()
  call void @weakODRWeakODRIfunc()
  call void @weakODRLinkonceODRIfunc()

  call void @linkonceIfunc()
  call void @linkonceWeakIfunc()
  call void @linkonceLinkonceIfunc()
  call void @linkonceWeakODRIfunc()
  call void @linkonceLinkonceODRIfunc()

  call void @weakIfunc()
  call void @weakWeakIfunc()
  call void @weakLinkonceIfunc()
  call void @weakWeakODRIfunc()
  call void @weakLinkonceODRIfunc()

  ret i32 0
}


declare void @globalIfunc()
declare void @globalWeakIfunc()
declare void @globalLinkonceIfunc()
declare void @globalWeakODRIfunc()
declare void @globalLinkonceODRIfunc()

declare void @internalIfunc()
declare void @internalWeakIfunc()
declare void @internalLinkonceIfunc()
declare void @internalWeakODRIfunc()
declare void @internalLinkonceODRIfunc()

declare void @linkonceODRIfunc()
declare void @linkonceODRWeakIfunc()
declare void @linkonceODRLinkonceIfunc()
declare void @linkonceODRWeakODRIfunc()
declare void @linkonceODRLinkonceODRIfunc()

declare void @weakODRIfunc()
declare void @weakODRWeakIfunc()
declare void @weakODRLinkonceIfunc()
declare void @weakODRWeakODRIfunc()
declare void @weakODRLinkonceODRIfunc()

declare void @linkonceIfunc()
declare void @linkonceWeakIfunc()
declare void @linkonceLinkonceIfunc()
declare void @linkonceWeakODRIfunc()
declare void @linkonceLinkonceODRIfunc()

declare void @weakIfunc()
declare void @weakWeakIfunc()
declare void @weakLinkonceIfunc()
declare void @weakWeakODRIfunc()
declare void @weakLinkonceODRIfunc()
