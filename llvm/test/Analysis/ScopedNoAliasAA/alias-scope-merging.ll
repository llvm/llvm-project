; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -S -passes=memcpyopt | FileCheck %s

declare void @use(ptr)

; Alias scopes are merged by taking the intersection of domains, then the union of the scopes within those domains
define i8 @test(i8 %input) {
; CHECK-LABEL: define i8 @test(
; CHECK-SAME: i8 [[INPUT:%.*]]) {
; CHECK-NEXT:    [[DST:%.*]] = alloca i8, align 1
; CHECK-NEXT:    [[SRC:%.*]] = alloca i8, align 1
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 8, ptr nonnull [[SRC]]), !noalias [[META0:![0-9]+]]
; CHECK-NEXT:    store i8 [[INPUT]], ptr [[SRC]], align 1
; CHECK-NEXT:    [[RET_VALUE:%.*]] = load i8, ptr [[SRC]], align 1
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 8, ptr nonnull [[SRC]]), !noalias [[META0]]
; CHECK-NEXT:    ret i8 [[RET_VALUE]]
;
  %tmp = alloca i8
  %dst = alloca i8
  %src = alloca i8
<<<<<<< HEAD
; CHECK:   call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 1, i1 false), !alias.scope ![[SCOPE:[0-9]+]]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %src), !noalias !4
||||||| parent of 827019c4bdfb (add memcpy removal for simple dest)
; CHECK:   call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 1, i1 false), !alias.scope ![[SCOPE:[0-9]+]]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %src), !noalias !4
=======
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %src), !noalias !4
>>>>>>> 827019c4bdfb (add memcpy removal for simple dest)
  store i8 %input, ptr %src
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %tmp, ptr align 8 %src, i64 1, i1 false), !alias.scope !0
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %src), !noalias !4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %tmp, i64 1, i1 false), !alias.scope !4
  %ret_value = load i8, ptr %dst
  call void @use(ptr %src)
  ret i8 %ret_value
}

; Merged scope contains "callee0: %a" and "callee0 : %b"

declare void @llvm.lifetime.start.p0(i64, ptr nocapture)
declare void @llvm.lifetime.end.p0(i64, ptr nocapture)
declare void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

!0 = !{!1, !7}
!1 = distinct !{!1, !3, !"callee0: %a"}
!2 = distinct !{!2, !3, !"callee0: %b"}
!3 = distinct !{!3, !"callee0"}

!4 = !{!2, !5}
!5 = distinct !{!5, !6, !"callee1: %a"}
!6 = distinct !{!6, !"callee1"}

!7 = distinct !{!7, !8, !"callee2: %a"}
!8 = distinct !{!8, !"callee2"}
;.
; CHECK: [[META0]] = !{[[META1:![0-9]+]], [[META3:![0-9]+]]}
; CHECK: [[META1]] = distinct !{[[META1]], [[META2:![0-9]+]], !"callee0: %b"}
; CHECK: [[META2]] = distinct !{[[META2]], !"callee0"}
; CHECK: [[META3]] = distinct !{[[META3]], [[META4:![0-9]+]], !"callee1: %a"}
; CHECK: [[META4]] = distinct !{[[META4]], !"callee1"}
;.
