; NOTE: Assertions have been autogenerated by utils/update_analyze_test_checks.py
; RUN: opt -passes="print<cost-model>" 2>&1 -disable-output < %s \
; RUN:   -mtriple=riscv64 -mattr=+v -riscv-v-vector-bits-min=128 | FileCheck %s

; Test that shift instructions map to correct RVV opcodes
; This test verifies the fix for incorrect instruction mappings where
; SHL/SRL/SRA all incorrectly mapped to VSLL_VV

define void @test_vector_shifts(<4 x i32> %a, <4 x i32> %b) {
; CHECK-LABEL: 'test_vector_shifts'

; Test left shift (should use VSLL_VV)
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %shl_v4i32 = shl <4 x i32> %a, %b
  %shl_v4i32 = shl <4 x i32> %a, %b

; Test logical right shift (should use VSRL_VV, not VSLL_VV)  
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %lshr_v4i32 = lshr <4 x i32> %a, %b
  %lshr_v4i32 = lshr <4 x i32> %a, %b

; Test arithmetic right shift (should use VSRA_VV, not VSLL_VV)
; CHECK-NEXT:  Cost Model: Found an estimated cost of 1 for instruction: %ashr_v4i32 = ashr <4 x i32> %a, %b
  %ashr_v4i32 = ashr <4 x i32> %a, %b

; CHECK-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: ret void
  ret void
}
