; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

declare noundef i32 @llvm.nvvm.read.ptx.sreg.nctaid.x()
declare i32 @llvm.umin.i32(i32, i32)
define i32 @foo(i1 %c, i32 %arg) {
; CHECK-LABEL: define i32 @foo(
; CHECK-SAME: i1 [[C:%.*]], i32 [[ARG:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    [[I:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.nctaid.x()
; CHECK-NEXT:    br i1 [[C]], label %[[BB_1:.*]], label %[[BB_2:.*]]
; CHECK:       [[BB_1]]:
; CHECK-NEXT:    br label %[[BB_2]]
; CHECK:       [[BB_2]]:
; CHECK-NEXT:    [[PHI:%.*]] = phi i32 [ [[I]], %[[ENTRY]] ], [ 0, %[[BB_1]] ]
; CHECK-NEXT:    [[RES:%.*]] = call i32 @llvm.umin.i32(i32 [[PHI]], i32 [[ARG]])
; CHECK-NEXT:    ret i32 [[RES]]
;
entry:
  %i = call i32 @llvm.nvvm.read.ptx.sreg.nctaid.x()
  br i1 %c, label %bb.1, label %bb.2
bb.1:
  br label %bb.2
bb.2:
  %phi = phi i32 [ %i, %entry ], [ 0, %bb.1 ]
  %res = call i32 @llvm.umin.i32(i32 %phi, i32 %arg)
  ret i32 %res
}
