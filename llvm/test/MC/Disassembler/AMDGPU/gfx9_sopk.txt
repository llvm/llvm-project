# RUN: llvm-mc -arch=amdgcn -mcpu=gfx900 -disassemble -show-encoding < %s | FileCheck -strict-whitespace %s

# CHECK: s_movk_i32 s5, 0x3141                   ; encoding: [0x41,0x31,0x05,0xb0]
0x41,0x31,0x05,0xb0

# CHECK: s_movk_i32 s101, 0x3141                 ; encoding: [0x41,0x31,0x65,0xb0]
0x41,0x31,0x65,0xb0

# CHECK: s_movk_i32 flat_scratch_lo, 0x3141      ; encoding: [0x41,0x31,0x66,0xb0]
0x41,0x31,0x66,0xb0

# CHECK: s_movk_i32 flat_scratch_hi, 0x3141      ; encoding: [0x41,0x31,0x67,0xb0]
0x41,0x31,0x67,0xb0

# CHECK: s_movk_i32 vcc_lo, 0x3141               ; encoding: [0x41,0x31,0x6a,0xb0]
0x41,0x31,0x6a,0xb0

# CHECK: s_movk_i32 vcc_hi, 0x3141               ; encoding: [0x41,0x31,0x6b,0xb0]
0x41,0x31,0x6b,0xb0

# CHECK: s_movk_i32 m0, 0x3141                   ; encoding: [0x41,0x31,0x7c,0xb0]
0x41,0x31,0x7c,0xb0

# CHECK: s_movk_i32 exec_lo, 0x3141              ; encoding: [0x41,0x31,0x7e,0xb0]
0x41,0x31,0x7e,0xb0

# CHECK: s_movk_i32 exec_hi, 0x3141              ; encoding: [0x41,0x31,0x7f,0xb0]
0x41,0x31,0x7f,0xb0

# CHECK: s_movk_i32 s5, 0xc1d1                   ; encoding: [0xd1,0xc1,0x05,0xb0]
0xd1,0xc1,0x05,0xb0

# CHECK: s_cmovk_i32 s5, 0x3141                  ; encoding: [0x41,0x31,0x85,0xb0]
0x41,0x31,0x85,0xb0

# CHECK: s_cmovk_i32 s101, 0x3141                ; encoding: [0x41,0x31,0xe5,0xb0]
0x41,0x31,0xe5,0xb0

# CHECK: s_cmovk_i32 flat_scratch_lo, 0x3141     ; encoding: [0x41,0x31,0xe6,0xb0]
0x41,0x31,0xe6,0xb0

# CHECK: s_cmovk_i32 flat_scratch_hi, 0x3141     ; encoding: [0x41,0x31,0xe7,0xb0]
0x41,0x31,0xe7,0xb0

# CHECK: s_cmovk_i32 vcc_lo, 0x3141              ; encoding: [0x41,0x31,0xea,0xb0]
0x41,0x31,0xea,0xb0

# CHECK: s_cmovk_i32 vcc_hi, 0x3141              ; encoding: [0x41,0x31,0xeb,0xb0]
0x41,0x31,0xeb,0xb0

# CHECK: s_cmovk_i32 m0, 0x3141                  ; encoding: [0x41,0x31,0xfc,0xb0]
0x41,0x31,0xfc,0xb0

# CHECK: s_cmovk_i32 exec_lo, 0x3141             ; encoding: [0x41,0x31,0xfe,0xb0]
0x41,0x31,0xfe,0xb0

# CHECK: s_cmovk_i32 exec_hi, 0x3141             ; encoding: [0x41,0x31,0xff,0xb0]
0x41,0x31,0xff,0xb0

# CHECK: s_cmovk_i32 s5, 0xc1d1                  ; encoding: [0xd1,0xc1,0x85,0xb0]
0xd1,0xc1,0x85,0xb0

# CHECK: s_cmpk_eq_i32 s1, 0x3141                ; encoding: [0x41,0x31,0x01,0xb1]
0x41,0x31,0x01,0xb1

# CHECK: s_cmpk_eq_i32 s101, 0x3141              ; encoding: [0x41,0x31,0x65,0xb1]
0x41,0x31,0x65,0xb1

# CHECK: s_cmpk_eq_i32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0x66,0xb1]
0x41,0x31,0x66,0xb1

# CHECK: s_cmpk_eq_i32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0x67,0xb1]
0x41,0x31,0x67,0xb1

# CHECK: s_cmpk_eq_i32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0x6a,0xb1]
0x41,0x31,0x6a,0xb1

# CHECK: s_cmpk_eq_i32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0x6b,0xb1]
0x41,0x31,0x6b,0xb1

# CHECK: s_cmpk_eq_i32 m0, 0x3141                ; encoding: [0x41,0x31,0x7c,0xb1]
0x41,0x31,0x7c,0xb1

# CHECK: s_cmpk_eq_i32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0x7e,0xb1]
0x41,0x31,0x7e,0xb1

# CHECK: s_cmpk_eq_i32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0x7f,0xb1]
0x41,0x31,0x7f,0xb1

# CHECK: s_cmpk_eq_i32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x01,0xb1]
0xd1,0xc1,0x01,0xb1

# CHECK: s_cmpk_lg_i32 s1, 0x3141                ; encoding: [0x41,0x31,0x81,0xb1]
0x41,0x31,0x81,0xb1

# CHECK: s_cmpk_lg_i32 s101, 0x3141              ; encoding: [0x41,0x31,0xe5,0xb1]
0x41,0x31,0xe5,0xb1

# CHECK: s_cmpk_lg_i32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0xe6,0xb1]
0x41,0x31,0xe6,0xb1

# CHECK: s_cmpk_lg_i32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0xe7,0xb1]
0x41,0x31,0xe7,0xb1

# CHECK: s_cmpk_lg_i32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0xea,0xb1]
0x41,0x31,0xea,0xb1

# CHECK: s_cmpk_lg_i32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0xeb,0xb1]
0x41,0x31,0xeb,0xb1

# CHECK: s_cmpk_lg_i32 m0, 0x3141                ; encoding: [0x41,0x31,0xfc,0xb1]
0x41,0x31,0xfc,0xb1

# CHECK: s_cmpk_lg_i32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0xfe,0xb1]
0x41,0x31,0xfe,0xb1

# CHECK: s_cmpk_lg_i32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0xff,0xb1]
0x41,0x31,0xff,0xb1

# CHECK: s_cmpk_lg_i32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x81,0xb1]
0xd1,0xc1,0x81,0xb1

# CHECK: s_cmpk_gt_i32 s1, 0x3141                ; encoding: [0x41,0x31,0x01,0xb2]
0x41,0x31,0x01,0xb2

# CHECK: s_cmpk_gt_i32 s101, 0x3141              ; encoding: [0x41,0x31,0x65,0xb2]
0x41,0x31,0x65,0xb2

# CHECK: s_cmpk_gt_i32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0x66,0xb2]
0x41,0x31,0x66,0xb2

# CHECK: s_cmpk_gt_i32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0x67,0xb2]
0x41,0x31,0x67,0xb2

# CHECK: s_cmpk_gt_i32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0x6a,0xb2]
0x41,0x31,0x6a,0xb2

# CHECK: s_cmpk_gt_i32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0x6b,0xb2]
0x41,0x31,0x6b,0xb2

# CHECK: s_cmpk_gt_i32 m0, 0x3141                ; encoding: [0x41,0x31,0x7c,0xb2]
0x41,0x31,0x7c,0xb2

# CHECK: s_cmpk_gt_i32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0x7e,0xb2]
0x41,0x31,0x7e,0xb2

# CHECK: s_cmpk_gt_i32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0x7f,0xb2]
0x41,0x31,0x7f,0xb2

# CHECK: s_cmpk_gt_i32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x01,0xb2]
0xd1,0xc1,0x01,0xb2

# CHECK: s_cmpk_ge_i32 s1, 0x3141                ; encoding: [0x41,0x31,0x81,0xb2]
0x41,0x31,0x81,0xb2

# CHECK: s_cmpk_ge_i32 s101, 0x3141              ; encoding: [0x41,0x31,0xe5,0xb2]
0x41,0x31,0xe5,0xb2

# CHECK: s_cmpk_ge_i32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0xe6,0xb2]
0x41,0x31,0xe6,0xb2

# CHECK: s_cmpk_ge_i32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0xe7,0xb2]
0x41,0x31,0xe7,0xb2

# CHECK: s_cmpk_ge_i32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0xea,0xb2]
0x41,0x31,0xea,0xb2

# CHECK: s_cmpk_ge_i32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0xeb,0xb2]
0x41,0x31,0xeb,0xb2

# CHECK: s_cmpk_ge_i32 m0, 0x3141                ; encoding: [0x41,0x31,0xfc,0xb2]
0x41,0x31,0xfc,0xb2

# CHECK: s_cmpk_ge_i32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0xfe,0xb2]
0x41,0x31,0xfe,0xb2

# CHECK: s_cmpk_ge_i32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0xff,0xb2]
0x41,0x31,0xff,0xb2

# CHECK: s_cmpk_ge_i32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x81,0xb2]
0xd1,0xc1,0x81,0xb2

# CHECK: s_cmpk_lt_i32 s1, 0x3141                ; encoding: [0x41,0x31,0x01,0xb3]
0x41,0x31,0x01,0xb3

# CHECK: s_cmpk_lt_i32 s101, 0x3141              ; encoding: [0x41,0x31,0x65,0xb3]
0x41,0x31,0x65,0xb3

# CHECK: s_cmpk_lt_i32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0x66,0xb3]
0x41,0x31,0x66,0xb3

# CHECK: s_cmpk_lt_i32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0x67,0xb3]
0x41,0x31,0x67,0xb3

# CHECK: s_cmpk_lt_i32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0x6a,0xb3]
0x41,0x31,0x6a,0xb3

# CHECK: s_cmpk_lt_i32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0x6b,0xb3]
0x41,0x31,0x6b,0xb3

# CHECK: s_cmpk_lt_i32 m0, 0x3141                ; encoding: [0x41,0x31,0x7c,0xb3]
0x41,0x31,0x7c,0xb3

# CHECK: s_cmpk_lt_i32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0x7e,0xb3]
0x41,0x31,0x7e,0xb3

# CHECK: s_cmpk_lt_i32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0x7f,0xb3]
0x41,0x31,0x7f,0xb3

# CHECK: s_cmpk_lt_i32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x01,0xb3]
0xd1,0xc1,0x01,0xb3

# CHECK: s_cmpk_le_i32 s1, 0x3141                ; encoding: [0x41,0x31,0x81,0xb3]
0x41,0x31,0x81,0xb3

# CHECK: s_cmpk_le_i32 s101, 0x3141              ; encoding: [0x41,0x31,0xe5,0xb3]
0x41,0x31,0xe5,0xb3

# CHECK: s_cmpk_le_i32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0xe6,0xb3]
0x41,0x31,0xe6,0xb3

# CHECK: s_cmpk_le_i32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0xe7,0xb3]
0x41,0x31,0xe7,0xb3

# CHECK: s_cmpk_le_i32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0xea,0xb3]
0x41,0x31,0xea,0xb3

# CHECK: s_cmpk_le_i32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0xeb,0xb3]
0x41,0x31,0xeb,0xb3

# CHECK: s_cmpk_le_i32 m0, 0x3141                ; encoding: [0x41,0x31,0xfc,0xb3]
0x41,0x31,0xfc,0xb3

# CHECK: s_cmpk_le_i32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0xfe,0xb3]
0x41,0x31,0xfe,0xb3

# CHECK: s_cmpk_le_i32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0xff,0xb3]
0x41,0x31,0xff,0xb3

# CHECK: s_cmpk_le_i32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x81,0xb3]
0xd1,0xc1,0x81,0xb3

# CHECK: s_cmpk_eq_u32 s1, 0x3141                ; encoding: [0x41,0x31,0x01,0xb4]
0x41,0x31,0x01,0xb4

# CHECK: s_cmpk_eq_u32 s101, 0x3141              ; encoding: [0x41,0x31,0x65,0xb4]
0x41,0x31,0x65,0xb4

# CHECK: s_cmpk_eq_u32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0x66,0xb4]
0x41,0x31,0x66,0xb4

# CHECK: s_cmpk_eq_u32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0x67,0xb4]
0x41,0x31,0x67,0xb4

# CHECK: s_cmpk_eq_u32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0x6a,0xb4]
0x41,0x31,0x6a,0xb4

# CHECK: s_cmpk_eq_u32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0x6b,0xb4]
0x41,0x31,0x6b,0xb4

# CHECK: s_cmpk_eq_u32 m0, 0x3141                ; encoding: [0x41,0x31,0x7c,0xb4]
0x41,0x31,0x7c,0xb4

# CHECK: s_cmpk_eq_u32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0x7e,0xb4]
0x41,0x31,0x7e,0xb4

# CHECK: s_cmpk_eq_u32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0x7f,0xb4]
0x41,0x31,0x7f,0xb4

# CHECK: s_cmpk_eq_u32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x01,0xb4]
0xd1,0xc1,0x01,0xb4

# CHECK: s_cmpk_lg_u32 s1, 0x3141                ; encoding: [0x41,0x31,0x81,0xb4]
0x41,0x31,0x81,0xb4

# CHECK: s_cmpk_lg_u32 s101, 0x3141              ; encoding: [0x41,0x31,0xe5,0xb4]
0x41,0x31,0xe5,0xb4

# CHECK: s_cmpk_lg_u32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0xe6,0xb4]
0x41,0x31,0xe6,0xb4

# CHECK: s_cmpk_lg_u32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0xe7,0xb4]
0x41,0x31,0xe7,0xb4

# CHECK: s_cmpk_lg_u32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0xea,0xb4]
0x41,0x31,0xea,0xb4

# CHECK: s_cmpk_lg_u32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0xeb,0xb4]
0x41,0x31,0xeb,0xb4

# CHECK: s_cmpk_lg_u32 m0, 0x3141                ; encoding: [0x41,0x31,0xfc,0xb4]
0x41,0x31,0xfc,0xb4

# CHECK: s_cmpk_lg_u32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0xfe,0xb4]
0x41,0x31,0xfe,0xb4

# CHECK: s_cmpk_lg_u32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0xff,0xb4]
0x41,0x31,0xff,0xb4

# CHECK: s_cmpk_lg_u32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x81,0xb4]
0xd1,0xc1,0x81,0xb4

# CHECK: s_cmpk_gt_u32 s1, 0x3141                ; encoding: [0x41,0x31,0x01,0xb5]
0x41,0x31,0x01,0xb5

# CHECK: s_cmpk_gt_u32 s101, 0x3141              ; encoding: [0x41,0x31,0x65,0xb5]
0x41,0x31,0x65,0xb5

# CHECK: s_cmpk_gt_u32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0x66,0xb5]
0x41,0x31,0x66,0xb5

# CHECK: s_cmpk_gt_u32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0x67,0xb5]
0x41,0x31,0x67,0xb5

# CHECK: s_cmpk_gt_u32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0x6a,0xb5]
0x41,0x31,0x6a,0xb5

# CHECK: s_cmpk_gt_u32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0x6b,0xb5]
0x41,0x31,0x6b,0xb5

# CHECK: s_cmpk_gt_u32 m0, 0x3141                ; encoding: [0x41,0x31,0x7c,0xb5]
0x41,0x31,0x7c,0xb5

# CHECK: s_cmpk_gt_u32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0x7e,0xb5]
0x41,0x31,0x7e,0xb5

# CHECK: s_cmpk_gt_u32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0x7f,0xb5]
0x41,0x31,0x7f,0xb5

# CHECK: s_cmpk_gt_u32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x01,0xb5]
0xd1,0xc1,0x01,0xb5

# CHECK: s_cmpk_ge_u32 s1, 0x3141                ; encoding: [0x41,0x31,0x81,0xb5]
0x41,0x31,0x81,0xb5

# CHECK: s_cmpk_ge_u32 s101, 0x3141              ; encoding: [0x41,0x31,0xe5,0xb5]
0x41,0x31,0xe5,0xb5

# CHECK: s_cmpk_ge_u32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0xe6,0xb5]
0x41,0x31,0xe6,0xb5

# CHECK: s_cmpk_ge_u32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0xe7,0xb5]
0x41,0x31,0xe7,0xb5

# CHECK: s_cmpk_ge_u32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0xea,0xb5]
0x41,0x31,0xea,0xb5

# CHECK: s_cmpk_ge_u32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0xeb,0xb5]
0x41,0x31,0xeb,0xb5

# CHECK: s_cmpk_ge_u32 m0, 0x3141                ; encoding: [0x41,0x31,0xfc,0xb5]
0x41,0x31,0xfc,0xb5

# CHECK: s_cmpk_ge_u32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0xfe,0xb5]
0x41,0x31,0xfe,0xb5

# CHECK: s_cmpk_ge_u32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0xff,0xb5]
0x41,0x31,0xff,0xb5

# CHECK: s_cmpk_ge_u32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x81,0xb5]
0xd1,0xc1,0x81,0xb5

# CHECK: s_cmpk_lt_u32 s1, 0x3141                ; encoding: [0x41,0x31,0x01,0xb6]
0x41,0x31,0x01,0xb6

# CHECK: s_cmpk_lt_u32 s101, 0x3141              ; encoding: [0x41,0x31,0x65,0xb6]
0x41,0x31,0x65,0xb6

# CHECK: s_cmpk_lt_u32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0x66,0xb6]
0x41,0x31,0x66,0xb6

# CHECK: s_cmpk_lt_u32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0x67,0xb6]
0x41,0x31,0x67,0xb6

# CHECK: s_cmpk_lt_u32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0x6a,0xb6]
0x41,0x31,0x6a,0xb6

# CHECK: s_cmpk_lt_u32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0x6b,0xb6]
0x41,0x31,0x6b,0xb6

# CHECK: s_cmpk_lt_u32 m0, 0x3141                ; encoding: [0x41,0x31,0x7c,0xb6]
0x41,0x31,0x7c,0xb6

# CHECK: s_cmpk_lt_u32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0x7e,0xb6]
0x41,0x31,0x7e,0xb6

# CHECK: s_cmpk_lt_u32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0x7f,0xb6]
0x41,0x31,0x7f,0xb6

# CHECK: s_cmpk_lt_u32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x01,0xb6]
0xd1,0xc1,0x01,0xb6

# CHECK: s_cmpk_le_u32 s1, 0x3141                ; encoding: [0x41,0x31,0x81,0xb6]
0x41,0x31,0x81,0xb6

# CHECK: s_cmpk_le_u32 s101, 0x3141              ; encoding: [0x41,0x31,0xe5,0xb6]
0x41,0x31,0xe5,0xb6

# CHECK: s_cmpk_le_u32 flat_scratch_lo, 0x3141   ; encoding: [0x41,0x31,0xe6,0xb6]
0x41,0x31,0xe6,0xb6

# CHECK: s_cmpk_le_u32 flat_scratch_hi, 0x3141   ; encoding: [0x41,0x31,0xe7,0xb6]
0x41,0x31,0xe7,0xb6

# CHECK: s_cmpk_le_u32 vcc_lo, 0x3141            ; encoding: [0x41,0x31,0xea,0xb6]
0x41,0x31,0xea,0xb6

# CHECK: s_cmpk_le_u32 vcc_hi, 0x3141            ; encoding: [0x41,0x31,0xeb,0xb6]
0x41,0x31,0xeb,0xb6

# CHECK: s_cmpk_le_u32 m0, 0x3141                ; encoding: [0x41,0x31,0xfc,0xb6]
0x41,0x31,0xfc,0xb6

# CHECK: s_cmpk_le_u32 exec_lo, 0x3141           ; encoding: [0x41,0x31,0xfe,0xb6]
0x41,0x31,0xfe,0xb6

# CHECK: s_cmpk_le_u32 exec_hi, 0x3141           ; encoding: [0x41,0x31,0xff,0xb6]
0x41,0x31,0xff,0xb6

# CHECK: s_cmpk_le_u32 s1, 0xc1d1                ; encoding: [0xd1,0xc1,0x81,0xb6]
0xd1,0xc1,0x81,0xb6

# CHECK: s_addk_i32 s5, 0x3141                   ; encoding: [0x41,0x31,0x05,0xb7]
0x41,0x31,0x05,0xb7

# CHECK: s_addk_i32 s101, 0x3141                 ; encoding: [0x41,0x31,0x65,0xb7]
0x41,0x31,0x65,0xb7

# CHECK: s_addk_i32 flat_scratch_lo, 0x3141      ; encoding: [0x41,0x31,0x66,0xb7]
0x41,0x31,0x66,0xb7

# CHECK: s_addk_i32 flat_scratch_hi, 0x3141      ; encoding: [0x41,0x31,0x67,0xb7]
0x41,0x31,0x67,0xb7

# CHECK: s_addk_i32 vcc_lo, 0x3141               ; encoding: [0x41,0x31,0x6a,0xb7]
0x41,0x31,0x6a,0xb7

# CHECK: s_addk_i32 vcc_hi, 0x3141               ; encoding: [0x41,0x31,0x6b,0xb7]
0x41,0x31,0x6b,0xb7

# CHECK: s_addk_i32 m0, 0x3141                   ; encoding: [0x41,0x31,0x7c,0xb7]
0x41,0x31,0x7c,0xb7

# CHECK: s_addk_i32 exec_lo, 0x3141              ; encoding: [0x41,0x31,0x7e,0xb7]
0x41,0x31,0x7e,0xb7

# CHECK: s_addk_i32 exec_hi, 0x3141              ; encoding: [0x41,0x31,0x7f,0xb7]
0x41,0x31,0x7f,0xb7

# CHECK: s_addk_i32 s5, 0xc1d1                   ; encoding: [0xd1,0xc1,0x05,0xb7]
0xd1,0xc1,0x05,0xb7

# CHECK: s_mulk_i32 s5, 0x3141                   ; encoding: [0x41,0x31,0x85,0xb7]
0x41,0x31,0x85,0xb7

# CHECK: s_mulk_i32 s101, 0x3141                 ; encoding: [0x41,0x31,0xe5,0xb7]
0x41,0x31,0xe5,0xb7

# CHECK: s_mulk_i32 flat_scratch_lo, 0x3141      ; encoding: [0x41,0x31,0xe6,0xb7]
0x41,0x31,0xe6,0xb7

# CHECK: s_mulk_i32 flat_scratch_hi, 0x3141      ; encoding: [0x41,0x31,0xe7,0xb7]
0x41,0x31,0xe7,0xb7

# CHECK: s_mulk_i32 vcc_lo, 0x3141               ; encoding: [0x41,0x31,0xea,0xb7]
0x41,0x31,0xea,0xb7

# CHECK: s_mulk_i32 vcc_hi, 0x3141               ; encoding: [0x41,0x31,0xeb,0xb7]
0x41,0x31,0xeb,0xb7

# CHECK: s_mulk_i32 m0, 0x3141                   ; encoding: [0x41,0x31,0xfc,0xb7]
0x41,0x31,0xfc,0xb7

# CHECK: s_mulk_i32 exec_lo, 0x3141              ; encoding: [0x41,0x31,0xfe,0xb7]
0x41,0x31,0xfe,0xb7

# CHECK: s_mulk_i32 exec_hi, 0x3141              ; encoding: [0x41,0x31,0xff,0xb7]
0x41,0x31,0xff,0xb7

# CHECK: s_mulk_i32 s5, 0xc1d1                   ; encoding: [0xd1,0xc1,0x85,0xb7]
0xd1,0xc1,0x85,0xb7

# CHECK: s_cbranch_i_fork s[2:3], 12609          ; encoding: [0x41,0x31,0x02,0xb8]
0x41,0x31,0x02,0xb8

# CHECK: s_cbranch_i_fork s[4:5], 12609          ; encoding: [0x41,0x31,0x04,0xb8]
0x41,0x31,0x04,0xb8

# CHECK: s_cbranch_i_fork s[100:101], 12609      ; encoding: [0x41,0x31,0x64,0xb8]
0x41,0x31,0x64,0xb8

# CHECK: s_cbranch_i_fork flat_scratch, 12609    ; encoding: [0x41,0x31,0x66,0xb8]
0x41,0x31,0x66,0xb8

# CHECK: s_cbranch_i_fork vcc, 12609             ; encoding: [0x41,0x31,0x6a,0xb8]
0x41,0x31,0x6a,0xb8

# CHECK: s_cbranch_i_fork exec, 12609            ; encoding: [0x41,0x31,0x7e,0xb8]
0x41,0x31,0x7e,0xb8

# CHECK: s_cbranch_i_fork s[2:3], 49617          ; encoding: [0xd1,0xc1,0x02,0xb8]
0xd1,0xc1,0x02,0xb8

# CHECK: s_getreg_b32 s5, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0x85,0xb8]
0x41,0x31,0x85,0xb8

# CHECK: s_getreg_b32 s101, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0xe5,0xb8]
0x41,0x31,0xe5,0xb8

# CHECK: s_getreg_b32 flat_scratch_lo, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0xe6,0xb8]
0x41,0x31,0xe6,0xb8

# CHECK: s_getreg_b32 flat_scratch_hi, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0xe7,0xb8]
0x41,0x31,0xe7,0xb8

# CHECK: s_getreg_b32 vcc_lo, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0xea,0xb8]
0x41,0x31,0xea,0xb8

# CHECK: s_getreg_b32 vcc_hi, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0xeb,0xb8]
0x41,0x31,0xeb,0xb8

# CHECK: s_getreg_b32 m0, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0xfc,0xb8]
0x41,0x31,0xfc,0xb8

# CHECK: s_getreg_b32 exec_lo, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0xfe,0xb8]
0x41,0x31,0xfe,0xb8

# CHECK: s_getreg_b32 exec_hi, hwreg(HW_REG_MODE, 5, 7) ; encoding: [0x41,0x31,0xff,0xb8]
0x41,0x31,0xff,0xb8

# CHECK: s_getreg_b32 s5, hwreg(HW_REG_TBA_HI, 7, 25) ; encoding: [0xd1,0xc1,0x85,0xb8]
0xd1,0xc1,0x85,0xb8

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), s1 ; encoding: [0x41,0x31,0x01,0xb9]
0x41,0x31,0x01,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_TBA_HI, 7, 25), s1 ; encoding: [0xd1,0xc1,0x01,0xb9]
0xd1,0xc1,0x01,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), s101 ; encoding: [0x41,0x31,0x65,0xb9]
0x41,0x31,0x65,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), flat_scratch_lo ; encoding: [0x41,0x31,0x66,0xb9]
0x41,0x31,0x66,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), flat_scratch_hi ; encoding: [0x41,0x31,0x67,0xb9]
0x41,0x31,0x67,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), vcc_lo ; encoding: [0x41,0x31,0x6a,0xb9]
0x41,0x31,0x6a,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), vcc_hi ; encoding: [0x41,0x31,0x6b,0xb9]
0x41,0x31,0x6b,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), m0 ; encoding: [0x41,0x31,0x7c,0xb9]
0x41,0x31,0x7c,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), exec_lo ; encoding: [0x41,0x31,0x7e,0xb9]
0x41,0x31,0x7e,0xb9

# CHECK: s_setreg_b32 hwreg(HW_REG_MODE, 5, 7), exec_hi ; encoding: [0x41,0x31,0x7f,0xb9]
0x41,0x31,0x7f,0xb9

# CHECK: s_setreg_imm32_b32 hwreg(HW_REG_MODE, 5, 7), 0x11213141 ; encoding: [0x41,0x31,0x00,0xba,0x41,0x31,0x21,0x11]
0x41,0x31,0x00,0xba,0x41,0x31,0x21,0x11

# CHECK: s_setreg_imm32_b32 hwreg(HW_REG_TBA_HI, 7, 25), 0x11213141 ; encoding: [0xd1,0xc1,0x00,0xba,0x41,0x31,0x21,0x11]
0xd1,0xc1,0x00,0xba,0x41,0x31,0x21,0x11

# CHECK: s_setreg_imm32_b32 hwreg(HW_REG_MODE, 5, 7), 0xa1b1c1d1 ; encoding: [0x41,0x31,0x00,0xba,0xd1,0xc1,0xb1,0xa1]
0x41,0x31,0x00,0xba,0xd1,0xc1,0xb1,0xa1

# CHECK: s_endpgm_ordered_ps_done                ; encoding: [0x00,0x00,0x9e,0xbf]
0x00,0x00,0x9e,0xbf

# CHECK: s_call_b64 s[10:11], 12609              ; encoding: [0x41,0x31,0x8a,0xba]
0x41,0x31,0x8a,0xba

# CHECK: s_call_b64 s[100:101], 12609            ; encoding: [0x41,0x31,0xe4,0xba]
0x41,0x31,0xe4,0xba

# CHECK: s_call_b64 s[10:11], 49617              ; encoding: [0xd1,0xc1,0x8a,0xba]
0xd1,0xc1,0x8a,0xba
