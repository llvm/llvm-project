# RUN: llvm-mc -triple=amdgcn -mcpu=tonga -disassemble -show-encoding < %s | FileCheck -strict-whitespace %s

# CHECK: v_cmp_class_f32_e32 vcc, v1, v2         ; encoding: [0x01,0x05,0x20,0x7c]
0x01,0x05,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, v255, v2       ; encoding: [0xff,0x05,0x20,0x7c]
0xff,0x05,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, s1, v2         ; encoding: [0x01,0x04,0x20,0x7c]
0x01,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, s101, v2       ; encoding: [0x65,0x04,0x20,0x7c]
0x65,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x20,0x7c]
0x66,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x20,0x7c]
0x67,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, vcc_lo, v2     ; encoding: [0x6a,0x04,0x20,0x7c]
0x6a,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, vcc_hi, v2     ; encoding: [0x6b,0x04,0x20,0x7c]
0x6b,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, tba_lo, v2     ; encoding: [0x6c,0x04,0x20,0x7c]
0x6c,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, tba_hi, v2     ; encoding: [0x6d,0x04,0x20,0x7c]
0x6d,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, tma_lo, v2     ; encoding: [0x6e,0x04,0x20,0x7c]
0x6e,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, tma_hi, v2     ; encoding: [0x6f,0x04,0x20,0x7c]
0x6f,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, ttmp11, v2     ; encoding: [0x7b,0x04,0x20,0x7c]
0x7b,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, m0, v2         ; encoding: [0x7c,0x04,0x20,0x7c]
0x7c,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, exec_lo, v2    ; encoding: [0x7e,0x04,0x20,0x7c]
0x7e,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, exec_hi, v2    ; encoding: [0x7f,0x04,0x20,0x7c]
0x7f,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, 0, v2          ; encoding: [0x80,0x04,0x20,0x7c]
0x80,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, -1, v2         ; encoding: [0xc1,0x04,0x20,0x7c]
0xc1,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, 0.5, v2        ; encoding: [0xf0,0x04,0x20,0x7c]
0xf0,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, -4.0, v2       ; encoding: [0xf7,0x04,0x20,0x7c]
0xf7,0x04,0x20,0x7c

# CHECK: v_cmp_class_f32_e32 vcc, 0xaf123456, v2 ; encoding: [0xff,0x04,0x20,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x20,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_class_f32_e32 vcc, 0x3f717273, v2 ; encoding: [0xff,0x04,0x20,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x20,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_class_f32_e32 vcc, v1, v255       ; encoding: [0x01,0xff,0x21,0x7c]
0x01,0xff,0x21,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, v[1:2], v2     ; encoding: [0x01,0x05,0x24,0x7c]
0x01,0x05,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, v[254:255], v2 ; encoding: [0xfe,0x05,0x24,0x7c]
0xfe,0x05,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, s[2:3], v2     ; encoding: [0x02,0x04,0x24,0x7c]
0x02,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, s[4:5], v2     ; encoding: [0x04,0x04,0x24,0x7c]
0x04,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, s[100:101], v2 ; encoding: [0x64,0x04,0x24,0x7c]
0x64,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, flat_scratch, v2 ; encoding: [0x66,0x04,0x24,0x7c]
0x66,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, vcc, v2        ; encoding: [0x6a,0x04,0x24,0x7c]
0x6a,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, tba, v2        ; encoding: [0x6c,0x04,0x24,0x7c]
0x6c,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, tma, v2        ; encoding: [0x6e,0x04,0x24,0x7c]
0x6e,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, ttmp[10:11], v2 ; encoding: [0x7a,0x04,0x24,0x7c]
0x7a,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, exec, v2       ; encoding: [0x7e,0x04,0x24,0x7c]
0x7e,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, 0, v2          ; encoding: [0x80,0x04,0x24,0x7c]
0x80,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, -1, v2         ; encoding: [0xc1,0x04,0x24,0x7c]
0xc1,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, 0.5, v2        ; encoding: [0xf0,0x04,0x24,0x7c]
0xf0,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, -4.0, v2       ; encoding: [0xf7,0x04,0x24,0x7c]
0xf7,0x04,0x24,0x7c

# CHECK: v_cmp_class_f64_e32 vcc, 0xaf123456, v2 ; encoding: [0xff,0x04,0x24,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x24,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_class_f64_e32 vcc, 0x3f717273, v2 ; encoding: [0xff,0x04,0x24,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x24,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_class_f64_e32 vcc, v[1:2], v255   ; encoding: [0x01,0xff,0x25,0x7c]
0x01,0xff,0x25,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, v1, v2         ; encoding: [0x01,0x05,0x28,0x7c]
0x01,0x05,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, v255, v2       ; encoding: [0xff,0x05,0x28,0x7c]
0xff,0x05,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, s1, v2         ; encoding: [0x01,0x04,0x28,0x7c]
0x01,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, s101, v2       ; encoding: [0x65,0x04,0x28,0x7c]
0x65,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x28,0x7c]
0x66,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x28,0x7c]
0x67,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, vcc_lo, v2     ; encoding: [0x6a,0x04,0x28,0x7c]
0x6a,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, vcc_hi, v2     ; encoding: [0x6b,0x04,0x28,0x7c]
0x6b,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, tba_lo, v2     ; encoding: [0x6c,0x04,0x28,0x7c]
0x6c,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, tba_hi, v2     ; encoding: [0x6d,0x04,0x28,0x7c]
0x6d,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, tma_lo, v2     ; encoding: [0x6e,0x04,0x28,0x7c]
0x6e,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, tma_hi, v2     ; encoding: [0x6f,0x04,0x28,0x7c]
0x6f,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, ttmp11, v2     ; encoding: [0x7b,0x04,0x28,0x7c]
0x7b,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, m0, v2         ; encoding: [0x7c,0x04,0x28,0x7c]
0x7c,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, exec_lo, v2    ; encoding: [0x7e,0x04,0x28,0x7c]
0x7e,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, exec_hi, v2    ; encoding: [0x7f,0x04,0x28,0x7c]
0x7f,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, 0, v2          ; encoding: [0x80,0x04,0x28,0x7c]
0x80,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, -1, v2         ; encoding: [0xc1,0x04,0x28,0x7c]
0xc1,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, 0.5, v2        ; encoding: [0xf0,0x04,0x28,0x7c]
0xf0,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, -4.0, v2       ; encoding: [0xf7,0x04,0x28,0x7c]
0xf7,0x04,0x28,0x7c

# CHECK: v_cmp_class_f16_e32 vcc, 0xfe0b, v2     ; encoding: [0xff,0x04,0x28,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x28,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_class_f16_e32 vcc, 0x3456, v2     ; encoding: [0xff,0x04,0x28,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x28,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_class_f16_e32 vcc, v1, v255       ; encoding: [0x01,0xff,0x29,0x7c]
0x01,0xff,0x29,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x40,0x7c]
0x01,0x05,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x40,0x7c]
0xff,0x05,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x40,0x7c]
0x01,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x40,0x7c]
0x65,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x40,0x7c]
0x66,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x40,0x7c]
0x67,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x40,0x7c]
0x6a,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x40,0x7c]
0x6b,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x40,0x7c]
0x6c,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x40,0x7c]
0x6d,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x40,0x7c]
0x6e,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x40,0x7c]
0x6f,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x40,0x7c]
0x7b,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x40,0x7c]
0x7c,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x40,0x7c]
0x7e,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x40,0x7c]
0x7f,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x40,0x7c]
0x80,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x40,0x7c]
0xc1,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x40,0x7c]
0xf0,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x40,0x7c]
0xf7,0x04,0x40,0x7c

# CHECK: v_cmp_f_f16_e32 vcc, 0xfe0b, v2         ; encoding: [0xff,0x04,0x40,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x40,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_f_f16_e32 vcc, 0x3456, v2         ; encoding: [0xff,0x04,0x40,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x40,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_f_f16_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x41,0x7c]
0x01,0xff,0x41,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x42,0x7c]
0x01,0x05,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x42,0x7c]
0xff,0x05,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x42,0x7c]
0x01,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x42,0x7c]
0x65,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x42,0x7c]
0x66,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x42,0x7c]
0x67,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x42,0x7c]
0x6a,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x42,0x7c]
0x6b,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x42,0x7c]
0x6c,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x42,0x7c]
0x6d,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x42,0x7c]
0x6e,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x42,0x7c]
0x6f,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x42,0x7c]
0x7b,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x42,0x7c]
0x7c,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x42,0x7c]
0x7e,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x42,0x7c]
0x7f,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x42,0x7c]
0x80,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x42,0x7c]
0xc1,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x42,0x7c]
0xf0,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x42,0x7c]
0xf7,0x04,0x42,0x7c

# CHECK: v_cmp_lt_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x42,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x42,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_lt_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x42,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x42,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_lt_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x43,0x7c]
0x01,0xff,0x43,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x44,0x7c]
0x01,0x05,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x44,0x7c]
0xff,0x05,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x44,0x7c]
0x01,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x44,0x7c]
0x65,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x44,0x7c]
0x66,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x44,0x7c]
0x67,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x44,0x7c]
0x6a,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x44,0x7c]
0x6b,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x44,0x7c]
0x6c,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x44,0x7c]
0x6d,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x44,0x7c]
0x6e,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x44,0x7c]
0x6f,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x44,0x7c]
0x7b,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x44,0x7c]
0x7c,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x44,0x7c]
0x7e,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x44,0x7c]
0x7f,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x44,0x7c]
0x80,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x44,0x7c]
0xc1,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x44,0x7c]
0xf0,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x44,0x7c]
0xf7,0x04,0x44,0x7c

# CHECK: v_cmp_eq_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x44,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x44,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_eq_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x44,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x44,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_eq_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x45,0x7c]
0x01,0xff,0x45,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x46,0x7c]
0x01,0x05,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x46,0x7c]
0xff,0x05,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x46,0x7c]
0x01,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x46,0x7c]
0x65,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x46,0x7c]
0x66,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x46,0x7c]
0x67,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x46,0x7c]
0x6a,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x46,0x7c]
0x6b,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x46,0x7c]
0x6c,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x46,0x7c]
0x6d,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x46,0x7c]
0x6e,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x46,0x7c]
0x6f,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x46,0x7c]
0x7b,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x46,0x7c]
0x7c,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x46,0x7c]
0x7e,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x46,0x7c]
0x7f,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x46,0x7c]
0x80,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x46,0x7c]
0xc1,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x46,0x7c]
0xf0,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x46,0x7c]
0xf7,0x04,0x46,0x7c

# CHECK: v_cmp_le_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x46,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x46,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_le_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x46,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x46,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_le_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x47,0x7c]
0x01,0xff,0x47,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x48,0x7c]
0x01,0x05,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x48,0x7c]
0xff,0x05,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x48,0x7c]
0x01,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x48,0x7c]
0x65,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x48,0x7c]
0x66,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x48,0x7c]
0x67,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x48,0x7c]
0x6a,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x48,0x7c]
0x6b,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x48,0x7c]
0x6c,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x48,0x7c]
0x6d,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x48,0x7c]
0x6e,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x48,0x7c]
0x6f,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x48,0x7c]
0x7b,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x48,0x7c]
0x7c,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x48,0x7c]
0x7e,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x48,0x7c]
0x7f,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x48,0x7c]
0x80,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x48,0x7c]
0xc1,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x48,0x7c]
0xf0,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x48,0x7c]
0xf7,0x04,0x48,0x7c

# CHECK: v_cmp_gt_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x48,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x48,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_gt_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x48,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x48,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_gt_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x49,0x7c]
0x01,0xff,0x49,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x4a,0x7c]
0x01,0x05,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x4a,0x7c]
0xff,0x05,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x4a,0x7c]
0x01,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x4a,0x7c]
0x65,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x4a,0x7c]
0x66,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x4a,0x7c]
0x67,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x4a,0x7c]
0x6a,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x4a,0x7c]
0x6b,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x4a,0x7c]
0x6c,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x4a,0x7c]
0x6d,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x4a,0x7c]
0x6e,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x4a,0x7c]
0x6f,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x4a,0x7c]
0x7b,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x4a,0x7c]
0x7c,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x4a,0x7c]
0x7e,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x4a,0x7c]
0x7f,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x4a,0x7c]
0x80,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x4a,0x7c]
0xc1,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x4a,0x7c]
0xf0,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x4a,0x7c]
0xf7,0x04,0x4a,0x7c

# CHECK: v_cmp_lg_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x4a,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x4a,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_lg_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x4a,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x4a,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_lg_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x4b,0x7c]
0x01,0xff,0x4b,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x4c,0x7c]
0x01,0x05,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x4c,0x7c]
0xff,0x05,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x4c,0x7c]
0x01,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x4c,0x7c]
0x65,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x4c,0x7c]
0x66,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x4c,0x7c]
0x67,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x4c,0x7c]
0x6a,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x4c,0x7c]
0x6b,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x4c,0x7c]
0x6c,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x4c,0x7c]
0x6d,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x4c,0x7c]
0x6e,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x4c,0x7c]
0x6f,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x4c,0x7c]
0x7b,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x4c,0x7c]
0x7c,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x4c,0x7c]
0x7e,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x4c,0x7c]
0x7f,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x4c,0x7c]
0x80,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x4c,0x7c]
0xc1,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x4c,0x7c]
0xf0,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x4c,0x7c]
0xf7,0x04,0x4c,0x7c

# CHECK: v_cmp_ge_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x4c,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x4c,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_ge_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x4c,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x4c,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_ge_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x4d,0x7c]
0x01,0xff,0x4d,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x4e,0x7c]
0x01,0x05,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x4e,0x7c]
0xff,0x05,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x4e,0x7c]
0x01,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x4e,0x7c]
0x65,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x4e,0x7c]
0x66,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x4e,0x7c]
0x67,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x4e,0x7c]
0x6a,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x4e,0x7c]
0x6b,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x4e,0x7c]
0x6c,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x4e,0x7c]
0x6d,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x4e,0x7c]
0x6e,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x4e,0x7c]
0x6f,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x4e,0x7c]
0x7b,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x4e,0x7c]
0x7c,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x4e,0x7c]
0x7e,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x4e,0x7c]
0x7f,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x4e,0x7c]
0x80,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x4e,0x7c]
0xc1,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x4e,0x7c]
0xf0,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x4e,0x7c]
0xf7,0x04,0x4e,0x7c

# CHECK: v_cmp_o_f16_e32 vcc, 0xfe0b, v2         ; encoding: [0xff,0x04,0x4e,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x4e,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_o_f16_e32 vcc, 0x3456, v2         ; encoding: [0xff,0x04,0x4e,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x4e,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_o_f16_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x4f,0x7c]
0x01,0xff,0x4f,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x50,0x7c]
0x01,0x05,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x50,0x7c]
0xff,0x05,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x50,0x7c]
0x01,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x50,0x7c]
0x65,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x50,0x7c]
0x66,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x50,0x7c]
0x67,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x50,0x7c]
0x6a,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x50,0x7c]
0x6b,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x50,0x7c]
0x6c,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x50,0x7c]
0x6d,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x50,0x7c]
0x6e,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x50,0x7c]
0x6f,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x50,0x7c]
0x7b,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x50,0x7c]
0x7c,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x50,0x7c]
0x7e,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x50,0x7c]
0x7f,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x50,0x7c]
0x80,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x50,0x7c]
0xc1,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x50,0x7c]
0xf0,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x50,0x7c]
0xf7,0x04,0x50,0x7c

# CHECK: v_cmp_u_f16_e32 vcc, 0xfe0b, v2         ; encoding: [0xff,0x04,0x50,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x50,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_u_f16_e32 vcc, 0x3456, v2         ; encoding: [0xff,0x04,0x50,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x50,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_u_f16_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x51,0x7c]
0x01,0xff,0x51,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x52,0x7c]
0x01,0x05,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x52,0x7c]
0xff,0x05,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x52,0x7c]
0x01,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x52,0x7c]
0x65,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x52,0x7c]
0x66,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x52,0x7c]
0x67,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x52,0x7c]
0x6a,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x52,0x7c]
0x6b,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x52,0x7c]
0x6c,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x52,0x7c]
0x6d,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x52,0x7c]
0x6e,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x52,0x7c]
0x6f,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x52,0x7c]
0x7b,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x52,0x7c]
0x7c,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x52,0x7c]
0x7e,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x52,0x7c]
0x7f,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x52,0x7c]
0x80,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x52,0x7c]
0xc1,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x52,0x7c]
0xf0,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x52,0x7c]
0xf7,0x04,0x52,0x7c

# CHECK: v_cmp_nge_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x52,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x52,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_nge_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x52,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x52,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_nge_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x53,0x7c]
0x01,0xff,0x53,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x54,0x7c]
0x01,0x05,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x54,0x7c]
0xff,0x05,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x54,0x7c]
0x01,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x54,0x7c]
0x65,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x54,0x7c]
0x66,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x54,0x7c]
0x67,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x54,0x7c]
0x6a,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x54,0x7c]
0x6b,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x54,0x7c]
0x6c,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x54,0x7c]
0x6d,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x54,0x7c]
0x6e,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x54,0x7c]
0x6f,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x54,0x7c]
0x7b,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x54,0x7c]
0x7c,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x54,0x7c]
0x7e,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x54,0x7c]
0x7f,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x54,0x7c]
0x80,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x54,0x7c]
0xc1,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x54,0x7c]
0xf0,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x54,0x7c]
0xf7,0x04,0x54,0x7c

# CHECK: v_cmp_nlg_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x54,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x54,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_nlg_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x54,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x54,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_nlg_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x55,0x7c]
0x01,0xff,0x55,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x56,0x7c]
0x01,0x05,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x56,0x7c]
0xff,0x05,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x56,0x7c]
0x01,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x56,0x7c]
0x65,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x56,0x7c]
0x66,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x56,0x7c]
0x67,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x56,0x7c]
0x6a,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x56,0x7c]
0x6b,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x56,0x7c]
0x6c,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x56,0x7c]
0x6d,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x56,0x7c]
0x6e,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x56,0x7c]
0x6f,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x56,0x7c]
0x7b,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x56,0x7c]
0x7c,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x56,0x7c]
0x7e,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x56,0x7c]
0x7f,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x56,0x7c]
0x80,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x56,0x7c]
0xc1,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x56,0x7c]
0xf0,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x56,0x7c]
0xf7,0x04,0x56,0x7c

# CHECK: v_cmp_ngt_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x56,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x56,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_ngt_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x56,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x56,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_ngt_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x57,0x7c]
0x01,0xff,0x57,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x58,0x7c]
0x01,0x05,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x58,0x7c]
0xff,0x05,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x58,0x7c]
0x01,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x58,0x7c]
0x65,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x58,0x7c]
0x66,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x58,0x7c]
0x67,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x58,0x7c]
0x6a,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x58,0x7c]
0x6b,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x58,0x7c]
0x6c,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x58,0x7c]
0x6d,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x58,0x7c]
0x6e,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x58,0x7c]
0x6f,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x58,0x7c]
0x7b,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x58,0x7c]
0x7c,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x58,0x7c]
0x7e,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x58,0x7c]
0x7f,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x58,0x7c]
0x80,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x58,0x7c]
0xc1,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x58,0x7c]
0xf0,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x58,0x7c]
0xf7,0x04,0x58,0x7c

# CHECK: v_cmp_nle_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x58,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x58,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_nle_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x58,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x58,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_nle_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x59,0x7c]
0x01,0xff,0x59,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x5a,0x7c]
0x01,0x05,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x5a,0x7c]
0xff,0x05,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x5a,0x7c]
0x01,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x5a,0x7c]
0x65,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x5a,0x7c]
0x66,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x5a,0x7c]
0x67,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x5a,0x7c]
0x6a,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x5a,0x7c]
0x6b,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x5a,0x7c]
0x6c,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x5a,0x7c]
0x6d,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x5a,0x7c]
0x6e,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x5a,0x7c]
0x6f,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x5a,0x7c]
0x7b,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x5a,0x7c]
0x7c,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x5a,0x7c]
0x7e,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x5a,0x7c]
0x7f,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x5a,0x7c]
0x80,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x5a,0x7c]
0xc1,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x5a,0x7c]
0xf0,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x5a,0x7c]
0xf7,0x04,0x5a,0x7c

# CHECK: v_cmp_neq_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x5a,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x5a,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_neq_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x5a,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x5a,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_neq_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x5b,0x7c]
0x01,0xff,0x5b,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x5c,0x7c]
0x01,0x05,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x5c,0x7c]
0xff,0x05,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x5c,0x7c]
0x01,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x5c,0x7c]
0x65,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x5c,0x7c]
0x66,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x5c,0x7c]
0x67,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x5c,0x7c]
0x6a,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x5c,0x7c]
0x6b,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x5c,0x7c]
0x6c,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x5c,0x7c]
0x6d,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x5c,0x7c]
0x6e,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x5c,0x7c]
0x6f,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x5c,0x7c]
0x7b,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x5c,0x7c]
0x7c,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x5c,0x7c]
0x7e,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x5c,0x7c]
0x7f,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x5c,0x7c]
0x80,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x5c,0x7c]
0xc1,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x5c,0x7c]
0xf0,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x5c,0x7c]
0xf7,0x04,0x5c,0x7c

# CHECK: v_cmp_nlt_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x5c,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x5c,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_nlt_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x5c,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x5c,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_nlt_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x5d,0x7c]
0x01,0xff,0x5d,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x5e,0x7c]
0x01,0x05,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x5e,0x7c]
0xff,0x05,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x5e,0x7c]
0x01,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x5e,0x7c]
0x65,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x5e,0x7c]
0x66,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x5e,0x7c]
0x67,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x5e,0x7c]
0x6a,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x5e,0x7c]
0x6b,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x5e,0x7c]
0x6c,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x5e,0x7c]
0x6d,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x5e,0x7c]
0x6e,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x5e,0x7c]
0x6f,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x5e,0x7c]
0x7b,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x5e,0x7c]
0x7c,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x5e,0x7c]
0x7e,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x5e,0x7c]
0x7f,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x5e,0x7c]
0x80,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x5e,0x7c]
0xc1,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x5e,0x7c]
0xf0,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x5e,0x7c]
0xf7,0x04,0x5e,0x7c

# CHECK: v_cmp_tru_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x5e,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x5e,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_tru_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x5e,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x5e,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmp_tru_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x5f,0x7c]
0x01,0xff,0x5f,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x80,0x7c]
0x01,0x05,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x80,0x7c]
0xff,0x05,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x80,0x7c]
0x01,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x80,0x7c]
0x65,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x80,0x7c]
0x66,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x80,0x7c]
0x67,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x80,0x7c]
0x6a,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x80,0x7c]
0x6b,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x80,0x7c]
0x6c,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x80,0x7c]
0x6d,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x80,0x7c]
0x6e,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x80,0x7c]
0x6f,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x80,0x7c]
0x7b,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x80,0x7c]
0x7c,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x80,0x7c]
0x7e,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x80,0x7c]
0x7f,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x80,0x7c]
0x80,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x80,0x7c]
0xc1,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x80,0x7c]
0xf0,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x80,0x7c]
0xf7,0x04,0x80,0x7c

# CHECK: v_cmp_f_f32_e32 vcc, 0xaf123456, v2     ; encoding: [0xff,0x04,0x80,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x80,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_f_f32_e32 vcc, 0x3f717273, v2     ; encoding: [0xff,0x04,0x80,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x80,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_f_f32_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x81,0x7c]
0x01,0xff,0x81,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x82,0x7c]
0x01,0x05,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x82,0x7c]
0xff,0x05,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x82,0x7c]
0x01,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x82,0x7c]
0x65,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x82,0x7c]
0x66,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x82,0x7c]
0x67,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x82,0x7c]
0x6a,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x82,0x7c]
0x6b,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x82,0x7c]
0x6c,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x82,0x7c]
0x6d,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x82,0x7c]
0x6e,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x82,0x7c]
0x6f,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x82,0x7c]
0x7b,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x82,0x7c]
0x7c,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x82,0x7c]
0x7e,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x82,0x7c]
0x7f,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x82,0x7c]
0x80,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x82,0x7c]
0xc1,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x82,0x7c]
0xf0,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x82,0x7c]
0xf7,0x04,0x82,0x7c

# CHECK: v_cmp_lt_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x82,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x82,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_lt_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x82,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x82,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_lt_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x83,0x7c]
0x01,0xff,0x83,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x84,0x7c]
0x01,0x05,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x84,0x7c]
0xff,0x05,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x84,0x7c]
0x01,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x84,0x7c]
0x65,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x84,0x7c]
0x66,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x84,0x7c]
0x67,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x84,0x7c]
0x6a,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x84,0x7c]
0x6b,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x84,0x7c]
0x6c,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x84,0x7c]
0x6d,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x84,0x7c]
0x6e,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x84,0x7c]
0x6f,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x84,0x7c]
0x7b,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x84,0x7c]
0x7c,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x84,0x7c]
0x7e,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x84,0x7c]
0x7f,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x84,0x7c]
0x80,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x84,0x7c]
0xc1,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x84,0x7c]
0xf0,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x84,0x7c]
0xf7,0x04,0x84,0x7c

# CHECK: v_cmp_eq_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x84,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x84,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_eq_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x84,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x84,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_eq_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x85,0x7c]
0x01,0xff,0x85,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x86,0x7c]
0x01,0x05,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x86,0x7c]
0xff,0x05,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x86,0x7c]
0x01,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x86,0x7c]
0x65,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x86,0x7c]
0x66,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x86,0x7c]
0x67,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x86,0x7c]
0x6a,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x86,0x7c]
0x6b,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x86,0x7c]
0x6c,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x86,0x7c]
0x6d,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x86,0x7c]
0x6e,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x86,0x7c]
0x6f,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x86,0x7c]
0x7b,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x86,0x7c]
0x7c,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x86,0x7c]
0x7e,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x86,0x7c]
0x7f,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x86,0x7c]
0x80,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x86,0x7c]
0xc1,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x86,0x7c]
0xf0,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x86,0x7c]
0xf7,0x04,0x86,0x7c

# CHECK: v_cmp_le_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x86,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x86,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_le_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x86,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x86,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_le_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x87,0x7c]
0x01,0xff,0x87,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x88,0x7c]
0x01,0x05,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x88,0x7c]
0xff,0x05,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x88,0x7c]
0x01,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x88,0x7c]
0x65,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x88,0x7c]
0x66,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x88,0x7c]
0x67,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x88,0x7c]
0x6a,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x88,0x7c]
0x6b,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x88,0x7c]
0x6c,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x88,0x7c]
0x6d,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x88,0x7c]
0x6e,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x88,0x7c]
0x6f,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x88,0x7c]
0x7b,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x88,0x7c]
0x7c,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x88,0x7c]
0x7e,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x88,0x7c]
0x7f,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x88,0x7c]
0x80,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x88,0x7c]
0xc1,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x88,0x7c]
0xf0,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x88,0x7c]
0xf7,0x04,0x88,0x7c

# CHECK: v_cmp_gt_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x88,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x88,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_gt_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x88,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x88,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_gt_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x89,0x7c]
0x01,0xff,0x89,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x8a,0x7c]
0x01,0x05,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x8a,0x7c]
0xff,0x05,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x8a,0x7c]
0x01,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x8a,0x7c]
0x65,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x8a,0x7c]
0x66,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x8a,0x7c]
0x67,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x8a,0x7c]
0x6a,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x8a,0x7c]
0x6b,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x8a,0x7c]
0x6c,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x8a,0x7c]
0x6d,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x8a,0x7c]
0x6e,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x8a,0x7c]
0x6f,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x8a,0x7c]
0x7b,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x8a,0x7c]
0x7c,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x8a,0x7c]
0x7e,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x8a,0x7c]
0x7f,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x8a,0x7c]
0x80,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x8a,0x7c]
0xc1,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x8a,0x7c]
0xf0,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x8a,0x7c]
0xf7,0x04,0x8a,0x7c

# CHECK: v_cmp_lg_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x8a,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x8a,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_lg_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x8a,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x8a,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_lg_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x8b,0x7c]
0x01,0xff,0x8b,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x8c,0x7c]
0x01,0x05,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x8c,0x7c]
0xff,0x05,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x8c,0x7c]
0x01,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x8c,0x7c]
0x65,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x8c,0x7c]
0x66,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x8c,0x7c]
0x67,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x8c,0x7c]
0x6a,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x8c,0x7c]
0x6b,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x8c,0x7c]
0x6c,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x8c,0x7c]
0x6d,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x8c,0x7c]
0x6e,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x8c,0x7c]
0x6f,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x8c,0x7c]
0x7b,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x8c,0x7c]
0x7c,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x8c,0x7c]
0x7e,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x8c,0x7c]
0x7f,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x8c,0x7c]
0x80,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x8c,0x7c]
0xc1,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x8c,0x7c]
0xf0,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x8c,0x7c]
0xf7,0x04,0x8c,0x7c

# CHECK: v_cmp_ge_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x8c,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x8c,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ge_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x8c,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x8c,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ge_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x8d,0x7c]
0x01,0xff,0x8d,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x8e,0x7c]
0x01,0x05,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x8e,0x7c]
0xff,0x05,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x8e,0x7c]
0x01,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x8e,0x7c]
0x65,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x8e,0x7c]
0x66,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x8e,0x7c]
0x67,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x8e,0x7c]
0x6a,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x8e,0x7c]
0x6b,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x8e,0x7c]
0x6c,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x8e,0x7c]
0x6d,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x8e,0x7c]
0x6e,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x8e,0x7c]
0x6f,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x8e,0x7c]
0x7b,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x8e,0x7c]
0x7c,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x8e,0x7c]
0x7e,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x8e,0x7c]
0x7f,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x8e,0x7c]
0x80,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x8e,0x7c]
0xc1,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x8e,0x7c]
0xf0,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x8e,0x7c]
0xf7,0x04,0x8e,0x7c

# CHECK: v_cmp_o_f32_e32 vcc, 0xaf123456, v2     ; encoding: [0xff,0x04,0x8e,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x8e,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_o_f32_e32 vcc, 0x3f717273, v2     ; encoding: [0xff,0x04,0x8e,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x8e,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_o_f32_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x8f,0x7c]
0x01,0xff,0x8f,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x90,0x7c]
0x01,0x05,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x90,0x7c]
0xff,0x05,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x90,0x7c]
0x01,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x90,0x7c]
0x65,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x90,0x7c]
0x66,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x90,0x7c]
0x67,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x90,0x7c]
0x6a,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x90,0x7c]
0x6b,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x90,0x7c]
0x6c,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x90,0x7c]
0x6d,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x90,0x7c]
0x6e,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x90,0x7c]
0x6f,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x90,0x7c]
0x7b,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x90,0x7c]
0x7c,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x90,0x7c]
0x7e,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x90,0x7c]
0x7f,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x90,0x7c]
0x80,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x90,0x7c]
0xc1,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x90,0x7c]
0xf0,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x90,0x7c]
0xf7,0x04,0x90,0x7c

# CHECK: v_cmp_u_f32_e32 vcc, 0xaf123456, v2     ; encoding: [0xff,0x04,0x90,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x90,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_u_f32_e32 vcc, 0x3f717273, v2     ; encoding: [0xff,0x04,0x90,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x90,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_u_f32_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x91,0x7c]
0x01,0xff,0x91,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x92,0x7c]
0x01,0x05,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x92,0x7c]
0xff,0x05,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x92,0x7c]
0x01,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x92,0x7c]
0x65,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x92,0x7c]
0x66,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x92,0x7c]
0x67,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x92,0x7c]
0x6a,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x92,0x7c]
0x6b,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x92,0x7c]
0x6c,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x92,0x7c]
0x6d,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x92,0x7c]
0x6e,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x92,0x7c]
0x6f,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x92,0x7c]
0x7b,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x92,0x7c]
0x7c,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x92,0x7c]
0x7e,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x92,0x7c]
0x7f,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x92,0x7c]
0x80,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x92,0x7c]
0xc1,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x92,0x7c]
0xf0,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x92,0x7c]
0xf7,0x04,0x92,0x7c

# CHECK: v_cmp_nge_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0x92,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x92,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_nge_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0x92,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x92,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_nge_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x93,0x7c]
0x01,0xff,0x93,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x94,0x7c]
0x01,0x05,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x94,0x7c]
0xff,0x05,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x94,0x7c]
0x01,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x94,0x7c]
0x65,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x94,0x7c]
0x66,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x94,0x7c]
0x67,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x94,0x7c]
0x6a,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x94,0x7c]
0x6b,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x94,0x7c]
0x6c,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x94,0x7c]
0x6d,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x94,0x7c]
0x6e,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x94,0x7c]
0x6f,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x94,0x7c]
0x7b,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x94,0x7c]
0x7c,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x94,0x7c]
0x7e,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x94,0x7c]
0x7f,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x94,0x7c]
0x80,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x94,0x7c]
0xc1,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x94,0x7c]
0xf0,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x94,0x7c]
0xf7,0x04,0x94,0x7c

# CHECK: v_cmp_nlg_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0x94,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x94,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_nlg_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0x94,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x94,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_nlg_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x95,0x7c]
0x01,0xff,0x95,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x96,0x7c]
0x01,0x05,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x96,0x7c]
0xff,0x05,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x96,0x7c]
0x01,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x96,0x7c]
0x65,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x96,0x7c]
0x66,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x96,0x7c]
0x67,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x96,0x7c]
0x6a,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x96,0x7c]
0x6b,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x96,0x7c]
0x6c,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x96,0x7c]
0x6d,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x96,0x7c]
0x6e,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x96,0x7c]
0x6f,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x96,0x7c]
0x7b,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x96,0x7c]
0x7c,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x96,0x7c]
0x7e,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x96,0x7c]
0x7f,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x96,0x7c]
0x80,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x96,0x7c]
0xc1,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x96,0x7c]
0xf0,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x96,0x7c]
0xf7,0x04,0x96,0x7c

# CHECK: v_cmp_ngt_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0x96,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x96,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ngt_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0x96,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x96,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ngt_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x97,0x7c]
0x01,0xff,0x97,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x98,0x7c]
0x01,0x05,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x98,0x7c]
0xff,0x05,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x98,0x7c]
0x01,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x98,0x7c]
0x65,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x98,0x7c]
0x66,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x98,0x7c]
0x67,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x98,0x7c]
0x6a,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x98,0x7c]
0x6b,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x98,0x7c]
0x6c,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x98,0x7c]
0x6d,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x98,0x7c]
0x6e,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x98,0x7c]
0x6f,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x98,0x7c]
0x7b,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x98,0x7c]
0x7c,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x98,0x7c]
0x7e,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x98,0x7c]
0x7f,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x98,0x7c]
0x80,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x98,0x7c]
0xc1,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x98,0x7c]
0xf0,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x98,0x7c]
0xf7,0x04,0x98,0x7c

# CHECK: v_cmp_nle_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0x98,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x98,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_nle_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0x98,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x98,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_nle_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x99,0x7c]
0x01,0xff,0x99,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x9a,0x7c]
0x01,0x05,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x9a,0x7c]
0xff,0x05,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x9a,0x7c]
0x01,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x9a,0x7c]
0x65,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x9a,0x7c]
0x66,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x9a,0x7c]
0x67,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x9a,0x7c]
0x6a,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x9a,0x7c]
0x6b,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x9a,0x7c]
0x6c,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x9a,0x7c]
0x6d,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x9a,0x7c]
0x6e,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x9a,0x7c]
0x6f,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x9a,0x7c]
0x7b,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x9a,0x7c]
0x7c,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x9a,0x7c]
0x7e,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x9a,0x7c]
0x7f,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x9a,0x7c]
0x80,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x9a,0x7c]
0xc1,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x9a,0x7c]
0xf0,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x9a,0x7c]
0xf7,0x04,0x9a,0x7c

# CHECK: v_cmp_neq_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0x9a,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x9a,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_neq_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0x9a,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x9a,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_neq_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x9b,0x7c]
0x01,0xff,0x9b,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x9c,0x7c]
0x01,0x05,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x9c,0x7c]
0xff,0x05,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x9c,0x7c]
0x01,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x9c,0x7c]
0x65,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x9c,0x7c]
0x66,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x9c,0x7c]
0x67,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x9c,0x7c]
0x6a,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x9c,0x7c]
0x6b,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x9c,0x7c]
0x6c,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x9c,0x7c]
0x6d,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x9c,0x7c]
0x6e,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x9c,0x7c]
0x6f,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x9c,0x7c]
0x7b,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x9c,0x7c]
0x7c,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x9c,0x7c]
0x7e,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x9c,0x7c]
0x7f,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x9c,0x7c]
0x80,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x9c,0x7c]
0xc1,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x9c,0x7c]
0xf0,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x9c,0x7c]
0xf7,0x04,0x9c,0x7c

# CHECK: v_cmp_nlt_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0x9c,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x9c,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_nlt_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0x9c,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x9c,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_nlt_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x9d,0x7c]
0x01,0xff,0x9d,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x9e,0x7c]
0x01,0x05,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x9e,0x7c]
0xff,0x05,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x9e,0x7c]
0x01,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x9e,0x7c]
0x65,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x9e,0x7c]
0x66,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x9e,0x7c]
0x67,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x9e,0x7c]
0x6a,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x9e,0x7c]
0x6b,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x9e,0x7c]
0x6c,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x9e,0x7c]
0x6d,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x9e,0x7c]
0x6e,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x9e,0x7c]
0x6f,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x9e,0x7c]
0x7b,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x9e,0x7c]
0x7c,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x9e,0x7c]
0x7e,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x9e,0x7c]
0x7f,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x9e,0x7c]
0x80,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x9e,0x7c]
0xc1,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x9e,0x7c]
0xf0,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x9e,0x7c]
0xf7,0x04,0x9e,0x7c

# CHECK: v_cmp_tru_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0x9e,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x9e,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_tru_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0x9e,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x9e,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_tru_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x9f,0x7c]
0x01,0xff,0x9f,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, v[1:2], v[2:3]     ; encoding: [0x01,0x05,0xc0,0x7c]
0x01,0x05,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc0,0x7c]
0xfe,0x05,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, s[2:3], v[2:3]     ; encoding: [0x02,0x04,0xc0,0x7c]
0x02,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, s[4:5], v[2:3]     ; encoding: [0x04,0x04,0xc0,0x7c]
0x04,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc0,0x7c]
0x64,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc0,0x7c]
0x66,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, vcc, v[2:3]        ; encoding: [0x6a,0x04,0xc0,0x7c]
0x6a,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, tba, v[2:3]        ; encoding: [0x6c,0x04,0xc0,0x7c]
0x6c,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, tma, v[2:3]        ; encoding: [0x6e,0x04,0xc0,0x7c]
0x6e,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc0,0x7c]
0x7a,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, exec, v[2:3]       ; encoding: [0x7e,0x04,0xc0,0x7c]
0x7e,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, 0, v[2:3]          ; encoding: [0x80,0x04,0xc0,0x7c]
0x80,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, -1, v[2:3]         ; encoding: [0xc1,0x04,0xc0,0x7c]
0xc1,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, 0.5, v[2:3]        ; encoding: [0xf0,0x04,0xc0,0x7c]
0xf0,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, -4.0, v[2:3]       ; encoding: [0xf7,0x04,0xc0,0x7c]
0xf7,0x04,0xc0,0x7c

# CHECK: v_cmp_f_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc0,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc0,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_f_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc0,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc0,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_f_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc1,0x7c]
0x01,0xfd,0xc1,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xc2,0x7c]
0x01,0x05,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc2,0x7c]
0xfe,0x05,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xc2,0x7c]
0x02,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xc2,0x7c]
0x04,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc2,0x7c]
0x64,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc2,0x7c]
0x66,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xc2,0x7c]
0x6a,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xc2,0x7c]
0x6c,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xc2,0x7c]
0x6e,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc2,0x7c]
0x7a,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xc2,0x7c]
0x7e,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xc2,0x7c]
0x80,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xc2,0x7c]
0xc1,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xc2,0x7c]
0xf0,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xc2,0x7c]
0xf7,0x04,0xc2,0x7c

# CHECK: v_cmp_lt_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc2,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc2,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_lt_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc2,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc2,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_lt_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc3,0x7c]
0x01,0xfd,0xc3,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xc4,0x7c]
0x01,0x05,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc4,0x7c]
0xfe,0x05,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xc4,0x7c]
0x02,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xc4,0x7c]
0x04,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc4,0x7c]
0x64,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc4,0x7c]
0x66,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xc4,0x7c]
0x6a,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xc4,0x7c]
0x6c,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xc4,0x7c]
0x6e,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc4,0x7c]
0x7a,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xc4,0x7c]
0x7e,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xc4,0x7c]
0x80,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xc4,0x7c]
0xc1,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xc4,0x7c]
0xf0,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xc4,0x7c]
0xf7,0x04,0xc4,0x7c

# CHECK: v_cmp_eq_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc4,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc4,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_eq_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc4,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc4,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_eq_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc5,0x7c]
0x01,0xfd,0xc5,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xc6,0x7c]
0x01,0x05,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc6,0x7c]
0xfe,0x05,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xc6,0x7c]
0x02,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xc6,0x7c]
0x04,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc6,0x7c]
0x64,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc6,0x7c]
0x66,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xc6,0x7c]
0x6a,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xc6,0x7c]
0x6c,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xc6,0x7c]
0x6e,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc6,0x7c]
0x7a,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xc6,0x7c]
0x7e,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xc6,0x7c]
0x80,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xc6,0x7c]
0xc1,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xc6,0x7c]
0xf0,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xc6,0x7c]
0xf7,0x04,0xc6,0x7c

# CHECK: v_cmp_le_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc6,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc6,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_le_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc6,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc6,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_le_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc7,0x7c]
0x01,0xfd,0xc7,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xc8,0x7c]
0x01,0x05,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc8,0x7c]
0xfe,0x05,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xc8,0x7c]
0x02,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xc8,0x7c]
0x04,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc8,0x7c]
0x64,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc8,0x7c]
0x66,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xc8,0x7c]
0x6a,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xc8,0x7c]
0x6c,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xc8,0x7c]
0x6e,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc8,0x7c]
0x7a,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xc8,0x7c]
0x7e,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xc8,0x7c]
0x80,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xc8,0x7c]
0xc1,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xc8,0x7c]
0xf0,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xc8,0x7c]
0xf7,0x04,0xc8,0x7c

# CHECK: v_cmp_gt_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc8,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc8,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_gt_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc8,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc8,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_gt_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc9,0x7c]
0x01,0xfd,0xc9,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xca,0x7c]
0x01,0x05,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xca,0x7c]
0xfe,0x05,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xca,0x7c]
0x02,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xca,0x7c]
0x04,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xca,0x7c]
0x64,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xca,0x7c]
0x66,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xca,0x7c]
0x6a,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xca,0x7c]
0x6c,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xca,0x7c]
0x6e,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xca,0x7c]
0x7a,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xca,0x7c]
0x7e,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xca,0x7c]
0x80,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xca,0x7c]
0xc1,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xca,0x7c]
0xf0,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xca,0x7c]
0xf7,0x04,0xca,0x7c

# CHECK: v_cmp_lg_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xca,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xca,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_lg_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xca,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xca,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_lg_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xcb,0x7c]
0x01,0xfd,0xcb,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xcc,0x7c]
0x01,0x05,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xcc,0x7c]
0xfe,0x05,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xcc,0x7c]
0x02,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xcc,0x7c]
0x04,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xcc,0x7c]
0x64,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xcc,0x7c]
0x66,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xcc,0x7c]
0x6a,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xcc,0x7c]
0x6c,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xcc,0x7c]
0x6e,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xcc,0x7c]
0x7a,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xcc,0x7c]
0x7e,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xcc,0x7c]
0x80,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xcc,0x7c]
0xc1,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xcc,0x7c]
0xf0,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xcc,0x7c]
0xf7,0x04,0xcc,0x7c

# CHECK: v_cmp_ge_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xcc,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xcc,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ge_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xcc,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xcc,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ge_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xcd,0x7c]
0x01,0xfd,0xcd,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, v[1:2], v[2:3]     ; encoding: [0x01,0x05,0xce,0x7c]
0x01,0x05,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xce,0x7c]
0xfe,0x05,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, s[2:3], v[2:3]     ; encoding: [0x02,0x04,0xce,0x7c]
0x02,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, s[4:5], v[2:3]     ; encoding: [0x04,0x04,0xce,0x7c]
0x04,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xce,0x7c]
0x64,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xce,0x7c]
0x66,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, vcc, v[2:3]        ; encoding: [0x6a,0x04,0xce,0x7c]
0x6a,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, tba, v[2:3]        ; encoding: [0x6c,0x04,0xce,0x7c]
0x6c,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, tma, v[2:3]        ; encoding: [0x6e,0x04,0xce,0x7c]
0x6e,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xce,0x7c]
0x7a,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, exec, v[2:3]       ; encoding: [0x7e,0x04,0xce,0x7c]
0x7e,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, 0, v[2:3]          ; encoding: [0x80,0x04,0xce,0x7c]
0x80,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, -1, v[2:3]         ; encoding: [0xc1,0x04,0xce,0x7c]
0xc1,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, 0.5, v[2:3]        ; encoding: [0xf0,0x04,0xce,0x7c]
0xf0,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, -4.0, v[2:3]       ; encoding: [0xf7,0x04,0xce,0x7c]
0xf7,0x04,0xce,0x7c

# CHECK: v_cmp_o_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xce,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xce,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_o_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xce,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xce,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_o_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xcf,0x7c]
0x01,0xfd,0xcf,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, v[1:2], v[2:3]     ; encoding: [0x01,0x05,0xd0,0x7c]
0x01,0x05,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd0,0x7c]
0xfe,0x05,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, s[2:3], v[2:3]     ; encoding: [0x02,0x04,0xd0,0x7c]
0x02,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, s[4:5], v[2:3]     ; encoding: [0x04,0x04,0xd0,0x7c]
0x04,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd0,0x7c]
0x64,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd0,0x7c]
0x66,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, vcc, v[2:3]        ; encoding: [0x6a,0x04,0xd0,0x7c]
0x6a,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, tba, v[2:3]        ; encoding: [0x6c,0x04,0xd0,0x7c]
0x6c,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, tma, v[2:3]        ; encoding: [0x6e,0x04,0xd0,0x7c]
0x6e,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd0,0x7c]
0x7a,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, exec, v[2:3]       ; encoding: [0x7e,0x04,0xd0,0x7c]
0x7e,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, 0, v[2:3]          ; encoding: [0x80,0x04,0xd0,0x7c]
0x80,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, -1, v[2:3]         ; encoding: [0xc1,0x04,0xd0,0x7c]
0xc1,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, 0.5, v[2:3]        ; encoding: [0xf0,0x04,0xd0,0x7c]
0xf0,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, -4.0, v[2:3]       ; encoding: [0xf7,0x04,0xd0,0x7c]
0xf7,0x04,0xd0,0x7c

# CHECK: v_cmp_u_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd0,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd0,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_u_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd0,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd0,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_u_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd1,0x7c]
0x01,0xfd,0xd1,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xd2,0x7c]
0x01,0x05,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd2,0x7c]
0xfe,0x05,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xd2,0x7c]
0x02,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xd2,0x7c]
0x04,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd2,0x7c]
0x64,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd2,0x7c]
0x66,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xd2,0x7c]
0x6a,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xd2,0x7c]
0x6c,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xd2,0x7c]
0x6e,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd2,0x7c]
0x7a,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xd2,0x7c]
0x7e,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xd2,0x7c]
0x80,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xd2,0x7c]
0xc1,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xd2,0x7c]
0xf0,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xd2,0x7c]
0xf7,0x04,0xd2,0x7c

# CHECK: v_cmp_nge_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd2,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd2,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_nge_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd2,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd2,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_nge_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd3,0x7c]
0x01,0xfd,0xd3,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xd4,0x7c]
0x01,0x05,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd4,0x7c]
0xfe,0x05,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xd4,0x7c]
0x02,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xd4,0x7c]
0x04,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd4,0x7c]
0x64,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd4,0x7c]
0x66,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xd4,0x7c]
0x6a,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xd4,0x7c]
0x6c,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xd4,0x7c]
0x6e,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd4,0x7c]
0x7a,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xd4,0x7c]
0x7e,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xd4,0x7c]
0x80,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xd4,0x7c]
0xc1,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xd4,0x7c]
0xf0,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xd4,0x7c]
0xf7,0x04,0xd4,0x7c

# CHECK: v_cmp_nlg_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd4,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd4,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_nlg_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd4,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd4,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_nlg_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd5,0x7c]
0x01,0xfd,0xd5,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xd6,0x7c]
0x01,0x05,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd6,0x7c]
0xfe,0x05,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xd6,0x7c]
0x02,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xd6,0x7c]
0x04,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd6,0x7c]
0x64,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd6,0x7c]
0x66,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xd6,0x7c]
0x6a,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xd6,0x7c]
0x6c,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xd6,0x7c]
0x6e,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd6,0x7c]
0x7a,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xd6,0x7c]
0x7e,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xd6,0x7c]
0x80,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xd6,0x7c]
0xc1,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xd6,0x7c]
0xf0,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xd6,0x7c]
0xf7,0x04,0xd6,0x7c

# CHECK: v_cmp_ngt_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd6,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd6,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ngt_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd6,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd6,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ngt_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd7,0x7c]
0x01,0xfd,0xd7,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xd8,0x7c]
0x01,0x05,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd8,0x7c]
0xfe,0x05,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xd8,0x7c]
0x02,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xd8,0x7c]
0x04,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd8,0x7c]
0x64,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd8,0x7c]
0x66,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xd8,0x7c]
0x6a,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xd8,0x7c]
0x6c,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xd8,0x7c]
0x6e,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd8,0x7c]
0x7a,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xd8,0x7c]
0x7e,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xd8,0x7c]
0x80,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xd8,0x7c]
0xc1,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xd8,0x7c]
0xf0,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xd8,0x7c]
0xf7,0x04,0xd8,0x7c

# CHECK: v_cmp_nle_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd8,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd8,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_nle_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd8,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd8,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_nle_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd9,0x7c]
0x01,0xfd,0xd9,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xda,0x7c]
0x01,0x05,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xda,0x7c]
0xfe,0x05,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xda,0x7c]
0x02,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xda,0x7c]
0x04,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xda,0x7c]
0x64,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xda,0x7c]
0x66,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xda,0x7c]
0x6a,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xda,0x7c]
0x6c,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xda,0x7c]
0x6e,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xda,0x7c]
0x7a,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xda,0x7c]
0x7e,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xda,0x7c]
0x80,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xda,0x7c]
0xc1,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xda,0x7c]
0xf0,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xda,0x7c]
0xf7,0x04,0xda,0x7c

# CHECK: v_cmp_neq_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xda,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xda,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_neq_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xda,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xda,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_neq_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xdb,0x7c]
0x01,0xfd,0xdb,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xdc,0x7c]
0x01,0x05,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xdc,0x7c]
0xfe,0x05,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xdc,0x7c]
0x02,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xdc,0x7c]
0x04,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xdc,0x7c]
0x64,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xdc,0x7c]
0x66,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xdc,0x7c]
0x6a,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xdc,0x7c]
0x6c,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xdc,0x7c]
0x6e,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xdc,0x7c]
0x7a,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xdc,0x7c]
0x7e,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xdc,0x7c]
0x80,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xdc,0x7c]
0xc1,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xdc,0x7c]
0xf0,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xdc,0x7c]
0xf7,0x04,0xdc,0x7c

# CHECK: v_cmp_nlt_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xdc,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xdc,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_nlt_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xdc,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xdc,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_nlt_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xdd,0x7c]
0x01,0xfd,0xdd,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xde,0x7c]
0x01,0x05,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xde,0x7c]
0xfe,0x05,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xde,0x7c]
0x02,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xde,0x7c]
0x04,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xde,0x7c]
0x64,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xde,0x7c]
0x66,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xde,0x7c]
0x6a,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xde,0x7c]
0x6c,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xde,0x7c]
0x6e,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xde,0x7c]
0x7a,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xde,0x7c]
0x7e,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xde,0x7c]
0x80,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xde,0x7c]
0xc1,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xde,0x7c]
0xf0,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xde,0x7c]
0xf7,0x04,0xde,0x7c

# CHECK: v_cmp_tru_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xde,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xde,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_tru_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xde,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xde,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_tru_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xdf,0x7c]
0x01,0xfd,0xdf,0x7c

# CHECK: v_cmp_f_i16_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x40,0x7d]
0x01,0x05,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x40,0x7d]
0xff,0x05,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x40,0x7d]
0x01,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x40,0x7d]
0x65,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x40,0x7d]
0x66,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x40,0x7d]
0x67,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x40,0x7d]
0x6a,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x40,0x7d]
0x6b,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x40,0x7d]
0x6c,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x40,0x7d]
0x6d,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x40,0x7d]
0x6e,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x40,0x7d]
0x6f,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x40,0x7d]
0x7b,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x40,0x7d]
0x7c,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x40,0x7d]
0x7e,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x40,0x7d]
0x7f,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x40,0x7d]
0x80,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x40,0x7d]
0xc1,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, 0x3800, v2         ; encoding: [0xff,0x04,0x40,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, 0xc400, v2         ; encoding: [0xff,0x04,0x40,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x40,0x7d

# CHECK: v_cmp_f_i16_e32 vcc, 0xfe0b, v2         ; encoding: [0xff,0x04,0x40,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x40,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_f_i16_e32 vcc, 0x3456, v2         ; encoding: [0xff,0x04,0x40,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x40,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_f_i16_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x41,0x7d]
0x01,0xff,0x41,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x42,0x7d]
0x01,0x05,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x42,0x7d]
0xff,0x05,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x42,0x7d]
0x01,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x42,0x7d]
0x65,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x42,0x7d]
0x66,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x42,0x7d]
0x67,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x42,0x7d]
0x6a,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x42,0x7d]
0x6b,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x42,0x7d]
0x6c,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x42,0x7d]
0x6d,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x42,0x7d]
0x6e,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x42,0x7d]
0x6f,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x42,0x7d]
0x7b,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x42,0x7d]
0x7c,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x42,0x7d]
0x7e,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x42,0x7d]
0x7f,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x42,0x7d]
0x80,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x42,0x7d]
0xc1,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x42,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x42,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x42,0x7d

# CHECK: v_cmp_lt_i16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x42,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x42,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_lt_i16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x42,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x42,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_lt_i16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x43,0x7d]
0x01,0xff,0x43,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x44,0x7d]
0x01,0x05,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x44,0x7d]
0xff,0x05,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x44,0x7d]
0x01,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x44,0x7d]
0x65,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x44,0x7d]
0x66,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x44,0x7d]
0x67,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x44,0x7d]
0x6a,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x44,0x7d]
0x6b,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x44,0x7d]
0x6c,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x44,0x7d]
0x6d,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x44,0x7d]
0x6e,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x44,0x7d]
0x6f,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x44,0x7d]
0x7b,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x44,0x7d]
0x7c,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x44,0x7d]
0x7e,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x44,0x7d]
0x7f,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x44,0x7d]
0x80,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x44,0x7d]
0xc1,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x44,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x44,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x44,0x7d

# CHECK: v_cmp_eq_i16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x44,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x44,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_eq_i16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x44,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x44,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_eq_i16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x45,0x7d]
0x01,0xff,0x45,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x46,0x7d]
0x01,0x05,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x46,0x7d]
0xff,0x05,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x46,0x7d]
0x01,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x46,0x7d]
0x65,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x46,0x7d]
0x66,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x46,0x7d]
0x67,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x46,0x7d]
0x6a,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x46,0x7d]
0x6b,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x46,0x7d]
0x6c,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x46,0x7d]
0x6d,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x46,0x7d]
0x6e,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x46,0x7d]
0x6f,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x46,0x7d]
0x7b,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x46,0x7d]
0x7c,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x46,0x7d]
0x7e,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x46,0x7d]
0x7f,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x46,0x7d]
0x80,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x46,0x7d]
0xc1,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x46,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x46,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x46,0x7d

# CHECK: v_cmp_le_i16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x46,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x46,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_le_i16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x46,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x46,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_le_i16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x47,0x7d]
0x01,0xff,0x47,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x48,0x7d]
0x01,0x05,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x48,0x7d]
0xff,0x05,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x48,0x7d]
0x01,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x48,0x7d]
0x65,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x48,0x7d]
0x66,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x48,0x7d]
0x67,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x48,0x7d]
0x6a,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x48,0x7d]
0x6b,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x48,0x7d]
0x6c,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x48,0x7d]
0x6d,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x48,0x7d]
0x6e,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x48,0x7d]
0x6f,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x48,0x7d]
0x7b,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x48,0x7d]
0x7c,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x48,0x7d]
0x7e,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x48,0x7d]
0x7f,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x48,0x7d]
0x80,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x48,0x7d]
0xc1,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x48,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x48,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x48,0x7d

# CHECK: v_cmp_gt_i16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x48,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x48,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_gt_i16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x48,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x48,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_gt_i16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x49,0x7d]
0x01,0xff,0x49,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x4a,0x7d]
0x01,0x05,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x4a,0x7d]
0xff,0x05,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x4a,0x7d]
0x01,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x4a,0x7d]
0x65,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x4a,0x7d]
0x66,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x4a,0x7d]
0x67,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x4a,0x7d]
0x6a,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x4a,0x7d]
0x6b,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x4a,0x7d]
0x6c,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x4a,0x7d]
0x6d,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x4a,0x7d]
0x6e,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x4a,0x7d]
0x6f,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x4a,0x7d]
0x7b,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x4a,0x7d]
0x7c,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x4a,0x7d]
0x7e,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x4a,0x7d]
0x7f,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x4a,0x7d]
0x80,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x4a,0x7d]
0xc1,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x4a,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x4a,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x4a,0x7d

# CHECK: v_cmp_ne_i16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x4a,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x4a,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_ne_i16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x4a,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x4a,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_ne_i16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x4b,0x7d]
0x01,0xff,0x4b,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x4c,0x7d]
0x01,0x05,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x4c,0x7d]
0xff,0x05,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x4c,0x7d]
0x01,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x4c,0x7d]
0x65,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x4c,0x7d]
0x66,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x4c,0x7d]
0x67,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x4c,0x7d]
0x6a,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x4c,0x7d]
0x6b,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x4c,0x7d]
0x6c,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x4c,0x7d]
0x6d,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x4c,0x7d]
0x6e,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x4c,0x7d]
0x6f,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x4c,0x7d]
0x7b,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x4c,0x7d]
0x7c,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x4c,0x7d]
0x7e,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x4c,0x7d]
0x7f,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x4c,0x7d]
0x80,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x4c,0x7d]
0xc1,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x4c,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x4c,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x4c,0x7d

# CHECK: v_cmp_ge_i16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x4c,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x4c,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_ge_i16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x4c,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x4c,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_ge_i16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x4d,0x7d]
0x01,0xff,0x4d,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x4e,0x7d]
0x01,0x05,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x4e,0x7d]
0xff,0x05,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x4e,0x7d]
0x01,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x4e,0x7d]
0x65,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x4e,0x7d]
0x66,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x4e,0x7d]
0x67,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x4e,0x7d]
0x6a,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x4e,0x7d]
0x6b,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x4e,0x7d]
0x6c,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x4e,0x7d]
0x6d,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x4e,0x7d]
0x6e,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x4e,0x7d]
0x6f,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x4e,0x7d]
0x7b,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x4e,0x7d]
0x7c,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x4e,0x7d]
0x7e,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x4e,0x7d]
0x7f,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x4e,0x7d]
0x80,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x4e,0x7d]
0xc1,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, 0x3800, v2         ; encoding: [0xff,0x04,0x4e,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, 0xc400, v2         ; encoding: [0xff,0x04,0x4e,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x4e,0x7d

# CHECK: v_cmp_t_i16_e32 vcc, 0xfe0b, v2         ; encoding: [0xff,0x04,0x4e,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x4e,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_t_i16_e32 vcc, 0x3456, v2         ; encoding: [0xff,0x04,0x4e,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x4e,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_t_i16_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x4f,0x7d]
0x01,0xff,0x4f,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x50,0x7d]
0x01,0x05,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x50,0x7d]
0xff,0x05,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x50,0x7d]
0x01,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x50,0x7d]
0x65,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x50,0x7d]
0x66,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x50,0x7d]
0x67,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x50,0x7d]
0x6a,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x50,0x7d]
0x6b,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x50,0x7d]
0x6c,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x50,0x7d]
0x6d,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x50,0x7d]
0x6e,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x50,0x7d]
0x6f,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x50,0x7d]
0x7b,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x50,0x7d]
0x7c,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x50,0x7d]
0x7e,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x50,0x7d]
0x7f,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x50,0x7d]
0x80,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x50,0x7d]
0xc1,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, 0x3800, v2         ; encoding: [0xff,0x04,0x50,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, 0xc400, v2         ; encoding: [0xff,0x04,0x50,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x50,0x7d

# CHECK: v_cmp_f_u16_e32 vcc, 0xfe0b, v2         ; encoding: [0xff,0x04,0x50,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x50,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_f_u16_e32 vcc, 0x3456, v2         ; encoding: [0xff,0x04,0x50,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x50,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_f_u16_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x51,0x7d]
0x01,0xff,0x51,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x52,0x7d]
0x01,0x05,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x52,0x7d]
0xff,0x05,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x52,0x7d]
0x01,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x52,0x7d]
0x65,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x52,0x7d]
0x66,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x52,0x7d]
0x67,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x52,0x7d]
0x6a,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x52,0x7d]
0x6b,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x52,0x7d]
0x6c,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x52,0x7d]
0x6d,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x52,0x7d]
0x6e,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x52,0x7d]
0x6f,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x52,0x7d]
0x7b,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x52,0x7d]
0x7c,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x52,0x7d]
0x7e,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x52,0x7d]
0x7f,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x52,0x7d]
0x80,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x52,0x7d]
0xc1,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x52,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x52,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x52,0x7d

# CHECK: v_cmp_lt_u16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x52,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x52,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_lt_u16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x52,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x52,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_lt_u16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x53,0x7d]
0x01,0xff,0x53,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x54,0x7d]
0x01,0x05,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x54,0x7d]
0xff,0x05,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x54,0x7d]
0x01,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x54,0x7d]
0x65,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x54,0x7d]
0x66,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x54,0x7d]
0x67,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x54,0x7d]
0x6a,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x54,0x7d]
0x6b,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x54,0x7d]
0x6c,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x54,0x7d]
0x6d,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x54,0x7d]
0x6e,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x54,0x7d]
0x6f,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x54,0x7d]
0x7b,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x54,0x7d]
0x7c,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x54,0x7d]
0x7e,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x54,0x7d]
0x7f,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x54,0x7d]
0x80,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x54,0x7d]
0xc1,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x54,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x54,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x54,0x7d

# CHECK: v_cmp_eq_u16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x54,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x54,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_eq_u16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x54,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x54,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_eq_u16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x55,0x7d]
0x01,0xff,0x55,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x56,0x7d]
0x01,0x05,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x56,0x7d]
0xff,0x05,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x56,0x7d]
0x01,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x56,0x7d]
0x65,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x56,0x7d]
0x66,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x56,0x7d]
0x67,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x56,0x7d]
0x6a,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x56,0x7d]
0x6b,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x56,0x7d]
0x6c,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x56,0x7d]
0x6d,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x56,0x7d]
0x6e,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x56,0x7d]
0x6f,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x56,0x7d]
0x7b,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x56,0x7d]
0x7c,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x56,0x7d]
0x7e,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x56,0x7d]
0x7f,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x56,0x7d]
0x80,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x56,0x7d]
0xc1,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x56,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x56,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x56,0x7d

# CHECK: v_cmp_le_u16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x56,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x56,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_le_u16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x56,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x56,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_le_u16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x57,0x7d]
0x01,0xff,0x57,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x58,0x7d]
0x01,0x05,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x58,0x7d]
0xff,0x05,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x58,0x7d]
0x01,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x58,0x7d]
0x65,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x58,0x7d]
0x66,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x58,0x7d]
0x67,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x58,0x7d]
0x6a,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x58,0x7d]
0x6b,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x58,0x7d]
0x6c,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x58,0x7d]
0x6d,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x58,0x7d]
0x6e,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x58,0x7d]
0x6f,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x58,0x7d]
0x7b,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x58,0x7d]
0x7c,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x58,0x7d]
0x7e,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x58,0x7d]
0x7f,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x58,0x7d]
0x80,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x58,0x7d]
0xc1,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x58,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x58,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x58,0x7d

# CHECK: v_cmp_gt_u16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x58,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x58,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_gt_u16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x58,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x58,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_gt_u16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x59,0x7d]
0x01,0xff,0x59,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x5a,0x7d]
0x01,0x05,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x5a,0x7d]
0xff,0x05,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x5a,0x7d]
0x01,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x5a,0x7d]
0x65,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x5a,0x7d]
0x66,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x5a,0x7d]
0x67,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x5a,0x7d]
0x6a,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x5a,0x7d]
0x6b,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x5a,0x7d]
0x6c,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x5a,0x7d]
0x6d,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x5a,0x7d]
0x6e,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x5a,0x7d]
0x6f,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x5a,0x7d]
0x7b,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x5a,0x7d]
0x7c,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x5a,0x7d]
0x7e,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x5a,0x7d]
0x7f,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x5a,0x7d]
0x80,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x5a,0x7d]
0xc1,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x5a,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x5a,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x5a,0x7d

# CHECK: v_cmp_ne_u16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x5a,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x5a,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_ne_u16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x5a,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x5a,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_ne_u16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x5b,0x7d]
0x01,0xff,0x5b,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x5c,0x7d]
0x01,0x05,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x5c,0x7d]
0xff,0x05,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x5c,0x7d]
0x01,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x5c,0x7d]
0x65,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x5c,0x7d]
0x66,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x5c,0x7d]
0x67,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x5c,0x7d]
0x6a,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x5c,0x7d]
0x6b,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x5c,0x7d]
0x6c,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x5c,0x7d]
0x6d,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x5c,0x7d]
0x6e,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x5c,0x7d]
0x6f,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x5c,0x7d]
0x7b,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x5c,0x7d]
0x7c,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x5c,0x7d]
0x7e,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x5c,0x7d]
0x7f,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x5c,0x7d]
0x80,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x5c,0x7d]
0xc1,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x5c,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x5c,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x5c,0x7d

# CHECK: v_cmp_ge_u16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x5c,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x5c,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_ge_u16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x5c,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x5c,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_ge_u16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x5d,0x7d]
0x01,0xff,0x5d,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x5e,0x7d]
0x01,0x05,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x5e,0x7d]
0xff,0x05,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x5e,0x7d]
0x01,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x5e,0x7d]
0x65,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x5e,0x7d]
0x66,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x5e,0x7d]
0x67,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x5e,0x7d]
0x6a,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x5e,0x7d]
0x6b,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x5e,0x7d]
0x6c,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x5e,0x7d]
0x6d,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x5e,0x7d]
0x6e,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x5e,0x7d]
0x6f,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x5e,0x7d]
0x7b,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x5e,0x7d]
0x7c,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x5e,0x7d]
0x7e,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x5e,0x7d]
0x7f,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x5e,0x7d]
0x80,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x5e,0x7d]
0xc1,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, 0x3800, v2         ; encoding: [0xff,0x04,0x5e,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, 0xc400, v2         ; encoding: [0xff,0x04,0x5e,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x5e,0x7d

# CHECK: v_cmp_t_u16_e32 vcc, 0xfe0b, v2         ; encoding: [0xff,0x04,0x5e,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x5e,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmp_t_u16_e32 vcc, 0x3456, v2         ; encoding: [0xff,0x04,0x5e,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x5e,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmp_t_u16_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x5f,0x7d]
0x01,0xff,0x5f,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x80,0x7d]
0x01,0x05,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x80,0x7d]
0xff,0x05,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x80,0x7d]
0x01,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x80,0x7d]
0x65,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x80,0x7d]
0x66,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x80,0x7d]
0x67,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x80,0x7d]
0x6a,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x80,0x7d]
0x6b,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x80,0x7d]
0x6c,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x80,0x7d]
0x6d,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x80,0x7d]
0x6e,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x80,0x7d]
0x6f,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x80,0x7d]
0x7b,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x80,0x7d]
0x7c,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x80,0x7d]
0x7e,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x80,0x7d]
0x7f,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x80,0x7d]
0x80,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x80,0x7d]
0xc1,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x80,0x7d]
0xf0,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x80,0x7d]
0xf7,0x04,0x80,0x7d

# CHECK: v_cmp_f_i32_e32 vcc, 0xaf123456, v2     ; encoding: [0xff,0x04,0x80,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x80,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_f_i32_e32 vcc, 0x3f717273, v2     ; encoding: [0xff,0x04,0x80,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x80,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_f_i32_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x81,0x7d]
0x01,0xff,0x81,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x82,0x7d]
0x01,0x05,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x82,0x7d]
0xff,0x05,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x82,0x7d]
0x01,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x82,0x7d]
0x65,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x82,0x7d]
0x66,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x82,0x7d]
0x67,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x82,0x7d]
0x6a,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x82,0x7d]
0x6b,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x82,0x7d]
0x6c,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x82,0x7d]
0x6d,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x82,0x7d]
0x6e,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x82,0x7d]
0x6f,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x82,0x7d]
0x7b,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x82,0x7d]
0x7c,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x82,0x7d]
0x7e,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x82,0x7d]
0x7f,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x82,0x7d]
0x80,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x82,0x7d]
0xc1,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x82,0x7d]
0xf0,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x82,0x7d]
0xf7,0x04,0x82,0x7d

# CHECK: v_cmp_lt_i32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x82,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x82,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_lt_i32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x82,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x82,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_lt_i32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x83,0x7d]
0x01,0xff,0x83,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x84,0x7d]
0x01,0x05,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x84,0x7d]
0xff,0x05,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x84,0x7d]
0x01,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x84,0x7d]
0x65,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x84,0x7d]
0x66,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x84,0x7d]
0x67,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x84,0x7d]
0x6a,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x84,0x7d]
0x6b,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x84,0x7d]
0x6c,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x84,0x7d]
0x6d,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x84,0x7d]
0x6e,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x84,0x7d]
0x6f,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x84,0x7d]
0x7b,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x84,0x7d]
0x7c,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x84,0x7d]
0x7e,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x84,0x7d]
0x7f,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x84,0x7d]
0x80,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x84,0x7d]
0xc1,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x84,0x7d]
0xf0,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x84,0x7d]
0xf7,0x04,0x84,0x7d

# CHECK: v_cmp_eq_i32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x84,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x84,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_eq_i32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x84,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x84,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_eq_i32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x85,0x7d]
0x01,0xff,0x85,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x86,0x7d]
0x01,0x05,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x86,0x7d]
0xff,0x05,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x86,0x7d]
0x01,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x86,0x7d]
0x65,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x86,0x7d]
0x66,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x86,0x7d]
0x67,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x86,0x7d]
0x6a,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x86,0x7d]
0x6b,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x86,0x7d]
0x6c,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x86,0x7d]
0x6d,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x86,0x7d]
0x6e,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x86,0x7d]
0x6f,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x86,0x7d]
0x7b,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x86,0x7d]
0x7c,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x86,0x7d]
0x7e,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x86,0x7d]
0x7f,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x86,0x7d]
0x80,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x86,0x7d]
0xc1,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x86,0x7d]
0xf0,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x86,0x7d]
0xf7,0x04,0x86,0x7d

# CHECK: v_cmp_le_i32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x86,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x86,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_le_i32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x86,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x86,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_le_i32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x87,0x7d]
0x01,0xff,0x87,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x88,0x7d]
0x01,0x05,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x88,0x7d]
0xff,0x05,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x88,0x7d]
0x01,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x88,0x7d]
0x65,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x88,0x7d]
0x66,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x88,0x7d]
0x67,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x88,0x7d]
0x6a,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x88,0x7d]
0x6b,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x88,0x7d]
0x6c,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x88,0x7d]
0x6d,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x88,0x7d]
0x6e,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x88,0x7d]
0x6f,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x88,0x7d]
0x7b,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x88,0x7d]
0x7c,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x88,0x7d]
0x7e,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x88,0x7d]
0x7f,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x88,0x7d]
0x80,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x88,0x7d]
0xc1,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x88,0x7d]
0xf0,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x88,0x7d]
0xf7,0x04,0x88,0x7d

# CHECK: v_cmp_gt_i32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x88,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x88,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_gt_i32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x88,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x88,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_gt_i32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x89,0x7d]
0x01,0xff,0x89,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x8a,0x7d]
0x01,0x05,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x8a,0x7d]
0xff,0x05,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x8a,0x7d]
0x01,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x8a,0x7d]
0x65,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x8a,0x7d]
0x66,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x8a,0x7d]
0x67,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x8a,0x7d]
0x6a,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x8a,0x7d]
0x6b,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x8a,0x7d]
0x6c,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x8a,0x7d]
0x6d,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x8a,0x7d]
0x6e,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x8a,0x7d]
0x6f,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x8a,0x7d]
0x7b,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x8a,0x7d]
0x7c,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x8a,0x7d]
0x7e,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x8a,0x7d]
0x7f,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x8a,0x7d]
0x80,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x8a,0x7d]
0xc1,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x8a,0x7d]
0xf0,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x8a,0x7d]
0xf7,0x04,0x8a,0x7d

# CHECK: v_cmp_ne_i32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x8a,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x8a,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ne_i32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x8a,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x8a,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ne_i32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x8b,0x7d]
0x01,0xff,0x8b,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x8c,0x7d]
0x01,0x05,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x8c,0x7d]
0xff,0x05,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x8c,0x7d]
0x01,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x8c,0x7d]
0x65,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x8c,0x7d]
0x66,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x8c,0x7d]
0x67,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x8c,0x7d]
0x6a,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x8c,0x7d]
0x6b,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x8c,0x7d]
0x6c,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x8c,0x7d]
0x6d,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x8c,0x7d]
0x6e,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x8c,0x7d]
0x6f,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x8c,0x7d]
0x7b,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x8c,0x7d]
0x7c,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x8c,0x7d]
0x7e,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x8c,0x7d]
0x7f,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x8c,0x7d]
0x80,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x8c,0x7d]
0xc1,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x8c,0x7d]
0xf0,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x8c,0x7d]
0xf7,0x04,0x8c,0x7d

# CHECK: v_cmp_ge_i32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x8c,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x8c,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ge_i32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x8c,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x8c,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ge_i32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x8d,0x7d]
0x01,0xff,0x8d,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x8e,0x7d]
0x01,0x05,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x8e,0x7d]
0xff,0x05,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x8e,0x7d]
0x01,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x8e,0x7d]
0x65,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x8e,0x7d]
0x66,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x8e,0x7d]
0x67,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x8e,0x7d]
0x6a,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x8e,0x7d]
0x6b,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x8e,0x7d]
0x6c,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x8e,0x7d]
0x6d,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x8e,0x7d]
0x6e,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x8e,0x7d]
0x6f,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x8e,0x7d]
0x7b,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x8e,0x7d]
0x7c,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x8e,0x7d]
0x7e,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x8e,0x7d]
0x7f,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x8e,0x7d]
0x80,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x8e,0x7d]
0xc1,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x8e,0x7d]
0xf0,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x8e,0x7d]
0xf7,0x04,0x8e,0x7d

# CHECK: v_cmp_t_i32_e32 vcc, 0xaf123456, v2     ; encoding: [0xff,0x04,0x8e,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x8e,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_t_i32_e32 vcc, 0x3f717273, v2     ; encoding: [0xff,0x04,0x8e,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x8e,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_t_i32_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x8f,0x7d]
0x01,0xff,0x8f,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x90,0x7d]
0x01,0x05,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x90,0x7d]
0xff,0x05,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x90,0x7d]
0x01,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x90,0x7d]
0x65,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x90,0x7d]
0x66,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x90,0x7d]
0x67,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x90,0x7d]
0x6a,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x90,0x7d]
0x6b,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x90,0x7d]
0x6c,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x90,0x7d]
0x6d,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x90,0x7d]
0x6e,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x90,0x7d]
0x6f,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x90,0x7d]
0x7b,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x90,0x7d]
0x7c,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x90,0x7d]
0x7e,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x90,0x7d]
0x7f,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x90,0x7d]
0x80,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x90,0x7d]
0xc1,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x90,0x7d]
0xf0,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x90,0x7d]
0xf7,0x04,0x90,0x7d

# CHECK: v_cmp_f_u32_e32 vcc, 0xaf123456, v2     ; encoding: [0xff,0x04,0x90,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x90,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_f_u32_e32 vcc, 0x3f717273, v2     ; encoding: [0xff,0x04,0x90,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x90,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_f_u32_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x91,0x7d]
0x01,0xff,0x91,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x92,0x7d]
0x01,0x05,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x92,0x7d]
0xff,0x05,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x92,0x7d]
0x01,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x92,0x7d]
0x65,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x92,0x7d]
0x66,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x92,0x7d]
0x67,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x92,0x7d]
0x6a,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x92,0x7d]
0x6b,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x92,0x7d]
0x6c,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x92,0x7d]
0x6d,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x92,0x7d]
0x6e,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x92,0x7d]
0x6f,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x92,0x7d]
0x7b,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x92,0x7d]
0x7c,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x92,0x7d]
0x7e,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x92,0x7d]
0x7f,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x92,0x7d]
0x80,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x92,0x7d]
0xc1,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x92,0x7d]
0xf0,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x92,0x7d]
0xf7,0x04,0x92,0x7d

# CHECK: v_cmp_lt_u32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x92,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x92,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_lt_u32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x92,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x92,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_lt_u32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x93,0x7d]
0x01,0xff,0x93,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x94,0x7d]
0x01,0x05,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x94,0x7d]
0xff,0x05,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x94,0x7d]
0x01,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x94,0x7d]
0x65,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x94,0x7d]
0x66,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x94,0x7d]
0x67,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x94,0x7d]
0x6a,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x94,0x7d]
0x6b,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x94,0x7d]
0x6c,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x94,0x7d]
0x6d,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x94,0x7d]
0x6e,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x94,0x7d]
0x6f,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x94,0x7d]
0x7b,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x94,0x7d]
0x7c,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x94,0x7d]
0x7e,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x94,0x7d]
0x7f,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x94,0x7d]
0x80,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x94,0x7d]
0xc1,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x94,0x7d]
0xf0,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x94,0x7d]
0xf7,0x04,0x94,0x7d

# CHECK: v_cmp_eq_u32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x94,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x94,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_eq_u32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x94,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x94,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_eq_u32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x95,0x7d]
0x01,0xff,0x95,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x96,0x7d]
0x01,0x05,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x96,0x7d]
0xff,0x05,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x96,0x7d]
0x01,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x96,0x7d]
0x65,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x96,0x7d]
0x66,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x96,0x7d]
0x67,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x96,0x7d]
0x6a,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x96,0x7d]
0x6b,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x96,0x7d]
0x6c,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x96,0x7d]
0x6d,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x96,0x7d]
0x6e,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x96,0x7d]
0x6f,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x96,0x7d]
0x7b,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x96,0x7d]
0x7c,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x96,0x7d]
0x7e,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x96,0x7d]
0x7f,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x96,0x7d]
0x80,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x96,0x7d]
0xc1,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x96,0x7d]
0xf0,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x96,0x7d]
0xf7,0x04,0x96,0x7d

# CHECK: v_cmp_le_u32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x96,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x96,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_le_u32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x96,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x96,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_le_u32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x97,0x7d]
0x01,0xff,0x97,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x98,0x7d]
0x01,0x05,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x98,0x7d]
0xff,0x05,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x98,0x7d]
0x01,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x98,0x7d]
0x65,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x98,0x7d]
0x66,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x98,0x7d]
0x67,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x98,0x7d]
0x6a,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x98,0x7d]
0x6b,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x98,0x7d]
0x6c,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x98,0x7d]
0x6d,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x98,0x7d]
0x6e,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x98,0x7d]
0x6f,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x98,0x7d]
0x7b,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x98,0x7d]
0x7c,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x98,0x7d]
0x7e,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x98,0x7d]
0x7f,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x98,0x7d]
0x80,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x98,0x7d]
0xc1,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x98,0x7d]
0xf0,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x98,0x7d]
0xf7,0x04,0x98,0x7d

# CHECK: v_cmp_gt_u32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x98,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x98,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_gt_u32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x98,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x98,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_gt_u32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x99,0x7d]
0x01,0xff,0x99,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x9a,0x7d]
0x01,0x05,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x9a,0x7d]
0xff,0x05,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x9a,0x7d]
0x01,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x9a,0x7d]
0x65,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x9a,0x7d]
0x66,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x9a,0x7d]
0x67,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x9a,0x7d]
0x6a,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x9a,0x7d]
0x6b,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x9a,0x7d]
0x6c,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x9a,0x7d]
0x6d,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x9a,0x7d]
0x6e,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x9a,0x7d]
0x6f,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x9a,0x7d]
0x7b,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x9a,0x7d]
0x7c,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x9a,0x7d]
0x7e,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x9a,0x7d]
0x7f,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x9a,0x7d]
0x80,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x9a,0x7d]
0xc1,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x9a,0x7d]
0xf0,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x9a,0x7d]
0xf7,0x04,0x9a,0x7d

# CHECK: v_cmp_ne_u32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x9a,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x9a,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ne_u32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x9a,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x9a,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ne_u32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x9b,0x7d]
0x01,0xff,0x9b,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x9c,0x7d]
0x01,0x05,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x9c,0x7d]
0xff,0x05,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x9c,0x7d]
0x01,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x9c,0x7d]
0x65,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x9c,0x7d]
0x66,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x9c,0x7d]
0x67,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x9c,0x7d]
0x6a,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x9c,0x7d]
0x6b,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x9c,0x7d]
0x6c,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x9c,0x7d]
0x6d,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x9c,0x7d]
0x6e,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x9c,0x7d]
0x6f,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x9c,0x7d]
0x7b,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x9c,0x7d]
0x7c,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x9c,0x7d]
0x7e,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x9c,0x7d]
0x7f,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x9c,0x7d]
0x80,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x9c,0x7d]
0xc1,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x9c,0x7d]
0xf0,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x9c,0x7d]
0xf7,0x04,0x9c,0x7d

# CHECK: v_cmp_ge_u32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0x9c,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x9c,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ge_u32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0x9c,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x9c,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ge_u32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x9d,0x7d]
0x01,0xff,0x9d,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, v1, v2             ; encoding: [0x01,0x05,0x9e,0x7d]
0x01,0x05,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, v255, v2           ; encoding: [0xff,0x05,0x9e,0x7d]
0xff,0x05,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, s1, v2             ; encoding: [0x01,0x04,0x9e,0x7d]
0x01,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, s101, v2           ; encoding: [0x65,0x04,0x9e,0x7d]
0x65,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x9e,0x7d]
0x66,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x9e,0x7d]
0x67,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, vcc_lo, v2         ; encoding: [0x6a,0x04,0x9e,0x7d]
0x6a,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, vcc_hi, v2         ; encoding: [0x6b,0x04,0x9e,0x7d]
0x6b,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, tba_lo, v2         ; encoding: [0x6c,0x04,0x9e,0x7d]
0x6c,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, tba_hi, v2         ; encoding: [0x6d,0x04,0x9e,0x7d]
0x6d,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, tma_lo, v2         ; encoding: [0x6e,0x04,0x9e,0x7d]
0x6e,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, tma_hi, v2         ; encoding: [0x6f,0x04,0x9e,0x7d]
0x6f,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, ttmp11, v2         ; encoding: [0x7b,0x04,0x9e,0x7d]
0x7b,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, m0, v2             ; encoding: [0x7c,0x04,0x9e,0x7d]
0x7c,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, exec_lo, v2        ; encoding: [0x7e,0x04,0x9e,0x7d]
0x7e,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, exec_hi, v2        ; encoding: [0x7f,0x04,0x9e,0x7d]
0x7f,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, 0, v2              ; encoding: [0x80,0x04,0x9e,0x7d]
0x80,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, -1, v2             ; encoding: [0xc1,0x04,0x9e,0x7d]
0xc1,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, 0.5, v2            ; encoding: [0xf0,0x04,0x9e,0x7d]
0xf0,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, -4.0, v2           ; encoding: [0xf7,0x04,0x9e,0x7d]
0xf7,0x04,0x9e,0x7d

# CHECK: v_cmp_t_u32_e32 vcc, 0xaf123456, v2     ; encoding: [0xff,0x04,0x9e,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0x9e,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_t_u32_e32 vcc, 0x3f717273, v2     ; encoding: [0xff,0x04,0x9e,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0x9e,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_t_u32_e32 vcc, v1, v255           ; encoding: [0x01,0xff,0x9f,0x7d]
0x01,0xff,0x9f,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, v[1:2], v[2:3]     ; encoding: [0x01,0x05,0xc0,0x7d]
0x01,0x05,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc0,0x7d]
0xfe,0x05,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, s[2:3], v[2:3]     ; encoding: [0x02,0x04,0xc0,0x7d]
0x02,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, s[4:5], v[2:3]     ; encoding: [0x04,0x04,0xc0,0x7d]
0x04,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc0,0x7d]
0x64,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc0,0x7d]
0x66,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, vcc, v[2:3]        ; encoding: [0x6a,0x04,0xc0,0x7d]
0x6a,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, tba, v[2:3]        ; encoding: [0x6c,0x04,0xc0,0x7d]
0x6c,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, tma, v[2:3]        ; encoding: [0x6e,0x04,0xc0,0x7d]
0x6e,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc0,0x7d]
0x7a,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, exec, v[2:3]       ; encoding: [0x7e,0x04,0xc0,0x7d]
0x7e,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, 0, v[2:3]          ; encoding: [0x80,0x04,0xc0,0x7d]
0x80,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, -1, v[2:3]         ; encoding: [0xc1,0x04,0xc0,0x7d]
0xc1,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, 0.5, v[2:3]        ; encoding: [0xf0,0x04,0xc0,0x7d]
0xf0,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, -4.0, v[2:3]       ; encoding: [0xf7,0x04,0xc0,0x7d]
0xf7,0x04,0xc0,0x7d

# CHECK: v_cmp_f_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc0,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc0,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_f_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc0,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc0,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_f_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc1,0x7d]
0x01,0xfd,0xc1,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xc2,0x7d]
0x01,0x05,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc2,0x7d]
0xfe,0x05,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xc2,0x7d]
0x02,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xc2,0x7d]
0x04,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc2,0x7d]
0x64,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc2,0x7d]
0x66,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xc2,0x7d]
0x6a,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xc2,0x7d]
0x6c,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xc2,0x7d]
0x6e,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc2,0x7d]
0x7a,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xc2,0x7d]
0x7e,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xc2,0x7d]
0x80,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xc2,0x7d]
0xc1,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xc2,0x7d]
0xf0,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xc2,0x7d]
0xf7,0x04,0xc2,0x7d

# CHECK: v_cmp_lt_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc2,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc2,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_lt_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc2,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc2,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_lt_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc3,0x7d]
0x01,0xfd,0xc3,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xc4,0x7d]
0x01,0x05,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc4,0x7d]
0xfe,0x05,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xc4,0x7d]
0x02,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xc4,0x7d]
0x04,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc4,0x7d]
0x64,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc4,0x7d]
0x66,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xc4,0x7d]
0x6a,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xc4,0x7d]
0x6c,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xc4,0x7d]
0x6e,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc4,0x7d]
0x7a,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xc4,0x7d]
0x7e,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xc4,0x7d]
0x80,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xc4,0x7d]
0xc1,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xc4,0x7d]
0xf0,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xc4,0x7d]
0xf7,0x04,0xc4,0x7d

# CHECK: v_cmp_eq_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc4,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc4,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_eq_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc4,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc4,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_eq_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc5,0x7d]
0x01,0xfd,0xc5,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xc6,0x7d]
0x01,0x05,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc6,0x7d]
0xfe,0x05,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xc6,0x7d]
0x02,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xc6,0x7d]
0x04,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc6,0x7d]
0x64,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc6,0x7d]
0x66,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xc6,0x7d]
0x6a,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xc6,0x7d]
0x6c,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xc6,0x7d]
0x6e,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc6,0x7d]
0x7a,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xc6,0x7d]
0x7e,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xc6,0x7d]
0x80,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xc6,0x7d]
0xc1,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xc6,0x7d]
0xf0,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xc6,0x7d]
0xf7,0x04,0xc6,0x7d

# CHECK: v_cmp_le_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc6,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc6,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_le_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc6,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc6,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_le_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc7,0x7d]
0x01,0xfd,0xc7,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xc8,0x7d]
0x01,0x05,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xc8,0x7d]
0xfe,0x05,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xc8,0x7d]
0x02,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xc8,0x7d]
0x04,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xc8,0x7d]
0x64,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xc8,0x7d]
0x66,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xc8,0x7d]
0x6a,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xc8,0x7d]
0x6c,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xc8,0x7d]
0x6e,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xc8,0x7d]
0x7a,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xc8,0x7d]
0x7e,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xc8,0x7d]
0x80,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xc8,0x7d]
0xc1,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xc8,0x7d]
0xf0,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xc8,0x7d]
0xf7,0x04,0xc8,0x7d

# CHECK: v_cmp_gt_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xc8,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xc8,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_gt_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xc8,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xc8,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_gt_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xc9,0x7d]
0x01,0xfd,0xc9,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xca,0x7d]
0x01,0x05,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xca,0x7d]
0xfe,0x05,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xca,0x7d]
0x02,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xca,0x7d]
0x04,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xca,0x7d]
0x64,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xca,0x7d]
0x66,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xca,0x7d]
0x6a,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xca,0x7d]
0x6c,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xca,0x7d]
0x6e,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xca,0x7d]
0x7a,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xca,0x7d]
0x7e,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xca,0x7d]
0x80,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xca,0x7d]
0xc1,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xca,0x7d]
0xf0,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xca,0x7d]
0xf7,0x04,0xca,0x7d

# CHECK: v_cmp_ne_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xca,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xca,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ne_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xca,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xca,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ne_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xcb,0x7d]
0x01,0xfd,0xcb,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xcc,0x7d]
0x01,0x05,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xcc,0x7d]
0xfe,0x05,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xcc,0x7d]
0x02,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xcc,0x7d]
0x04,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xcc,0x7d]
0x64,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xcc,0x7d]
0x66,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xcc,0x7d]
0x6a,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xcc,0x7d]
0x6c,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xcc,0x7d]
0x6e,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xcc,0x7d]
0x7a,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xcc,0x7d]
0x7e,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xcc,0x7d]
0x80,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xcc,0x7d]
0xc1,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xcc,0x7d]
0xf0,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xcc,0x7d]
0xf7,0x04,0xcc,0x7d

# CHECK: v_cmp_ge_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xcc,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xcc,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ge_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xcc,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xcc,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ge_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xcd,0x7d]
0x01,0xfd,0xcd,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, v[1:2], v[2:3]     ; encoding: [0x01,0x05,0xce,0x7d]
0x01,0x05,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xce,0x7d]
0xfe,0x05,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, s[2:3], v[2:3]     ; encoding: [0x02,0x04,0xce,0x7d]
0x02,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, s[4:5], v[2:3]     ; encoding: [0x04,0x04,0xce,0x7d]
0x04,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xce,0x7d]
0x64,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xce,0x7d]
0x66,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, vcc, v[2:3]        ; encoding: [0x6a,0x04,0xce,0x7d]
0x6a,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, tba, v[2:3]        ; encoding: [0x6c,0x04,0xce,0x7d]
0x6c,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, tma, v[2:3]        ; encoding: [0x6e,0x04,0xce,0x7d]
0x6e,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xce,0x7d]
0x7a,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, exec, v[2:3]       ; encoding: [0x7e,0x04,0xce,0x7d]
0x7e,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, 0, v[2:3]          ; encoding: [0x80,0x04,0xce,0x7d]
0x80,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, -1, v[2:3]         ; encoding: [0xc1,0x04,0xce,0x7d]
0xc1,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, 0.5, v[2:3]        ; encoding: [0xf0,0x04,0xce,0x7d]
0xf0,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, -4.0, v[2:3]       ; encoding: [0xf7,0x04,0xce,0x7d]
0xf7,0x04,0xce,0x7d

# CHECK: v_cmp_t_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xce,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xce,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_t_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xce,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xce,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_t_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xcf,0x7d]
0x01,0xfd,0xcf,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, v[1:2], v[2:3]     ; encoding: [0x01,0x05,0xd0,0x7d]
0x01,0x05,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd0,0x7d]
0xfe,0x05,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, s[2:3], v[2:3]     ; encoding: [0x02,0x04,0xd0,0x7d]
0x02,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, s[4:5], v[2:3]     ; encoding: [0x04,0x04,0xd0,0x7d]
0x04,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd0,0x7d]
0x64,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd0,0x7d]
0x66,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, vcc, v[2:3]        ; encoding: [0x6a,0x04,0xd0,0x7d]
0x6a,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, tba, v[2:3]        ; encoding: [0x6c,0x04,0xd0,0x7d]
0x6c,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, tma, v[2:3]        ; encoding: [0x6e,0x04,0xd0,0x7d]
0x6e,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd0,0x7d]
0x7a,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, exec, v[2:3]       ; encoding: [0x7e,0x04,0xd0,0x7d]
0x7e,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, 0, v[2:3]          ; encoding: [0x80,0x04,0xd0,0x7d]
0x80,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, -1, v[2:3]         ; encoding: [0xc1,0x04,0xd0,0x7d]
0xc1,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, 0.5, v[2:3]        ; encoding: [0xf0,0x04,0xd0,0x7d]
0xf0,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, -4.0, v[2:3]       ; encoding: [0xf7,0x04,0xd0,0x7d]
0xf7,0x04,0xd0,0x7d

# CHECK: v_cmp_f_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd0,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd0,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_f_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd0,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd0,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_f_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd1,0x7d]
0x01,0xfd,0xd1,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xd2,0x7d]
0x01,0x05,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd2,0x7d]
0xfe,0x05,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xd2,0x7d]
0x02,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xd2,0x7d]
0x04,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd2,0x7d]
0x64,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd2,0x7d]
0x66,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xd2,0x7d]
0x6a,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xd2,0x7d]
0x6c,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xd2,0x7d]
0x6e,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd2,0x7d]
0x7a,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xd2,0x7d]
0x7e,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xd2,0x7d]
0x80,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xd2,0x7d]
0xc1,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xd2,0x7d]
0xf0,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xd2,0x7d]
0xf7,0x04,0xd2,0x7d

# CHECK: v_cmp_lt_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd2,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd2,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_lt_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd2,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd2,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_lt_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd3,0x7d]
0x01,0xfd,0xd3,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xd4,0x7d]
0x01,0x05,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd4,0x7d]
0xfe,0x05,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xd4,0x7d]
0x02,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xd4,0x7d]
0x04,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd4,0x7d]
0x64,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd4,0x7d]
0x66,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xd4,0x7d]
0x6a,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xd4,0x7d]
0x6c,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xd4,0x7d]
0x6e,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd4,0x7d]
0x7a,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xd4,0x7d]
0x7e,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xd4,0x7d]
0x80,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xd4,0x7d]
0xc1,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xd4,0x7d]
0xf0,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xd4,0x7d]
0xf7,0x04,0xd4,0x7d

# CHECK: v_cmp_eq_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd4,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd4,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_eq_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd4,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd4,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_eq_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd5,0x7d]
0x01,0xfd,0xd5,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xd6,0x7d]
0x01,0x05,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd6,0x7d]
0xfe,0x05,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xd6,0x7d]
0x02,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xd6,0x7d]
0x04,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd6,0x7d]
0x64,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd6,0x7d]
0x66,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xd6,0x7d]
0x6a,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xd6,0x7d]
0x6c,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xd6,0x7d]
0x6e,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd6,0x7d]
0x7a,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xd6,0x7d]
0x7e,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xd6,0x7d]
0x80,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xd6,0x7d]
0xc1,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xd6,0x7d]
0xf0,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xd6,0x7d]
0xf7,0x04,0xd6,0x7d

# CHECK: v_cmp_le_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd6,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd6,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_le_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd6,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd6,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_le_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd7,0x7d]
0x01,0xfd,0xd7,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xd8,0x7d]
0x01,0x05,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xd8,0x7d]
0xfe,0x05,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xd8,0x7d]
0x02,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xd8,0x7d]
0x04,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xd8,0x7d]
0x64,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xd8,0x7d]
0x66,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xd8,0x7d]
0x6a,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xd8,0x7d]
0x6c,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xd8,0x7d]
0x6e,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xd8,0x7d]
0x7a,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xd8,0x7d]
0x7e,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xd8,0x7d]
0x80,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xd8,0x7d]
0xc1,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xd8,0x7d]
0xf0,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xd8,0x7d]
0xf7,0x04,0xd8,0x7d

# CHECK: v_cmp_gt_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xd8,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xd8,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_gt_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xd8,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xd8,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_gt_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xd9,0x7d]
0x01,0xfd,0xd9,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xda,0x7d]
0x01,0x05,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xda,0x7d]
0xfe,0x05,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xda,0x7d]
0x02,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xda,0x7d]
0x04,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xda,0x7d]
0x64,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xda,0x7d]
0x66,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xda,0x7d]
0x6a,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xda,0x7d]
0x6c,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xda,0x7d]
0x6e,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xda,0x7d]
0x7a,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xda,0x7d]
0x7e,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xda,0x7d]
0x80,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xda,0x7d]
0xc1,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xda,0x7d]
0xf0,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xda,0x7d]
0xf7,0x04,0xda,0x7d

# CHECK: v_cmp_ne_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xda,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xda,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ne_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xda,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xda,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ne_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xdb,0x7d]
0x01,0xfd,0xdb,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xdc,0x7d]
0x01,0x05,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xdc,0x7d]
0xfe,0x05,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xdc,0x7d]
0x02,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xdc,0x7d]
0x04,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xdc,0x7d]
0x64,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xdc,0x7d]
0x66,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xdc,0x7d]
0x6a,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xdc,0x7d]
0x6c,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xdc,0x7d]
0x6e,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xdc,0x7d]
0x7a,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xdc,0x7d]
0x7e,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xdc,0x7d]
0x80,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xdc,0x7d]
0xc1,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xdc,0x7d]
0xf0,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xdc,0x7d]
0xf7,0x04,0xdc,0x7d

# CHECK: v_cmp_ge_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xdc,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xdc,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_ge_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xdc,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xdc,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_ge_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xdd,0x7d]
0x01,0xfd,0xdd,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, v[1:2], v[2:3]     ; encoding: [0x01,0x05,0xde,0x7d]
0x01,0x05,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xde,0x7d]
0xfe,0x05,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, s[2:3], v[2:3]     ; encoding: [0x02,0x04,0xde,0x7d]
0x02,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, s[4:5], v[2:3]     ; encoding: [0x04,0x04,0xde,0x7d]
0x04,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xde,0x7d]
0x64,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xde,0x7d]
0x66,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, vcc, v[2:3]        ; encoding: [0x6a,0x04,0xde,0x7d]
0x6a,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, tba, v[2:3]        ; encoding: [0x6c,0x04,0xde,0x7d]
0x6c,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, tma, v[2:3]        ; encoding: [0x6e,0x04,0xde,0x7d]
0x6e,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xde,0x7d]
0x7a,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, exec, v[2:3]       ; encoding: [0x7e,0x04,0xde,0x7d]
0x7e,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, 0, v[2:3]          ; encoding: [0x80,0x04,0xde,0x7d]
0x80,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, -1, v[2:3]         ; encoding: [0xc1,0x04,0xde,0x7d]
0xc1,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, 0.5, v[2:3]        ; encoding: [0xf0,0x04,0xde,0x7d]
0xf0,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, -4.0, v[2:3]       ; encoding: [0xf7,0x04,0xde,0x7d]
0xf7,0x04,0xde,0x7d

# CHECK: v_cmp_t_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xde,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xde,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmp_t_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xde,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xde,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmp_t_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xdf,0x7d]
0x01,0xfd,0xdf,0x7d
