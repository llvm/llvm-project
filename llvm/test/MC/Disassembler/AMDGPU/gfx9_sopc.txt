# RUN: llvm-mc -triple=amdgcn -mcpu=gfx900 -disassemble -show-encoding < %s | FileCheck -strict-whitespace %s

# CHECK: s_cmp_eq_i32 s1, s2                     ; encoding: [0x01,0x02,0x00,0xbf]
0x01,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 s101, s2                   ; encoding: [0x65,0x02,0x00,0xbf]
0x65,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x00,0xbf]
0x66,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x00,0xbf]
0x67,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x00,0xbf]
0x6a,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x00,0xbf]
0x6b,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 m0, s2                     ; encoding: [0x7c,0x02,0x00,0xbf]
0x7c,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 exec_lo, s2                ; encoding: [0x7e,0x02,0x00,0xbf]
0x7e,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 exec_hi, s2                ; encoding: [0x7f,0x02,0x00,0xbf]
0x7f,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 0, s2                      ; encoding: [0x80,0x02,0x00,0xbf]
0x80,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 -1, s2                     ; encoding: [0xc1,0x02,0x00,0xbf]
0xc1,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 0.5, s2                    ; encoding: [0xf0,0x02,0x00,0xbf]
0xf0,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 -4.0, s2                   ; encoding: [0xf7,0x02,0x00,0xbf]
0xf7,0x02,0x00,0xbf

# CHECK: s_cmp_eq_i32 0xaf123456, s2             ; encoding: [0xff,0x02,0x00,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x00,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_eq_i32 0x3f717273, s2             ; encoding: [0xff,0x02,0x00,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x00,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_eq_i32 s1, s101                   ; encoding: [0x01,0x65,0x00,0xbf]
0x01,0x65,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x00,0xbf]
0x01,0x66,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x00,0xbf]
0x01,0x67,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x00,0xbf]
0x01,0x6a,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x00,0xbf]
0x01,0x6b,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, m0                     ; encoding: [0x01,0x7c,0x00,0xbf]
0x01,0x7c,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, exec_lo                ; encoding: [0x01,0x7e,0x00,0xbf]
0x01,0x7e,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, exec_hi                ; encoding: [0x01,0x7f,0x00,0xbf]
0x01,0x7f,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, 0                      ; encoding: [0x01,0x80,0x00,0xbf]
0x01,0x80,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, -1                     ; encoding: [0x01,0xc1,0x00,0xbf]
0x01,0xc1,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, 0.5                    ; encoding: [0x01,0xf0,0x00,0xbf]
0x01,0xf0,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, -4.0                   ; encoding: [0x01,0xf7,0x00,0xbf]
0x01,0xf7,0x00,0xbf

# CHECK: s_cmp_eq_i32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x00,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x00,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_eq_i32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x00,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x00,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lg_i32 s1, s2                     ; encoding: [0x01,0x02,0x01,0xbf]
0x01,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 s101, s2                   ; encoding: [0x65,0x02,0x01,0xbf]
0x65,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x01,0xbf]
0x66,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x01,0xbf]
0x67,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x01,0xbf]
0x6a,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x01,0xbf]
0x6b,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 m0, s2                     ; encoding: [0x7c,0x02,0x01,0xbf]
0x7c,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 exec_lo, s2                ; encoding: [0x7e,0x02,0x01,0xbf]
0x7e,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 exec_hi, s2                ; encoding: [0x7f,0x02,0x01,0xbf]
0x7f,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 0, s2                      ; encoding: [0x80,0x02,0x01,0xbf]
0x80,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 -1, s2                     ; encoding: [0xc1,0x02,0x01,0xbf]
0xc1,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 0.5, s2                    ; encoding: [0xf0,0x02,0x01,0xbf]
0xf0,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 -4.0, s2                   ; encoding: [0xf7,0x02,0x01,0xbf]
0xf7,0x02,0x01,0xbf

# CHECK: s_cmp_lg_i32 0xaf123456, s2             ; encoding: [0xff,0x02,0x01,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x01,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lg_i32 0x3f717273, s2             ; encoding: [0xff,0x02,0x01,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x01,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lg_i32 s1, s101                   ; encoding: [0x01,0x65,0x01,0xbf]
0x01,0x65,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x01,0xbf]
0x01,0x66,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x01,0xbf]
0x01,0x67,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x01,0xbf]
0x01,0x6a,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x01,0xbf]
0x01,0x6b,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, m0                     ; encoding: [0x01,0x7c,0x01,0xbf]
0x01,0x7c,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, exec_lo                ; encoding: [0x01,0x7e,0x01,0xbf]
0x01,0x7e,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, exec_hi                ; encoding: [0x01,0x7f,0x01,0xbf]
0x01,0x7f,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, 0                      ; encoding: [0x01,0x80,0x01,0xbf]
0x01,0x80,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, -1                     ; encoding: [0x01,0xc1,0x01,0xbf]
0x01,0xc1,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, 0.5                    ; encoding: [0x01,0xf0,0x01,0xbf]
0x01,0xf0,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, -4.0                   ; encoding: [0x01,0xf7,0x01,0xbf]
0x01,0xf7,0x01,0xbf

# CHECK: s_cmp_lg_i32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x01,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x01,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lg_i32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x01,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x01,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_gt_i32 s1, s2                     ; encoding: [0x01,0x02,0x02,0xbf]
0x01,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 s101, s2                   ; encoding: [0x65,0x02,0x02,0xbf]
0x65,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x02,0xbf]
0x66,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x02,0xbf]
0x67,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x02,0xbf]
0x6a,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x02,0xbf]
0x6b,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 m0, s2                     ; encoding: [0x7c,0x02,0x02,0xbf]
0x7c,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 exec_lo, s2                ; encoding: [0x7e,0x02,0x02,0xbf]
0x7e,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 exec_hi, s2                ; encoding: [0x7f,0x02,0x02,0xbf]
0x7f,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 0, s2                      ; encoding: [0x80,0x02,0x02,0xbf]
0x80,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 -1, s2                     ; encoding: [0xc1,0x02,0x02,0xbf]
0xc1,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 0.5, s2                    ; encoding: [0xf0,0x02,0x02,0xbf]
0xf0,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 -4.0, s2                   ; encoding: [0xf7,0x02,0x02,0xbf]
0xf7,0x02,0x02,0xbf

# CHECK: s_cmp_gt_i32 0xaf123456, s2             ; encoding: [0xff,0x02,0x02,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x02,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_gt_i32 0x3f717273, s2             ; encoding: [0xff,0x02,0x02,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x02,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_gt_i32 s1, s101                   ; encoding: [0x01,0x65,0x02,0xbf]
0x01,0x65,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x02,0xbf]
0x01,0x66,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x02,0xbf]
0x01,0x67,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x02,0xbf]
0x01,0x6a,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x02,0xbf]
0x01,0x6b,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, m0                     ; encoding: [0x01,0x7c,0x02,0xbf]
0x01,0x7c,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, exec_lo                ; encoding: [0x01,0x7e,0x02,0xbf]
0x01,0x7e,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, exec_hi                ; encoding: [0x01,0x7f,0x02,0xbf]
0x01,0x7f,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, 0                      ; encoding: [0x01,0x80,0x02,0xbf]
0x01,0x80,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, -1                     ; encoding: [0x01,0xc1,0x02,0xbf]
0x01,0xc1,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, 0.5                    ; encoding: [0x01,0xf0,0x02,0xbf]
0x01,0xf0,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, -4.0                   ; encoding: [0x01,0xf7,0x02,0xbf]
0x01,0xf7,0x02,0xbf

# CHECK: s_cmp_gt_i32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x02,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x02,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_gt_i32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x02,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x02,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_ge_i32 s1, s2                     ; encoding: [0x01,0x02,0x03,0xbf]
0x01,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 s101, s2                   ; encoding: [0x65,0x02,0x03,0xbf]
0x65,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x03,0xbf]
0x66,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x03,0xbf]
0x67,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x03,0xbf]
0x6a,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x03,0xbf]
0x6b,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 m0, s2                     ; encoding: [0x7c,0x02,0x03,0xbf]
0x7c,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 exec_lo, s2                ; encoding: [0x7e,0x02,0x03,0xbf]
0x7e,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 exec_hi, s2                ; encoding: [0x7f,0x02,0x03,0xbf]
0x7f,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 0, s2                      ; encoding: [0x80,0x02,0x03,0xbf]
0x80,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 -1, s2                     ; encoding: [0xc1,0x02,0x03,0xbf]
0xc1,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 0.5, s2                    ; encoding: [0xf0,0x02,0x03,0xbf]
0xf0,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 -4.0, s2                   ; encoding: [0xf7,0x02,0x03,0xbf]
0xf7,0x02,0x03,0xbf

# CHECK: s_cmp_ge_i32 0xaf123456, s2             ; encoding: [0xff,0x02,0x03,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x03,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_ge_i32 0x3f717273, s2             ; encoding: [0xff,0x02,0x03,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x03,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_ge_i32 s1, s101                   ; encoding: [0x01,0x65,0x03,0xbf]
0x01,0x65,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x03,0xbf]
0x01,0x66,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x03,0xbf]
0x01,0x67,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x03,0xbf]
0x01,0x6a,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x03,0xbf]
0x01,0x6b,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, m0                     ; encoding: [0x01,0x7c,0x03,0xbf]
0x01,0x7c,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, exec_lo                ; encoding: [0x01,0x7e,0x03,0xbf]
0x01,0x7e,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, exec_hi                ; encoding: [0x01,0x7f,0x03,0xbf]
0x01,0x7f,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, 0                      ; encoding: [0x01,0x80,0x03,0xbf]
0x01,0x80,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, -1                     ; encoding: [0x01,0xc1,0x03,0xbf]
0x01,0xc1,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, 0.5                    ; encoding: [0x01,0xf0,0x03,0xbf]
0x01,0xf0,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, -4.0                   ; encoding: [0x01,0xf7,0x03,0xbf]
0x01,0xf7,0x03,0xbf

# CHECK: s_cmp_ge_i32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x03,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x03,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_ge_i32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x03,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x03,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lt_i32 s1, s2                     ; encoding: [0x01,0x02,0x04,0xbf]
0x01,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 s101, s2                   ; encoding: [0x65,0x02,0x04,0xbf]
0x65,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x04,0xbf]
0x66,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x04,0xbf]
0x67,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x04,0xbf]
0x6a,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x04,0xbf]
0x6b,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 m0, s2                     ; encoding: [0x7c,0x02,0x04,0xbf]
0x7c,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 exec_lo, s2                ; encoding: [0x7e,0x02,0x04,0xbf]
0x7e,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 exec_hi, s2                ; encoding: [0x7f,0x02,0x04,0xbf]
0x7f,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 0, s2                      ; encoding: [0x80,0x02,0x04,0xbf]
0x80,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 -1, s2                     ; encoding: [0xc1,0x02,0x04,0xbf]
0xc1,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 0.5, s2                    ; encoding: [0xf0,0x02,0x04,0xbf]
0xf0,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 -4.0, s2                   ; encoding: [0xf7,0x02,0x04,0xbf]
0xf7,0x02,0x04,0xbf

# CHECK: s_cmp_lt_i32 0xaf123456, s2             ; encoding: [0xff,0x02,0x04,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x04,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lt_i32 0x3f717273, s2             ; encoding: [0xff,0x02,0x04,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x04,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lt_i32 s1, s101                   ; encoding: [0x01,0x65,0x04,0xbf]
0x01,0x65,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x04,0xbf]
0x01,0x66,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x04,0xbf]
0x01,0x67,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x04,0xbf]
0x01,0x6a,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x04,0xbf]
0x01,0x6b,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, m0                     ; encoding: [0x01,0x7c,0x04,0xbf]
0x01,0x7c,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, exec_lo                ; encoding: [0x01,0x7e,0x04,0xbf]
0x01,0x7e,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, exec_hi                ; encoding: [0x01,0x7f,0x04,0xbf]
0x01,0x7f,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, 0                      ; encoding: [0x01,0x80,0x04,0xbf]
0x01,0x80,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, -1                     ; encoding: [0x01,0xc1,0x04,0xbf]
0x01,0xc1,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, 0.5                    ; encoding: [0x01,0xf0,0x04,0xbf]
0x01,0xf0,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, -4.0                   ; encoding: [0x01,0xf7,0x04,0xbf]
0x01,0xf7,0x04,0xbf

# CHECK: s_cmp_lt_i32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x04,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x04,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lt_i32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x04,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x04,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_le_i32 s1, s2                     ; encoding: [0x01,0x02,0x05,0xbf]
0x01,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 s101, s2                   ; encoding: [0x65,0x02,0x05,0xbf]
0x65,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x05,0xbf]
0x66,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x05,0xbf]
0x67,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x05,0xbf]
0x6a,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x05,0xbf]
0x6b,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 m0, s2                     ; encoding: [0x7c,0x02,0x05,0xbf]
0x7c,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 exec_lo, s2                ; encoding: [0x7e,0x02,0x05,0xbf]
0x7e,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 exec_hi, s2                ; encoding: [0x7f,0x02,0x05,0xbf]
0x7f,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 0, s2                      ; encoding: [0x80,0x02,0x05,0xbf]
0x80,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 -1, s2                     ; encoding: [0xc1,0x02,0x05,0xbf]
0xc1,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 0.5, s2                    ; encoding: [0xf0,0x02,0x05,0xbf]
0xf0,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 -4.0, s2                   ; encoding: [0xf7,0x02,0x05,0xbf]
0xf7,0x02,0x05,0xbf

# CHECK: s_cmp_le_i32 0xaf123456, s2             ; encoding: [0xff,0x02,0x05,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x05,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_le_i32 0x3f717273, s2             ; encoding: [0xff,0x02,0x05,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x05,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_le_i32 s1, s101                   ; encoding: [0x01,0x65,0x05,0xbf]
0x01,0x65,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x05,0xbf]
0x01,0x66,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x05,0xbf]
0x01,0x67,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x05,0xbf]
0x01,0x6a,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x05,0xbf]
0x01,0x6b,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, m0                     ; encoding: [0x01,0x7c,0x05,0xbf]
0x01,0x7c,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, exec_lo                ; encoding: [0x01,0x7e,0x05,0xbf]
0x01,0x7e,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, exec_hi                ; encoding: [0x01,0x7f,0x05,0xbf]
0x01,0x7f,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, 0                      ; encoding: [0x01,0x80,0x05,0xbf]
0x01,0x80,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, -1                     ; encoding: [0x01,0xc1,0x05,0xbf]
0x01,0xc1,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, 0.5                    ; encoding: [0x01,0xf0,0x05,0xbf]
0x01,0xf0,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, -4.0                   ; encoding: [0x01,0xf7,0x05,0xbf]
0x01,0xf7,0x05,0xbf

# CHECK: s_cmp_le_i32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x05,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x05,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_le_i32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x05,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x05,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_eq_u32 s1, s2                     ; encoding: [0x01,0x02,0x06,0xbf]
0x01,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 s101, s2                   ; encoding: [0x65,0x02,0x06,0xbf]
0x65,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x06,0xbf]
0x66,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x06,0xbf]
0x67,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x06,0xbf]
0x6a,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x06,0xbf]
0x6b,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 m0, s2                     ; encoding: [0x7c,0x02,0x06,0xbf]
0x7c,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 exec_lo, s2                ; encoding: [0x7e,0x02,0x06,0xbf]
0x7e,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 exec_hi, s2                ; encoding: [0x7f,0x02,0x06,0xbf]
0x7f,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 0, s2                      ; encoding: [0x80,0x02,0x06,0xbf]
0x80,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 -1, s2                     ; encoding: [0xc1,0x02,0x06,0xbf]
0xc1,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 0.5, s2                    ; encoding: [0xf0,0x02,0x06,0xbf]
0xf0,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 -4.0, s2                   ; encoding: [0xf7,0x02,0x06,0xbf]
0xf7,0x02,0x06,0xbf

# CHECK: s_cmp_eq_u32 0xaf123456, s2             ; encoding: [0xff,0x02,0x06,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x06,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_eq_u32 0x3f717273, s2             ; encoding: [0xff,0x02,0x06,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x06,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_eq_u32 s1, s101                   ; encoding: [0x01,0x65,0x06,0xbf]
0x01,0x65,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x06,0xbf]
0x01,0x66,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x06,0xbf]
0x01,0x67,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x06,0xbf]
0x01,0x6a,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x06,0xbf]
0x01,0x6b,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, m0                     ; encoding: [0x01,0x7c,0x06,0xbf]
0x01,0x7c,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, exec_lo                ; encoding: [0x01,0x7e,0x06,0xbf]
0x01,0x7e,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, exec_hi                ; encoding: [0x01,0x7f,0x06,0xbf]
0x01,0x7f,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, 0                      ; encoding: [0x01,0x80,0x06,0xbf]
0x01,0x80,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, -1                     ; encoding: [0x01,0xc1,0x06,0xbf]
0x01,0xc1,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, 0.5                    ; encoding: [0x01,0xf0,0x06,0xbf]
0x01,0xf0,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, -4.0                   ; encoding: [0x01,0xf7,0x06,0xbf]
0x01,0xf7,0x06,0xbf

# CHECK: s_cmp_eq_u32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x06,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x06,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_eq_u32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x06,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x06,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lg_u32 s1, s2                     ; encoding: [0x01,0x02,0x07,0xbf]
0x01,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 s101, s2                   ; encoding: [0x65,0x02,0x07,0xbf]
0x65,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x07,0xbf]
0x66,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x07,0xbf]
0x67,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x07,0xbf]
0x6a,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x07,0xbf]
0x6b,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 m0, s2                     ; encoding: [0x7c,0x02,0x07,0xbf]
0x7c,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 exec_lo, s2                ; encoding: [0x7e,0x02,0x07,0xbf]
0x7e,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 exec_hi, s2                ; encoding: [0x7f,0x02,0x07,0xbf]
0x7f,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 0, s2                      ; encoding: [0x80,0x02,0x07,0xbf]
0x80,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 -1, s2                     ; encoding: [0xc1,0x02,0x07,0xbf]
0xc1,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 0.5, s2                    ; encoding: [0xf0,0x02,0x07,0xbf]
0xf0,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 -4.0, s2                   ; encoding: [0xf7,0x02,0x07,0xbf]
0xf7,0x02,0x07,0xbf

# CHECK: s_cmp_lg_u32 0xaf123456, s2             ; encoding: [0xff,0x02,0x07,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x07,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lg_u32 0x3f717273, s2             ; encoding: [0xff,0x02,0x07,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x07,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lg_u32 s1, s101                   ; encoding: [0x01,0x65,0x07,0xbf]
0x01,0x65,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x07,0xbf]
0x01,0x66,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x07,0xbf]
0x01,0x67,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x07,0xbf]
0x01,0x6a,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x07,0xbf]
0x01,0x6b,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, m0                     ; encoding: [0x01,0x7c,0x07,0xbf]
0x01,0x7c,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, exec_lo                ; encoding: [0x01,0x7e,0x07,0xbf]
0x01,0x7e,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, exec_hi                ; encoding: [0x01,0x7f,0x07,0xbf]
0x01,0x7f,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, 0                      ; encoding: [0x01,0x80,0x07,0xbf]
0x01,0x80,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, -1                     ; encoding: [0x01,0xc1,0x07,0xbf]
0x01,0xc1,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, 0.5                    ; encoding: [0x01,0xf0,0x07,0xbf]
0x01,0xf0,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, -4.0                   ; encoding: [0x01,0xf7,0x07,0xbf]
0x01,0xf7,0x07,0xbf

# CHECK: s_cmp_lg_u32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x07,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x07,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lg_u32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x07,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x07,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_gt_u32 s1, s2                     ; encoding: [0x01,0x02,0x08,0xbf]
0x01,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 s101, s2                   ; encoding: [0x65,0x02,0x08,0xbf]
0x65,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x08,0xbf]
0x66,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x08,0xbf]
0x67,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x08,0xbf]
0x6a,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x08,0xbf]
0x6b,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 m0, s2                     ; encoding: [0x7c,0x02,0x08,0xbf]
0x7c,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 exec_lo, s2                ; encoding: [0x7e,0x02,0x08,0xbf]
0x7e,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 exec_hi, s2                ; encoding: [0x7f,0x02,0x08,0xbf]
0x7f,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 0, s2                      ; encoding: [0x80,0x02,0x08,0xbf]
0x80,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 -1, s2                     ; encoding: [0xc1,0x02,0x08,0xbf]
0xc1,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 0.5, s2                    ; encoding: [0xf0,0x02,0x08,0xbf]
0xf0,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 -4.0, s2                   ; encoding: [0xf7,0x02,0x08,0xbf]
0xf7,0x02,0x08,0xbf

# CHECK: s_cmp_gt_u32 0xaf123456, s2             ; encoding: [0xff,0x02,0x08,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x08,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_gt_u32 0x3f717273, s2             ; encoding: [0xff,0x02,0x08,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x08,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_gt_u32 s1, s101                   ; encoding: [0x01,0x65,0x08,0xbf]
0x01,0x65,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x08,0xbf]
0x01,0x66,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x08,0xbf]
0x01,0x67,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x08,0xbf]
0x01,0x6a,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x08,0xbf]
0x01,0x6b,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, m0                     ; encoding: [0x01,0x7c,0x08,0xbf]
0x01,0x7c,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, exec_lo                ; encoding: [0x01,0x7e,0x08,0xbf]
0x01,0x7e,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, exec_hi                ; encoding: [0x01,0x7f,0x08,0xbf]
0x01,0x7f,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, 0                      ; encoding: [0x01,0x80,0x08,0xbf]
0x01,0x80,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, -1                     ; encoding: [0x01,0xc1,0x08,0xbf]
0x01,0xc1,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, 0.5                    ; encoding: [0x01,0xf0,0x08,0xbf]
0x01,0xf0,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, -4.0                   ; encoding: [0x01,0xf7,0x08,0xbf]
0x01,0xf7,0x08,0xbf

# CHECK: s_cmp_gt_u32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x08,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x08,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_gt_u32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x08,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x08,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_ge_u32 s1, s2                     ; encoding: [0x01,0x02,0x09,0xbf]
0x01,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 s101, s2                   ; encoding: [0x65,0x02,0x09,0xbf]
0x65,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x09,0xbf]
0x66,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x09,0xbf]
0x67,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x09,0xbf]
0x6a,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x09,0xbf]
0x6b,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 m0, s2                     ; encoding: [0x7c,0x02,0x09,0xbf]
0x7c,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 exec_lo, s2                ; encoding: [0x7e,0x02,0x09,0xbf]
0x7e,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 exec_hi, s2                ; encoding: [0x7f,0x02,0x09,0xbf]
0x7f,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 0, s2                      ; encoding: [0x80,0x02,0x09,0xbf]
0x80,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 -1, s2                     ; encoding: [0xc1,0x02,0x09,0xbf]
0xc1,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 0.5, s2                    ; encoding: [0xf0,0x02,0x09,0xbf]
0xf0,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 -4.0, s2                   ; encoding: [0xf7,0x02,0x09,0xbf]
0xf7,0x02,0x09,0xbf

# CHECK: s_cmp_ge_u32 0xaf123456, s2             ; encoding: [0xff,0x02,0x09,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x09,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_ge_u32 0x3f717273, s2             ; encoding: [0xff,0x02,0x09,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x09,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_ge_u32 s1, s101                   ; encoding: [0x01,0x65,0x09,0xbf]
0x01,0x65,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x09,0xbf]
0x01,0x66,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x09,0xbf]
0x01,0x67,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x09,0xbf]
0x01,0x6a,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x09,0xbf]
0x01,0x6b,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, m0                     ; encoding: [0x01,0x7c,0x09,0xbf]
0x01,0x7c,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, exec_lo                ; encoding: [0x01,0x7e,0x09,0xbf]
0x01,0x7e,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, exec_hi                ; encoding: [0x01,0x7f,0x09,0xbf]
0x01,0x7f,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, 0                      ; encoding: [0x01,0x80,0x09,0xbf]
0x01,0x80,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, -1                     ; encoding: [0x01,0xc1,0x09,0xbf]
0x01,0xc1,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, 0.5                    ; encoding: [0x01,0xf0,0x09,0xbf]
0x01,0xf0,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, -4.0                   ; encoding: [0x01,0xf7,0x09,0xbf]
0x01,0xf7,0x09,0xbf

# CHECK: s_cmp_ge_u32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x09,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x09,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_ge_u32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x09,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x09,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lt_u32 s1, s2                     ; encoding: [0x01,0x02,0x0a,0xbf]
0x01,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s101, s2                   ; encoding: [0x65,0x02,0x0a,0xbf]
0x65,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x0a,0xbf]
0x66,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x0a,0xbf]
0x67,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x0a,0xbf]
0x6a,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x0a,0xbf]
0x6b,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 m0, s2                     ; encoding: [0x7c,0x02,0x0a,0xbf]
0x7c,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 exec_lo, s2                ; encoding: [0x7e,0x02,0x0a,0xbf]
0x7e,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 exec_hi, s2                ; encoding: [0x7f,0x02,0x0a,0xbf]
0x7f,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 0, s2                      ; encoding: [0x80,0x02,0x0a,0xbf]
0x80,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 -1, s2                     ; encoding: [0xc1,0x02,0x0a,0xbf]
0xc1,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 0.5, s2                    ; encoding: [0xf0,0x02,0x0a,0xbf]
0xf0,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 -4.0, s2                   ; encoding: [0xf7,0x02,0x0a,0xbf]
0xf7,0x02,0x0a,0xbf

# CHECK: s_cmp_lt_u32 0xaf123456, s2             ; encoding: [0xff,0x02,0x0a,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x0a,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lt_u32 0x3f717273, s2             ; encoding: [0xff,0x02,0x0a,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x0a,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lt_u32 s1, s101                   ; encoding: [0x01,0x65,0x0a,0xbf]
0x01,0x65,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x0a,0xbf]
0x01,0x66,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x0a,0xbf]
0x01,0x67,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x0a,0xbf]
0x01,0x6a,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x0a,0xbf]
0x01,0x6b,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, m0                     ; encoding: [0x01,0x7c,0x0a,0xbf]
0x01,0x7c,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, exec_lo                ; encoding: [0x01,0x7e,0x0a,0xbf]
0x01,0x7e,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, exec_hi                ; encoding: [0x01,0x7f,0x0a,0xbf]
0x01,0x7f,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, 0                      ; encoding: [0x01,0x80,0x0a,0xbf]
0x01,0x80,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, -1                     ; encoding: [0x01,0xc1,0x0a,0xbf]
0x01,0xc1,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, 0.5                    ; encoding: [0x01,0xf0,0x0a,0xbf]
0x01,0xf0,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, -4.0                   ; encoding: [0x01,0xf7,0x0a,0xbf]
0x01,0xf7,0x0a,0xbf

# CHECK: s_cmp_lt_u32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x0a,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x0a,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lt_u32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x0a,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x0a,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_le_u32 s1, s2                     ; encoding: [0x01,0x02,0x0b,0xbf]
0x01,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 s101, s2                   ; encoding: [0x65,0x02,0x0b,0xbf]
0x65,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 flat_scratch_lo, s2        ; encoding: [0x66,0x02,0x0b,0xbf]
0x66,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 flat_scratch_hi, s2        ; encoding: [0x67,0x02,0x0b,0xbf]
0x67,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 vcc_lo, s2                 ; encoding: [0x6a,0x02,0x0b,0xbf]
0x6a,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 vcc_hi, s2                 ; encoding: [0x6b,0x02,0x0b,0xbf]
0x6b,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 m0, s2                     ; encoding: [0x7c,0x02,0x0b,0xbf]
0x7c,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 exec_lo, s2                ; encoding: [0x7e,0x02,0x0b,0xbf]
0x7e,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 exec_hi, s2                ; encoding: [0x7f,0x02,0x0b,0xbf]
0x7f,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 0, s2                      ; encoding: [0x80,0x02,0x0b,0xbf]
0x80,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 -1, s2                     ; encoding: [0xc1,0x02,0x0b,0xbf]
0xc1,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 0.5, s2                    ; encoding: [0xf0,0x02,0x0b,0xbf]
0xf0,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 -4.0, s2                   ; encoding: [0xf7,0x02,0x0b,0xbf]
0xf7,0x02,0x0b,0xbf

# CHECK: s_cmp_le_u32 0xaf123456, s2             ; encoding: [0xff,0x02,0x0b,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x0b,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_le_u32 0x3f717273, s2             ; encoding: [0xff,0x02,0x0b,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x0b,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_le_u32 s1, s101                   ; encoding: [0x01,0x65,0x0b,0xbf]
0x01,0x65,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, flat_scratch_lo        ; encoding: [0x01,0x66,0x0b,0xbf]
0x01,0x66,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, flat_scratch_hi        ; encoding: [0x01,0x67,0x0b,0xbf]
0x01,0x67,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, vcc_lo                 ; encoding: [0x01,0x6a,0x0b,0xbf]
0x01,0x6a,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, vcc_hi                 ; encoding: [0x01,0x6b,0x0b,0xbf]
0x01,0x6b,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, m0                     ; encoding: [0x01,0x7c,0x0b,0xbf]
0x01,0x7c,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, exec_lo                ; encoding: [0x01,0x7e,0x0b,0xbf]
0x01,0x7e,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, exec_hi                ; encoding: [0x01,0x7f,0x0b,0xbf]
0x01,0x7f,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, 0                      ; encoding: [0x01,0x80,0x0b,0xbf]
0x01,0x80,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, -1                     ; encoding: [0x01,0xc1,0x0b,0xbf]
0x01,0xc1,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, 0.5                    ; encoding: [0x01,0xf0,0x0b,0xbf]
0x01,0xf0,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, -4.0                   ; encoding: [0x01,0xf7,0x0b,0xbf]
0x01,0xf7,0x0b,0xbf

# CHECK: s_cmp_le_u32 s1, 0xaf123456             ; encoding: [0x01,0xff,0x0b,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x0b,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_le_u32 s1, 0x3f717273             ; encoding: [0x01,0xff,0x0b,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x0b,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_bitcmp0_b32 s1, s2                    ; encoding: [0x01,0x02,0x0c,0xbf]
0x01,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s101, s2                  ; encoding: [0x65,0x02,0x0c,0xbf]
0x65,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 flat_scratch_lo, s2       ; encoding: [0x66,0x02,0x0c,0xbf]
0x66,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 flat_scratch_hi, s2       ; encoding: [0x67,0x02,0x0c,0xbf]
0x67,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 vcc_lo, s2                ; encoding: [0x6a,0x02,0x0c,0xbf]
0x6a,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 vcc_hi, s2                ; encoding: [0x6b,0x02,0x0c,0xbf]
0x6b,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 m0, s2                    ; encoding: [0x7c,0x02,0x0c,0xbf]
0x7c,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 exec_lo, s2               ; encoding: [0x7e,0x02,0x0c,0xbf]
0x7e,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 exec_hi, s2               ; encoding: [0x7f,0x02,0x0c,0xbf]
0x7f,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 0, s2                     ; encoding: [0x80,0x02,0x0c,0xbf]
0x80,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 -1, s2                    ; encoding: [0xc1,0x02,0x0c,0xbf]
0xc1,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 0.5, s2                   ; encoding: [0xf0,0x02,0x0c,0xbf]
0xf0,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 -4.0, s2                  ; encoding: [0xf7,0x02,0x0c,0xbf]
0xf7,0x02,0x0c,0xbf

# CHECK: s_bitcmp0_b32 0xaf123456, s2            ; encoding: [0xff,0x02,0x0c,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x0c,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_bitcmp0_b32 0x3f717273, s2            ; encoding: [0xff,0x02,0x0c,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x0c,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_bitcmp0_b32 s1, s101                  ; encoding: [0x01,0x65,0x0c,0xbf]
0x01,0x65,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, flat_scratch_lo       ; encoding: [0x01,0x66,0x0c,0xbf]
0x01,0x66,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, flat_scratch_hi       ; encoding: [0x01,0x67,0x0c,0xbf]
0x01,0x67,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, vcc_lo                ; encoding: [0x01,0x6a,0x0c,0xbf]
0x01,0x6a,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, vcc_hi                ; encoding: [0x01,0x6b,0x0c,0xbf]
0x01,0x6b,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, m0                    ; encoding: [0x01,0x7c,0x0c,0xbf]
0x01,0x7c,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, exec_lo               ; encoding: [0x01,0x7e,0x0c,0xbf]
0x01,0x7e,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, exec_hi               ; encoding: [0x01,0x7f,0x0c,0xbf]
0x01,0x7f,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, 0                     ; encoding: [0x01,0x80,0x0c,0xbf]
0x01,0x80,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, -1                    ; encoding: [0x01,0xc1,0x0c,0xbf]
0x01,0xc1,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, 0.5                   ; encoding: [0x01,0xf0,0x0c,0xbf]
0x01,0xf0,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, -4.0                  ; encoding: [0x01,0xf7,0x0c,0xbf]
0x01,0xf7,0x0c,0xbf

# CHECK: s_bitcmp0_b32 s1, 0xaf123456            ; encoding: [0x01,0xff,0x0c,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x0c,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_bitcmp0_b32 s1, 0x3f717273            ; encoding: [0x01,0xff,0x0c,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x0c,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_bitcmp1_b32 s1, s2                    ; encoding: [0x01,0x02,0x0d,0xbf]
0x01,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s101, s2                  ; encoding: [0x65,0x02,0x0d,0xbf]
0x65,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 flat_scratch_lo, s2       ; encoding: [0x66,0x02,0x0d,0xbf]
0x66,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 flat_scratch_hi, s2       ; encoding: [0x67,0x02,0x0d,0xbf]
0x67,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 vcc_lo, s2                ; encoding: [0x6a,0x02,0x0d,0xbf]
0x6a,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 vcc_hi, s2                ; encoding: [0x6b,0x02,0x0d,0xbf]
0x6b,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 m0, s2                    ; encoding: [0x7c,0x02,0x0d,0xbf]
0x7c,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 exec_lo, s2               ; encoding: [0x7e,0x02,0x0d,0xbf]
0x7e,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 exec_hi, s2               ; encoding: [0x7f,0x02,0x0d,0xbf]
0x7f,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 0, s2                     ; encoding: [0x80,0x02,0x0d,0xbf]
0x80,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 -1, s2                    ; encoding: [0xc1,0x02,0x0d,0xbf]
0xc1,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 0.5, s2                   ; encoding: [0xf0,0x02,0x0d,0xbf]
0xf0,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 -4.0, s2                  ; encoding: [0xf7,0x02,0x0d,0xbf]
0xf7,0x02,0x0d,0xbf

# CHECK: s_bitcmp1_b32 0xaf123456, s2            ; encoding: [0xff,0x02,0x0d,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x0d,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_bitcmp1_b32 0x3f717273, s2            ; encoding: [0xff,0x02,0x0d,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x0d,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_bitcmp1_b32 s1, s101                  ; encoding: [0x01,0x65,0x0d,0xbf]
0x01,0x65,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, flat_scratch_lo       ; encoding: [0x01,0x66,0x0d,0xbf]
0x01,0x66,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, flat_scratch_hi       ; encoding: [0x01,0x67,0x0d,0xbf]
0x01,0x67,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, vcc_lo                ; encoding: [0x01,0x6a,0x0d,0xbf]
0x01,0x6a,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, vcc_hi                ; encoding: [0x01,0x6b,0x0d,0xbf]
0x01,0x6b,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, m0                    ; encoding: [0x01,0x7c,0x0d,0xbf]
0x01,0x7c,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, exec_lo               ; encoding: [0x01,0x7e,0x0d,0xbf]
0x01,0x7e,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, exec_hi               ; encoding: [0x01,0x7f,0x0d,0xbf]
0x01,0x7f,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, 0                     ; encoding: [0x01,0x80,0x0d,0xbf]
0x01,0x80,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, -1                    ; encoding: [0x01,0xc1,0x0d,0xbf]
0x01,0xc1,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, 0.5                   ; encoding: [0x01,0xf0,0x0d,0xbf]
0x01,0xf0,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, -4.0                  ; encoding: [0x01,0xf7,0x0d,0xbf]
0x01,0xf7,0x0d,0xbf

# CHECK: s_bitcmp1_b32 s1, 0xaf123456            ; encoding: [0x01,0xff,0x0d,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x0d,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_bitcmp1_b32 s1, 0x3f717273            ; encoding: [0x01,0xff,0x0d,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x0d,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_bitcmp0_b64 s[2:3], s2                ; encoding: [0x02,0x02,0x0e,0xbf]
0x02,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[4:5], s2                ; encoding: [0x04,0x02,0x0e,0xbf]
0x04,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[100:101], s2            ; encoding: [0x64,0x02,0x0e,0xbf]
0x64,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 flat_scratch, s2          ; encoding: [0x66,0x02,0x0e,0xbf]
0x66,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 vcc, s2                   ; encoding: [0x6a,0x02,0x0e,0xbf]
0x6a,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 exec, s2                  ; encoding: [0x7e,0x02,0x0e,0xbf]
0x7e,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 0, s2                     ; encoding: [0x80,0x02,0x0e,0xbf]
0x80,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 -1, s2                    ; encoding: [0xc1,0x02,0x0e,0xbf]
0xc1,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 0.5, s2                   ; encoding: [0xf0,0x02,0x0e,0xbf]
0xf0,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 -4.0, s2                  ; encoding: [0xf7,0x02,0x0e,0xbf]
0xf7,0x02,0x0e,0xbf

# CHECK: s_bitcmp0_b64 0xaf123456, s2            ; encoding: [0xff,0x02,0x0e,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x0e,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_bitcmp0_b64 0x3f717273, s2            ; encoding: [0xff,0x02,0x0e,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x0e,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_bitcmp0_b64 s[2:3], s101              ; encoding: [0x02,0x65,0x0e,0xbf]
0x02,0x65,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], flat_scratch_lo   ; encoding: [0x02,0x66,0x0e,0xbf]
0x02,0x66,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], flat_scratch_hi   ; encoding: [0x02,0x67,0x0e,0xbf]
0x02,0x67,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], vcc_lo            ; encoding: [0x02,0x6a,0x0e,0xbf]
0x02,0x6a,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], vcc_hi            ; encoding: [0x02,0x6b,0x0e,0xbf]
0x02,0x6b,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], m0                ; encoding: [0x02,0x7c,0x0e,0xbf]
0x02,0x7c,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], exec_lo           ; encoding: [0x02,0x7e,0x0e,0xbf]
0x02,0x7e,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], exec_hi           ; encoding: [0x02,0x7f,0x0e,0xbf]
0x02,0x7f,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], 0                 ; encoding: [0x02,0x80,0x0e,0xbf]
0x02,0x80,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], -1                ; encoding: [0x02,0xc1,0x0e,0xbf]
0x02,0xc1,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], 0.5               ; encoding: [0x02,0xf0,0x0e,0xbf]
0x02,0xf0,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], -4.0              ; encoding: [0x02,0xf7,0x0e,0xbf]
0x02,0xf7,0x0e,0xbf

# CHECK: s_bitcmp0_b64 s[2:3], 0xaf123456        ; encoding: [0x02,0xff,0x0e,0xbf,0x56,0x34,0x12,0xaf]
0x02,0xff,0x0e,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_bitcmp0_b64 s[2:3], 0x3f717273        ; encoding: [0x02,0xff,0x0e,0xbf,0x73,0x72,0x71,0x3f]
0x02,0xff,0x0e,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_bitcmp1_b64 s[2:3], s2                ; encoding: [0x02,0x02,0x0f,0xbf]
0x02,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[4:5], s2                ; encoding: [0x04,0x02,0x0f,0xbf]
0x04,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[100:101], s2            ; encoding: [0x64,0x02,0x0f,0xbf]
0x64,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 flat_scratch, s2          ; encoding: [0x66,0x02,0x0f,0xbf]
0x66,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 vcc, s2                   ; encoding: [0x6a,0x02,0x0f,0xbf]
0x6a,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 exec, s2                  ; encoding: [0x7e,0x02,0x0f,0xbf]
0x7e,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 0, s2                     ; encoding: [0x80,0x02,0x0f,0xbf]
0x80,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 -1, s2                    ; encoding: [0xc1,0x02,0x0f,0xbf]
0xc1,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 0.5, s2                   ; encoding: [0xf0,0x02,0x0f,0xbf]
0xf0,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 -4.0, s2                  ; encoding: [0xf7,0x02,0x0f,0xbf]
0xf7,0x02,0x0f,0xbf

# CHECK: s_bitcmp1_b64 0xaf123456, s2            ; encoding: [0xff,0x02,0x0f,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x0f,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_bitcmp1_b64 0x3f717273, s2            ; encoding: [0xff,0x02,0x0f,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x0f,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_bitcmp1_b64 s[2:3], s101              ; encoding: [0x02,0x65,0x0f,0xbf]
0x02,0x65,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], flat_scratch_lo   ; encoding: [0x02,0x66,0x0f,0xbf]
0x02,0x66,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], flat_scratch_hi   ; encoding: [0x02,0x67,0x0f,0xbf]
0x02,0x67,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], vcc_lo            ; encoding: [0x02,0x6a,0x0f,0xbf]
0x02,0x6a,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], vcc_hi            ; encoding: [0x02,0x6b,0x0f,0xbf]
0x02,0x6b,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], m0                ; encoding: [0x02,0x7c,0x0f,0xbf]
0x02,0x7c,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], exec_lo           ; encoding: [0x02,0x7e,0x0f,0xbf]
0x02,0x7e,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], exec_hi           ; encoding: [0x02,0x7f,0x0f,0xbf]
0x02,0x7f,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], 0                 ; encoding: [0x02,0x80,0x0f,0xbf]
0x02,0x80,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], -1                ; encoding: [0x02,0xc1,0x0f,0xbf]
0x02,0xc1,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], 0.5               ; encoding: [0x02,0xf0,0x0f,0xbf]
0x02,0xf0,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], -4.0              ; encoding: [0x02,0xf7,0x0f,0xbf]
0x02,0xf7,0x0f,0xbf

# CHECK: s_bitcmp1_b64 s[2:3], 0xaf123456        ; encoding: [0x02,0xff,0x0f,0xbf,0x56,0x34,0x12,0xaf]
0x02,0xff,0x0f,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_bitcmp1_b64 s[2:3], 0x3f717273        ; encoding: [0x02,0xff,0x0f,0xbf,0x73,0x72,0x71,0x3f]
0x02,0xff,0x0f,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_setvskip s1, s2                       ; encoding: [0x01,0x02,0x10,0xbf]
0x01,0x02,0x10,0xbf

# CHECK: s_setvskip s101, s2                     ; encoding: [0x65,0x02,0x10,0xbf]
0x65,0x02,0x10,0xbf

# CHECK: s_setvskip flat_scratch_lo, s2          ; encoding: [0x66,0x02,0x10,0xbf]
0x66,0x02,0x10,0xbf

# CHECK: s_setvskip flat_scratch_hi, s2          ; encoding: [0x67,0x02,0x10,0xbf]
0x67,0x02,0x10,0xbf

# CHECK: s_setvskip vcc_lo, s2                   ; encoding: [0x6a,0x02,0x10,0xbf]
0x6a,0x02,0x10,0xbf

# CHECK: s_setvskip vcc_hi, s2                   ; encoding: [0x6b,0x02,0x10,0xbf]
0x6b,0x02,0x10,0xbf

# CHECK: s_setvskip m0, s2                       ; encoding: [0x7c,0x02,0x10,0xbf]
0x7c,0x02,0x10,0xbf

# CHECK: s_setvskip exec_lo, s2                  ; encoding: [0x7e,0x02,0x10,0xbf]
0x7e,0x02,0x10,0xbf

# CHECK: s_setvskip exec_hi, s2                  ; encoding: [0x7f,0x02,0x10,0xbf]
0x7f,0x02,0x10,0xbf

# CHECK: s_setvskip 0, s2                        ; encoding: [0x80,0x02,0x10,0xbf]
0x80,0x02,0x10,0xbf

# CHECK: s_setvskip -1, s2                       ; encoding: [0xc1,0x02,0x10,0xbf]
0xc1,0x02,0x10,0xbf

# CHECK: s_setvskip 0.5, s2                      ; encoding: [0xf0,0x02,0x10,0xbf]
0xf0,0x02,0x10,0xbf

# CHECK: s_setvskip -4.0, s2                     ; encoding: [0xf7,0x02,0x10,0xbf]
0xf7,0x02,0x10,0xbf

# CHECK: s_setvskip 0xaf123456, s2               ; encoding: [0xff,0x02,0x10,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x02,0x10,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_setvskip 0x3f717273, s2               ; encoding: [0xff,0x02,0x10,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x02,0x10,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_setvskip s1, s101                     ; encoding: [0x01,0x65,0x10,0xbf]
0x01,0x65,0x10,0xbf

# CHECK: s_setvskip s1, flat_scratch_lo          ; encoding: [0x01,0x66,0x10,0xbf]
0x01,0x66,0x10,0xbf

# CHECK: s_setvskip s1, flat_scratch_hi          ; encoding: [0x01,0x67,0x10,0xbf]
0x01,0x67,0x10,0xbf

# CHECK: s_setvskip s1, vcc_lo                   ; encoding: [0x01,0x6a,0x10,0xbf]
0x01,0x6a,0x10,0xbf

# CHECK: s_setvskip s1, vcc_hi                   ; encoding: [0x01,0x6b,0x10,0xbf]
0x01,0x6b,0x10,0xbf

# CHECK: s_setvskip s1, m0                       ; encoding: [0x01,0x7c,0x10,0xbf]
0x01,0x7c,0x10,0xbf

# CHECK: s_setvskip s1, exec_lo                  ; encoding: [0x01,0x7e,0x10,0xbf]
0x01,0x7e,0x10,0xbf

# CHECK: s_setvskip s1, exec_hi                  ; encoding: [0x01,0x7f,0x10,0xbf]
0x01,0x7f,0x10,0xbf

# CHECK: s_setvskip s1, 0                        ; encoding: [0x01,0x80,0x10,0xbf]
0x01,0x80,0x10,0xbf

# CHECK: s_setvskip s1, -1                       ; encoding: [0x01,0xc1,0x10,0xbf]
0x01,0xc1,0x10,0xbf

# CHECK: s_setvskip s1, 0.5                      ; encoding: [0x01,0xf0,0x10,0xbf]
0x01,0xf0,0x10,0xbf

# CHECK: s_setvskip s1, -4.0                     ; encoding: [0x01,0xf7,0x10,0xbf]
0x01,0xf7,0x10,0xbf

# CHECK: s_setvskip s1, 0xaf123456               ; encoding: [0x01,0xff,0x10,0xbf,0x56,0x34,0x12,0xaf]
0x01,0xff,0x10,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_setvskip s1, 0x3f717273               ; encoding: [0x01,0xff,0x10,0xbf,0x73,0x72,0x71,0x3f]
0x01,0xff,0x10,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_set_gpr_idx_on s1, gpr_idx()          ; encoding: [0x01,0x00,0x11,0xbf]
0x01,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on s101, gpr_idx()        ; encoding: [0x65,0x00,0x11,0xbf]
0x65,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on flat_scratch_lo, gpr_idx() ; encoding: [0x66,0x00,0x11,0xbf]
0x66,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on flat_scratch_hi, gpr_idx() ; encoding: [0x67,0x00,0x11,0xbf]
0x67,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on vcc_lo, gpr_idx()      ; encoding: [0x6a,0x00,0x11,0xbf]
0x6a,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on vcc_hi, gpr_idx()      ; encoding: [0x6b,0x00,0x11,0xbf]
0x6b,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on m0, gpr_idx()          ; encoding: [0x7c,0x00,0x11,0xbf]
0x7c,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on 0, gpr_idx()           ; encoding: [0x80,0x00,0x11,0xbf]
0x80,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on -1, gpr_idx()          ; encoding: [0xc1,0x00,0x11,0xbf]
0xc1,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on 0.5, gpr_idx()         ; encoding: [0xf0,0x00,0x11,0xbf]
0xf0,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on -4.0, gpr_idx()        ; encoding: [0xf7,0x00,0x11,0xbf]
0xf7,0x00,0x11,0xbf

# CHECK: s_set_gpr_idx_on 0xaf123456, gpr_idx()  ; encoding: [0xff,0x00,0x11,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x00,0x11,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_set_gpr_idx_on 0x3f717273, gpr_idx()  ; encoding: [0xff,0x00,0x11,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x00,0x11,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_set_gpr_idx_on s1, gpr_idx(SRC0)      ; encoding: [0x01,0x01,0x11,0xbf]
0x01,0x01,0x11,0xbf

# CHECK: s_set_gpr_idx_on s1, gpr_idx(SRC0,SRC1,SRC2,DST) ; encoding: [0x01,0x0f,0x11,0xbf]
0x01,0x0f,0x11,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], s[4:5]             ; encoding: [0x02,0x04,0x12,0xbf]
0x02,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[4:5], s[4:5]             ; encoding: [0x04,0x04,0x12,0xbf]
0x04,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[100:101], s[4:5]         ; encoding: [0x64,0x04,0x12,0xbf]
0x64,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 flat_scratch, s[4:5]       ; encoding: [0x66,0x04,0x12,0xbf]
0x66,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 vcc, s[4:5]                ; encoding: [0x6a,0x04,0x12,0xbf]
0x6a,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 exec, s[4:5]               ; encoding: [0x7e,0x04,0x12,0xbf]
0x7e,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 0, s[4:5]                  ; encoding: [0x80,0x04,0x12,0xbf]
0x80,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 -1, s[4:5]                 ; encoding: [0xc1,0x04,0x12,0xbf]
0xc1,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 0.5, s[4:5]                ; encoding: [0xf0,0x04,0x12,0xbf]
0xf0,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 -4.0, s[4:5]               ; encoding: [0xf7,0x04,0x12,0xbf]
0xf7,0x04,0x12,0xbf

# CHECK: s_cmp_eq_u64 0xaf123456, s[4:5]         ; encoding: [0xff,0x04,0x12,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x04,0x12,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_eq_u64 0x3f717273, s[4:5]         ; encoding: [0xff,0x04,0x12,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x04,0x12,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_eq_u64 s[2:3], s[6:7]             ; encoding: [0x02,0x06,0x12,0xbf]
0x02,0x06,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], s[100:101]         ; encoding: [0x02,0x64,0x12,0xbf]
0x02,0x64,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], flat_scratch       ; encoding: [0x02,0x66,0x12,0xbf]
0x02,0x66,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], vcc                ; encoding: [0x02,0x6a,0x12,0xbf]
0x02,0x6a,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], exec               ; encoding: [0x02,0x7e,0x12,0xbf]
0x02,0x7e,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], 0                  ; encoding: [0x02,0x80,0x12,0xbf]
0x02,0x80,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], -1                 ; encoding: [0x02,0xc1,0x12,0xbf]
0x02,0xc1,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], 0.5                ; encoding: [0x02,0xf0,0x12,0xbf]
0x02,0xf0,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], -4.0               ; encoding: [0x02,0xf7,0x12,0xbf]
0x02,0xf7,0x12,0xbf

# CHECK: s_cmp_eq_u64 s[2:3], 0xaf123456         ; encoding: [0x02,0xff,0x12,0xbf,0x56,0x34,0x12,0xaf]
0x02,0xff,0x12,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_eq_u64 s[2:3], 0x3f717273         ; encoding: [0x02,0xff,0x12,0xbf,0x73,0x72,0x71,0x3f]
0x02,0xff,0x12,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lg_u64 s[2:3], s[4:5]             ; encoding: [0x02,0x04,0x13,0xbf]
0x02,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[4:5], s[4:5]             ; encoding: [0x04,0x04,0x13,0xbf]
0x04,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[100:101], s[4:5]         ; encoding: [0x64,0x04,0x13,0xbf]
0x64,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 flat_scratch, s[4:5]       ; encoding: [0x66,0x04,0x13,0xbf]
0x66,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 vcc, s[4:5]                ; encoding: [0x6a,0x04,0x13,0xbf]
0x6a,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 exec, s[4:5]               ; encoding: [0x7e,0x04,0x13,0xbf]
0x7e,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 0, s[4:5]                  ; encoding: [0x80,0x04,0x13,0xbf]
0x80,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 -1, s[4:5]                 ; encoding: [0xc1,0x04,0x13,0xbf]
0xc1,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 0.5, s[4:5]                ; encoding: [0xf0,0x04,0x13,0xbf]
0xf0,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 -4.0, s[4:5]               ; encoding: [0xf7,0x04,0x13,0xbf]
0xf7,0x04,0x13,0xbf

# CHECK: s_cmp_lg_u64 0xaf123456, s[4:5]         ; encoding: [0xff,0x04,0x13,0xbf,0x56,0x34,0x12,0xaf]
0xff,0x04,0x13,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lg_u64 0x3f717273, s[4:5]         ; encoding: [0xff,0x04,0x13,0xbf,0x73,0x72,0x71,0x3f]
0xff,0x04,0x13,0xbf,0x73,0x72,0x71,0x3f

# CHECK: s_cmp_lg_u64 s[2:3], s[6:7]             ; encoding: [0x02,0x06,0x13,0xbf]
0x02,0x06,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], s[100:101]         ; encoding: [0x02,0x64,0x13,0xbf]
0x02,0x64,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], flat_scratch       ; encoding: [0x02,0x66,0x13,0xbf]
0x02,0x66,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], vcc                ; encoding: [0x02,0x6a,0x13,0xbf]
0x02,0x6a,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], exec               ; encoding: [0x02,0x7e,0x13,0xbf]
0x02,0x7e,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], 0                  ; encoding: [0x02,0x80,0x13,0xbf]
0x02,0x80,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], -1                 ; encoding: [0x02,0xc1,0x13,0xbf]
0x02,0xc1,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], 0.5                ; encoding: [0x02,0xf0,0x13,0xbf]
0x02,0xf0,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], -4.0               ; encoding: [0x02,0xf7,0x13,0xbf]
0x02,0xf7,0x13,0xbf

# CHECK: s_cmp_lg_u64 s[2:3], 0xaf123456         ; encoding: [0x02,0xff,0x13,0xbf,0x56,0x34,0x12,0xaf]
0x02,0xff,0x13,0xbf,0x56,0x34,0x12,0xaf

# CHECK: s_cmp_lg_u64 s[2:3], 0x3f717273         ; encoding: [0x02,0xff,0x13,0xbf,0x73,0x72,0x71,0x3f]
0x02,0xff,0x13,0xbf,0x73,0x72,0x71,0x3f
