# RUN: llvm-mc -triple=amdgcn -mcpu=tonga -disassemble -show-encoding < %s | FileCheck -strict-whitespace %s

# CHECK: v_cmpx_class_f32_e32 vcc, v1, v2        ; encoding: [0x01,0x05,0x22,0x7c]
0x01,0x05,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, v255, v2      ; encoding: [0xff,0x05,0x22,0x7c]
0xff,0x05,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, s1, v2        ; encoding: [0x01,0x04,0x22,0x7c]
0x01,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, s101, v2      ; encoding: [0x65,0x04,0x22,0x7c]
0x65,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x22,0x7c]
0x66,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x22,0x7c]
0x67,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, vcc_lo, v2    ; encoding: [0x6a,0x04,0x22,0x7c]
0x6a,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, vcc_hi, v2    ; encoding: [0x6b,0x04,0x22,0x7c]
0x6b,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, tba_lo, v2    ; encoding: [0x6c,0x04,0x22,0x7c]
0x6c,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, tba_hi, v2    ; encoding: [0x6d,0x04,0x22,0x7c]
0x6d,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, tma_lo, v2    ; encoding: [0x6e,0x04,0x22,0x7c]
0x6e,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, tma_hi, v2    ; encoding: [0x6f,0x04,0x22,0x7c]
0x6f,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, ttmp11, v2    ; encoding: [0x7b,0x04,0x22,0x7c]
0x7b,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, m0, v2        ; encoding: [0x7c,0x04,0x22,0x7c]
0x7c,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, exec_lo, v2   ; encoding: [0x7e,0x04,0x22,0x7c]
0x7e,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, exec_hi, v2   ; encoding: [0x7f,0x04,0x22,0x7c]
0x7f,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, 0, v2         ; encoding: [0x80,0x04,0x22,0x7c]
0x80,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, -1, v2        ; encoding: [0xc1,0x04,0x22,0x7c]
0xc1,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, 0.5, v2       ; encoding: [0xf0,0x04,0x22,0x7c]
0xf0,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, -4.0, v2      ; encoding: [0xf7,0x04,0x22,0x7c]
0xf7,0x04,0x22,0x7c

# CHECK: v_cmpx_class_f32_e32 vcc, 0xaf123456, v2 ; encoding: [0xff,0x04,0x22,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x22,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_class_f32_e32 vcc, 0x3f717273, v2 ; encoding: [0xff,0x04,0x22,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x22,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_class_f32_e32 vcc, v1, v255      ; encoding: [0x01,0xff,0x23,0x7c]
0x01,0xff,0x23,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, v[1:2], v2    ; encoding: [0x01,0x05,0x26,0x7c]
0x01,0x05,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, v[254:255], v2 ; encoding: [0xfe,0x05,0x26,0x7c]
0xfe,0x05,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, s[2:3], v2    ; encoding: [0x02,0x04,0x26,0x7c]
0x02,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, s[4:5], v2    ; encoding: [0x04,0x04,0x26,0x7c]
0x04,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, s[100:101], v2 ; encoding: [0x64,0x04,0x26,0x7c]
0x64,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, flat_scratch, v2 ; encoding: [0x66,0x04,0x26,0x7c]
0x66,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, vcc, v2       ; encoding: [0x6a,0x04,0x26,0x7c]
0x6a,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, tba, v2       ; encoding: [0x6c,0x04,0x26,0x7c]
0x6c,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, tma, v2       ; encoding: [0x6e,0x04,0x26,0x7c]
0x6e,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, ttmp[10:11], v2 ; encoding: [0x7a,0x04,0x26,0x7c]
0x7a,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, exec, v2      ; encoding: [0x7e,0x04,0x26,0x7c]
0x7e,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, 0, v2         ; encoding: [0x80,0x04,0x26,0x7c]
0x80,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, -1, v2        ; encoding: [0xc1,0x04,0x26,0x7c]
0xc1,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, 0.5, v2       ; encoding: [0xf0,0x04,0x26,0x7c]
0xf0,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, -4.0, v2      ; encoding: [0xf7,0x04,0x26,0x7c]
0xf7,0x04,0x26,0x7c

# CHECK: v_cmpx_class_f64_e32 vcc, 0xaf123456, v2 ; encoding: [0xff,0x04,0x26,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0x26,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_class_f64_e32 vcc, 0x3f717273, v2 ; encoding: [0xff,0x04,0x26,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0x26,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_class_f64_e32 vcc, v[1:2], v255  ; encoding: [0x01,0xff,0x27,0x7c]
0x01,0xff,0x27,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, v1, v2        ; encoding: [0x01,0x05,0x2a,0x7c]
0x01,0x05,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, v255, v2      ; encoding: [0xff,0x05,0x2a,0x7c]
0xff,0x05,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, s1, v2        ; encoding: [0x01,0x04,0x2a,0x7c]
0x01,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, s101, v2      ; encoding: [0x65,0x04,0x2a,0x7c]
0x65,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x2a,0x7c]
0x66,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x2a,0x7c]
0x67,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, vcc_lo, v2    ; encoding: [0x6a,0x04,0x2a,0x7c]
0x6a,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, vcc_hi, v2    ; encoding: [0x6b,0x04,0x2a,0x7c]
0x6b,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, tba_lo, v2    ; encoding: [0x6c,0x04,0x2a,0x7c]
0x6c,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, tba_hi, v2    ; encoding: [0x6d,0x04,0x2a,0x7c]
0x6d,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, tma_lo, v2    ; encoding: [0x6e,0x04,0x2a,0x7c]
0x6e,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, tma_hi, v2    ; encoding: [0x6f,0x04,0x2a,0x7c]
0x6f,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, ttmp11, v2    ; encoding: [0x7b,0x04,0x2a,0x7c]
0x7b,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, m0, v2        ; encoding: [0x7c,0x04,0x2a,0x7c]
0x7c,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, exec_lo, v2   ; encoding: [0x7e,0x04,0x2a,0x7c]
0x7e,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, exec_hi, v2   ; encoding: [0x7f,0x04,0x2a,0x7c]
0x7f,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, 0, v2         ; encoding: [0x80,0x04,0x2a,0x7c]
0x80,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, -1, v2        ; encoding: [0xc1,0x04,0x2a,0x7c]
0xc1,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, 0.5, v2       ; encoding: [0xf0,0x04,0x2a,0x7c]
0xf0,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, -4.0, v2      ; encoding: [0xf7,0x04,0x2a,0x7c]
0xf7,0x04,0x2a,0x7c

# CHECK: v_cmpx_class_f16_e32 vcc, 0xfe0b, v2    ; encoding: [0xff,0x04,0x2a,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x2a,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_class_f16_e32 vcc, 0x3456, v2    ; encoding: [0xff,0x04,0x2a,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x2a,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_class_f16_e32 vcc, v1, v255      ; encoding: [0x01,0xff,0x2b,0x7c]
0x01,0xff,0x2b,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x60,0x7c]
0x01,0x05,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x60,0x7c]
0xff,0x05,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x60,0x7c]
0x01,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x60,0x7c]
0x65,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x60,0x7c]
0x66,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x60,0x7c]
0x67,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x60,0x7c]
0x6a,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x60,0x7c]
0x6b,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x60,0x7c]
0x6c,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x60,0x7c]
0x6d,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x60,0x7c]
0x6e,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x60,0x7c]
0x6f,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x60,0x7c]
0x7b,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x60,0x7c]
0x7c,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x60,0x7c]
0x7e,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x60,0x7c]
0x7f,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x60,0x7c]
0x80,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x60,0x7c]
0xc1,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x60,0x7c]
0xf0,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x60,0x7c]
0xf7,0x04,0x60,0x7c

# CHECK: v_cmpx_f_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x60,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x60,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_f_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x60,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x60,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_f_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x61,0x7c]
0x01,0xff,0x61,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x62,0x7c]
0x01,0x05,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x62,0x7c]
0xff,0x05,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x62,0x7c]
0x01,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x62,0x7c]
0x65,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x62,0x7c]
0x66,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x62,0x7c]
0x67,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x62,0x7c]
0x6a,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x62,0x7c]
0x6b,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x62,0x7c]
0x6c,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x62,0x7c]
0x6d,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x62,0x7c]
0x6e,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x62,0x7c]
0x6f,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x62,0x7c]
0x7b,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x62,0x7c]
0x7c,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x62,0x7c]
0x7e,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x62,0x7c]
0x7f,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x62,0x7c]
0x80,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x62,0x7c]
0xc1,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x62,0x7c]
0xf0,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x62,0x7c]
0xf7,0x04,0x62,0x7c

# CHECK: v_cmpx_lt_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x62,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x62,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_lt_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x62,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x62,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_lt_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x63,0x7c]
0x01,0xff,0x63,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x64,0x7c]
0x01,0x05,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x64,0x7c]
0xff,0x05,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x64,0x7c]
0x01,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x64,0x7c]
0x65,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x64,0x7c]
0x66,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x64,0x7c]
0x67,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x64,0x7c]
0x6a,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x64,0x7c]
0x6b,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x64,0x7c]
0x6c,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x64,0x7c]
0x6d,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x64,0x7c]
0x6e,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x64,0x7c]
0x6f,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x64,0x7c]
0x7b,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x64,0x7c]
0x7c,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x64,0x7c]
0x7e,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x64,0x7c]
0x7f,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x64,0x7c]
0x80,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x64,0x7c]
0xc1,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x64,0x7c]
0xf0,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x64,0x7c]
0xf7,0x04,0x64,0x7c

# CHECK: v_cmpx_eq_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x64,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x64,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_eq_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x64,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x64,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_eq_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x65,0x7c]
0x01,0xff,0x65,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x66,0x7c]
0x01,0x05,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x66,0x7c]
0xff,0x05,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x66,0x7c]
0x01,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x66,0x7c]
0x65,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x66,0x7c]
0x66,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x66,0x7c]
0x67,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x66,0x7c]
0x6a,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x66,0x7c]
0x6b,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x66,0x7c]
0x6c,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x66,0x7c]
0x6d,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x66,0x7c]
0x6e,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x66,0x7c]
0x6f,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x66,0x7c]
0x7b,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x66,0x7c]
0x7c,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x66,0x7c]
0x7e,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x66,0x7c]
0x7f,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x66,0x7c]
0x80,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x66,0x7c]
0xc1,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x66,0x7c]
0xf0,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x66,0x7c]
0xf7,0x04,0x66,0x7c

# CHECK: v_cmpx_le_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x66,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x66,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_le_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x66,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x66,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_le_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x67,0x7c]
0x01,0xff,0x67,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x68,0x7c]
0x01,0x05,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x68,0x7c]
0xff,0x05,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x68,0x7c]
0x01,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x68,0x7c]
0x65,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x68,0x7c]
0x66,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x68,0x7c]
0x67,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x68,0x7c]
0x6a,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x68,0x7c]
0x6b,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x68,0x7c]
0x6c,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x68,0x7c]
0x6d,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x68,0x7c]
0x6e,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x68,0x7c]
0x6f,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x68,0x7c]
0x7b,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x68,0x7c]
0x7c,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x68,0x7c]
0x7e,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x68,0x7c]
0x7f,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x68,0x7c]
0x80,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x68,0x7c]
0xc1,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x68,0x7c]
0xf0,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x68,0x7c]
0xf7,0x04,0x68,0x7c

# CHECK: v_cmpx_gt_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x68,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x68,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_gt_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x68,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x68,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_gt_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x69,0x7c]
0x01,0xff,0x69,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x6a,0x7c]
0x01,0x05,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x6a,0x7c]
0xff,0x05,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x6a,0x7c]
0x01,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x6a,0x7c]
0x65,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x6a,0x7c]
0x66,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x6a,0x7c]
0x67,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x6a,0x7c]
0x6a,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x6a,0x7c]
0x6b,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x6a,0x7c]
0x6c,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x6a,0x7c]
0x6d,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x6a,0x7c]
0x6e,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x6a,0x7c]
0x6f,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x6a,0x7c]
0x7b,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x6a,0x7c]
0x7c,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x6a,0x7c]
0x7e,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x6a,0x7c]
0x7f,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x6a,0x7c]
0x80,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x6a,0x7c]
0xc1,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x6a,0x7c]
0xf0,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x6a,0x7c]
0xf7,0x04,0x6a,0x7c

# CHECK: v_cmpx_lg_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x6a,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x6a,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_lg_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x6a,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x6a,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_lg_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x6b,0x7c]
0x01,0xff,0x6b,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x6c,0x7c]
0x01,0x05,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x6c,0x7c]
0xff,0x05,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x6c,0x7c]
0x01,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x6c,0x7c]
0x65,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x6c,0x7c]
0x66,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x6c,0x7c]
0x67,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x6c,0x7c]
0x6a,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x6c,0x7c]
0x6b,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x6c,0x7c]
0x6c,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x6c,0x7c]
0x6d,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x6c,0x7c]
0x6e,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x6c,0x7c]
0x6f,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x6c,0x7c]
0x7b,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x6c,0x7c]
0x7c,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x6c,0x7c]
0x7e,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x6c,0x7c]
0x7f,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x6c,0x7c]
0x80,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x6c,0x7c]
0xc1,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0x6c,0x7c]
0xf0,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0x6c,0x7c]
0xf7,0x04,0x6c,0x7c

# CHECK: v_cmpx_ge_f16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x6c,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x6c,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_ge_f16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x6c,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x6c,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_ge_f16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x6d,0x7c]
0x01,0xff,0x6d,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x6e,0x7c]
0x01,0x05,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x6e,0x7c]
0xff,0x05,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x6e,0x7c]
0x01,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x6e,0x7c]
0x65,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x6e,0x7c]
0x66,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x6e,0x7c]
0x67,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x6e,0x7c]
0x6a,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x6e,0x7c]
0x6b,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x6e,0x7c]
0x6c,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x6e,0x7c]
0x6d,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x6e,0x7c]
0x6e,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x6e,0x7c]
0x6f,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x6e,0x7c]
0x7b,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x6e,0x7c]
0x7c,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x6e,0x7c]
0x7e,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x6e,0x7c]
0x7f,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x6e,0x7c]
0x80,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x6e,0x7c]
0xc1,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x6e,0x7c]
0xf0,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x6e,0x7c]
0xf7,0x04,0x6e,0x7c

# CHECK: v_cmpx_o_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x6e,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x6e,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_o_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x6e,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x6e,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_o_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x6f,0x7c]
0x01,0xff,0x6f,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x70,0x7c]
0x01,0x05,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x70,0x7c]
0xff,0x05,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x70,0x7c]
0x01,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x70,0x7c]
0x65,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x70,0x7c]
0x66,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x70,0x7c]
0x67,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x70,0x7c]
0x6a,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x70,0x7c]
0x6b,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x70,0x7c]
0x6c,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x70,0x7c]
0x6d,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x70,0x7c]
0x6e,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x70,0x7c]
0x6f,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x70,0x7c]
0x7b,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x70,0x7c]
0x7c,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x70,0x7c]
0x7e,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x70,0x7c]
0x7f,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x70,0x7c]
0x80,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x70,0x7c]
0xc1,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0x70,0x7c]
0xf0,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0x70,0x7c]
0xf7,0x04,0x70,0x7c

# CHECK: v_cmpx_u_f16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x70,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x70,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_u_f16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x70,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x70,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_u_f16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x71,0x7c]
0x01,0xff,0x71,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0x72,0x7c]
0x01,0x05,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0x72,0x7c]
0xff,0x05,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0x72,0x7c]
0x01,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0x72,0x7c]
0x65,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x72,0x7c]
0x66,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x72,0x7c]
0x67,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0x72,0x7c]
0x6a,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0x72,0x7c]
0x6b,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0x72,0x7c]
0x6c,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0x72,0x7c]
0x6d,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0x72,0x7c]
0x6e,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0x72,0x7c]
0x6f,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0x72,0x7c]
0x7b,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0x72,0x7c]
0x7c,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0x72,0x7c]
0x7e,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0x72,0x7c]
0x7f,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0x72,0x7c]
0x80,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0x72,0x7c]
0xc1,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0x72,0x7c]
0xf0,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0x72,0x7c]
0xf7,0x04,0x72,0x7c

# CHECK: v_cmpx_nge_f16_e32 vcc, 0xfe0b, v2      ; encoding: [0xff,0x04,0x72,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x72,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_nge_f16_e32 vcc, 0x3456, v2      ; encoding: [0xff,0x04,0x72,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x72,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_nge_f16_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0x73,0x7c]
0x01,0xff,0x73,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0x74,0x7c]
0x01,0x05,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0x74,0x7c]
0xff,0x05,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0x74,0x7c]
0x01,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0x74,0x7c]
0x65,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x74,0x7c]
0x66,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x74,0x7c]
0x67,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0x74,0x7c]
0x6a,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0x74,0x7c]
0x6b,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0x74,0x7c]
0x6c,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0x74,0x7c]
0x6d,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0x74,0x7c]
0x6e,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0x74,0x7c]
0x6f,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0x74,0x7c]
0x7b,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0x74,0x7c]
0x7c,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0x74,0x7c]
0x7e,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0x74,0x7c]
0x7f,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0x74,0x7c]
0x80,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0x74,0x7c]
0xc1,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0x74,0x7c]
0xf0,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0x74,0x7c]
0xf7,0x04,0x74,0x7c

# CHECK: v_cmpx_nlg_f16_e32 vcc, 0xfe0b, v2      ; encoding: [0xff,0x04,0x74,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x74,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_nlg_f16_e32 vcc, 0x3456, v2      ; encoding: [0xff,0x04,0x74,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x74,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_nlg_f16_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0x75,0x7c]
0x01,0xff,0x75,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0x76,0x7c]
0x01,0x05,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0x76,0x7c]
0xff,0x05,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0x76,0x7c]
0x01,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0x76,0x7c]
0x65,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x76,0x7c]
0x66,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x76,0x7c]
0x67,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0x76,0x7c]
0x6a,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0x76,0x7c]
0x6b,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0x76,0x7c]
0x6c,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0x76,0x7c]
0x6d,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0x76,0x7c]
0x6e,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0x76,0x7c]
0x6f,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0x76,0x7c]
0x7b,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0x76,0x7c]
0x7c,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0x76,0x7c]
0x7e,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0x76,0x7c]
0x7f,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0x76,0x7c]
0x80,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0x76,0x7c]
0xc1,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0x76,0x7c]
0xf0,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0x76,0x7c]
0xf7,0x04,0x76,0x7c

# CHECK: v_cmpx_ngt_f16_e32 vcc, 0xfe0b, v2      ; encoding: [0xff,0x04,0x76,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x76,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_ngt_f16_e32 vcc, 0x3456, v2      ; encoding: [0xff,0x04,0x76,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x76,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_ngt_f16_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0x77,0x7c]
0x01,0xff,0x77,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0x78,0x7c]
0x01,0x05,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0x78,0x7c]
0xff,0x05,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0x78,0x7c]
0x01,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0x78,0x7c]
0x65,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x78,0x7c]
0x66,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x78,0x7c]
0x67,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0x78,0x7c]
0x6a,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0x78,0x7c]
0x6b,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0x78,0x7c]
0x6c,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0x78,0x7c]
0x6d,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0x78,0x7c]
0x6e,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0x78,0x7c]
0x6f,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0x78,0x7c]
0x7b,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0x78,0x7c]
0x7c,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0x78,0x7c]
0x7e,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0x78,0x7c]
0x7f,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0x78,0x7c]
0x80,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0x78,0x7c]
0xc1,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0x78,0x7c]
0xf0,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0x78,0x7c]
0xf7,0x04,0x78,0x7c

# CHECK: v_cmpx_nle_f16_e32 vcc, 0xfe0b, v2      ; encoding: [0xff,0x04,0x78,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x78,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_nle_f16_e32 vcc, 0x3456, v2      ; encoding: [0xff,0x04,0x78,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x78,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_nle_f16_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0x79,0x7c]
0x01,0xff,0x79,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0x7a,0x7c]
0x01,0x05,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0x7a,0x7c]
0xff,0x05,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0x7a,0x7c]
0x01,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0x7a,0x7c]
0x65,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x7a,0x7c]
0x66,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x7a,0x7c]
0x67,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0x7a,0x7c]
0x6a,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0x7a,0x7c]
0x6b,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0x7a,0x7c]
0x6c,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0x7a,0x7c]
0x6d,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0x7a,0x7c]
0x6e,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0x7a,0x7c]
0x6f,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0x7a,0x7c]
0x7b,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0x7a,0x7c]
0x7c,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0x7a,0x7c]
0x7e,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0x7a,0x7c]
0x7f,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0x7a,0x7c]
0x80,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0x7a,0x7c]
0xc1,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0x7a,0x7c]
0xf0,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0x7a,0x7c]
0xf7,0x04,0x7a,0x7c

# CHECK: v_cmpx_neq_f16_e32 vcc, 0xfe0b, v2      ; encoding: [0xff,0x04,0x7a,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x7a,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_neq_f16_e32 vcc, 0x3456, v2      ; encoding: [0xff,0x04,0x7a,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x7a,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_neq_f16_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0x7b,0x7c]
0x01,0xff,0x7b,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0x7c,0x7c]
0x01,0x05,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0x7c,0x7c]
0xff,0x05,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0x7c,0x7c]
0x01,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0x7c,0x7c]
0x65,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x7c,0x7c]
0x66,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x7c,0x7c]
0x67,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0x7c,0x7c]
0x6a,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0x7c,0x7c]
0x6b,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0x7c,0x7c]
0x6c,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0x7c,0x7c]
0x6d,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0x7c,0x7c]
0x6e,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0x7c,0x7c]
0x6f,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0x7c,0x7c]
0x7b,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0x7c,0x7c]
0x7c,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0x7c,0x7c]
0x7e,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0x7c,0x7c]
0x7f,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0x7c,0x7c]
0x80,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0x7c,0x7c]
0xc1,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0x7c,0x7c]
0xf0,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0x7c,0x7c]
0xf7,0x04,0x7c,0x7c

# CHECK: v_cmpx_nlt_f16_e32 vcc, 0xfe0b, v2      ; encoding: [0xff,0x04,0x7c,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x7c,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_nlt_f16_e32 vcc, 0x3456, v2      ; encoding: [0xff,0x04,0x7c,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x7c,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_nlt_f16_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0x7d,0x7c]
0x01,0xff,0x7d,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0x7e,0x7c]
0x01,0x05,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0x7e,0x7c]
0xff,0x05,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0x7e,0x7c]
0x01,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0x7e,0x7c]
0x65,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x7e,0x7c]
0x66,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x7e,0x7c]
0x67,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0x7e,0x7c]
0x6a,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0x7e,0x7c]
0x6b,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0x7e,0x7c]
0x6c,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0x7e,0x7c]
0x6d,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0x7e,0x7c]
0x6e,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0x7e,0x7c]
0x6f,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0x7e,0x7c]
0x7b,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0x7e,0x7c]
0x7c,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0x7e,0x7c]
0x7e,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0x7e,0x7c]
0x7f,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0x7e,0x7c]
0x80,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0x7e,0x7c]
0xc1,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0x7e,0x7c]
0xf0,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0x7e,0x7c]
0xf7,0x04,0x7e,0x7c

# CHECK: v_cmpx_tru_f16_e32 vcc, 0xfe0b, v2      ; encoding: [0xff,0x04,0x7e,0x7c,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x7e,0x7c,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_tru_f16_e32 vcc, 0x3456, v2      ; encoding: [0xff,0x04,0x7e,0x7c,0x56,0x34,0x00,0x00]
0xff,0x04,0x7e,0x7c,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_tru_f16_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0x7f,0x7c]
0x01,0xff,0x7f,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0xa0,0x7c]
0x01,0x05,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0xa0,0x7c]
0xff,0x05,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0xa0,0x7c]
0x01,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0xa0,0x7c]
0x65,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa0,0x7c]
0x66,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa0,0x7c]
0x67,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0xa0,0x7c]
0x6a,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0xa0,0x7c]
0x6b,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0xa0,0x7c]
0x6c,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0xa0,0x7c]
0x6d,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0xa0,0x7c]
0x6e,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0xa0,0x7c]
0x6f,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0xa0,0x7c]
0x7b,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0xa0,0x7c]
0x7c,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0xa0,0x7c]
0x7e,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0xa0,0x7c]
0x7f,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0xa0,0x7c]
0x80,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0xa0,0x7c]
0xc1,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0xa0,0x7c]
0xf0,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0xa0,0x7c]
0xf7,0x04,0xa0,0x7c

# CHECK: v_cmpx_f_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0xa0,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa0,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_f_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0xa0,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa0,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_f_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0xa1,0x7c]
0x01,0xff,0xa1,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xa2,0x7c]
0x01,0x05,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xa2,0x7c]
0xff,0x05,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xa2,0x7c]
0x01,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xa2,0x7c]
0x65,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa2,0x7c]
0x66,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa2,0x7c]
0x67,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xa2,0x7c]
0x6a,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xa2,0x7c]
0x6b,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xa2,0x7c]
0x6c,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xa2,0x7c]
0x6d,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xa2,0x7c]
0x6e,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xa2,0x7c]
0x6f,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xa2,0x7c]
0x7b,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xa2,0x7c]
0x7c,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xa2,0x7c]
0x7e,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xa2,0x7c]
0x7f,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xa2,0x7c]
0x80,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xa2,0x7c]
0xc1,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xa2,0x7c]
0xf0,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xa2,0x7c]
0xf7,0x04,0xa2,0x7c

# CHECK: v_cmpx_lt_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xa2,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa2,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_lt_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xa2,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa2,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_lt_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xa3,0x7c]
0x01,0xff,0xa3,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xa4,0x7c]
0x01,0x05,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xa4,0x7c]
0xff,0x05,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xa4,0x7c]
0x01,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xa4,0x7c]
0x65,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa4,0x7c]
0x66,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa4,0x7c]
0x67,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xa4,0x7c]
0x6a,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xa4,0x7c]
0x6b,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xa4,0x7c]
0x6c,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xa4,0x7c]
0x6d,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xa4,0x7c]
0x6e,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xa4,0x7c]
0x6f,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xa4,0x7c]
0x7b,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xa4,0x7c]
0x7c,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xa4,0x7c]
0x7e,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xa4,0x7c]
0x7f,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xa4,0x7c]
0x80,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xa4,0x7c]
0xc1,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xa4,0x7c]
0xf0,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xa4,0x7c]
0xf7,0x04,0xa4,0x7c

# CHECK: v_cmpx_eq_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xa4,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa4,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_eq_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xa4,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa4,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_eq_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xa5,0x7c]
0x01,0xff,0xa5,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xa6,0x7c]
0x01,0x05,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xa6,0x7c]
0xff,0x05,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xa6,0x7c]
0x01,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xa6,0x7c]
0x65,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa6,0x7c]
0x66,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa6,0x7c]
0x67,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xa6,0x7c]
0x6a,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xa6,0x7c]
0x6b,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xa6,0x7c]
0x6c,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xa6,0x7c]
0x6d,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xa6,0x7c]
0x6e,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xa6,0x7c]
0x6f,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xa6,0x7c]
0x7b,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xa6,0x7c]
0x7c,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xa6,0x7c]
0x7e,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xa6,0x7c]
0x7f,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xa6,0x7c]
0x80,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xa6,0x7c]
0xc1,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xa6,0x7c]
0xf0,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xa6,0x7c]
0xf7,0x04,0xa6,0x7c

# CHECK: v_cmpx_le_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xa6,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa6,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_le_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xa6,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa6,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_le_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xa7,0x7c]
0x01,0xff,0xa7,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xa8,0x7c]
0x01,0x05,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xa8,0x7c]
0xff,0x05,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xa8,0x7c]
0x01,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xa8,0x7c]
0x65,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa8,0x7c]
0x66,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa8,0x7c]
0x67,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xa8,0x7c]
0x6a,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xa8,0x7c]
0x6b,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xa8,0x7c]
0x6c,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xa8,0x7c]
0x6d,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xa8,0x7c]
0x6e,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xa8,0x7c]
0x6f,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xa8,0x7c]
0x7b,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xa8,0x7c]
0x7c,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xa8,0x7c]
0x7e,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xa8,0x7c]
0x7f,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xa8,0x7c]
0x80,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xa8,0x7c]
0xc1,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xa8,0x7c]
0xf0,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xa8,0x7c]
0xf7,0x04,0xa8,0x7c

# CHECK: v_cmpx_gt_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xa8,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa8,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_gt_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xa8,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa8,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_gt_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xa9,0x7c]
0x01,0xff,0xa9,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xaa,0x7c]
0x01,0x05,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xaa,0x7c]
0xff,0x05,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xaa,0x7c]
0x01,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xaa,0x7c]
0x65,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xaa,0x7c]
0x66,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xaa,0x7c]
0x67,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xaa,0x7c]
0x6a,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xaa,0x7c]
0x6b,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xaa,0x7c]
0x6c,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xaa,0x7c]
0x6d,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xaa,0x7c]
0x6e,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xaa,0x7c]
0x6f,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xaa,0x7c]
0x7b,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xaa,0x7c]
0x7c,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xaa,0x7c]
0x7e,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xaa,0x7c]
0x7f,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xaa,0x7c]
0x80,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xaa,0x7c]
0xc1,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xaa,0x7c]
0xf0,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xaa,0x7c]
0xf7,0x04,0xaa,0x7c

# CHECK: v_cmpx_lg_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xaa,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xaa,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_lg_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xaa,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xaa,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_lg_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xab,0x7c]
0x01,0xff,0xab,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xac,0x7c]
0x01,0x05,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xac,0x7c]
0xff,0x05,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xac,0x7c]
0x01,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xac,0x7c]
0x65,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xac,0x7c]
0x66,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xac,0x7c]
0x67,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xac,0x7c]
0x6a,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xac,0x7c]
0x6b,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xac,0x7c]
0x6c,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xac,0x7c]
0x6d,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xac,0x7c]
0x6e,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xac,0x7c]
0x6f,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xac,0x7c]
0x7b,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xac,0x7c]
0x7c,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xac,0x7c]
0x7e,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xac,0x7c]
0x7f,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xac,0x7c]
0x80,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xac,0x7c]
0xc1,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xac,0x7c]
0xf0,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xac,0x7c]
0xf7,0x04,0xac,0x7c

# CHECK: v_cmpx_ge_f32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xac,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xac,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ge_f32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xac,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xac,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ge_f32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xad,0x7c]
0x01,0xff,0xad,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0xae,0x7c]
0x01,0x05,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0xae,0x7c]
0xff,0x05,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0xae,0x7c]
0x01,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0xae,0x7c]
0x65,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xae,0x7c]
0x66,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xae,0x7c]
0x67,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0xae,0x7c]
0x6a,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0xae,0x7c]
0x6b,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0xae,0x7c]
0x6c,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0xae,0x7c]
0x6d,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0xae,0x7c]
0x6e,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0xae,0x7c]
0x6f,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0xae,0x7c]
0x7b,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0xae,0x7c]
0x7c,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0xae,0x7c]
0x7e,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0xae,0x7c]
0x7f,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0xae,0x7c]
0x80,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0xae,0x7c]
0xc1,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0xae,0x7c]
0xf0,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0xae,0x7c]
0xf7,0x04,0xae,0x7c

# CHECK: v_cmpx_o_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0xae,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xae,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_o_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0xae,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xae,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_o_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0xaf,0x7c]
0x01,0xff,0xaf,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0xb0,0x7c]
0x01,0x05,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0xb0,0x7c]
0xff,0x05,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0xb0,0x7c]
0x01,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0xb0,0x7c]
0x65,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb0,0x7c]
0x66,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb0,0x7c]
0x67,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0xb0,0x7c]
0x6a,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0xb0,0x7c]
0x6b,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0xb0,0x7c]
0x6c,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0xb0,0x7c]
0x6d,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0xb0,0x7c]
0x6e,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0xb0,0x7c]
0x6f,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0xb0,0x7c]
0x7b,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0xb0,0x7c]
0x7c,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0xb0,0x7c]
0x7e,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0xb0,0x7c]
0x7f,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0xb0,0x7c]
0x80,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0xb0,0x7c]
0xc1,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0xb0,0x7c]
0xf0,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0xb0,0x7c]
0xf7,0x04,0xb0,0x7c

# CHECK: v_cmpx_u_f32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0xb0,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb0,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_u_f32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0xb0,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb0,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_u_f32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0xb1,0x7c]
0x01,0xff,0xb1,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0xb2,0x7c]
0x01,0x05,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0xb2,0x7c]
0xff,0x05,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0xb2,0x7c]
0x01,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0xb2,0x7c]
0x65,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb2,0x7c]
0x66,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb2,0x7c]
0x67,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0xb2,0x7c]
0x6a,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0xb2,0x7c]
0x6b,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0xb2,0x7c]
0x6c,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0xb2,0x7c]
0x6d,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0xb2,0x7c]
0x6e,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0xb2,0x7c]
0x6f,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0xb2,0x7c]
0x7b,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0xb2,0x7c]
0x7c,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0xb2,0x7c]
0x7e,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0xb2,0x7c]
0x7f,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0xb2,0x7c]
0x80,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0xb2,0x7c]
0xc1,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0xb2,0x7c]
0xf0,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0xb2,0x7c]
0xf7,0x04,0xb2,0x7c

# CHECK: v_cmpx_nge_f32_e32 vcc, 0xaf123456, v2  ; encoding: [0xff,0x04,0xb2,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb2,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_nge_f32_e32 vcc, 0x3f717273, v2  ; encoding: [0xff,0x04,0xb2,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb2,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_nge_f32_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0xb3,0x7c]
0x01,0xff,0xb3,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0xb4,0x7c]
0x01,0x05,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0xb4,0x7c]
0xff,0x05,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0xb4,0x7c]
0x01,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0xb4,0x7c]
0x65,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb4,0x7c]
0x66,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb4,0x7c]
0x67,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0xb4,0x7c]
0x6a,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0xb4,0x7c]
0x6b,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0xb4,0x7c]
0x6c,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0xb4,0x7c]
0x6d,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0xb4,0x7c]
0x6e,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0xb4,0x7c]
0x6f,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0xb4,0x7c]
0x7b,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0xb4,0x7c]
0x7c,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0xb4,0x7c]
0x7e,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0xb4,0x7c]
0x7f,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0xb4,0x7c]
0x80,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0xb4,0x7c]
0xc1,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0xb4,0x7c]
0xf0,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0xb4,0x7c]
0xf7,0x04,0xb4,0x7c

# CHECK: v_cmpx_nlg_f32_e32 vcc, 0xaf123456, v2  ; encoding: [0xff,0x04,0xb4,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb4,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_nlg_f32_e32 vcc, 0x3f717273, v2  ; encoding: [0xff,0x04,0xb4,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb4,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_nlg_f32_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0xb5,0x7c]
0x01,0xff,0xb5,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0xb6,0x7c]
0x01,0x05,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0xb6,0x7c]
0xff,0x05,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0xb6,0x7c]
0x01,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0xb6,0x7c]
0x65,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb6,0x7c]
0x66,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb6,0x7c]
0x67,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0xb6,0x7c]
0x6a,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0xb6,0x7c]
0x6b,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0xb6,0x7c]
0x6c,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0xb6,0x7c]
0x6d,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0xb6,0x7c]
0x6e,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0xb6,0x7c]
0x6f,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0xb6,0x7c]
0x7b,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0xb6,0x7c]
0x7c,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0xb6,0x7c]
0x7e,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0xb6,0x7c]
0x7f,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0xb6,0x7c]
0x80,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0xb6,0x7c]
0xc1,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0xb6,0x7c]
0xf0,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0xb6,0x7c]
0xf7,0x04,0xb6,0x7c

# CHECK: v_cmpx_ngt_f32_e32 vcc, 0xaf123456, v2  ; encoding: [0xff,0x04,0xb6,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb6,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ngt_f32_e32 vcc, 0x3f717273, v2  ; encoding: [0xff,0x04,0xb6,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb6,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ngt_f32_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0xb7,0x7c]
0x01,0xff,0xb7,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0xb8,0x7c]
0x01,0x05,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0xb8,0x7c]
0xff,0x05,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0xb8,0x7c]
0x01,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0xb8,0x7c]
0x65,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb8,0x7c]
0x66,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb8,0x7c]
0x67,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0xb8,0x7c]
0x6a,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0xb8,0x7c]
0x6b,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0xb8,0x7c]
0x6c,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0xb8,0x7c]
0x6d,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0xb8,0x7c]
0x6e,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0xb8,0x7c]
0x6f,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0xb8,0x7c]
0x7b,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0xb8,0x7c]
0x7c,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0xb8,0x7c]
0x7e,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0xb8,0x7c]
0x7f,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0xb8,0x7c]
0x80,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0xb8,0x7c]
0xc1,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0xb8,0x7c]
0xf0,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0xb8,0x7c]
0xf7,0x04,0xb8,0x7c

# CHECK: v_cmpx_nle_f32_e32 vcc, 0xaf123456, v2  ; encoding: [0xff,0x04,0xb8,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb8,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_nle_f32_e32 vcc, 0x3f717273, v2  ; encoding: [0xff,0x04,0xb8,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb8,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_nle_f32_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0xb9,0x7c]
0x01,0xff,0xb9,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0xba,0x7c]
0x01,0x05,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0xba,0x7c]
0xff,0x05,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0xba,0x7c]
0x01,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0xba,0x7c]
0x65,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xba,0x7c]
0x66,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xba,0x7c]
0x67,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0xba,0x7c]
0x6a,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0xba,0x7c]
0x6b,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0xba,0x7c]
0x6c,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0xba,0x7c]
0x6d,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0xba,0x7c]
0x6e,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0xba,0x7c]
0x6f,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0xba,0x7c]
0x7b,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0xba,0x7c]
0x7c,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0xba,0x7c]
0x7e,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0xba,0x7c]
0x7f,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0xba,0x7c]
0x80,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0xba,0x7c]
0xc1,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0xba,0x7c]
0xf0,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0xba,0x7c]
0xf7,0x04,0xba,0x7c

# CHECK: v_cmpx_neq_f32_e32 vcc, 0xaf123456, v2  ; encoding: [0xff,0x04,0xba,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xba,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_neq_f32_e32 vcc, 0x3f717273, v2  ; encoding: [0xff,0x04,0xba,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xba,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_neq_f32_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0xbb,0x7c]
0x01,0xff,0xbb,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0xbc,0x7c]
0x01,0x05,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0xbc,0x7c]
0xff,0x05,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0xbc,0x7c]
0x01,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0xbc,0x7c]
0x65,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xbc,0x7c]
0x66,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xbc,0x7c]
0x67,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0xbc,0x7c]
0x6a,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0xbc,0x7c]
0x6b,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0xbc,0x7c]
0x6c,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0xbc,0x7c]
0x6d,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0xbc,0x7c]
0x6e,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0xbc,0x7c]
0x6f,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0xbc,0x7c]
0x7b,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0xbc,0x7c]
0x7c,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0xbc,0x7c]
0x7e,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0xbc,0x7c]
0x7f,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0xbc,0x7c]
0x80,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0xbc,0x7c]
0xc1,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0xbc,0x7c]
0xf0,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0xbc,0x7c]
0xf7,0x04,0xbc,0x7c

# CHECK: v_cmpx_nlt_f32_e32 vcc, 0xaf123456, v2  ; encoding: [0xff,0x04,0xbc,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xbc,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_nlt_f32_e32 vcc, 0x3f717273, v2  ; encoding: [0xff,0x04,0xbc,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xbc,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_nlt_f32_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0xbd,0x7c]
0x01,0xff,0xbd,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, v1, v2          ; encoding: [0x01,0x05,0xbe,0x7c]
0x01,0x05,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, v255, v2        ; encoding: [0xff,0x05,0xbe,0x7c]
0xff,0x05,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, s1, v2          ; encoding: [0x01,0x04,0xbe,0x7c]
0x01,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, s101, v2        ; encoding: [0x65,0x04,0xbe,0x7c]
0x65,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xbe,0x7c]
0x66,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xbe,0x7c]
0x67,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, vcc_lo, v2      ; encoding: [0x6a,0x04,0xbe,0x7c]
0x6a,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, vcc_hi, v2      ; encoding: [0x6b,0x04,0xbe,0x7c]
0x6b,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, tba_lo, v2      ; encoding: [0x6c,0x04,0xbe,0x7c]
0x6c,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, tba_hi, v2      ; encoding: [0x6d,0x04,0xbe,0x7c]
0x6d,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, tma_lo, v2      ; encoding: [0x6e,0x04,0xbe,0x7c]
0x6e,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, tma_hi, v2      ; encoding: [0x6f,0x04,0xbe,0x7c]
0x6f,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, ttmp11, v2      ; encoding: [0x7b,0x04,0xbe,0x7c]
0x7b,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, m0, v2          ; encoding: [0x7c,0x04,0xbe,0x7c]
0x7c,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, exec_lo, v2     ; encoding: [0x7e,0x04,0xbe,0x7c]
0x7e,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, exec_hi, v2     ; encoding: [0x7f,0x04,0xbe,0x7c]
0x7f,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, 0, v2           ; encoding: [0x80,0x04,0xbe,0x7c]
0x80,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, -1, v2          ; encoding: [0xc1,0x04,0xbe,0x7c]
0xc1,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, 0.5, v2         ; encoding: [0xf0,0x04,0xbe,0x7c]
0xf0,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, -4.0, v2        ; encoding: [0xf7,0x04,0xbe,0x7c]
0xf7,0x04,0xbe,0x7c

# CHECK: v_cmpx_tru_f32_e32 vcc, 0xaf123456, v2  ; encoding: [0xff,0x04,0xbe,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xbe,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_tru_f32_e32 vcc, 0x3f717273, v2  ; encoding: [0xff,0x04,0xbe,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xbe,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_tru_f32_e32 vcc, v1, v255        ; encoding: [0x01,0xff,0xbf,0x7c]
0x01,0xff,0xbf,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xe0,0x7c]
0x01,0x05,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe0,0x7c]
0xfe,0x05,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xe0,0x7c]
0x02,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xe0,0x7c]
0x04,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe0,0x7c]
0x64,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe0,0x7c]
0x66,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xe0,0x7c]
0x6a,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xe0,0x7c]
0x6c,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xe0,0x7c]
0x6e,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe0,0x7c]
0x7a,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xe0,0x7c]
0x7e,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xe0,0x7c]
0x80,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xe0,0x7c]
0xc1,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xe0,0x7c]
0xf0,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xe0,0x7c]
0xf7,0x04,0xe0,0x7c

# CHECK: v_cmpx_f_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe0,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe0,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_f_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe0,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe0,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_f_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe1,0x7c]
0x01,0xfd,0xe1,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xe2,0x7c]
0x01,0x05,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe2,0x7c]
0xfe,0x05,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xe2,0x7c]
0x02,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xe2,0x7c]
0x04,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe2,0x7c]
0x64,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe2,0x7c]
0x66,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xe2,0x7c]
0x6a,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xe2,0x7c]
0x6c,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xe2,0x7c]
0x6e,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe2,0x7c]
0x7a,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xe2,0x7c]
0x7e,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xe2,0x7c]
0x80,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xe2,0x7c]
0xc1,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xe2,0x7c]
0xf0,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xe2,0x7c]
0xf7,0x04,0xe2,0x7c

# CHECK: v_cmpx_lt_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe2,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe2,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_lt_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe2,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe2,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_lt_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe3,0x7c]
0x01,0xfd,0xe3,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xe4,0x7c]
0x01,0x05,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe4,0x7c]
0xfe,0x05,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xe4,0x7c]
0x02,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xe4,0x7c]
0x04,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe4,0x7c]
0x64,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe4,0x7c]
0x66,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xe4,0x7c]
0x6a,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xe4,0x7c]
0x6c,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xe4,0x7c]
0x6e,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe4,0x7c]
0x7a,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xe4,0x7c]
0x7e,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xe4,0x7c]
0x80,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xe4,0x7c]
0xc1,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xe4,0x7c]
0xf0,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xe4,0x7c]
0xf7,0x04,0xe4,0x7c

# CHECK: v_cmpx_eq_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe4,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe4,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_eq_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe4,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe4,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_eq_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe5,0x7c]
0x01,0xfd,0xe5,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xe6,0x7c]
0x01,0x05,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe6,0x7c]
0xfe,0x05,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xe6,0x7c]
0x02,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xe6,0x7c]
0x04,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe6,0x7c]
0x64,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe6,0x7c]
0x66,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xe6,0x7c]
0x6a,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xe6,0x7c]
0x6c,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xe6,0x7c]
0x6e,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe6,0x7c]
0x7a,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xe6,0x7c]
0x7e,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xe6,0x7c]
0x80,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xe6,0x7c]
0xc1,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xe6,0x7c]
0xf0,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xe6,0x7c]
0xf7,0x04,0xe6,0x7c

# CHECK: v_cmpx_le_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe6,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe6,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_le_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe6,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe6,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_le_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe7,0x7c]
0x01,0xfd,0xe7,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xe8,0x7c]
0x01,0x05,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe8,0x7c]
0xfe,0x05,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xe8,0x7c]
0x02,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xe8,0x7c]
0x04,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe8,0x7c]
0x64,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe8,0x7c]
0x66,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xe8,0x7c]
0x6a,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xe8,0x7c]
0x6c,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xe8,0x7c]
0x6e,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe8,0x7c]
0x7a,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xe8,0x7c]
0x7e,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xe8,0x7c]
0x80,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xe8,0x7c]
0xc1,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xe8,0x7c]
0xf0,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xe8,0x7c]
0xf7,0x04,0xe8,0x7c

# CHECK: v_cmpx_gt_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe8,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe8,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_gt_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe8,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe8,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_gt_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe9,0x7c]
0x01,0xfd,0xe9,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xea,0x7c]
0x01,0x05,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xea,0x7c]
0xfe,0x05,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xea,0x7c]
0x02,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xea,0x7c]
0x04,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xea,0x7c]
0x64,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xea,0x7c]
0x66,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xea,0x7c]
0x6a,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xea,0x7c]
0x6c,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xea,0x7c]
0x6e,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xea,0x7c]
0x7a,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xea,0x7c]
0x7e,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xea,0x7c]
0x80,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xea,0x7c]
0xc1,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xea,0x7c]
0xf0,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xea,0x7c]
0xf7,0x04,0xea,0x7c

# CHECK: v_cmpx_lg_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xea,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xea,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_lg_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xea,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xea,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_lg_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xeb,0x7c]
0x01,0xfd,0xeb,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xec,0x7c]
0x01,0x05,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xec,0x7c]
0xfe,0x05,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xec,0x7c]
0x02,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xec,0x7c]
0x04,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xec,0x7c]
0x64,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xec,0x7c]
0x66,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xec,0x7c]
0x6a,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xec,0x7c]
0x6c,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xec,0x7c]
0x6e,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xec,0x7c]
0x7a,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xec,0x7c]
0x7e,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xec,0x7c]
0x80,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xec,0x7c]
0xc1,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xec,0x7c]
0xf0,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xec,0x7c]
0xf7,0x04,0xec,0x7c

# CHECK: v_cmpx_ge_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xec,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xec,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ge_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xec,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xec,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ge_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xed,0x7c]
0x01,0xfd,0xed,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xee,0x7c]
0x01,0x05,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xee,0x7c]
0xfe,0x05,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xee,0x7c]
0x02,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xee,0x7c]
0x04,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xee,0x7c]
0x64,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xee,0x7c]
0x66,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xee,0x7c]
0x6a,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xee,0x7c]
0x6c,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xee,0x7c]
0x6e,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xee,0x7c]
0x7a,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xee,0x7c]
0x7e,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xee,0x7c]
0x80,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xee,0x7c]
0xc1,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xee,0x7c]
0xf0,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xee,0x7c]
0xf7,0x04,0xee,0x7c

# CHECK: v_cmpx_o_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xee,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xee,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_o_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xee,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xee,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_o_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xef,0x7c]
0x01,0xfd,0xef,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xf0,0x7c]
0x01,0x05,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf0,0x7c]
0xfe,0x05,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xf0,0x7c]
0x02,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xf0,0x7c]
0x04,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf0,0x7c]
0x64,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf0,0x7c]
0x66,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xf0,0x7c]
0x6a,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xf0,0x7c]
0x6c,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xf0,0x7c]
0x6e,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf0,0x7c]
0x7a,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xf0,0x7c]
0x7e,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xf0,0x7c]
0x80,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xf0,0x7c]
0xc1,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xf0,0x7c]
0xf0,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xf0,0x7c]
0xf7,0x04,0xf0,0x7c

# CHECK: v_cmpx_u_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf0,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf0,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_u_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf0,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf0,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_u_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf1,0x7c]
0x01,0xfd,0xf1,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, v[1:2], v[2:3]  ; encoding: [0x01,0x05,0xf2,0x7c]
0x01,0x05,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf2,0x7c]
0xfe,0x05,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, s[2:3], v[2:3]  ; encoding: [0x02,0x04,0xf2,0x7c]
0x02,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, s[4:5], v[2:3]  ; encoding: [0x04,0x04,0xf2,0x7c]
0x04,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf2,0x7c]
0x64,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf2,0x7c]
0x66,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, vcc, v[2:3]     ; encoding: [0x6a,0x04,0xf2,0x7c]
0x6a,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, tba, v[2:3]     ; encoding: [0x6c,0x04,0xf2,0x7c]
0x6c,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, tma, v[2:3]     ; encoding: [0x6e,0x04,0xf2,0x7c]
0x6e,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf2,0x7c]
0x7a,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, exec, v[2:3]    ; encoding: [0x7e,0x04,0xf2,0x7c]
0x7e,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, 0, v[2:3]       ; encoding: [0x80,0x04,0xf2,0x7c]
0x80,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, -1, v[2:3]      ; encoding: [0xc1,0x04,0xf2,0x7c]
0xc1,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, 0.5, v[2:3]     ; encoding: [0xf0,0x04,0xf2,0x7c]
0xf0,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, -4.0, v[2:3]    ; encoding: [0xf7,0x04,0xf2,0x7c]
0xf7,0x04,0xf2,0x7c

# CHECK: v_cmpx_nge_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf2,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf2,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_nge_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf2,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf2,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_nge_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf3,0x7c]
0x01,0xfd,0xf3,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, v[1:2], v[2:3]  ; encoding: [0x01,0x05,0xf4,0x7c]
0x01,0x05,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf4,0x7c]
0xfe,0x05,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, s[2:3], v[2:3]  ; encoding: [0x02,0x04,0xf4,0x7c]
0x02,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, s[4:5], v[2:3]  ; encoding: [0x04,0x04,0xf4,0x7c]
0x04,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf4,0x7c]
0x64,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf4,0x7c]
0x66,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, vcc, v[2:3]     ; encoding: [0x6a,0x04,0xf4,0x7c]
0x6a,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, tba, v[2:3]     ; encoding: [0x6c,0x04,0xf4,0x7c]
0x6c,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, tma, v[2:3]     ; encoding: [0x6e,0x04,0xf4,0x7c]
0x6e,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf4,0x7c]
0x7a,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, exec, v[2:3]    ; encoding: [0x7e,0x04,0xf4,0x7c]
0x7e,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, 0, v[2:3]       ; encoding: [0x80,0x04,0xf4,0x7c]
0x80,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, -1, v[2:3]      ; encoding: [0xc1,0x04,0xf4,0x7c]
0xc1,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, 0.5, v[2:3]     ; encoding: [0xf0,0x04,0xf4,0x7c]
0xf0,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, -4.0, v[2:3]    ; encoding: [0xf7,0x04,0xf4,0x7c]
0xf7,0x04,0xf4,0x7c

# CHECK: v_cmpx_nlg_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf4,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf4,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_nlg_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf4,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf4,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_nlg_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf5,0x7c]
0x01,0xfd,0xf5,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, v[1:2], v[2:3]  ; encoding: [0x01,0x05,0xf6,0x7c]
0x01,0x05,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf6,0x7c]
0xfe,0x05,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, s[2:3], v[2:3]  ; encoding: [0x02,0x04,0xf6,0x7c]
0x02,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, s[4:5], v[2:3]  ; encoding: [0x04,0x04,0xf6,0x7c]
0x04,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf6,0x7c]
0x64,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf6,0x7c]
0x66,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, vcc, v[2:3]     ; encoding: [0x6a,0x04,0xf6,0x7c]
0x6a,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, tba, v[2:3]     ; encoding: [0x6c,0x04,0xf6,0x7c]
0x6c,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, tma, v[2:3]     ; encoding: [0x6e,0x04,0xf6,0x7c]
0x6e,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf6,0x7c]
0x7a,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, exec, v[2:3]    ; encoding: [0x7e,0x04,0xf6,0x7c]
0x7e,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, 0, v[2:3]       ; encoding: [0x80,0x04,0xf6,0x7c]
0x80,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, -1, v[2:3]      ; encoding: [0xc1,0x04,0xf6,0x7c]
0xc1,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, 0.5, v[2:3]     ; encoding: [0xf0,0x04,0xf6,0x7c]
0xf0,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, -4.0, v[2:3]    ; encoding: [0xf7,0x04,0xf6,0x7c]
0xf7,0x04,0xf6,0x7c

# CHECK: v_cmpx_ngt_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf6,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf6,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ngt_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf6,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf6,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ngt_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf7,0x7c]
0x01,0xfd,0xf7,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, v[1:2], v[2:3]  ; encoding: [0x01,0x05,0xf8,0x7c]
0x01,0x05,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf8,0x7c]
0xfe,0x05,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, s[2:3], v[2:3]  ; encoding: [0x02,0x04,0xf8,0x7c]
0x02,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, s[4:5], v[2:3]  ; encoding: [0x04,0x04,0xf8,0x7c]
0x04,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf8,0x7c]
0x64,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf8,0x7c]
0x66,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, vcc, v[2:3]     ; encoding: [0x6a,0x04,0xf8,0x7c]
0x6a,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, tba, v[2:3]     ; encoding: [0x6c,0x04,0xf8,0x7c]
0x6c,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, tma, v[2:3]     ; encoding: [0x6e,0x04,0xf8,0x7c]
0x6e,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf8,0x7c]
0x7a,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, exec, v[2:3]    ; encoding: [0x7e,0x04,0xf8,0x7c]
0x7e,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, 0, v[2:3]       ; encoding: [0x80,0x04,0xf8,0x7c]
0x80,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, -1, v[2:3]      ; encoding: [0xc1,0x04,0xf8,0x7c]
0xc1,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, 0.5, v[2:3]     ; encoding: [0xf0,0x04,0xf8,0x7c]
0xf0,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, -4.0, v[2:3]    ; encoding: [0xf7,0x04,0xf8,0x7c]
0xf7,0x04,0xf8,0x7c

# CHECK: v_cmpx_nle_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf8,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf8,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_nle_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf8,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf8,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_nle_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf9,0x7c]
0x01,0xfd,0xf9,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, v[1:2], v[2:3]  ; encoding: [0x01,0x05,0xfa,0x7c]
0x01,0x05,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xfa,0x7c]
0xfe,0x05,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, s[2:3], v[2:3]  ; encoding: [0x02,0x04,0xfa,0x7c]
0x02,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, s[4:5], v[2:3]  ; encoding: [0x04,0x04,0xfa,0x7c]
0x04,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xfa,0x7c]
0x64,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xfa,0x7c]
0x66,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, vcc, v[2:3]     ; encoding: [0x6a,0x04,0xfa,0x7c]
0x6a,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, tba, v[2:3]     ; encoding: [0x6c,0x04,0xfa,0x7c]
0x6c,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, tma, v[2:3]     ; encoding: [0x6e,0x04,0xfa,0x7c]
0x6e,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xfa,0x7c]
0x7a,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, exec, v[2:3]    ; encoding: [0x7e,0x04,0xfa,0x7c]
0x7e,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, 0, v[2:3]       ; encoding: [0x80,0x04,0xfa,0x7c]
0x80,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, -1, v[2:3]      ; encoding: [0xc1,0x04,0xfa,0x7c]
0xc1,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, 0.5, v[2:3]     ; encoding: [0xf0,0x04,0xfa,0x7c]
0xf0,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, -4.0, v[2:3]    ; encoding: [0xf7,0x04,0xfa,0x7c]
0xf7,0x04,0xfa,0x7c

# CHECK: v_cmpx_neq_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xfa,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xfa,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_neq_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xfa,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xfa,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_neq_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xfb,0x7c]
0x01,0xfd,0xfb,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, v[1:2], v[2:3]  ; encoding: [0x01,0x05,0xfc,0x7c]
0x01,0x05,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xfc,0x7c]
0xfe,0x05,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, s[2:3], v[2:3]  ; encoding: [0x02,0x04,0xfc,0x7c]
0x02,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, s[4:5], v[2:3]  ; encoding: [0x04,0x04,0xfc,0x7c]
0x04,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xfc,0x7c]
0x64,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xfc,0x7c]
0x66,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, vcc, v[2:3]     ; encoding: [0x6a,0x04,0xfc,0x7c]
0x6a,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, tba, v[2:3]     ; encoding: [0x6c,0x04,0xfc,0x7c]
0x6c,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, tma, v[2:3]     ; encoding: [0x6e,0x04,0xfc,0x7c]
0x6e,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xfc,0x7c]
0x7a,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, exec, v[2:3]    ; encoding: [0x7e,0x04,0xfc,0x7c]
0x7e,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, 0, v[2:3]       ; encoding: [0x80,0x04,0xfc,0x7c]
0x80,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, -1, v[2:3]      ; encoding: [0xc1,0x04,0xfc,0x7c]
0xc1,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, 0.5, v[2:3]     ; encoding: [0xf0,0x04,0xfc,0x7c]
0xf0,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, -4.0, v[2:3]    ; encoding: [0xf7,0x04,0xfc,0x7c]
0xf7,0x04,0xfc,0x7c

# CHECK: v_cmpx_nlt_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xfc,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xfc,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_nlt_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xfc,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xfc,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_nlt_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xfd,0x7c]
0x01,0xfd,0xfd,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, v[1:2], v[2:3]  ; encoding: [0x01,0x05,0xfe,0x7c]
0x01,0x05,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xfe,0x7c]
0xfe,0x05,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, s[2:3], v[2:3]  ; encoding: [0x02,0x04,0xfe,0x7c]
0x02,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, s[4:5], v[2:3]  ; encoding: [0x04,0x04,0xfe,0x7c]
0x04,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xfe,0x7c]
0x64,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xfe,0x7c]
0x66,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, vcc, v[2:3]     ; encoding: [0x6a,0x04,0xfe,0x7c]
0x6a,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, tba, v[2:3]     ; encoding: [0x6c,0x04,0xfe,0x7c]
0x6c,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, tma, v[2:3]     ; encoding: [0x6e,0x04,0xfe,0x7c]
0x6e,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xfe,0x7c]
0x7a,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, exec, v[2:3]    ; encoding: [0x7e,0x04,0xfe,0x7c]
0x7e,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, 0, v[2:3]       ; encoding: [0x80,0x04,0xfe,0x7c]
0x80,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, -1, v[2:3]      ; encoding: [0xc1,0x04,0xfe,0x7c]
0xc1,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, 0.5, v[2:3]     ; encoding: [0xf0,0x04,0xfe,0x7c]
0xf0,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, -4.0, v[2:3]    ; encoding: [0xf7,0x04,0xfe,0x7c]
0xf7,0x04,0xfe,0x7c

# CHECK: v_cmpx_tru_f64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xfe,0x7c,0x56,0x34,0x12,0xaf]
0xff,0x04,0xfe,0x7c,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_tru_f64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xfe,0x7c,0x73,0x72,0x71,0x3f]
0xff,0x04,0xfe,0x7c,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_tru_f64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xff,0x7c]
0x01,0xfd,0xff,0x7c

# CHECK: v_cmpx_f_i16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x60,0x7d]
0x01,0x05,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x60,0x7d]
0xff,0x05,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x60,0x7d]
0x01,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x60,0x7d]
0x65,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x60,0x7d]
0x66,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x60,0x7d]
0x67,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x60,0x7d]
0x6a,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x60,0x7d]
0x6b,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x60,0x7d]
0x6c,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x60,0x7d]
0x6d,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x60,0x7d]
0x6e,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x60,0x7d]
0x6f,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x60,0x7d]
0x7b,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x60,0x7d]
0x7c,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x60,0x7d]
0x7e,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x60,0x7d]
0x7f,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x60,0x7d]
0x80,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x60,0x7d]
0xc1,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x60,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x60,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x60,0x7d

# CHECK: v_cmpx_f_i16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x60,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x60,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_f_i16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x60,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x60,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_f_i16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x61,0x7d]
0x01,0xff,0x61,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x62,0x7d]
0x01,0x05,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x62,0x7d]
0xff,0x05,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x62,0x7d]
0x01,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x62,0x7d]
0x65,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x62,0x7d]
0x66,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x62,0x7d]
0x67,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x62,0x7d]
0x6a,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x62,0x7d]
0x6b,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x62,0x7d]
0x6c,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x62,0x7d]
0x6d,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x62,0x7d]
0x6e,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x62,0x7d]
0x6f,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x62,0x7d]
0x7b,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x62,0x7d]
0x7c,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x62,0x7d]
0x7e,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x62,0x7d]
0x7f,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x62,0x7d]
0x80,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x62,0x7d]
0xc1,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x62,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x62,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x62,0x7d

# CHECK: v_cmpx_lt_i16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x62,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x62,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_lt_i16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x62,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x62,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_lt_i16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x63,0x7d]
0x01,0xff,0x63,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x64,0x7d]
0x01,0x05,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x64,0x7d]
0xff,0x05,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x64,0x7d]
0x01,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x64,0x7d]
0x65,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x64,0x7d]
0x66,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x64,0x7d]
0x67,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x64,0x7d]
0x6a,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x64,0x7d]
0x6b,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x64,0x7d]
0x6c,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x64,0x7d]
0x6d,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x64,0x7d]
0x6e,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x64,0x7d]
0x6f,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x64,0x7d]
0x7b,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x64,0x7d]
0x7c,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x64,0x7d]
0x7e,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x64,0x7d]
0x7f,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x64,0x7d]
0x80,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x64,0x7d]
0xc1,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x64,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x64,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x64,0x7d

# CHECK: v_cmpx_eq_i16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x64,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x64,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_eq_i16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x64,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x64,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_eq_i16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x65,0x7d]
0x01,0xff,0x65,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x66,0x7d]
0x01,0x05,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x66,0x7d]
0xff,0x05,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x66,0x7d]
0x01,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x66,0x7d]
0x65,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x66,0x7d]
0x66,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x66,0x7d]
0x67,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x66,0x7d]
0x6a,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x66,0x7d]
0x6b,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x66,0x7d]
0x6c,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x66,0x7d]
0x6d,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x66,0x7d]
0x6e,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x66,0x7d]
0x6f,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x66,0x7d]
0x7b,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x66,0x7d]
0x7c,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x66,0x7d]
0x7e,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x66,0x7d]
0x7f,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x66,0x7d]
0x80,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x66,0x7d]
0xc1,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x66,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x66,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x66,0x7d

# CHECK: v_cmpx_le_i16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x66,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x66,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_le_i16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x66,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x66,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_le_i16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x67,0x7d]
0x01,0xff,0x67,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x68,0x7d]
0x01,0x05,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x68,0x7d]
0xff,0x05,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x68,0x7d]
0x01,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x68,0x7d]
0x65,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x68,0x7d]
0x66,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x68,0x7d]
0x67,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x68,0x7d]
0x6a,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x68,0x7d]
0x6b,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x68,0x7d]
0x6c,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x68,0x7d]
0x6d,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x68,0x7d]
0x6e,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x68,0x7d]
0x6f,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x68,0x7d]
0x7b,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x68,0x7d]
0x7c,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x68,0x7d]
0x7e,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x68,0x7d]
0x7f,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x68,0x7d]
0x80,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x68,0x7d]
0xc1,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x68,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x68,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x68,0x7d

# CHECK: v_cmpx_gt_i16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x68,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x68,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_gt_i16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x68,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x68,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_gt_i16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x69,0x7d]
0x01,0xff,0x69,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x6a,0x7d]
0x01,0x05,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x6a,0x7d]
0xff,0x05,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x6a,0x7d]
0x01,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x6a,0x7d]
0x65,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x6a,0x7d]
0x66,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x6a,0x7d]
0x67,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x6a,0x7d]
0x6a,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x6a,0x7d]
0x6b,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x6a,0x7d]
0x6c,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x6a,0x7d]
0x6d,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x6a,0x7d]
0x6e,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x6a,0x7d]
0x6f,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x6a,0x7d]
0x7b,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x6a,0x7d]
0x7c,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x6a,0x7d]
0x7e,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x6a,0x7d]
0x7f,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x6a,0x7d]
0x80,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x6a,0x7d]
0xc1,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x6a,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x6a,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x6a,0x7d

# CHECK: v_cmpx_ne_i16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x6a,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x6a,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_ne_i16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x6a,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x6a,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_ne_i16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x6b,0x7d]
0x01,0xff,0x6b,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x6c,0x7d]
0x01,0x05,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x6c,0x7d]
0xff,0x05,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x6c,0x7d]
0x01,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x6c,0x7d]
0x65,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x6c,0x7d]
0x66,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x6c,0x7d]
0x67,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x6c,0x7d]
0x6a,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x6c,0x7d]
0x6b,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x6c,0x7d]
0x6c,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x6c,0x7d]
0x6d,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x6c,0x7d]
0x6e,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x6c,0x7d]
0x6f,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x6c,0x7d]
0x7b,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x6c,0x7d]
0x7c,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x6c,0x7d]
0x7e,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x6c,0x7d]
0x7f,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x6c,0x7d]
0x80,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x6c,0x7d]
0xc1,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x6c,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x6c,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x6c,0x7d

# CHECK: v_cmpx_ge_i16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x6c,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x6c,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_ge_i16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x6c,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x6c,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_ge_i16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x6d,0x7d]
0x01,0xff,0x6d,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x6e,0x7d]
0x01,0x05,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x6e,0x7d]
0xff,0x05,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x6e,0x7d]
0x01,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x6e,0x7d]
0x65,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x6e,0x7d]
0x66,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x6e,0x7d]
0x67,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x6e,0x7d]
0x6a,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x6e,0x7d]
0x6b,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x6e,0x7d]
0x6c,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x6e,0x7d]
0x6d,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x6e,0x7d]
0x6e,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x6e,0x7d]
0x6f,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x6e,0x7d]
0x7b,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x6e,0x7d]
0x7c,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x6e,0x7d]
0x7e,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x6e,0x7d]
0x7f,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x6e,0x7d]
0x80,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x6e,0x7d]
0xc1,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x6e,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x6e,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x6e,0x7d

# CHECK: v_cmpx_t_i16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x6e,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x6e,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_t_i16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x6e,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x6e,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_t_i16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x6f,0x7d]
0x01,0xff,0x6f,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x70,0x7d]
0x01,0x05,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x70,0x7d]
0xff,0x05,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x70,0x7d]
0x01,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x70,0x7d]
0x65,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x70,0x7d]
0x66,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x70,0x7d]
0x67,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x70,0x7d]
0x6a,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x70,0x7d]
0x6b,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x70,0x7d]
0x6c,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x70,0x7d]
0x6d,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x70,0x7d]
0x6e,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x70,0x7d]
0x6f,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x70,0x7d]
0x7b,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x70,0x7d]
0x7c,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x70,0x7d]
0x7e,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x70,0x7d]
0x7f,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x70,0x7d]
0x80,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x70,0x7d]
0xc1,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x70,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x70,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x70,0x7d

# CHECK: v_cmpx_f_u16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x70,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x70,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_f_u16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x70,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x70,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_f_u16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x71,0x7d]
0x01,0xff,0x71,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x72,0x7d]
0x01,0x05,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x72,0x7d]
0xff,0x05,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x72,0x7d]
0x01,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x72,0x7d]
0x65,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x72,0x7d]
0x66,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x72,0x7d]
0x67,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x72,0x7d]
0x6a,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x72,0x7d]
0x6b,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x72,0x7d]
0x6c,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x72,0x7d]
0x6d,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x72,0x7d]
0x6e,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x72,0x7d]
0x6f,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x72,0x7d]
0x7b,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x72,0x7d]
0x7c,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x72,0x7d]
0x7e,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x72,0x7d]
0x7f,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x72,0x7d]
0x80,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x72,0x7d]
0xc1,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x72,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x72,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x72,0x7d

# CHECK: v_cmpx_lt_u16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x72,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x72,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_lt_u16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x72,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x72,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_lt_u16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x73,0x7d]
0x01,0xff,0x73,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x74,0x7d]
0x01,0x05,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x74,0x7d]
0xff,0x05,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x74,0x7d]
0x01,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x74,0x7d]
0x65,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x74,0x7d]
0x66,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x74,0x7d]
0x67,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x74,0x7d]
0x6a,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x74,0x7d]
0x6b,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x74,0x7d]
0x6c,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x74,0x7d]
0x6d,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x74,0x7d]
0x6e,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x74,0x7d]
0x6f,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x74,0x7d]
0x7b,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x74,0x7d]
0x7c,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x74,0x7d]
0x7e,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x74,0x7d]
0x7f,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x74,0x7d]
0x80,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x74,0x7d]
0xc1,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x74,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x74,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x74,0x7d

# CHECK: v_cmpx_eq_u16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x74,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x74,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_eq_u16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x74,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x74,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_eq_u16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x75,0x7d]
0x01,0xff,0x75,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x76,0x7d]
0x01,0x05,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x76,0x7d]
0xff,0x05,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x76,0x7d]
0x01,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x76,0x7d]
0x65,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x76,0x7d]
0x66,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x76,0x7d]
0x67,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x76,0x7d]
0x6a,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x76,0x7d]
0x6b,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x76,0x7d]
0x6c,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x76,0x7d]
0x6d,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x76,0x7d]
0x6e,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x76,0x7d]
0x6f,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x76,0x7d]
0x7b,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x76,0x7d]
0x7c,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x76,0x7d]
0x7e,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x76,0x7d]
0x7f,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x76,0x7d]
0x80,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x76,0x7d]
0xc1,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x76,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x76,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x76,0x7d

# CHECK: v_cmpx_le_u16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x76,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x76,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_le_u16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x76,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x76,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_le_u16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x77,0x7d]
0x01,0xff,0x77,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x78,0x7d]
0x01,0x05,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x78,0x7d]
0xff,0x05,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x78,0x7d]
0x01,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x78,0x7d]
0x65,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x78,0x7d]
0x66,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x78,0x7d]
0x67,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x78,0x7d]
0x6a,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x78,0x7d]
0x6b,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x78,0x7d]
0x6c,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x78,0x7d]
0x6d,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x78,0x7d]
0x6e,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x78,0x7d]
0x6f,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x78,0x7d]
0x7b,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x78,0x7d]
0x7c,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x78,0x7d]
0x7e,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x78,0x7d]
0x7f,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x78,0x7d]
0x80,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x78,0x7d]
0xc1,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x78,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x78,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x78,0x7d

# CHECK: v_cmpx_gt_u16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x78,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x78,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_gt_u16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x78,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x78,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_gt_u16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x79,0x7d]
0x01,0xff,0x79,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x7a,0x7d]
0x01,0x05,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x7a,0x7d]
0xff,0x05,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x7a,0x7d]
0x01,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x7a,0x7d]
0x65,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x7a,0x7d]
0x66,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x7a,0x7d]
0x67,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x7a,0x7d]
0x6a,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x7a,0x7d]
0x6b,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x7a,0x7d]
0x6c,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x7a,0x7d]
0x6d,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x7a,0x7d]
0x6e,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x7a,0x7d]
0x6f,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x7a,0x7d]
0x7b,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x7a,0x7d]
0x7c,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x7a,0x7d]
0x7e,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x7a,0x7d]
0x7f,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x7a,0x7d]
0x80,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x7a,0x7d]
0xc1,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x7a,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x7a,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x7a,0x7d

# CHECK: v_cmpx_ne_u16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x7a,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x7a,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_ne_u16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x7a,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x7a,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_ne_u16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x7b,0x7d]
0x01,0xff,0x7b,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0x7c,0x7d]
0x01,0x05,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0x7c,0x7d]
0xff,0x05,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0x7c,0x7d]
0x01,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0x7c,0x7d]
0x65,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x7c,0x7d]
0x66,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x7c,0x7d]
0x67,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0x7c,0x7d]
0x6a,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0x7c,0x7d]
0x6b,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0x7c,0x7d]
0x6c,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0x7c,0x7d]
0x6d,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0x7c,0x7d]
0x6e,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0x7c,0x7d]
0x6f,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0x7c,0x7d]
0x7b,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0x7c,0x7d]
0x7c,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0x7c,0x7d]
0x7e,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0x7c,0x7d]
0x7f,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0x7c,0x7d]
0x80,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0x7c,0x7d]
0xc1,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, 0x3800, v2       ; encoding: [0xff,0x04,0x7c,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, 0xc400, v2       ; encoding: [0xff,0x04,0x7c,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x7c,0x7d

# CHECK: v_cmpx_ge_u16_e32 vcc, 0xfe0b, v2       ; encoding: [0xff,0x04,0x7c,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x7c,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_ge_u16_e32 vcc, 0x3456, v2       ; encoding: [0xff,0x04,0x7c,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x7c,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_ge_u16_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0x7d,0x7d]
0x01,0xff,0x7d,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0x7e,0x7d]
0x01,0x05,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0x7e,0x7d]
0xff,0x05,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0x7e,0x7d]
0x01,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0x7e,0x7d]
0x65,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0x7e,0x7d]
0x66,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0x7e,0x7d]
0x67,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0x7e,0x7d]
0x6a,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0x7e,0x7d]
0x6b,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0x7e,0x7d]
0x6c,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0x7e,0x7d]
0x6d,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0x7e,0x7d]
0x6e,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0x7e,0x7d]
0x6f,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0x7e,0x7d]
0x7b,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0x7e,0x7d]
0x7c,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0x7e,0x7d]
0x7e,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0x7e,0x7d]
0x7f,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0x7e,0x7d]
0x80,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0x7e,0x7d]
0xc1,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, 0x3800, v2        ; encoding: [0xff,0x04,0x7e,0x7d,0x00,0x38,0x00,0x00]
0xf0,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, 0xc400, v2        ; encoding: [0xff,0x04,0x7e,0x7d,0x00,0xc4,0x00,0x00]
0xf7,0x04,0x7e,0x7d

# CHECK: v_cmpx_t_u16_e32 vcc, 0xfe0b, v2        ; encoding: [0xff,0x04,0x7e,0x7d,0x0b,0xfe,0x00,0x00]
0xff,0x04,0x7e,0x7d,0x0b,0xfe,0x00,0x00

# CHECK: v_cmpx_t_u16_e32 vcc, 0x3456, v2        ; encoding: [0xff,0x04,0x7e,0x7d,0x56,0x34,0x00,0x00]
0xff,0x04,0x7e,0x7d,0x56,0x34,0x00,0x00

# CHECK: v_cmpx_t_u16_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0x7f,0x7d]
0x01,0xff,0x7f,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0xa0,0x7d]
0x01,0x05,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0xa0,0x7d]
0xff,0x05,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0xa0,0x7d]
0x01,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0xa0,0x7d]
0x65,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa0,0x7d]
0x66,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa0,0x7d]
0x67,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0xa0,0x7d]
0x6a,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0xa0,0x7d]
0x6b,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0xa0,0x7d]
0x6c,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0xa0,0x7d]
0x6d,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0xa0,0x7d]
0x6e,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0xa0,0x7d]
0x6f,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0xa0,0x7d]
0x7b,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0xa0,0x7d]
0x7c,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0xa0,0x7d]
0x7e,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0xa0,0x7d]
0x7f,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0xa0,0x7d]
0x80,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0xa0,0x7d]
0xc1,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0xa0,0x7d]
0xf0,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0xa0,0x7d]
0xf7,0x04,0xa0,0x7d

# CHECK: v_cmpx_f_i32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0xa0,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa0,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_f_i32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0xa0,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa0,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_f_i32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0xa1,0x7d]
0x01,0xff,0xa1,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xa2,0x7d]
0x01,0x05,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xa2,0x7d]
0xff,0x05,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xa2,0x7d]
0x01,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xa2,0x7d]
0x65,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa2,0x7d]
0x66,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa2,0x7d]
0x67,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xa2,0x7d]
0x6a,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xa2,0x7d]
0x6b,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xa2,0x7d]
0x6c,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xa2,0x7d]
0x6d,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xa2,0x7d]
0x6e,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xa2,0x7d]
0x6f,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xa2,0x7d]
0x7b,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xa2,0x7d]
0x7c,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xa2,0x7d]
0x7e,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xa2,0x7d]
0x7f,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xa2,0x7d]
0x80,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xa2,0x7d]
0xc1,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xa2,0x7d]
0xf0,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xa2,0x7d]
0xf7,0x04,0xa2,0x7d

# CHECK: v_cmpx_lt_i32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xa2,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa2,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_lt_i32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xa2,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa2,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_lt_i32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xa3,0x7d]
0x01,0xff,0xa3,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xa4,0x7d]
0x01,0x05,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xa4,0x7d]
0xff,0x05,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xa4,0x7d]
0x01,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xa4,0x7d]
0x65,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa4,0x7d]
0x66,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa4,0x7d]
0x67,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xa4,0x7d]
0x6a,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xa4,0x7d]
0x6b,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xa4,0x7d]
0x6c,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xa4,0x7d]
0x6d,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xa4,0x7d]
0x6e,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xa4,0x7d]
0x6f,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xa4,0x7d]
0x7b,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xa4,0x7d]
0x7c,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xa4,0x7d]
0x7e,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xa4,0x7d]
0x7f,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xa4,0x7d]
0x80,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xa4,0x7d]
0xc1,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xa4,0x7d]
0xf0,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xa4,0x7d]
0xf7,0x04,0xa4,0x7d

# CHECK: v_cmpx_eq_i32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xa4,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa4,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_eq_i32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xa4,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa4,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_eq_i32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xa5,0x7d]
0x01,0xff,0xa5,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xa6,0x7d]
0x01,0x05,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xa6,0x7d]
0xff,0x05,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xa6,0x7d]
0x01,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xa6,0x7d]
0x65,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa6,0x7d]
0x66,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa6,0x7d]
0x67,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xa6,0x7d]
0x6a,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xa6,0x7d]
0x6b,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xa6,0x7d]
0x6c,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xa6,0x7d]
0x6d,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xa6,0x7d]
0x6e,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xa6,0x7d]
0x6f,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xa6,0x7d]
0x7b,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xa6,0x7d]
0x7c,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xa6,0x7d]
0x7e,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xa6,0x7d]
0x7f,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xa6,0x7d]
0x80,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xa6,0x7d]
0xc1,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xa6,0x7d]
0xf0,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xa6,0x7d]
0xf7,0x04,0xa6,0x7d

# CHECK: v_cmpx_le_i32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xa6,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa6,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_le_i32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xa6,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa6,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_le_i32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xa7,0x7d]
0x01,0xff,0xa7,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xa8,0x7d]
0x01,0x05,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xa8,0x7d]
0xff,0x05,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xa8,0x7d]
0x01,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xa8,0x7d]
0x65,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xa8,0x7d]
0x66,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xa8,0x7d]
0x67,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xa8,0x7d]
0x6a,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xa8,0x7d]
0x6b,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xa8,0x7d]
0x6c,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xa8,0x7d]
0x6d,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xa8,0x7d]
0x6e,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xa8,0x7d]
0x6f,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xa8,0x7d]
0x7b,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xa8,0x7d]
0x7c,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xa8,0x7d]
0x7e,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xa8,0x7d]
0x7f,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xa8,0x7d]
0x80,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xa8,0x7d]
0xc1,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xa8,0x7d]
0xf0,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xa8,0x7d]
0xf7,0x04,0xa8,0x7d

# CHECK: v_cmpx_gt_i32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xa8,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xa8,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_gt_i32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xa8,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xa8,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_gt_i32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xa9,0x7d]
0x01,0xff,0xa9,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xaa,0x7d]
0x01,0x05,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xaa,0x7d]
0xff,0x05,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xaa,0x7d]
0x01,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xaa,0x7d]
0x65,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xaa,0x7d]
0x66,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xaa,0x7d]
0x67,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xaa,0x7d]
0x6a,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xaa,0x7d]
0x6b,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xaa,0x7d]
0x6c,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xaa,0x7d]
0x6d,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xaa,0x7d]
0x6e,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xaa,0x7d]
0x6f,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xaa,0x7d]
0x7b,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xaa,0x7d]
0x7c,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xaa,0x7d]
0x7e,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xaa,0x7d]
0x7f,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xaa,0x7d]
0x80,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xaa,0x7d]
0xc1,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xaa,0x7d]
0xf0,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xaa,0x7d]
0xf7,0x04,0xaa,0x7d

# CHECK: v_cmpx_ne_i32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xaa,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xaa,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ne_i32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xaa,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xaa,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ne_i32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xab,0x7d]
0x01,0xff,0xab,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xac,0x7d]
0x01,0x05,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xac,0x7d]
0xff,0x05,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xac,0x7d]
0x01,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xac,0x7d]
0x65,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xac,0x7d]
0x66,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xac,0x7d]
0x67,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xac,0x7d]
0x6a,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xac,0x7d]
0x6b,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xac,0x7d]
0x6c,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xac,0x7d]
0x6d,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xac,0x7d]
0x6e,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xac,0x7d]
0x6f,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xac,0x7d]
0x7b,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xac,0x7d]
0x7c,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xac,0x7d]
0x7e,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xac,0x7d]
0x7f,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xac,0x7d]
0x80,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xac,0x7d]
0xc1,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xac,0x7d]
0xf0,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xac,0x7d]
0xf7,0x04,0xac,0x7d

# CHECK: v_cmpx_ge_i32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xac,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xac,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ge_i32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xac,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xac,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ge_i32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xad,0x7d]
0x01,0xff,0xad,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0xae,0x7d]
0x01,0x05,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0xae,0x7d]
0xff,0x05,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0xae,0x7d]
0x01,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0xae,0x7d]
0x65,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xae,0x7d]
0x66,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xae,0x7d]
0x67,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0xae,0x7d]
0x6a,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0xae,0x7d]
0x6b,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0xae,0x7d]
0x6c,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0xae,0x7d]
0x6d,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0xae,0x7d]
0x6e,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0xae,0x7d]
0x6f,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0xae,0x7d]
0x7b,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0xae,0x7d]
0x7c,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0xae,0x7d]
0x7e,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0xae,0x7d]
0x7f,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0xae,0x7d]
0x80,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0xae,0x7d]
0xc1,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0xae,0x7d]
0xf0,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0xae,0x7d]
0xf7,0x04,0xae,0x7d

# CHECK: v_cmpx_t_i32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0xae,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xae,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_t_i32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0xae,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xae,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_t_i32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0xaf,0x7d]
0x01,0xff,0xaf,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0xb0,0x7d]
0x01,0x05,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0xb0,0x7d]
0xff,0x05,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0xb0,0x7d]
0x01,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0xb0,0x7d]
0x65,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb0,0x7d]
0x66,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb0,0x7d]
0x67,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0xb0,0x7d]
0x6a,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0xb0,0x7d]
0x6b,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0xb0,0x7d]
0x6c,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0xb0,0x7d]
0x6d,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0xb0,0x7d]
0x6e,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0xb0,0x7d]
0x6f,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0xb0,0x7d]
0x7b,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0xb0,0x7d]
0x7c,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0xb0,0x7d]
0x7e,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0xb0,0x7d]
0x7f,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0xb0,0x7d]
0x80,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0xb0,0x7d]
0xc1,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0xb0,0x7d]
0xf0,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0xb0,0x7d]
0xf7,0x04,0xb0,0x7d

# CHECK: v_cmpx_f_u32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0xb0,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb0,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_f_u32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0xb0,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb0,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_f_u32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0xb1,0x7d]
0x01,0xff,0xb1,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xb2,0x7d]
0x01,0x05,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xb2,0x7d]
0xff,0x05,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xb2,0x7d]
0x01,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xb2,0x7d]
0x65,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb2,0x7d]
0x66,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb2,0x7d]
0x67,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xb2,0x7d]
0x6a,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xb2,0x7d]
0x6b,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xb2,0x7d]
0x6c,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xb2,0x7d]
0x6d,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xb2,0x7d]
0x6e,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xb2,0x7d]
0x6f,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xb2,0x7d]
0x7b,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xb2,0x7d]
0x7c,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xb2,0x7d]
0x7e,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xb2,0x7d]
0x7f,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xb2,0x7d]
0x80,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xb2,0x7d]
0xc1,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xb2,0x7d]
0xf0,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xb2,0x7d]
0xf7,0x04,0xb2,0x7d

# CHECK: v_cmpx_lt_u32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xb2,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb2,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_lt_u32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xb2,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb2,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_lt_u32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xb3,0x7d]
0x01,0xff,0xb3,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xb4,0x7d]
0x01,0x05,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xb4,0x7d]
0xff,0x05,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xb4,0x7d]
0x01,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xb4,0x7d]
0x65,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb4,0x7d]
0x66,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb4,0x7d]
0x67,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xb4,0x7d]
0x6a,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xb4,0x7d]
0x6b,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xb4,0x7d]
0x6c,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xb4,0x7d]
0x6d,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xb4,0x7d]
0x6e,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xb4,0x7d]
0x6f,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xb4,0x7d]
0x7b,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xb4,0x7d]
0x7c,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xb4,0x7d]
0x7e,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xb4,0x7d]
0x7f,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xb4,0x7d]
0x80,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xb4,0x7d]
0xc1,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xb4,0x7d]
0xf0,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xb4,0x7d]
0xf7,0x04,0xb4,0x7d

# CHECK: v_cmpx_eq_u32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xb4,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb4,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_eq_u32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xb4,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb4,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_eq_u32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xb5,0x7d]
0x01,0xff,0xb5,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xb6,0x7d]
0x01,0x05,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xb6,0x7d]
0xff,0x05,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xb6,0x7d]
0x01,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xb6,0x7d]
0x65,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb6,0x7d]
0x66,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb6,0x7d]
0x67,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xb6,0x7d]
0x6a,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xb6,0x7d]
0x6b,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xb6,0x7d]
0x6c,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xb6,0x7d]
0x6d,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xb6,0x7d]
0x6e,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xb6,0x7d]
0x6f,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xb6,0x7d]
0x7b,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xb6,0x7d]
0x7c,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xb6,0x7d]
0x7e,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xb6,0x7d]
0x7f,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xb6,0x7d]
0x80,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xb6,0x7d]
0xc1,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xb6,0x7d]
0xf0,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xb6,0x7d]
0xf7,0x04,0xb6,0x7d

# CHECK: v_cmpx_le_u32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xb6,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb6,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_le_u32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xb6,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb6,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_le_u32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xb7,0x7d]
0x01,0xff,0xb7,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xb8,0x7d]
0x01,0x05,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xb8,0x7d]
0xff,0x05,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xb8,0x7d]
0x01,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xb8,0x7d]
0x65,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xb8,0x7d]
0x66,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xb8,0x7d]
0x67,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xb8,0x7d]
0x6a,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xb8,0x7d]
0x6b,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xb8,0x7d]
0x6c,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xb8,0x7d]
0x6d,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xb8,0x7d]
0x6e,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xb8,0x7d]
0x6f,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xb8,0x7d]
0x7b,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xb8,0x7d]
0x7c,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xb8,0x7d]
0x7e,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xb8,0x7d]
0x7f,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xb8,0x7d]
0x80,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xb8,0x7d]
0xc1,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xb8,0x7d]
0xf0,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xb8,0x7d]
0xf7,0x04,0xb8,0x7d

# CHECK: v_cmpx_gt_u32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xb8,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xb8,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_gt_u32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xb8,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xb8,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_gt_u32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xb9,0x7d]
0x01,0xff,0xb9,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xba,0x7d]
0x01,0x05,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xba,0x7d]
0xff,0x05,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xba,0x7d]
0x01,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xba,0x7d]
0x65,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xba,0x7d]
0x66,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xba,0x7d]
0x67,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xba,0x7d]
0x6a,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xba,0x7d]
0x6b,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xba,0x7d]
0x6c,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xba,0x7d]
0x6d,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xba,0x7d]
0x6e,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xba,0x7d]
0x6f,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xba,0x7d]
0x7b,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xba,0x7d]
0x7c,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xba,0x7d]
0x7e,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xba,0x7d]
0x7f,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xba,0x7d]
0x80,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xba,0x7d]
0xc1,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xba,0x7d]
0xf0,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xba,0x7d]
0xf7,0x04,0xba,0x7d

# CHECK: v_cmpx_ne_u32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xba,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xba,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ne_u32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xba,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xba,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ne_u32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xbb,0x7d]
0x01,0xff,0xbb,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, v1, v2           ; encoding: [0x01,0x05,0xbc,0x7d]
0x01,0x05,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, v255, v2         ; encoding: [0xff,0x05,0xbc,0x7d]
0xff,0x05,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, s1, v2           ; encoding: [0x01,0x04,0xbc,0x7d]
0x01,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, s101, v2         ; encoding: [0x65,0x04,0xbc,0x7d]
0x65,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xbc,0x7d]
0x66,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xbc,0x7d]
0x67,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, vcc_lo, v2       ; encoding: [0x6a,0x04,0xbc,0x7d]
0x6a,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, vcc_hi, v2       ; encoding: [0x6b,0x04,0xbc,0x7d]
0x6b,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, tba_lo, v2       ; encoding: [0x6c,0x04,0xbc,0x7d]
0x6c,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, tba_hi, v2       ; encoding: [0x6d,0x04,0xbc,0x7d]
0x6d,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, tma_lo, v2       ; encoding: [0x6e,0x04,0xbc,0x7d]
0x6e,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, tma_hi, v2       ; encoding: [0x6f,0x04,0xbc,0x7d]
0x6f,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, ttmp11, v2       ; encoding: [0x7b,0x04,0xbc,0x7d]
0x7b,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, m0, v2           ; encoding: [0x7c,0x04,0xbc,0x7d]
0x7c,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, exec_lo, v2      ; encoding: [0x7e,0x04,0xbc,0x7d]
0x7e,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, exec_hi, v2      ; encoding: [0x7f,0x04,0xbc,0x7d]
0x7f,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, 0, v2            ; encoding: [0x80,0x04,0xbc,0x7d]
0x80,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, -1, v2           ; encoding: [0xc1,0x04,0xbc,0x7d]
0xc1,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, 0.5, v2          ; encoding: [0xf0,0x04,0xbc,0x7d]
0xf0,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, -4.0, v2         ; encoding: [0xf7,0x04,0xbc,0x7d]
0xf7,0x04,0xbc,0x7d

# CHECK: v_cmpx_ge_u32_e32 vcc, 0xaf123456, v2   ; encoding: [0xff,0x04,0xbc,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xbc,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ge_u32_e32 vcc, 0x3f717273, v2   ; encoding: [0xff,0x04,0xbc,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xbc,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ge_u32_e32 vcc, v1, v255         ; encoding: [0x01,0xff,0xbd,0x7d]
0x01,0xff,0xbd,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, v1, v2            ; encoding: [0x01,0x05,0xbe,0x7d]
0x01,0x05,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, v255, v2          ; encoding: [0xff,0x05,0xbe,0x7d]
0xff,0x05,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, s1, v2            ; encoding: [0x01,0x04,0xbe,0x7d]
0x01,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, s101, v2          ; encoding: [0x65,0x04,0xbe,0x7d]
0x65,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, flat_scratch_lo, v2 ; encoding: [0x66,0x04,0xbe,0x7d]
0x66,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, flat_scratch_hi, v2 ; encoding: [0x67,0x04,0xbe,0x7d]
0x67,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, vcc_lo, v2        ; encoding: [0x6a,0x04,0xbe,0x7d]
0x6a,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, vcc_hi, v2        ; encoding: [0x6b,0x04,0xbe,0x7d]
0x6b,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, tba_lo, v2        ; encoding: [0x6c,0x04,0xbe,0x7d]
0x6c,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, tba_hi, v2        ; encoding: [0x6d,0x04,0xbe,0x7d]
0x6d,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, tma_lo, v2        ; encoding: [0x6e,0x04,0xbe,0x7d]
0x6e,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, tma_hi, v2        ; encoding: [0x6f,0x04,0xbe,0x7d]
0x6f,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, ttmp11, v2        ; encoding: [0x7b,0x04,0xbe,0x7d]
0x7b,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, m0, v2            ; encoding: [0x7c,0x04,0xbe,0x7d]
0x7c,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, exec_lo, v2       ; encoding: [0x7e,0x04,0xbe,0x7d]
0x7e,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, exec_hi, v2       ; encoding: [0x7f,0x04,0xbe,0x7d]
0x7f,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, 0, v2             ; encoding: [0x80,0x04,0xbe,0x7d]
0x80,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, -1, v2            ; encoding: [0xc1,0x04,0xbe,0x7d]
0xc1,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, 0.5, v2           ; encoding: [0xf0,0x04,0xbe,0x7d]
0xf0,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, -4.0, v2          ; encoding: [0xf7,0x04,0xbe,0x7d]
0xf7,0x04,0xbe,0x7d

# CHECK: v_cmpx_t_u32_e32 vcc, 0xaf123456, v2    ; encoding: [0xff,0x04,0xbe,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xbe,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_t_u32_e32 vcc, 0x3f717273, v2    ; encoding: [0xff,0x04,0xbe,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xbe,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_t_u32_e32 vcc, v1, v255          ; encoding: [0x01,0xff,0xbf,0x7d]
0x01,0xff,0xbf,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xe0,0x7d]
0x01,0x05,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe0,0x7d]
0xfe,0x05,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xe0,0x7d]
0x02,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xe0,0x7d]
0x04,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe0,0x7d]
0x64,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe0,0x7d]
0x66,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xe0,0x7d]
0x6a,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xe0,0x7d]
0x6c,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xe0,0x7d]
0x6e,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe0,0x7d]
0x7a,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xe0,0x7d]
0x7e,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xe0,0x7d]
0x80,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xe0,0x7d]
0xc1,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xe0,0x7d]
0xf0,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xe0,0x7d]
0xf7,0x04,0xe0,0x7d

# CHECK: v_cmpx_f_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe0,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe0,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_f_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe0,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe0,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_f_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe1,0x7d]
0x01,0xfd,0xe1,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xe2,0x7d]
0x01,0x05,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe2,0x7d]
0xfe,0x05,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xe2,0x7d]
0x02,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xe2,0x7d]
0x04,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe2,0x7d]
0x64,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe2,0x7d]
0x66,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xe2,0x7d]
0x6a,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xe2,0x7d]
0x6c,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xe2,0x7d]
0x6e,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe2,0x7d]
0x7a,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xe2,0x7d]
0x7e,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xe2,0x7d]
0x80,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xe2,0x7d]
0xc1,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xe2,0x7d]
0xf0,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xe2,0x7d]
0xf7,0x04,0xe2,0x7d

# CHECK: v_cmpx_lt_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe2,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe2,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_lt_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe2,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe2,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_lt_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe3,0x7d]
0x01,0xfd,0xe3,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xe4,0x7d]
0x01,0x05,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe4,0x7d]
0xfe,0x05,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xe4,0x7d]
0x02,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xe4,0x7d]
0x04,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe4,0x7d]
0x64,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe4,0x7d]
0x66,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xe4,0x7d]
0x6a,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xe4,0x7d]
0x6c,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xe4,0x7d]
0x6e,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe4,0x7d]
0x7a,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xe4,0x7d]
0x7e,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xe4,0x7d]
0x80,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xe4,0x7d]
0xc1,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xe4,0x7d]
0xf0,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xe4,0x7d]
0xf7,0x04,0xe4,0x7d

# CHECK: v_cmpx_eq_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe4,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe4,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_eq_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe4,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe4,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_eq_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe5,0x7d]
0x01,0xfd,0xe5,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xe6,0x7d]
0x01,0x05,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe6,0x7d]
0xfe,0x05,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xe6,0x7d]
0x02,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xe6,0x7d]
0x04,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe6,0x7d]
0x64,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe6,0x7d]
0x66,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xe6,0x7d]
0x6a,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xe6,0x7d]
0x6c,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xe6,0x7d]
0x6e,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe6,0x7d]
0x7a,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xe6,0x7d]
0x7e,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xe6,0x7d]
0x80,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xe6,0x7d]
0xc1,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xe6,0x7d]
0xf0,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xe6,0x7d]
0xf7,0x04,0xe6,0x7d

# CHECK: v_cmpx_le_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe6,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe6,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_le_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe6,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe6,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_le_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe7,0x7d]
0x01,0xfd,0xe7,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xe8,0x7d]
0x01,0x05,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xe8,0x7d]
0xfe,0x05,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xe8,0x7d]
0x02,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xe8,0x7d]
0x04,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xe8,0x7d]
0x64,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xe8,0x7d]
0x66,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xe8,0x7d]
0x6a,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xe8,0x7d]
0x6c,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xe8,0x7d]
0x6e,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xe8,0x7d]
0x7a,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xe8,0x7d]
0x7e,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xe8,0x7d]
0x80,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xe8,0x7d]
0xc1,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xe8,0x7d]
0xf0,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xe8,0x7d]
0xf7,0x04,0xe8,0x7d

# CHECK: v_cmpx_gt_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xe8,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xe8,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_gt_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xe8,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xe8,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_gt_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xe9,0x7d]
0x01,0xfd,0xe9,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xea,0x7d]
0x01,0x05,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xea,0x7d]
0xfe,0x05,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xea,0x7d]
0x02,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xea,0x7d]
0x04,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xea,0x7d]
0x64,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xea,0x7d]
0x66,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xea,0x7d]
0x6a,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xea,0x7d]
0x6c,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xea,0x7d]
0x6e,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xea,0x7d]
0x7a,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xea,0x7d]
0x7e,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xea,0x7d]
0x80,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xea,0x7d]
0xc1,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xea,0x7d]
0xf0,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xea,0x7d]
0xf7,0x04,0xea,0x7d

# CHECK: v_cmpx_ne_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xea,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xea,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ne_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xea,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xea,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ne_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xeb,0x7d]
0x01,0xfd,0xeb,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xec,0x7d]
0x01,0x05,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xec,0x7d]
0xfe,0x05,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xec,0x7d]
0x02,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xec,0x7d]
0x04,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xec,0x7d]
0x64,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xec,0x7d]
0x66,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xec,0x7d]
0x6a,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xec,0x7d]
0x6c,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xec,0x7d]
0x6e,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xec,0x7d]
0x7a,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xec,0x7d]
0x7e,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xec,0x7d]
0x80,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xec,0x7d]
0xc1,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xec,0x7d]
0xf0,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xec,0x7d]
0xf7,0x04,0xec,0x7d

# CHECK: v_cmpx_ge_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xec,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xec,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ge_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xec,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xec,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ge_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xed,0x7d]
0x01,0xfd,0xed,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xee,0x7d]
0x01,0x05,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xee,0x7d]
0xfe,0x05,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xee,0x7d]
0x02,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xee,0x7d]
0x04,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xee,0x7d]
0x64,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xee,0x7d]
0x66,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xee,0x7d]
0x6a,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xee,0x7d]
0x6c,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xee,0x7d]
0x6e,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xee,0x7d]
0x7a,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xee,0x7d]
0x7e,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xee,0x7d]
0x80,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xee,0x7d]
0xc1,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xee,0x7d]
0xf0,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xee,0x7d]
0xf7,0x04,0xee,0x7d

# CHECK: v_cmpx_t_i64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xee,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xee,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_t_i64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xee,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xee,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_t_i64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xef,0x7d]
0x01,0xfd,0xef,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xf0,0x7d]
0x01,0x05,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf0,0x7d]
0xfe,0x05,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xf0,0x7d]
0x02,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xf0,0x7d]
0x04,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf0,0x7d]
0x64,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf0,0x7d]
0x66,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xf0,0x7d]
0x6a,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xf0,0x7d]
0x6c,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xf0,0x7d]
0x6e,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf0,0x7d]
0x7a,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xf0,0x7d]
0x7e,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xf0,0x7d]
0x80,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xf0,0x7d]
0xc1,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xf0,0x7d]
0xf0,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xf0,0x7d]
0xf7,0x04,0xf0,0x7d

# CHECK: v_cmpx_f_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf0,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf0,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_f_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf0,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf0,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_f_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf1,0x7d]
0x01,0xfd,0xf1,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xf2,0x7d]
0x01,0x05,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf2,0x7d]
0xfe,0x05,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xf2,0x7d]
0x02,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xf2,0x7d]
0x04,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf2,0x7d]
0x64,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf2,0x7d]
0x66,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xf2,0x7d]
0x6a,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xf2,0x7d]
0x6c,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xf2,0x7d]
0x6e,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf2,0x7d]
0x7a,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xf2,0x7d]
0x7e,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xf2,0x7d]
0x80,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xf2,0x7d]
0xc1,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xf2,0x7d]
0xf0,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xf2,0x7d]
0xf7,0x04,0xf2,0x7d

# CHECK: v_cmpx_lt_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf2,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf2,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_lt_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf2,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf2,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_lt_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf3,0x7d]
0x01,0xfd,0xf3,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xf4,0x7d]
0x01,0x05,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf4,0x7d]
0xfe,0x05,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xf4,0x7d]
0x02,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xf4,0x7d]
0x04,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf4,0x7d]
0x64,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf4,0x7d]
0x66,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xf4,0x7d]
0x6a,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xf4,0x7d]
0x6c,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xf4,0x7d]
0x6e,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf4,0x7d]
0x7a,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xf4,0x7d]
0x7e,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xf4,0x7d]
0x80,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xf4,0x7d]
0xc1,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xf4,0x7d]
0xf0,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xf4,0x7d]
0xf7,0x04,0xf4,0x7d

# CHECK: v_cmpx_eq_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf4,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf4,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_eq_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf4,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf4,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_eq_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf5,0x7d]
0x01,0xfd,0xf5,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xf6,0x7d]
0x01,0x05,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf6,0x7d]
0xfe,0x05,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xf6,0x7d]
0x02,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xf6,0x7d]
0x04,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf6,0x7d]
0x64,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf6,0x7d]
0x66,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xf6,0x7d]
0x6a,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xf6,0x7d]
0x6c,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xf6,0x7d]
0x6e,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf6,0x7d]
0x7a,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xf6,0x7d]
0x7e,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xf6,0x7d]
0x80,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xf6,0x7d]
0xc1,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xf6,0x7d]
0xf0,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xf6,0x7d]
0xf7,0x04,0xf6,0x7d

# CHECK: v_cmpx_le_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf6,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf6,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_le_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf6,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf6,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_le_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf7,0x7d]
0x01,0xfd,0xf7,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xf8,0x7d]
0x01,0x05,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xf8,0x7d]
0xfe,0x05,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xf8,0x7d]
0x02,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xf8,0x7d]
0x04,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xf8,0x7d]
0x64,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xf8,0x7d]
0x66,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xf8,0x7d]
0x6a,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xf8,0x7d]
0x6c,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xf8,0x7d]
0x6e,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xf8,0x7d]
0x7a,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xf8,0x7d]
0x7e,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xf8,0x7d]
0x80,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xf8,0x7d]
0xc1,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xf8,0x7d]
0xf0,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xf8,0x7d]
0xf7,0x04,0xf8,0x7d

# CHECK: v_cmpx_gt_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xf8,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xf8,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_gt_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xf8,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xf8,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_gt_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xf9,0x7d]
0x01,0xfd,0xf9,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xfa,0x7d]
0x01,0x05,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xfa,0x7d]
0xfe,0x05,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xfa,0x7d]
0x02,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xfa,0x7d]
0x04,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xfa,0x7d]
0x64,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xfa,0x7d]
0x66,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xfa,0x7d]
0x6a,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xfa,0x7d]
0x6c,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xfa,0x7d]
0x6e,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xfa,0x7d]
0x7a,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xfa,0x7d]
0x7e,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xfa,0x7d]
0x80,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xfa,0x7d]
0xc1,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xfa,0x7d]
0xf0,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xfa,0x7d]
0xf7,0x04,0xfa,0x7d

# CHECK: v_cmpx_ne_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xfa,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xfa,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ne_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xfa,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xfa,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ne_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xfb,0x7d]
0x01,0xfd,0xfb,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, v[1:2], v[2:3]   ; encoding: [0x01,0x05,0xfc,0x7d]
0x01,0x05,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xfc,0x7d]
0xfe,0x05,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, s[2:3], v[2:3]   ; encoding: [0x02,0x04,0xfc,0x7d]
0x02,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, s[4:5], v[2:3]   ; encoding: [0x04,0x04,0xfc,0x7d]
0x04,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xfc,0x7d]
0x64,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xfc,0x7d]
0x66,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, vcc, v[2:3]      ; encoding: [0x6a,0x04,0xfc,0x7d]
0x6a,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, tba, v[2:3]      ; encoding: [0x6c,0x04,0xfc,0x7d]
0x6c,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, tma, v[2:3]      ; encoding: [0x6e,0x04,0xfc,0x7d]
0x6e,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xfc,0x7d]
0x7a,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, exec, v[2:3]     ; encoding: [0x7e,0x04,0xfc,0x7d]
0x7e,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, 0, v[2:3]        ; encoding: [0x80,0x04,0xfc,0x7d]
0x80,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, -1, v[2:3]       ; encoding: [0xc1,0x04,0xfc,0x7d]
0xc1,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, 0.5, v[2:3]      ; encoding: [0xf0,0x04,0xfc,0x7d]
0xf0,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, -4.0, v[2:3]     ; encoding: [0xf7,0x04,0xfc,0x7d]
0xf7,0x04,0xfc,0x7d

# CHECK: v_cmpx_ge_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xfc,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xfc,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_ge_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xfc,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xfc,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_ge_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xfd,0x7d]
0x01,0xfd,0xfd,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, v[1:2], v[2:3]    ; encoding: [0x01,0x05,0xfe,0x7d]
0x01,0x05,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, v[254:255], v[2:3] ; encoding: [0xfe,0x05,0xfe,0x7d]
0xfe,0x05,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, s[2:3], v[2:3]    ; encoding: [0x02,0x04,0xfe,0x7d]
0x02,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, s[4:5], v[2:3]    ; encoding: [0x04,0x04,0xfe,0x7d]
0x04,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, s[100:101], v[2:3] ; encoding: [0x64,0x04,0xfe,0x7d]
0x64,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, flat_scratch, v[2:3] ; encoding: [0x66,0x04,0xfe,0x7d]
0x66,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, vcc, v[2:3]       ; encoding: [0x6a,0x04,0xfe,0x7d]
0x6a,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, tba, v[2:3]       ; encoding: [0x6c,0x04,0xfe,0x7d]
0x6c,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, tma, v[2:3]       ; encoding: [0x6e,0x04,0xfe,0x7d]
0x6e,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, ttmp[10:11], v[2:3] ; encoding: [0x7a,0x04,0xfe,0x7d]
0x7a,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, exec, v[2:3]      ; encoding: [0x7e,0x04,0xfe,0x7d]
0x7e,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, 0, v[2:3]         ; encoding: [0x80,0x04,0xfe,0x7d]
0x80,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, -1, v[2:3]        ; encoding: [0xc1,0x04,0xfe,0x7d]
0xc1,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, 0.5, v[2:3]       ; encoding: [0xf0,0x04,0xfe,0x7d]
0xf0,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, -4.0, v[2:3]      ; encoding: [0xf7,0x04,0xfe,0x7d]
0xf7,0x04,0xfe,0x7d

# CHECK: v_cmpx_t_u64_e32 vcc, 0xaf123456, v[2:3] ; encoding: [0xff,0x04,0xfe,0x7d,0x56,0x34,0x12,0xaf]
0xff,0x04,0xfe,0x7d,0x56,0x34,0x12,0xaf

# CHECK: v_cmpx_t_u64_e32 vcc, 0x3f717273, v[2:3] ; encoding: [0xff,0x04,0xfe,0x7d,0x73,0x72,0x71,0x3f]
0xff,0x04,0xfe,0x7d,0x73,0x72,0x71,0x3f

# CHECK: v_cmpx_t_u64_e32 vcc, v[1:2], v[254:255] ; encoding: [0x01,0xfd,0xff,0x7d]
0x01,0xfd,0xff,0x7d
