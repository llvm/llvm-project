# RUN: llvm-mc -triple x86_64 -disassemble %s | FileCheck %s --check-prefix=ATT
# RUN: llvm-mc -triple x86_64 -disassemble -output-asm-variant=1 %s | FileCheck %s --check-prefix=INTEL

# ATT:   {evex}	rclb	$123, %bl
# INTEL: {evex}	rcl	bl, 123
0x62,0xf4,0x7c,0x08,0xc0,0xd3,0x7b

# ATT:   rclb	$123, %bl, %bl
# INTEL: rcl	bl, bl, 123
0x62,0xf4,0x64,0x18,0xc0,0xd3,0x7b

# ATT:   {evex}	rclw	$123, %dx
# INTEL: {evex}	rcl	dx, 123
0x62,0xf4,0x7d,0x08,0xc1,0xd2,0x7b

# ATT:   rclw	$123, %dx, %dx
# INTEL: rcl	dx, dx, 123
0x62,0xf4,0x6d,0x18,0xc1,0xd2,0x7b

# ATT:   {evex}	rcll	$123, %ecx
# INTEL: {evex}	rcl	ecx, 123
0x62,0xf4,0x7c,0x08,0xc1,0xd1,0x7b

# ATT:   rcll	$123, %ecx, %ecx
# INTEL: rcl	ecx, ecx, 123
0x62,0xf4,0x74,0x18,0xc1,0xd1,0x7b

# ATT:   {evex}	rclq	$123, %r9
# INTEL: {evex}	rcl	r9, 123
0x62,0xd4,0xfc,0x08,0xc1,0xd1,0x7b

# ATT:   rclq	$123, %r9, %r9
# INTEL: rcl	r9, r9, 123
0x62,0xd4,0xb4,0x18,0xc1,0xd1,0x7b

# ATT:   {evex}	rclb	$123, 291(%r8,%rax,4)
# INTEL: {evex}	rcl	byte ptr [r8 + 4*rax + 291], 123
0x62,0xd4,0x7c,0x08,0xc0,0x94,0x80,0x23,0x01,0x00,0x00,0x7b

# ATT:   rclb	$123, 291(%r8,%rax,4), %bl
# INTEL: rcl	bl, byte ptr [r8 + 4*rax + 291], 123
0x62,0xd4,0x64,0x18,0xc0,0x94,0x80,0x23,0x01,0x00,0x00,0x7b

# ATT:   {evex}	rclw	$123, 291(%r8,%rax,4)
# INTEL: {evex}	rcl	word ptr [r8 + 4*rax + 291], 123
0x62,0xd4,0x7d,0x08,0xc1,0x94,0x80,0x23,0x01,0x00,0x00,0x7b

# ATT:   rclw	$123, 291(%r8,%rax,4), %dx
# INTEL: rcl	dx, word ptr [r8 + 4*rax + 291], 123
0x62,0xd4,0x6d,0x18,0xc1,0x94,0x80,0x23,0x01,0x00,0x00,0x7b

# ATT:   {evex}	rcll	$123, 291(%r8,%rax,4)
# INTEL: {evex}	rcl	dword ptr [r8 + 4*rax + 291], 123
0x62,0xd4,0x7c,0x08,0xc1,0x94,0x80,0x23,0x01,0x00,0x00,0x7b

# ATT:   rcll	$123, 291(%r8,%rax,4), %ecx
# INTEL: rcl	ecx, dword ptr [r8 + 4*rax + 291], 123
0x62,0xd4,0x74,0x18,0xc1,0x94,0x80,0x23,0x01,0x00,0x00,0x7b

# ATT:   {evex}	rclq	$123, 291(%r8,%rax,4)
# INTEL: {evex}	rcl	qword ptr [r8 + 4*rax + 291], 123
0x62,0xd4,0xfc,0x08,0xc1,0x94,0x80,0x23,0x01,0x00,0x00,0x7b

# ATT:   rclq	$123, 291(%r8,%rax,4), %r9
# INTEL: rcl	r9, qword ptr [r8 + 4*rax + 291], 123
0x62,0xd4,0xb4,0x18,0xc1,0x94,0x80,0x23,0x01,0x00,0x00,0x7b

# ATT:   {evex}	rclb	%bl
# INTEL: {evex}	rcl	bl
0x62,0xf4,0x7c,0x08,0xd0,0xd3

# ATT:   rclb	%bl, %bl
# INTEL: rcl	bl, bl
0x62,0xf4,0x64,0x18,0xd0,0xd3

# ATT:   {evex}	rclb	%cl, %bl
# INTEL: {evex}	rcl	bl, cl
0x62,0xf4,0x7c,0x08,0xd2,0xd3

# ATT:   rclb	%cl, %bl, %bl
# INTEL: rcl	bl, bl, cl
0x62,0xf4,0x64,0x18,0xd2,0xd3

# ATT:   {evex}	rclw	%cl, %dx
# INTEL: {evex}	rcl	dx, cl
0x62,0xf4,0x7d,0x08,0xd3,0xd2

# ATT:   rclw	%cl, %dx, %dx
# INTEL: rcl	dx, dx, cl
0x62,0xf4,0x6d,0x18,0xd3,0xd2

# ATT:   {evex}	rcll	%cl, %ecx
# INTEL: {evex}	rcl	ecx, cl
0x62,0xf4,0x7c,0x08,0xd3,0xd1

# ATT:   rcll	%cl, %ecx, %ecx
# INTEL: rcl	ecx, ecx, cl
0x62,0xf4,0x74,0x18,0xd3,0xd1

# ATT:   {evex}	rclq	%cl, %r9
# INTEL: {evex}	rcl	r9, cl
0x62,0xd4,0xfc,0x08,0xd3,0xd1

# ATT:   rclq	%cl, %r9, %r9
# INTEL: rcl	r9, r9, cl
0x62,0xd4,0xb4,0x18,0xd3,0xd1

# ATT:   {evex}	rclb	%cl, 291(%r8,%rax,4)
# INTEL: {evex}	rcl	byte ptr [r8 + 4*rax + 291], cl
0x62,0xd4,0x7c,0x08,0xd2,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   rclb	%cl, 291(%r8,%rax,4), %bl
# INTEL: rcl	bl, byte ptr [r8 + 4*rax + 291], cl
0x62,0xd4,0x64,0x18,0xd2,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   {evex}	rclw	%cl, 291(%r8,%rax,4)
# INTEL: {evex}	rcl	word ptr [r8 + 4*rax + 291], cl
0x62,0xd4,0x7d,0x08,0xd3,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   rclw	%cl, 291(%r8,%rax,4), %dx
# INTEL: rcl	dx, word ptr [r8 + 4*rax + 291], cl
0x62,0xd4,0x6d,0x18,0xd3,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   {evex}	rcll	%cl, 291(%r8,%rax,4)
# INTEL: {evex}	rcl	dword ptr [r8 + 4*rax + 291], cl
0x62,0xd4,0x7c,0x08,0xd3,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   rcll	%cl, 291(%r8,%rax,4), %ecx
# INTEL: rcl	ecx, dword ptr [r8 + 4*rax + 291], cl
0x62,0xd4,0x74,0x18,0xd3,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   {evex}	rclq	%cl, 291(%r8,%rax,4)
# INTEL: {evex}	rcl	qword ptr [r8 + 4*rax + 291], cl
0x62,0xd4,0xfc,0x08,0xd3,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   rclq	%cl, 291(%r8,%rax,4), %r9
# INTEL: rcl	r9, qword ptr [r8 + 4*rax + 291], cl
0x62,0xd4,0xb4,0x18,0xd3,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   {evex}	rclw	%dx
# INTEL: {evex}	rcl	dx
0x62,0xf4,0x7d,0x08,0xd1,0xd2

# ATT:   rclw	%dx, %dx
# INTEL: rcl	dx, dx
0x62,0xf4,0x6d,0x18,0xd1,0xd2

# ATT:   {evex}	rcll	%ecx
# INTEL: {evex}	rcl	ecx
0x62,0xf4,0x7c,0x08,0xd1,0xd1

# ATT:   rcll	%ecx, %ecx
# INTEL: rcl	ecx, ecx
0x62,0xf4,0x74,0x18,0xd1,0xd1

# ATT:   {evex}	rclq	%r9
# INTEL: {evex}	rcl	r9
0x62,0xd4,0xfc,0x08,0xd1,0xd1

# ATT:   rclq	%r9, %r9
# INTEL: rcl	r9, r9
0x62,0xd4,0xb4,0x18,0xd1,0xd1

# ATT:   {evex}	rclb	291(%r8,%rax,4)
# INTEL: {evex}	rcl	byte ptr [r8 + 4*rax + 291]
0x62,0xd4,0x7c,0x08,0xd0,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   rclb	291(%r8,%rax,4), %bl
# INTEL: rcl	bl, byte ptr [r8 + 4*rax + 291]
0x62,0xd4,0x64,0x18,0xd0,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   {evex}	rclw	291(%r8,%rax,4)
# INTEL: {evex}	rcl	word ptr [r8 + 4*rax + 291]
0x62,0xd4,0x7d,0x08,0xd1,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   rclw	291(%r8,%rax,4), %dx
# INTEL: rcl	dx, word ptr [r8 + 4*rax + 291]
0x62,0xd4,0x6d,0x18,0xd1,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   {evex}	rcll	291(%r8,%rax,4)
# INTEL: {evex}	rcl	dword ptr [r8 + 4*rax + 291]
0x62,0xd4,0x7c,0x08,0xd1,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   rcll	291(%r8,%rax,4), %ecx
# INTEL: rcl	ecx, dword ptr [r8 + 4*rax + 291]
0x62,0xd4,0x74,0x18,0xd1,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   {evex}	rclq	291(%r8,%rax,4)
# INTEL: {evex}	rcl	qword ptr [r8 + 4*rax + 291]
0x62,0xd4,0xfc,0x08,0xd1,0x94,0x80,0x23,0x01,0x00,0x00

# ATT:   rclq	291(%r8,%rax,4), %r9
# INTEL: rcl	r9, qword ptr [r8 + 4*rax + 291]
0x62,0xd4,0xb4,0x18,0xd1,0x94,0x80,0x23,0x01,0x00,0x00
