; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=next32 -mattr=+lea < %s | FileCheck %s
; RUN: llc -mtriple=next32 -filetype=obj -o - %s | llvm-objdump --triple=next32 -d - | FileCheck %s

; Original C source:
; typedef struct {
;   int x;
;   int y;
; } Point;
;
; void foo(int *a, int *b);
;
; int test1(Point* p, int idx) {
;   return p[idx].x;
; }
;

%struct.Point = type { i32, i32 }

define i32 @test1(%struct.Point* nocapture readonly %p, i32 %idx) {
; CHECK-LABEL: test1
; CHECK:    movl r4, 0x1F
; CHECK-NEXT:    dup r5, r3
; CHECK-NEXT:    shri r5, r4
; CHECK-NEXT:    movl r4, 0x8
; CHECK-NEXT:    movl r6, 0x0
; CHECK-NEXT:    leadisp r6, r6
; CHECK-NEXT:    leascale r6, r4
; CHECK-NEXT:    leaindex r5, r3
; CHECK-NEXT:    leabase r2, r1
entry:
  %idxprom = sext i32 %idx to i64
  %x = getelementptr inbounds %struct.Point, %struct.Point* %p, i64 %idxprom, i32 0
  %0 = load i32, i32* %x, align 4
  ret i32 %0
}
