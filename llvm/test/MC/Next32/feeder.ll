; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=next32 < %s | FileCheck %s
; RUN: llc -mtriple=next32 -filetype=obj -o - %s | llvm-objdump --triple=next32 -d - | FileCheck %s

define dso_local i32 @f32_w32(i32 noundef %0, i32* nocapture noundef writeonly %1, i1 noundef zeroext %2) {
; CHECK-LABEL: f32_w32
; CHECK:    feeder.32 tid
; CHECK-NEXT:    feeder.32 ret_fid
; CHECK-NEXT:    feeder.32 r1
; CHECK-NEXT:    feeder.64 r2
; CHECK-NEXT:    feeder.64 r3
; CHECK-NEXT:    feeder.8 r4
; CHECK:    writer.32 mbb_addr, tid
; CHECK-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NEXT:    writer.32 mbb_addr, r1
; CHECK:    writer.32 mbb_addr, tid
; CHECK-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NEXT:    writer.32 mbb_addr, r1
; CHECK-NEXT:    writer.32 mbb_addr, r2
; CHECK-NEXT:    writer.32 mbb_addr, r3
; CHECK:    feeder.p.32 tid
; CHECK-NEXT:    feeder.p.32 ret_fid
; CHECK-NEXT:    feeder.p.32 r1
; CHECK-NEXT:    feeder.p.32 r2
; CHECK-NEXT:    feeder.p.32 r3
; CHECK:    writer.32 mbb_addr, tid
; CHECK-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NEXT:    writer.32 mbb_addr, r1
; CHECK:    feeder.p.32 tid
; CHECK-NEXT:    feeder.p.32 ret_fid
; CHECK-NEXT:    feeder.p.32 r1
; CHECK:    writer.32 mbb_addr, tid
; CHECK-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NEXT:    writer.32 mbb_addr, r1
; CHECK:    feeder.p.32 tid
; CHECK-NEXT:    feeder.p.32 ret_fid
; CHECK-NEXT:    feeder.p.32 r1
; CHECK:    writer.32 ret_fid, tid
; CHECK-NEXT:    writer.32 ret_fid, r1
  br i1 %2, label %4, label %5

4:                                                ; preds = %3
  store i32 %0, i32* %1, align 4
  br label %7

5:                                                ; preds = %3
  %6 = shl i32 %0, 1
  br label %7

7:                                                ; preds = %5, %4
  %8 = phi i32 [ %0, %4 ], [ %6, %5 ]
  ret i32 %8
}
