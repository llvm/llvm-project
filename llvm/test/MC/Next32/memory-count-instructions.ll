; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=next32 -mcpu=next32gen2 < %s | FileCheck %s
; RUN: llc -mtriple=next32 -mcpu=next32gen2 -filetype=obj -o - %s | llvm-objdump --triple=next32 --mcpu=next32gen2 -d - | FileCheck %s

define dso_local ptr @memreadwrite2x32(ptr noundef returned %a, <2 x i32> noundef %b) {
; CHECK:    memread.2.64.align[8] r2, r1, tid
; CHECK:    memwrite.2.64.align[8] r2, r1, r7
entry:
  %0 = load <2 x i32>, ptr %a, align 8
  %add = add <2 x i32> %0, %b
  store <2 x i32> %add, ptr %a, align 8
  ret ptr %a
}

define dso_local ptr @memreadwrite4x32(ptr noundef returned %a, <4 x i32> noundef %b) {
; CHECK:    memread.4.128.align[16] r2, r1, tid
; CHECK:    memwrite.4.128.align[16] r2, r1, r11
entry:
  %0 = load <4 x i32>, ptr %a, align 16
  %add = add <4 x i32> %0, %b
  store <4 x i32> %add, ptr %a, align 16
  ret ptr %a
}

define dso_local ptr @memreadwrite8x32(ptr noundef returned %a, <8 x i32> noundef %b) {
; CHECK:    memread.8.256.align[32] r2, r1, tid
; CHECK:    memwrite.8.256.align[32] r2, r1, r19
entry:
  %0 = load <8 x i32>, ptr %a, align 32
  %add = add <8 x i32> %0, %b
  store <8 x i32> %add, ptr %a, align 32
  ret ptr %a
}

define dso_local ptr @memreadwrite16x32(ptr noundef returned %a, <16 x i32> noundef %b) {
; CHECK:    memread.16.512.align[64] r2, r1, tid
; CHECK:    memwrite.16.512.align[64] r2, r1, r35
entry:
  %0 = load <16 x i32>, ptr %a, align 64
  %add = add <16 x i32> %0, %b
  store <16 x i32> %add, ptr %a, align 64
  ret ptr %a
}

define dso_local ptr @memreadwrite32x32(ptr noundef returned %a, <32 x i32> noundef %b) {
; CHECK:    memread.16.512.align[64] r38, r36, tid
; CHECK:    memread.16.512.align[128] r2, r1, tid
; CHECK:    memwrite.16.512.align[64] r38, r36, r69
; CHECK:    memwrite.16.512.align[128] r2, r1, r69
entry:
  %0 = load <32 x i32>, ptr %a, align 128
  %add = add <32 x i32> %0, %b
  store <32 x i32> %add, ptr %a, align 128
  ret ptr %a
}

define dso_local ptr @memreadwrite2x64(ptr noundef returned %a, <2 x i64> noundef %b) {
; CHECK:    memread.2.128.align[16] r2, r1, tid
; CHECK:    memwrite.2.128.align[16] r2, r1, r4
entry:
  %0 = load <2 x i64>, ptr %a, align 16
  %add = add <2 x i64> %0, %b
  store <2 x i64> %add, ptr %a, align 16
  ret ptr %a
}

define dso_local ptr @memreadwrite4x64(ptr noundef returned %a, <4 x i64> noundef %b) {
; CHECK:    memread.4.256.align[32] r2, r1, tid
; CHECK:    memwrite.4.256.align[32] r2, r1, r4
entry:
  %0 = load <4 x i64>, ptr %a, align 32
  %add = add <4 x i64> %0, %b
  store <4 x i64> %add, ptr %a, align 32
  ret ptr %a
}

define dso_local ptr @memreadwrite8x64(ptr noundef returned %a, <8 x i64> noundef %b) {
; CHECK:    memread.8.512.align[64] r2, r1, tid
; CHECK:    memwrite.8.512.align[64] r2, r1, r4
entry:
  %0 = load <8 x i64>, ptr %a, align 64
  %add = add <8 x i64> %0, %b
  store <8 x i64> %add, ptr %a, align 64
  ret ptr %a
}
