; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -mtriple=arm-none-eabi -passes=globalopt -S | FileCheck %s

; CHECK: [65 x i8]
; CHECK-NOT: [68 x i8]
@.str = private unnamed_addr constant [65 x i8] c"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzz\00", align 1

; Function Attrs: nounwind
define  void @foo()   {
; CHECK-LABEL: define void @foo() local_unnamed_addr {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[SOMETHING:%.*]] = alloca [65 x i8], align 1
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 65, ptr nonnull [[SOMETHING]])
; CHECK-NEXT:    call void @llvm.memcpy.p0.p0.i32(ptr nonnull align 1 [[SOMETHING]], ptr align 1 @.str, i32 65, i1 false)
; CHECK-NEXT:    [[CALL2:%.*]] = call i32 @bar(ptr nonnull [[SOMETHING]])
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 65, ptr nonnull [[SOMETHING]])
; CHECK-NEXT:    ret void
;
entry:
  %something = alloca [65 x i8], align 1
  call void @llvm.lifetime.start(i64 65, ptr nonnull %something) #3
  call void @llvm.memcpy.p0i8.p0i8.i32(ptr align 1 nonnull %something, ptr align 1 @.str, i32 65, i1 false)
  %call2 = call i32 @bar(ptr nonnull %something) #3
  call void @llvm.lifetime.end(i64 65, ptr nonnull %something) #3
  ret void
}

declare i32 @bar(...)  #2
