; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature --check-globals
; RUN: opt -S -passes=globalopt -o - < %s | FileCheck %s

@g = internal addrspace(200) global ptr null, align 8

;.
; CHECK: @g.init = internal unnamed_addr addrspace(200) global i1 false
;.
define internal i32 @f1() {
; CHECK-LABEL: define {{[^@]+}}@f1() unnamed_addr {
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[G_INIT_VAL:%.*]] = load i1, ptr addrspace(200) @g.init, align 1
; CHECK-NEXT:    call fastcc void @f2()
; CHECK-NEXT:    [[NOTINIT:%.*]] = xor i1 [[G_INIT_VAL]], true
; CHECK-NEXT:    br i1 [[NOTINIT]], label [[BB2:%.*]], label [[BB3:%.*]]
; CHECK:       bb2:
; CHECK-NEXT:    br label [[BB4:%.*]]
; CHECK:       bb3:
; CHECK-NEXT:    br label [[BB4]]
; CHECK:       bb4:
; CHECK-NEXT:    [[I5:%.*]] = phi i32 [ -1, [[BB2]] ], [ 1, [[BB3]] ]
; CHECK-NEXT:    ret i32 [[I5]]
;
bb:
  %i = load ptr addrspace(200), ptr addrspace(200) @g, align 8
  call void @f2()
  %i1 = icmp eq ptr addrspace(200) %i, null
  br i1 %i1, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  br label %bb4

bb3:                                              ; preds = %bb
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %i5 = phi i32 [ -1, %bb2 ], [ 1, %bb3 ]
  ret i32 %i5
}

define internal void @f2() {
; CHECK-LABEL: define {{[^@]+}}@f2() unnamed_addr {
; CHECK-NEXT:  bb:
; CHECK-NEXT:    store i1 true, ptr addrspace(200) @g.init, align 1
; CHECK-NEXT:    ret void
;
bb:
  %i = call noalias ptr @malloc(i64 4)
  store ptr %i, ptr addrspace(200) @g, align 8
  ret void
}

define dso_local i32 @main() {
; CHECK-LABEL: define {{[^@]+}}@main() local_unnamed_addr {
; CHECK-NEXT:  bb:
; CHECK-NEXT:    store i1 false, ptr addrspace(200) @g.init, align 1
; CHECK-NEXT:    [[I:%.*]] = call fastcc i32 @f1()
; CHECK-NEXT:    ret i32 [[I]]
;
bb:
  store ptr null, ptr addrspace(200) @g, align 8
  %i = call i32 @f1()
  ret i32 %i
}

; Function Attrs: allockind("alloc,uninitialized") allocsize(0)
declare dso_local noalias ptr @malloc(i64) #0

attributes #0 = { allockind("alloc,uninitialized") allocsize(0) }
