; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=globalopt -S < %s | FileCheck %s

@g1 = internal unnamed_addr global i1 false
@g2 = internal unnamed_addr global i1 false
@g3 = internal unnamed_addr global i1 false
@g4 = internal unnamed_addr global i1 false

declare void @b()

define i1 @dom_const() {
; CHECK-LABEL: @dom_const(
; CHECK-NEXT:    store i1 true, ptr @g1, align 1
; CHECK-NEXT:    call void @b()
; CHECK-NEXT:    [[R:%.*]] = load i1, ptr @g1, align 1
; CHECK-NEXT:    ret i1 [[R]]
;
  store i1 true, ptr @g1
  call void @b()
  %r = load i1, ptr @g1
  ret i1 %r
}

define i32 @dom_arg(i32 %a) {
; CHECK-LABEL: @dom_arg(
; CHECK-NEXT:    store i32 [[A:%.*]], ptr @g2, align 4
; CHECK-NEXT:    call void @b()
; CHECK-NEXT:    [[R:%.*]] = load i32, ptr @g2, align 4
; CHECK-NEXT:    ret i32 [[R]]
;
  store i32 %a, ptr @g2
  call void @b()
  %r = load i32, ptr @g2
  ret i32 %r
}

define i32 @dom_different_types() {
; CHECK-LABEL: @dom_different_types(
; CHECK-NEXT:    store i1 true, ptr @g3, align 1
; CHECK-NEXT:    call void @b()
; CHECK-NEXT:    [[R:%.*]] = load i32, ptr @g3, align 4
; CHECK-NEXT:    ret i32 [[R]]
;
  store i1 true, ptr @g3
  call void @b()
  %r = load i32, ptr @g3
  ret i32 %r
}

define i1 @no_dom(i1 %i) {
; CHECK-LABEL: @no_dom(
; CHECK-NEXT:    br i1 [[I:%.*]], label [[BB1:%.*]], label [[END:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    store i1 true, ptr @g4, align 1
; CHECK-NEXT:    br label [[END]]
; CHECK:       end:
; CHECK-NEXT:    call void @b()
; CHECK-NEXT:    [[R:%.*]] = load i1, ptr @g4, align 1
; CHECK-NEXT:    ret i1 [[R]]
;
  br i1 %i, label %bb1, label %end
bb1:
  store i1 true, ptr @g4
  br label %end
end:
  call void @b()
  %r = load i1, ptr @g4
  ret i1 %r
}
