; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=globalopt -S < %s | FileCheck %s

@g = internal global ptr null, align 8

define signext i32 @f() local_unnamed_addr {
; CHECK-LABEL: @f(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @llvm.memset.p0.i64(ptr @g.body, i8 0, i64 4, i1 false)
; CHECK-NEXT:    store i16 -1, ptr @g.body, align 2
; CHECK-NEXT:    ret i32 0
;
entry:
  %call = call ptr @calloc(i64 1, i64 4)
  store ptr %call, ptr @g, align 8
  store i16 -1, ptr %call
  ret i32 0
}

define signext i32 @main() {
; CHECK-LABEL: @main(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CALL:%.*]] = call signext i32 @f()
; CHECK-NEXT:    call void @f1()
; CHECK-NEXT:    store i32 1, ptr @g.body, align 4
; CHECK-NEXT:    call void @f1()
; CHECK-NEXT:    store i8 2, ptr @g.body, align 4
; CHECK-NEXT:    call void @f1()
; CHECK-NEXT:    [[RES:%.*]] = load i32, ptr @g.body, align 4
; CHECK-NEXT:    ret i32 [[RES]]
;
entry:
  %call = call signext i32 @f()
  call void @f1()
  %v0 = load ptr, ptr @g, align 8
  store i32 1, ptr %v0, align 4
  call void @f1()
  %v1 = load ptr, ptr @g, align 8
  store i8 2, ptr %v1, align 4
  call void @f1()
  %v2 = load ptr, ptr @g, align 8
  %res = load i32, ptr %v2, align 4
  ret i32 %res
}

declare noalias align 16 ptr @calloc(i64, i64) allockind("alloc,zeroed") allocsize(0,1)
declare void @f1()
