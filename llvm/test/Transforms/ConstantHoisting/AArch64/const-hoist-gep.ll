; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -opaque-pointers=0 -passes=consthoist -consthoist-gep -S -o - %s | FileCheck %s

target triple = "aarch64-none--musleabi"

%0 = type { %1, %2, [9 x i16], %6, %7 }
%1 = type { i32, i32, i32, i32, i32, i32, i16, i16, i8, i8, i16, i32, i32, i16, i8, i8 }
%2 = type { i32, %3, i8, i8, i8, i8, i32, %4, %5, [16 x i8], i16, i16, i8, i8, i8, i8, i32, i32, i32 }
%3 = type { i16, i8, i8 }
%4 = type { i16, i8, i8 }
%5 = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%6 = type { i8, i8 }
%7 = type { [5 x i32], [3 x i32], [6 x i32], [3 x i32], [2 x i32], [4 x i32], [3 x i32], [2 x i32], [4 x i32], [5 x i32], [3 x i32], [6 x i32], [1 x i32], i32, i32, i32, i32, i32, i32 }

@global = external dso_local local_unnamed_addr global %0, align 4

; Check that constant GEP expressions are rewritten to one-dimensional
; (single-index) GEPs, whose base poiner is a multi-dimensional GEP.
define dso_local void @zot() {
; CHECK-LABEL: define dso_local void @zot() {
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[CONST:%.*]] = bitcast i32* getelementptr inbounds ([[TMP0:%.*]], %0* @global, i32 0, i32 4, i32 0, i32 0) to i32*
; CHECK-NEXT:    store i32 undef, i32* [[CONST]], align 4
; CHECK-NEXT:    [[BASE_BITCAST:%.*]] = bitcast i32* [[CONST]] to i8*
; CHECK-NEXT:    [[MAT_GEP:%.*]] = getelementptr i8, i8* [[BASE_BITCAST]], i32 4
; CHECK-NEXT:    [[MAT_BITCAST:%.*]] = bitcast i8* [[MAT_GEP]] to i32*
; CHECK-NEXT:    store i32 undef, i32* [[MAT_BITCAST]], align 4
; CHECK-NEXT:    [[BASE_BITCAST1:%.*]] = bitcast i32* [[CONST]] to i8*
; CHECK-NEXT:    [[MAT_GEP2:%.*]] = getelementptr i8, i8* [[BASE_BITCAST1]], i32 160
; CHECK-NEXT:    [[MAT_BITCAST3:%.*]] = bitcast i8* [[MAT_GEP2]] to i32*
; CHECK-NEXT:    store i32 undef, i32* [[MAT_BITCAST3]], align 4
; CHECK-NEXT:    [[BASE_BITCAST4:%.*]] = bitcast i32* [[CONST]] to i8*
; CHECK-NEXT:    [[MAT_GEP5:%.*]] = getelementptr i8, i8* [[BASE_BITCAST4]], i32 164
; CHECK-NEXT:    [[MAT_BITCAST6:%.*]] = bitcast i8* [[MAT_GEP5]] to i32*
; CHECK-NEXT:    store i32 undef, i32* [[MAT_BITCAST6]], align 4
; CHECK-NEXT:    ret void
;
bb:
  store i32 undef, i32* getelementptr inbounds (%0, %0* @global, i32 0, i32 4, i32 0, i32 0), align 4
  store i32 undef, i32* getelementptr inbounds (%0, %0* @global, i32 0, i32 4, i32 0, i32 1), align 4
  store i32 undef, i32* getelementptr inbounds (%0, %0* @global, i32 0, i32 4, i32 11, i32 0), align 4
  store i32 undef, i32* getelementptr inbounds (%0, %0* @global, i32 0, i32 4, i32 11, i32 1), align 4
  ret void
}

