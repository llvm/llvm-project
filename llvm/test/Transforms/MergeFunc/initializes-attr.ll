; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=mergefunc < %s | FileCheck %s

define internal void @test1(ptr initializes((0, 1)) %p) {
; CHECK-LABEL: define internal void @test1(
; CHECK-SAME: ptr initializes((0, 1)) [[P:%.*]]) {
; CHECK-NEXT:    store i16 0, ptr [[P]], align 2
; CHECK-NEXT:    ret void
;
  store i16 0, ptr %p
  ret void
}

define internal void @test2(ptr initializes((0, 1)) %p) {
  store i16 0, ptr %p
  ret void
}

define internal void @test3(ptr initializes((0, 2)) %p) {
; CHECK-LABEL: define internal void @test3(
; CHECK-SAME: ptr initializes((0, 2)) [[P:%.*]]) {
; CHECK-NEXT:    store i16 0, ptr [[P]], align 2
; CHECK-NEXT:    ret void
;
  store i16 0, ptr %p
  ret void
}

define internal void @test4(ptr initializes((0, 1), (2, 3)) %p) {
; CHECK-LABEL: define internal void @test4(
; CHECK-SAME: ptr initializes((0, 1), (2, 3)) [[P:%.*]]) {
; CHECK-NEXT:    store i16 0, ptr [[P]], align 2
; CHECK-NEXT:    ret void
;
  store i16 0, ptr %p
  ret void
}

define void @do_calls(ptr %p) {
; CHECK-LABEL: define void @do_calls(
; CHECK-SAME: ptr [[P:%.*]]) {
; CHECK-NEXT:    call void @test1(ptr [[P]])
; CHECK-NEXT:    call void @test1(ptr [[P]])
; CHECK-NEXT:    call void @test3(ptr [[P]])
; CHECK-NEXT:    call void @test4(ptr [[P]])
; CHECK-NEXT:    ret void
;
  call void @test1(ptr %p)
  call void @test2(ptr %p)
  call void @test3(ptr %p)
  call void @test4(ptr %p)
  ret void
}
