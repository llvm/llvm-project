; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -passes=newgvn -S < %s | FileCheck %s

declare void @use(i1)

define void @test1(float %x, float %y) {
; CHECK-LABEL: define void @test1
; CHECK-SAME: (float [[X:%.*]], float [[Y:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CMP1:%.*]] = fcmp oeq float [[Y]], [[X]]
; CHECK-NEXT:    call void @use(i1 [[CMP1]])
; CHECK-NEXT:    call void @use(i1 [[CMP1]])
; CHECK-NEXT:    ret void
;
entry:
  %cmp1 = fcmp nnan oeq float %y, %x
  %cmp2 = fcmp oeq float %x, %y
  call void @use(i1 %cmp1)
  call void @use(i1 %cmp2)
  ret void
}

define void @test2(i8 %start, i8 %high) {
; CHECK-LABEL: define void @test2
; CHECK-SAME: (i8 [[START:%.*]], i8 [[HIGH:%.*]]) {
; CHECK-NEXT:    [[START1:%.*]] = add i8 [[START]], 4
; CHECK-NEXT:    [[T1:%.*]] = icmp ult i8 [[START1]], [[HIGH]]
; CHECK-NEXT:    call void @use(i1 [[T1]])
; CHECK-NEXT:    call void @use(i1 [[T1]])
; CHECK-NEXT:    ret void
;
  %start1 = add nsw i8 %start, 4
  %t1 = icmp ult i8 %start1, %high
  call void @use(i1 %t1)

  %start2 = add i8 %start, 4
  %t2 = icmp ult i8 %start2, %high
  call void @use(i1 %t2)
  ret void
}
