; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=aggressive-instcombine --memchr-inline-threshold=2 < %s | FileCheck %s

declare ptr @memchr(ptr, i32, i64)

define ptr @test_memchr_small(ptr %p, i32 %val) {
; CHECK-LABEL: define ptr @test_memchr_small(
; CHECK-SAME: ptr [[P:%.*]], i32 [[VAL:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = trunc i32 [[VAL]] to i8
; CHECK-NEXT:    [[TMP1:%.*]] = load i8, ptr [[P]], align 1
; CHECK-NEXT:    [[TMP2:%.*]] = icmp eq i8 [[TMP1]], [[TMP0]]
; CHECK-NEXT:    [[TMP3:%.*]] = select i1 [[TMP2]], ptr [[P]], ptr null
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr i8, ptr [[P]], i64 1
; CHECK-NEXT:    [[TMP5:%.*]] = load i8, ptr [[TMP4]], align 1
; CHECK-NEXT:    [[TMP6:%.*]] = icmp eq i8 [[TMP5]], [[TMP0]]
; CHECK-NEXT:    [[TMP7:%.*]] = select i1 [[TMP6]], ptr [[TMP4]], ptr [[TMP3]]
; CHECK-NEXT:    ret ptr [[TMP7]]
;
entry:
  %res = call ptr @memchr(ptr %p, i32 %val, i64 2)
  ret ptr %res
}
