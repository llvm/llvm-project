; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature --check-attributes --check-globals
; RUN: opt -aa-pipeline=basic-aa -passes="attributor-cgscc,argpromotion" -S < %s | FileCheck %s --check-prefixes=CGSCC

; This used to crash because the attributor-cgscc pass rewrote the
; flag_GetFlagValue function but did not clear the cached analysis for the
; deleted function. Argument promotion got an invalid cache entry for the
; dominator tree of list_Car and things exploded.

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define i32 @clause_LiteralComputeWeight(ptr %call23) {
entry:
  br label %do.body

do.body:                                          ; preds = %do.body, %entry
  %Term.0 = phi ptr [ null, %entry ], [ %call24, %do.body ]
  %call2 = load volatile i32, ptr %Term.0, align 4
  %call3 = call i32 @flag_GetFlagValue(ptr null)
  %call24 = call ptr @list_Car(ptr %call23)
  br label %do.body
}

define internal i32 @flag_GetFlagValue(ptr %Store) #1 {
entry:
  ret i32 0
}

define internal ptr @list_Car(ptr %L) #0 {
entry:
  %0 = load ptr, ptr %L, align 8
  ret ptr %0
}
