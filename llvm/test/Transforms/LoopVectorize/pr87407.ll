; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=loop-vectorize -force-vector-width=4 -S %s | FileCheck %s

define i8 @pr87407(i8 %x, i64 %y, i64 %n) {
; CHECK-LABEL: define i8 @pr87407(
; CHECK-SAME: i8 [[X:%.*]], i64 [[Y:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    [[ZEXT_X:%.*]] = zext i8 [[X]] to i64
; CHECK-NEXT:    br label %[[LOOP:.*]]
; CHECK:       [[LOOP]]:
; CHECK-NEXT:    [[IV:%.*]] = phi i64 [ [[IV_NEXT:%.*]], %[[LOOP]] ], [ 0, %[[ENTRY]] ]
; CHECK-NEXT:    [[MAX:%.*]] = tail call i64 @llvm.umax.i64(i64 [[ZEXT_X]], i64 [[Y]])
; CHECK-NEXT:    [[CMP_MAX_0:%.*]] = icmp ne i64 [[MAX]], 0
; CHECK-NEXT:    [[ZEXT_CMP:%.*]] = zext i1 [[CMP_MAX_0]] to i64
; CHECK-NEXT:    [[TRUNC:%.*]] = trunc i64 [[ZEXT_CMP]] to i32
; CHECK-NEXT:    [[SHL:%.*]] = shl i32 [[TRUNC]], 8
; CHECK-NEXT:    [[RES:%.*]] = trunc i32 [[SHL]] to i8
; CHECK-NEXT:    [[IV_NEXT]] = add i64 [[IV]], 1
; CHECK-NEXT:    [[EXIT_COND:%.*]] = icmp ne i64 [[IV_NEXT]], [[N]]
; CHECK-NEXT:    br i1 [[EXIT_COND]], label %[[LOOP]], label %[[EXIT:.*]]
; CHECK:       [[EXIT]]:
; CHECK-NEXT:    [[RES_LCSSA:%.*]] = phi i8 [ [[RES]], %[[LOOP]] ]
; CHECK-NEXT:    ret i8 [[RES_LCSSA]]
;
entry:
  %zext.x = zext i8 %x to i64
  br label %loop

loop:
  %iv = phi i64 [ %iv.next, %loop ], [ 0, %entry ]
  %max = tail call i64 @llvm.umax.i64(i64 %zext.x, i64 %y)
  %cmp.max.0 = icmp ne i64 %max, 0
  %zext.cmp = zext i1 %cmp.max.0 to i64
  %trunc = trunc i64 %zext.cmp to i32
  %shl = shl i32 %trunc, 8
  %res = trunc i32 %shl to i8
  %iv.next = add i64 %iv, 1
  %exit.cond = icmp ne i64 %iv.next, %n
  br i1 %exit.cond, label %loop, label %exit

exit:
  ret i8 %res
}
