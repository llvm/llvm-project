; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals none --version 5
; RUN: opt < %s -p loop-vectorize -S -mtriple aarch64 -prefer-predicate-over-epilogue=predicate-else-scalar-epilogue | FileCheck %s

define void @f(ptr %p, i64 %x, i64 %n) {
; CHECK-LABEL: define void @f(
; CHECK-SAME: ptr [[P:%.*]], i64 [[X:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    br label %[[LOOP:.*]]
; CHECK:       [[LOOP]]:
; CHECK-NEXT:    [[IV1:%.*]] = phi i64 [ 0, %[[ENTRY]] ], [ [[IV_NEXT:%.*]], %[[LOOP]] ]
; CHECK-NEXT:    [[GEP1:%.*]] = getelementptr i64, ptr [[P]], i64 [[IV1]]
; CHECK-NEXT:    store i64 [[IV1]], ptr [[GEP1]], align 8
; CHECK-NEXT:    [[IV_NEXT]] = add i64 [[IV1]], 2
; CHECK-NEXT:    [[DONE:%.*]] = icmp eq i64 [[IV1]], [[N]]
; CHECK-NEXT:    br i1 [[DONE]], label %[[EXIT:.*]], label %[[LOOP]]
; CHECK:       [[EXIT]]:
; CHECK-NEXT:    ret void
;
entry:
  br label %loop

loop:
  %iv = phi i64 [ 0, %entry ], [ %iv.next, %loop ]
  %gep = getelementptr i64, ptr %p, i64 %iv
  store i64 %iv, ptr %gep
  %iv.next = add i64 %iv, 2
  %done = icmp eq i64 %iv, %n
  br i1 %done, label %exit, label %loop

exit:
  ret void
}
