; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -O3 < %s | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

declare void @use(i8)

define i16 @test(ptr %ptr) {
; CHECK-LABEL: @test(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[FIRST:%.*]] = load i8, ptr [[PTR:%.*]], align 1
; CHECK-NEXT:    tail call void @use(i8 [[FIRST]]) #[[ATTR2:[0-9]+]]
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 16
; CHECK-NEXT:    [[WIDE_LOAD:%.*]] = load <16 x i8>, ptr [[PTR]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2:%.*]] = load <16 x i8>, ptr [[TMP0]], align 1
; CHECK-NEXT:    [[TMP1:%.*]] = zext <16 x i8> [[WIDE_LOAD]] to <16 x i16>
; CHECK-NEXT:    [[TMP2:%.*]] = zext <16 x i8> [[WIDE_LOAD2]] to <16 x i16>
; CHECK-NEXT:    [[TMP3:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 32
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 48
; CHECK-NEXT:    [[WIDE_LOAD_1:%.*]] = load <16 x i8>, ptr [[TMP3]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_1:%.*]] = load <16 x i8>, ptr [[TMP4]], align 1
; CHECK-NEXT:    [[TMP5:%.*]] = zext <16 x i8> [[WIDE_LOAD_1]] to <16 x i16>
; CHECK-NEXT:    [[TMP6:%.*]] = zext <16 x i8> [[WIDE_LOAD2_1]] to <16 x i16>
; CHECK-NEXT:    [[TMP189:%.*]] = add nuw nsw <16 x i16> [[TMP1]], [[TMP5]]
; CHECK-NEXT:    [[TMP8:%.*]] = add nuw nsw <16 x i16> [[TMP2]], [[TMP6]]
; CHECK-NEXT:    [[TMP9:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 64
; CHECK-NEXT:    [[TMP10:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 80
; CHECK-NEXT:    [[WIDE_LOAD_2:%.*]] = load <16 x i8>, ptr [[TMP9]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_2:%.*]] = load <16 x i8>, ptr [[TMP10]], align 1
; CHECK-NEXT:    [[TMP11:%.*]] = zext <16 x i8> [[WIDE_LOAD_2]] to <16 x i16>
; CHECK-NEXT:    [[TMP12:%.*]] = zext <16 x i8> [[WIDE_LOAD2_2]] to <16 x i16>
; CHECK-NEXT:    [[TMP13:%.*]] = add nuw nsw <16 x i16> [[TMP189]], [[TMP11]]
; CHECK-NEXT:    [[TMP14:%.*]] = add nuw nsw <16 x i16> [[TMP8]], [[TMP12]]
; CHECK-NEXT:    [[TMP15:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 96
; CHECK-NEXT:    [[TMP16:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 112
; CHECK-NEXT:    [[WIDE_LOAD_3:%.*]] = load <16 x i8>, ptr [[TMP15]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_3:%.*]] = load <16 x i8>, ptr [[TMP16]], align 1
; CHECK-NEXT:    [[TMP17:%.*]] = zext <16 x i8> [[WIDE_LOAD_3]] to <16 x i16>
; CHECK-NEXT:    [[TMP18:%.*]] = zext <16 x i8> [[WIDE_LOAD2_3]] to <16 x i16>
; CHECK-NEXT:    [[TMP19:%.*]] = add nuw nsw <16 x i16> [[TMP13]], [[TMP17]]
; CHECK-NEXT:    [[TMP20:%.*]] = add nuw nsw <16 x i16> [[TMP14]], [[TMP18]]
; CHECK-NEXT:    [[TMP21:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 128
; CHECK-NEXT:    [[TMP22:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 144
; CHECK-NEXT:    [[WIDE_LOAD_4:%.*]] = load <16 x i8>, ptr [[TMP21]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_4:%.*]] = load <16 x i8>, ptr [[TMP22]], align 1
; CHECK-NEXT:    [[TMP23:%.*]] = zext <16 x i8> [[WIDE_LOAD_4]] to <16 x i16>
; CHECK-NEXT:    [[TMP24:%.*]] = zext <16 x i8> [[WIDE_LOAD2_4]] to <16 x i16>
; CHECK-NEXT:    [[TMP25:%.*]] = add nuw nsw <16 x i16> [[TMP19]], [[TMP23]]
; CHECK-NEXT:    [[TMP26:%.*]] = add nuw nsw <16 x i16> [[TMP20]], [[TMP24]]
; CHECK-NEXT:    [[TMP27:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 160
; CHECK-NEXT:    [[TMP28:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 176
; CHECK-NEXT:    [[WIDE_LOAD_5:%.*]] = load <16 x i8>, ptr [[TMP27]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_5:%.*]] = load <16 x i8>, ptr [[TMP28]], align 1
; CHECK-NEXT:    [[TMP29:%.*]] = zext <16 x i8> [[WIDE_LOAD_5]] to <16 x i16>
; CHECK-NEXT:    [[TMP30:%.*]] = zext <16 x i8> [[WIDE_LOAD2_5]] to <16 x i16>
; CHECK-NEXT:    [[TMP31:%.*]] = add nuw nsw <16 x i16> [[TMP25]], [[TMP29]]
; CHECK-NEXT:    [[TMP32:%.*]] = add nuw nsw <16 x i16> [[TMP26]], [[TMP30]]
; CHECK-NEXT:    [[TMP33:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 192
; CHECK-NEXT:    [[TMP34:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 208
; CHECK-NEXT:    [[WIDE_LOAD_6:%.*]] = load <16 x i8>, ptr [[TMP33]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_6:%.*]] = load <16 x i8>, ptr [[TMP34]], align 1
; CHECK-NEXT:    [[TMP35:%.*]] = zext <16 x i8> [[WIDE_LOAD_6]] to <16 x i16>
; CHECK-NEXT:    [[TMP36:%.*]] = zext <16 x i8> [[WIDE_LOAD2_6]] to <16 x i16>
; CHECK-NEXT:    [[TMP37:%.*]] = add nuw nsw <16 x i16> [[TMP31]], [[TMP35]]
; CHECK-NEXT:    [[TMP38:%.*]] = add nuw nsw <16 x i16> [[TMP32]], [[TMP36]]
; CHECK-NEXT:    [[TMP39:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 224
; CHECK-NEXT:    [[TMP40:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 240
; CHECK-NEXT:    [[WIDE_LOAD_7:%.*]] = load <16 x i8>, ptr [[TMP39]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_7:%.*]] = load <16 x i8>, ptr [[TMP40]], align 1
; CHECK-NEXT:    [[TMP41:%.*]] = zext <16 x i8> [[WIDE_LOAD_7]] to <16 x i16>
; CHECK-NEXT:    [[TMP42:%.*]] = zext <16 x i8> [[WIDE_LOAD2_7]] to <16 x i16>
; CHECK-NEXT:    [[TMP43:%.*]] = add <16 x i16> [[TMP37]], [[TMP41]]
; CHECK-NEXT:    [[TMP44:%.*]] = add <16 x i16> [[TMP38]], [[TMP42]]
; CHECK-NEXT:    [[TMP45:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 256
; CHECK-NEXT:    [[TMP46:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 272
; CHECK-NEXT:    [[WIDE_LOAD_8:%.*]] = load <16 x i8>, ptr [[TMP45]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_8:%.*]] = load <16 x i8>, ptr [[TMP46]], align 1
; CHECK-NEXT:    [[TMP47:%.*]] = zext <16 x i8> [[WIDE_LOAD_8]] to <16 x i16>
; CHECK-NEXT:    [[TMP48:%.*]] = zext <16 x i8> [[WIDE_LOAD2_8]] to <16 x i16>
; CHECK-NEXT:    [[TMP49:%.*]] = add <16 x i16> [[TMP43]], [[TMP47]]
; CHECK-NEXT:    [[TMP50:%.*]] = add <16 x i16> [[TMP44]], [[TMP48]]
; CHECK-NEXT:    [[TMP51:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 288
; CHECK-NEXT:    [[TMP52:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 304
; CHECK-NEXT:    [[WIDE_LOAD_9:%.*]] = load <16 x i8>, ptr [[TMP51]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_9:%.*]] = load <16 x i8>, ptr [[TMP52]], align 1
; CHECK-NEXT:    [[TMP53:%.*]] = zext <16 x i8> [[WIDE_LOAD_9]] to <16 x i16>
; CHECK-NEXT:    [[TMP54:%.*]] = zext <16 x i8> [[WIDE_LOAD2_9]] to <16 x i16>
; CHECK-NEXT:    [[TMP55:%.*]] = add <16 x i16> [[TMP49]], [[TMP53]]
; CHECK-NEXT:    [[TMP56:%.*]] = add <16 x i16> [[TMP50]], [[TMP54]]
; CHECK-NEXT:    [[TMP57:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 320
; CHECK-NEXT:    [[TMP58:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 336
; CHECK-NEXT:    [[WIDE_LOAD_10:%.*]] = load <16 x i8>, ptr [[TMP57]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_10:%.*]] = load <16 x i8>, ptr [[TMP58]], align 1
; CHECK-NEXT:    [[TMP59:%.*]] = zext <16 x i8> [[WIDE_LOAD_10]] to <16 x i16>
; CHECK-NEXT:    [[TMP60:%.*]] = zext <16 x i8> [[WIDE_LOAD2_10]] to <16 x i16>
; CHECK-NEXT:    [[TMP61:%.*]] = add <16 x i16> [[TMP55]], [[TMP59]]
; CHECK-NEXT:    [[TMP62:%.*]] = add <16 x i16> [[TMP56]], [[TMP60]]
; CHECK-NEXT:    [[TMP63:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 352
; CHECK-NEXT:    [[TMP64:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 368
; CHECK-NEXT:    [[WIDE_LOAD_11:%.*]] = load <16 x i8>, ptr [[TMP63]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_11:%.*]] = load <16 x i8>, ptr [[TMP64]], align 1
; CHECK-NEXT:    [[TMP65:%.*]] = zext <16 x i8> [[WIDE_LOAD_11]] to <16 x i16>
; CHECK-NEXT:    [[TMP66:%.*]] = zext <16 x i8> [[WIDE_LOAD2_11]] to <16 x i16>
; CHECK-NEXT:    [[TMP67:%.*]] = add <16 x i16> [[TMP61]], [[TMP65]]
; CHECK-NEXT:    [[TMP68:%.*]] = add <16 x i16> [[TMP62]], [[TMP66]]
; CHECK-NEXT:    [[TMP69:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 384
; CHECK-NEXT:    [[TMP70:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 400
; CHECK-NEXT:    [[WIDE_LOAD_12:%.*]] = load <16 x i8>, ptr [[TMP69]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_12:%.*]] = load <16 x i8>, ptr [[TMP70]], align 1
; CHECK-NEXT:    [[TMP71:%.*]] = zext <16 x i8> [[WIDE_LOAD_12]] to <16 x i16>
; CHECK-NEXT:    [[TMP72:%.*]] = zext <16 x i8> [[WIDE_LOAD2_12]] to <16 x i16>
; CHECK-NEXT:    [[TMP73:%.*]] = add <16 x i16> [[TMP67]], [[TMP71]]
; CHECK-NEXT:    [[TMP74:%.*]] = add <16 x i16> [[TMP68]], [[TMP72]]
; CHECK-NEXT:    [[TMP75:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 416
; CHECK-NEXT:    [[TMP76:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 432
; CHECK-NEXT:    [[WIDE_LOAD_13:%.*]] = load <16 x i8>, ptr [[TMP75]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_13:%.*]] = load <16 x i8>, ptr [[TMP76]], align 1
; CHECK-NEXT:    [[TMP77:%.*]] = zext <16 x i8> [[WIDE_LOAD_13]] to <16 x i16>
; CHECK-NEXT:    [[TMP78:%.*]] = zext <16 x i8> [[WIDE_LOAD2_13]] to <16 x i16>
; CHECK-NEXT:    [[TMP79:%.*]] = add <16 x i16> [[TMP73]], [[TMP77]]
; CHECK-NEXT:    [[TMP80:%.*]] = add <16 x i16> [[TMP74]], [[TMP78]]
; CHECK-NEXT:    [[TMP81:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 448
; CHECK-NEXT:    [[TMP82:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 464
; CHECK-NEXT:    [[WIDE_LOAD_14:%.*]] = load <16 x i8>, ptr [[TMP81]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_14:%.*]] = load <16 x i8>, ptr [[TMP82]], align 1
; CHECK-NEXT:    [[TMP83:%.*]] = zext <16 x i8> [[WIDE_LOAD_14]] to <16 x i16>
; CHECK-NEXT:    [[TMP84:%.*]] = zext <16 x i8> [[WIDE_LOAD2_14]] to <16 x i16>
; CHECK-NEXT:    [[TMP85:%.*]] = add <16 x i16> [[TMP79]], [[TMP83]]
; CHECK-NEXT:    [[TMP86:%.*]] = add <16 x i16> [[TMP80]], [[TMP84]]
; CHECK-NEXT:    [[TMP87:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 480
; CHECK-NEXT:    [[TMP88:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 496
; CHECK-NEXT:    [[WIDE_LOAD_15:%.*]] = load <16 x i8>, ptr [[TMP87]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_15:%.*]] = load <16 x i8>, ptr [[TMP88]], align 1
; CHECK-NEXT:    [[TMP89:%.*]] = zext <16 x i8> [[WIDE_LOAD_15]] to <16 x i16>
; CHECK-NEXT:    [[TMP90:%.*]] = zext <16 x i8> [[WIDE_LOAD2_15]] to <16 x i16>
; CHECK-NEXT:    [[TMP91:%.*]] = add <16 x i16> [[TMP85]], [[TMP89]]
; CHECK-NEXT:    [[TMP92:%.*]] = add <16 x i16> [[TMP86]], [[TMP90]]
; CHECK-NEXT:    [[TMP93:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 512
; CHECK-NEXT:    [[TMP94:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 528
; CHECK-NEXT:    [[WIDE_LOAD_16:%.*]] = load <16 x i8>, ptr [[TMP93]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_16:%.*]] = load <16 x i8>, ptr [[TMP94]], align 1
; CHECK-NEXT:    [[TMP95:%.*]] = zext <16 x i8> [[WIDE_LOAD_16]] to <16 x i16>
; CHECK-NEXT:    [[TMP96:%.*]] = zext <16 x i8> [[WIDE_LOAD2_16]] to <16 x i16>
; CHECK-NEXT:    [[TMP97:%.*]] = add <16 x i16> [[TMP91]], [[TMP95]]
; CHECK-NEXT:    [[TMP98:%.*]] = add <16 x i16> [[TMP92]], [[TMP96]]
; CHECK-NEXT:    [[TMP99:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 544
; CHECK-NEXT:    [[TMP100:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 560
; CHECK-NEXT:    [[WIDE_LOAD_17:%.*]] = load <16 x i8>, ptr [[TMP99]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_17:%.*]] = load <16 x i8>, ptr [[TMP100]], align 1
; CHECK-NEXT:    [[TMP101:%.*]] = zext <16 x i8> [[WIDE_LOAD_17]] to <16 x i16>
; CHECK-NEXT:    [[TMP102:%.*]] = zext <16 x i8> [[WIDE_LOAD2_17]] to <16 x i16>
; CHECK-NEXT:    [[TMP103:%.*]] = add <16 x i16> [[TMP97]], [[TMP101]]
; CHECK-NEXT:    [[TMP104:%.*]] = add <16 x i16> [[TMP98]], [[TMP102]]
; CHECK-NEXT:    [[TMP105:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 576
; CHECK-NEXT:    [[TMP106:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 592
; CHECK-NEXT:    [[WIDE_LOAD_18:%.*]] = load <16 x i8>, ptr [[TMP105]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_18:%.*]] = load <16 x i8>, ptr [[TMP106]], align 1
; CHECK-NEXT:    [[TMP107:%.*]] = zext <16 x i8> [[WIDE_LOAD_18]] to <16 x i16>
; CHECK-NEXT:    [[TMP108:%.*]] = zext <16 x i8> [[WIDE_LOAD2_18]] to <16 x i16>
; CHECK-NEXT:    [[TMP109:%.*]] = add <16 x i16> [[TMP103]], [[TMP107]]
; CHECK-NEXT:    [[TMP110:%.*]] = add <16 x i16> [[TMP104]], [[TMP108]]
; CHECK-NEXT:    [[TMP111:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 608
; CHECK-NEXT:    [[TMP112:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 624
; CHECK-NEXT:    [[WIDE_LOAD_19:%.*]] = load <16 x i8>, ptr [[TMP111]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_19:%.*]] = load <16 x i8>, ptr [[TMP112]], align 1
; CHECK-NEXT:    [[TMP113:%.*]] = zext <16 x i8> [[WIDE_LOAD_19]] to <16 x i16>
; CHECK-NEXT:    [[TMP114:%.*]] = zext <16 x i8> [[WIDE_LOAD2_19]] to <16 x i16>
; CHECK-NEXT:    [[TMP115:%.*]] = add <16 x i16> [[TMP109]], [[TMP113]]
; CHECK-NEXT:    [[TMP116:%.*]] = add <16 x i16> [[TMP110]], [[TMP114]]
; CHECK-NEXT:    [[TMP117:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 640
; CHECK-NEXT:    [[TMP118:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 656
; CHECK-NEXT:    [[WIDE_LOAD_20:%.*]] = load <16 x i8>, ptr [[TMP117]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_20:%.*]] = load <16 x i8>, ptr [[TMP118]], align 1
; CHECK-NEXT:    [[TMP119:%.*]] = zext <16 x i8> [[WIDE_LOAD_20]] to <16 x i16>
; CHECK-NEXT:    [[TMP120:%.*]] = zext <16 x i8> [[WIDE_LOAD2_20]] to <16 x i16>
; CHECK-NEXT:    [[TMP121:%.*]] = add <16 x i16> [[TMP115]], [[TMP119]]
; CHECK-NEXT:    [[TMP122:%.*]] = add <16 x i16> [[TMP116]], [[TMP120]]
; CHECK-NEXT:    [[TMP123:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 672
; CHECK-NEXT:    [[TMP124:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 688
; CHECK-NEXT:    [[WIDE_LOAD_21:%.*]] = load <16 x i8>, ptr [[TMP123]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_21:%.*]] = load <16 x i8>, ptr [[TMP124]], align 1
; CHECK-NEXT:    [[TMP125:%.*]] = zext <16 x i8> [[WIDE_LOAD_21]] to <16 x i16>
; CHECK-NEXT:    [[TMP126:%.*]] = zext <16 x i8> [[WIDE_LOAD2_21]] to <16 x i16>
; CHECK-NEXT:    [[TMP127:%.*]] = add <16 x i16> [[TMP121]], [[TMP125]]
; CHECK-NEXT:    [[TMP128:%.*]] = add <16 x i16> [[TMP122]], [[TMP126]]
; CHECK-NEXT:    [[TMP129:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 704
; CHECK-NEXT:    [[TMP130:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 720
; CHECK-NEXT:    [[WIDE_LOAD_22:%.*]] = load <16 x i8>, ptr [[TMP129]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_22:%.*]] = load <16 x i8>, ptr [[TMP130]], align 1
; CHECK-NEXT:    [[TMP131:%.*]] = zext <16 x i8> [[WIDE_LOAD_22]] to <16 x i16>
; CHECK-NEXT:    [[TMP132:%.*]] = zext <16 x i8> [[WIDE_LOAD2_22]] to <16 x i16>
; CHECK-NEXT:    [[TMP133:%.*]] = add <16 x i16> [[TMP127]], [[TMP131]]
; CHECK-NEXT:    [[TMP134:%.*]] = add <16 x i16> [[TMP128]], [[TMP132]]
; CHECK-NEXT:    [[TMP135:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 736
; CHECK-NEXT:    [[TMP136:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 752
; CHECK-NEXT:    [[WIDE_LOAD_23:%.*]] = load <16 x i8>, ptr [[TMP135]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_23:%.*]] = load <16 x i8>, ptr [[TMP136]], align 1
; CHECK-NEXT:    [[TMP137:%.*]] = zext <16 x i8> [[WIDE_LOAD_23]] to <16 x i16>
; CHECK-NEXT:    [[TMP138:%.*]] = zext <16 x i8> [[WIDE_LOAD2_23]] to <16 x i16>
; CHECK-NEXT:    [[TMP139:%.*]] = add <16 x i16> [[TMP133]], [[TMP137]]
; CHECK-NEXT:    [[TMP140:%.*]] = add <16 x i16> [[TMP134]], [[TMP138]]
; CHECK-NEXT:    [[TMP141:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 768
; CHECK-NEXT:    [[TMP142:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 784
; CHECK-NEXT:    [[WIDE_LOAD_24:%.*]] = load <16 x i8>, ptr [[TMP141]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_24:%.*]] = load <16 x i8>, ptr [[TMP142]], align 1
; CHECK-NEXT:    [[TMP143:%.*]] = zext <16 x i8> [[WIDE_LOAD_24]] to <16 x i16>
; CHECK-NEXT:    [[TMP144:%.*]] = zext <16 x i8> [[WIDE_LOAD2_24]] to <16 x i16>
; CHECK-NEXT:    [[TMP145:%.*]] = add <16 x i16> [[TMP139]], [[TMP143]]
; CHECK-NEXT:    [[TMP146:%.*]] = add <16 x i16> [[TMP140]], [[TMP144]]
; CHECK-NEXT:    [[TMP147:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 800
; CHECK-NEXT:    [[TMP148:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 816
; CHECK-NEXT:    [[WIDE_LOAD_25:%.*]] = load <16 x i8>, ptr [[TMP147]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_25:%.*]] = load <16 x i8>, ptr [[TMP148]], align 1
; CHECK-NEXT:    [[TMP149:%.*]] = zext <16 x i8> [[WIDE_LOAD_25]] to <16 x i16>
; CHECK-NEXT:    [[TMP150:%.*]] = zext <16 x i8> [[WIDE_LOAD2_25]] to <16 x i16>
; CHECK-NEXT:    [[TMP151:%.*]] = add <16 x i16> [[TMP145]], [[TMP149]]
; CHECK-NEXT:    [[TMP152:%.*]] = add <16 x i16> [[TMP146]], [[TMP150]]
; CHECK-NEXT:    [[TMP153:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 832
; CHECK-NEXT:    [[TMP154:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 848
; CHECK-NEXT:    [[WIDE_LOAD_26:%.*]] = load <16 x i8>, ptr [[TMP153]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_26:%.*]] = load <16 x i8>, ptr [[TMP154]], align 1
; CHECK-NEXT:    [[TMP155:%.*]] = zext <16 x i8> [[WIDE_LOAD_26]] to <16 x i16>
; CHECK-NEXT:    [[TMP156:%.*]] = zext <16 x i8> [[WIDE_LOAD2_26]] to <16 x i16>
; CHECK-NEXT:    [[TMP157:%.*]] = add <16 x i16> [[TMP151]], [[TMP155]]
; CHECK-NEXT:    [[TMP158:%.*]] = add <16 x i16> [[TMP152]], [[TMP156]]
; CHECK-NEXT:    [[TMP159:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 864
; CHECK-NEXT:    [[TMP160:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 880
; CHECK-NEXT:    [[WIDE_LOAD_27:%.*]] = load <16 x i8>, ptr [[TMP159]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_27:%.*]] = load <16 x i8>, ptr [[TMP160]], align 1
; CHECK-NEXT:    [[TMP161:%.*]] = zext <16 x i8> [[WIDE_LOAD_27]] to <16 x i16>
; CHECK-NEXT:    [[TMP162:%.*]] = zext <16 x i8> [[WIDE_LOAD2_27]] to <16 x i16>
; CHECK-NEXT:    [[TMP163:%.*]] = add <16 x i16> [[TMP157]], [[TMP161]]
; CHECK-NEXT:    [[TMP164:%.*]] = add <16 x i16> [[TMP158]], [[TMP162]]
; CHECK-NEXT:    [[TMP165:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 896
; CHECK-NEXT:    [[TMP166:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 912
; CHECK-NEXT:    [[WIDE_LOAD_28:%.*]] = load <16 x i8>, ptr [[TMP165]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_28:%.*]] = load <16 x i8>, ptr [[TMP166]], align 1
; CHECK-NEXT:    [[TMP167:%.*]] = zext <16 x i8> [[WIDE_LOAD_28]] to <16 x i16>
; CHECK-NEXT:    [[TMP168:%.*]] = zext <16 x i8> [[WIDE_LOAD2_28]] to <16 x i16>
; CHECK-NEXT:    [[TMP169:%.*]] = add <16 x i16> [[TMP163]], [[TMP167]]
; CHECK-NEXT:    [[TMP170:%.*]] = add <16 x i16> [[TMP164]], [[TMP168]]
; CHECK-NEXT:    [[TMP171:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 928
; CHECK-NEXT:    [[TMP172:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 944
; CHECK-NEXT:    [[WIDE_LOAD_29:%.*]] = load <16 x i8>, ptr [[TMP171]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_29:%.*]] = load <16 x i8>, ptr [[TMP172]], align 1
; CHECK-NEXT:    [[TMP173:%.*]] = zext <16 x i8> [[WIDE_LOAD_29]] to <16 x i16>
; CHECK-NEXT:    [[TMP174:%.*]] = zext <16 x i8> [[WIDE_LOAD2_29]] to <16 x i16>
; CHECK-NEXT:    [[TMP175:%.*]] = add <16 x i16> [[TMP169]], [[TMP173]]
; CHECK-NEXT:    [[TMP176:%.*]] = add <16 x i16> [[TMP170]], [[TMP174]]
; CHECK-NEXT:    [[TMP177:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 960
; CHECK-NEXT:    [[TMP178:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 976
; CHECK-NEXT:    [[WIDE_LOAD_30:%.*]] = load <16 x i8>, ptr [[TMP177]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_30:%.*]] = load <16 x i8>, ptr [[TMP178]], align 1
; CHECK-NEXT:    [[TMP179:%.*]] = zext <16 x i8> [[WIDE_LOAD_30]] to <16 x i16>
; CHECK-NEXT:    [[TMP180:%.*]] = zext <16 x i8> [[WIDE_LOAD2_30]] to <16 x i16>
; CHECK-NEXT:    [[TMP181:%.*]] = add <16 x i16> [[TMP175]], [[TMP179]]
; CHECK-NEXT:    [[TMP182:%.*]] = add <16 x i16> [[TMP176]], [[TMP180]]
; CHECK-NEXT:    [[TMP183:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 992
; CHECK-NEXT:    [[TMP184:%.*]] = getelementptr inbounds nuw i8, ptr [[PTR]], i64 1008
; CHECK-NEXT:    [[WIDE_LOAD_31:%.*]] = load <16 x i8>, ptr [[TMP183]], align 1
; CHECK-NEXT:    [[WIDE_LOAD2_31:%.*]] = load <16 x i8>, ptr [[TMP184]], align 1
; CHECK-NEXT:    [[TMP185:%.*]] = zext <16 x i8> [[WIDE_LOAD_31]] to <16 x i16>
; CHECK-NEXT:    [[TMP186:%.*]] = zext <16 x i8> [[WIDE_LOAD2_31]] to <16 x i16>
; CHECK-NEXT:    [[TMP187:%.*]] = add <16 x i16> [[TMP181]], [[TMP185]]
; CHECK-NEXT:    [[TMP188:%.*]] = add <16 x i16> [[TMP182]], [[TMP186]]
; CHECK-NEXT:    [[BIN_RDX:%.*]] = add <16 x i16> [[TMP188]], [[TMP187]]
; CHECK-NEXT:    [[TMP7:%.*]] = tail call i16 @llvm.vector.reduce.add.v16i16(<16 x i16> [[BIN_RDX]])
; CHECK-NEXT:    ret i16 [[TMP7]]
;
entry:
  %first = load i8, ptr %ptr
  call void @use(i8 %first) readonly
  br label %loop

loop:
  %accum = phi i16 [ 0, %entry ], [ %accum.next, %loop ]
  %iv = phi i64 [ 0, %entry ], [ %iv.next, %loop ]
  %gep = getelementptr inbounds i8, ptr %ptr, i64 %iv
  %val = load i8, ptr %gep, align 1
  %iv.next = add nuw i64 %iv, 1
  %val.ext = zext i8 %val to i16
  %accum.next = add i16 %accum, %val.ext
  %exit.cond = icmp eq i64 %iv.next, 1024
  br i1 %exit.cond, label %exit, label %loop

exit:
  %lcssa.phi = phi i16 [ %accum.next, %loop ]
  ret i16 %lcssa.phi
}
