; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -O2 < %s | FileCheck %s

declare void @do_something(ptr %a)

; We want only one memset in the if block (rather than only one memset in
; the entry block).
define void @test(i1 %c) {
; CHECK-LABEL: define void @test(
; CHECK-SAME: i1 [[C:%.*]]) local_unnamed_addr {
; CHECK-NEXT:    [[A:%.*]] = alloca [32 x i8], align 1
; CHECK-NEXT:    br i1 [[C]], label %[[IF:.*]], label %[[COMMON_RET:.*]]
; CHECK:       [[COMMON_RET]]:
; CHECK-NEXT:    ret void
; CHECK:       [[IF]]:
; CHECK-NEXT:    call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) [[A]], i8 0, i64 32, i1 false)
; CHECK-NEXT:    call void @do_something(ptr nonnull [[A]])
; CHECK-NEXT:    br label %[[COMMON_RET]]
;
  %a = alloca [32 x i8]
  call void @llvm.memset(ptr %a, i8 0, i64 32, i1 false)
  br i1 %c, label %if, label %else
if:
  call void @llvm.memset(ptr %a, i8 0, i64 32, i1 false)
  call void @do_something(ptr %a)
  ret void

else:
  ret void
}
