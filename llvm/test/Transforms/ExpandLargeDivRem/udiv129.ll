; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -expand-large-div-rem -expand-div-rem-bits 128 < %s | FileCheck %s

define void @test(i129* %ptr, i129* %out) nounwind {
; CHECK-LABEL: @test(
; CHECK-NEXT:  _udiv-special-cases:
; CHECK-NEXT:    [[A:%.*]] = load i129, i129* [[PTR:%.*]], align 4
; CHECK-NEXT:    [[TMP0:%.*]] = icmp eq i129 [[A]], 0
; CHECK-NEXT:    [[TMP1:%.*]] = or i1 false, [[TMP0]]
; CHECK-NEXT:    [[TMP2:%.*]] = call i129 @llvm.ctlz.i129(i129 3, i1 true)
; CHECK-NEXT:    [[TMP3:%.*]] = call i129 @llvm.ctlz.i129(i129 [[A]], i1 true)
; CHECK-NEXT:    [[TMP4:%.*]] = sub i129 [[TMP2]], [[TMP3]]
; CHECK-NEXT:    [[TMP5:%.*]] = icmp ugt i129 [[TMP4]], 128
; CHECK-NEXT:    [[TMP6:%.*]] = select i1 [[TMP1]], i1 true, i1 [[TMP5]]
; CHECK-NEXT:    [[TMP7:%.*]] = icmp eq i129 [[TMP4]], 128
; CHECK-NEXT:    [[TMP8:%.*]] = select i1 [[TMP6]], i129 0, i129 [[A]]
; CHECK-NEXT:    [[TMP9:%.*]] = select i1 [[TMP6]], i1 true, i1 [[TMP7]]
; CHECK-NEXT:    br i1 [[TMP9]], label [[UDIV_END:%.*]], label [[UDIV_BB1:%.*]]
; CHECK:       udiv-loop-exit:
; CHECK-NEXT:    [[TMP10:%.*]] = phi i129 [ 0, [[UDIV_BB1]] ], [ [[TMP25:%.*]], [[UDIV_DO_WHILE:%.*]] ]
; CHECK-NEXT:    [[TMP11:%.*]] = phi i129 [ [[TMP33:%.*]], [[UDIV_BB1]] ], [ [[TMP22:%.*]], [[UDIV_DO_WHILE]] ]
; CHECK-NEXT:    [[TMP12:%.*]] = shl i129 [[TMP11]], 1
; CHECK-NEXT:    [[TMP13:%.*]] = or i129 [[TMP10]], [[TMP12]]
; CHECK-NEXT:    br label [[UDIV_END]]
; CHECK:       udiv-do-while:
; CHECK-NEXT:    [[TMP14:%.*]] = phi i129 [ 0, [[UDIV_PREHEADER:%.*]] ], [ [[TMP25]], [[UDIV_DO_WHILE]] ]
; CHECK-NEXT:    [[TMP15:%.*]] = phi i129 [ [[TMP31:%.*]], [[UDIV_PREHEADER]] ], [ [[TMP28:%.*]], [[UDIV_DO_WHILE]] ]
; CHECK-NEXT:    [[TMP16:%.*]] = phi i129 [ [[TMP30:%.*]], [[UDIV_PREHEADER]] ], [ [[TMP27:%.*]], [[UDIV_DO_WHILE]] ]
; CHECK-NEXT:    [[TMP17:%.*]] = phi i129 [ [[TMP33]], [[UDIV_PREHEADER]] ], [ [[TMP22]], [[UDIV_DO_WHILE]] ]
; CHECK-NEXT:    [[TMP18:%.*]] = shl i129 [[TMP16]], 1
; CHECK-NEXT:    [[TMP19:%.*]] = lshr i129 [[TMP17]], 128
; CHECK-NEXT:    [[TMP20:%.*]] = or i129 [[TMP18]], [[TMP19]]
; CHECK-NEXT:    [[TMP21:%.*]] = shl i129 [[TMP17]], 1
; CHECK-NEXT:    [[TMP22]] = or i129 [[TMP14]], [[TMP21]]
; CHECK-NEXT:    [[TMP23:%.*]] = sub i129 2, [[TMP20]]
; CHECK-NEXT:    [[TMP24:%.*]] = ashr i129 [[TMP23]], 128
; CHECK-NEXT:    [[TMP25]] = and i129 [[TMP24]], 1
; CHECK-NEXT:    [[TMP26:%.*]] = and i129 [[TMP24]], 3
; CHECK-NEXT:    [[TMP27]] = sub i129 [[TMP20]], [[TMP26]]
; CHECK-NEXT:    [[TMP28]] = add i129 [[TMP15]], -1
; CHECK-NEXT:    [[TMP29:%.*]] = icmp eq i129 [[TMP28]], 0
; CHECK-NEXT:    br i1 [[TMP29]], label [[UDIV_LOOP_EXIT:%.*]], label [[UDIV_DO_WHILE]]
; CHECK:       udiv-preheader:
; CHECK-NEXT:    [[TMP30]] = lshr i129 [[A]], [[TMP31]]
; CHECK-NEXT:    br label [[UDIV_DO_WHILE]]
; CHECK:       udiv-bb1:
; CHECK-NEXT:    [[TMP31]] = add i129 [[TMP4]], 1
; CHECK-NEXT:    [[TMP32:%.*]] = sub i129 128, [[TMP4]]
; CHECK-NEXT:    [[TMP33]] = shl i129 [[A]], [[TMP32]]
; CHECK-NEXT:    [[TMP34:%.*]] = icmp eq i129 [[TMP31]], 0
; CHECK-NEXT:    br i1 [[TMP34]], label [[UDIV_LOOP_EXIT]], label [[UDIV_PREHEADER]]
; CHECK:       udiv-end:
; CHECK-NEXT:    [[TMP35:%.*]] = phi i129 [ [[TMP13]], [[UDIV_LOOP_EXIT]] ], [ [[TMP8]], [[_UDIV_SPECIAL_CASES:%.*]] ]
; CHECK-NEXT:    store i129 [[TMP35]], i129* [[OUT:%.*]], align 4
; CHECK-NEXT:    ret void
;
  %a = load i129, i129* %ptr
  %res = udiv i129 %a, 3
  store i129 %res, i129* %out
  ret void
}
