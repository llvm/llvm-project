; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mtriple=amdgcn-amd-amdhsa -S -passes=inline < %s | FileCheck %s
; RUN: opt -mtriple=amdgcn-amd-amdhsa -S -passes='cgscc(inline)' < %s | FileCheck %s

define i32 @func_default() {
; CHECK-LABEL: @func_default(
; CHECK-NEXT:    ret i32 0
;
  ret i32 0
}

define i32 @func_ieee_ieee() #0 {
; CHECK-LABEL: @func_ieee_ieee(
; CHECK-NEXT:    ret i32 1
;
  ret i32 1
}

define i32 @func_psz_psz() #1 {
; CHECK-LABEL: @func_psz_psz(
; CHECK-NEXT:    ret i32 2
;
  ret i32 2
}

define i32 @func_psz_ieee() #2 {
; CHECK-LABEL: @func_psz_ieee(
; CHECK-NEXT:    ret i32 3
;
  ret i32 3
}

define i32 @func_ieee_psz() #3 {
; CHECK-LABEL: @func_ieee_psz(
; CHECK-NEXT:    ret i32 4
;
  ret i32 4
}

define i32 @func_dynamic_dynamic() #4 {
; CHECK-LABEL: @func_dynamic_dynamic(
; CHECK-NEXT:    ret i32 5
;
  ret i32 5
}

define i32 @func_dynamic_ieee() #5 {
; CHECK-LABEL: @func_dynamic_ieee(
; CHECK-NEXT:    ret i32 6
;
  ret i32 6
}

define i32 @func_ieee_dynamic() #6 {
; CHECK-LABEL: @func_ieee_dynamic(
; CHECK-NEXT:    ret i32 7
;
  ret i32 7
}

define i32 @func_psz_dynamic() #7 {
; CHECK-LABEL: @func_psz_dynamic(
; CHECK-NEXT:    ret i32 8
;
  ret i32 8
}

define i32 @func_dynamic_psz() #8 {
; CHECK-LABEL: @func_dynamic_psz(
; CHECK-NEXT:    ret i32 9
;
  ret i32 9
}

define i32 @call_default_from_psz_psz() #1 {
; CHECK-LABEL: @call_default_from_psz_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_default()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_default()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_ieee_ieee_from_ieee_ieee(
; CHECK-NEXT:    ret i32 1
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_psz_psz() #1 {
; CHECK-LABEL: @call_ieee_ieee_from_psz_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_psz_psz_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_psz_psz_from_ieee_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

define i32 @call_psz_psz_from_psz_psz() #1 {
; CHECK-LABEL: @call_psz_psz_from_psz_psz(
; CHECK-NEXT:    ret i32 2
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

define i32 @call_psz_ieee_from_psz_psz() #1 {
; CHECK-LABEL: @call_psz_ieee_from_psz_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_psz_psz() #1 {
; CHECK-LABEL: @call_ieee_psz_from_psz_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_psz_ieee_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_psz_ieee_from_ieee_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_ieee_psz_from_ieee_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_psz_ieee() #2 {
; CHECK-LABEL: @call_ieee_ieee_from_psz_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_psz_ieee_from_psz_ieee() #2 {
; CHECK-LABEL: @call_psz_ieee_from_psz_ieee(
; CHECK-NEXT:    ret i32 3
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_psz_ieee() #2 {
; CHECK-LABEL: @call_ieee_psz_from_psz_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_psz_psz_from_psz_ieee() #2 {
; CHECK-LABEL: @call_psz_psz_from_psz_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_ieee_psz() #3 {
; CHECK-LABEL: @call_ieee_ieee_from_ieee_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_psz_ieee_from_ieee_psz() #3 {
; CHECK-LABEL: @call_psz_ieee_from_ieee_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_ieee_psz() #3 {
; CHECK-LABEL: @call_ieee_psz_from_ieee_psz(
; CHECK-NEXT:    ret i32 4
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_psz_psz_from_ieee_psz() #3 {
; CHECK-LABEL: @call_psz_psz_from_ieee_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

define i32 @call_dynamic_dynamic_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_dynamic_dynamic_from_ieee_ieee(
; CHECK-NEXT:    ret i32 5
;
  %call = call i32 @func_dynamic_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_dynamic_ieee_from_ieee_ieee(
; CHECK-NEXT:    ret i32 6
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_ieee_dynamic_from_ieee_ieee(
; CHECK-NEXT:    ret i32 7
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_dynamic_psz_from_ieee_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_ieee_ieee() #0 {
; CHECK-LABEL: @call_psz_dynamic_from_ieee_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_dynamic_from_psz_psz() #1 {
; CHECK-LABEL: @call_dynamic_dynamic_from_psz_psz(
; CHECK-NEXT:    ret i32 5
;
  %call = call i32 @func_dynamic_dynamic()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_psz_psz() #1 {
; CHECK-LABEL: @call_ieee_dynamic_from_psz_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_psz_psz() #1 {
; CHECK-LABEL: @call_dynamic_ieee_from_psz_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_psz_psz() #1 {
; CHECK-LABEL: @call_psz_dynamic_from_psz_psz(
; CHECK-NEXT:    ret i32 8
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_psz_psz() #1 {
; CHECK-LABEL: @call_dynamic_psz_from_psz_psz(
; CHECK-NEXT:    ret i32 9
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_dynamic_dynamic_from_psz_ieee() #2 {
; CHECK-LABEL: @call_dynamic_dynamic_from_psz_ieee(
; CHECK-NEXT:    ret i32 5
;
  %call = call i32 @func_dynamic_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_psz_ieee() #2 {
; CHECK-LABEL: @call_dynamic_ieee_from_psz_ieee(
; CHECK-NEXT:    ret i32 6
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_psz_ieee() #2 {
; CHECK-LABEL: @call_ieee_dynamic_from_psz_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_psz_ieee() #2 {
; CHECK-LABEL: @call_dynamic_psz_from_psz_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_psz_ieee() #2 {
; CHECK-LABEL: @call_psz_dynamic_from_psz_ieee(
; CHECK-NEXT:    ret i32 8
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_dynamic_from_ieee_psz() #3 {
; CHECK-LABEL: @call_dynamic_dynamic_from_ieee_psz(
; CHECK-NEXT:    ret i32 5
;
  %call = call i32 @func_dynamic_dynamic()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_ieee_psz() #3 {
; CHECK-LABEL: @call_ieee_dynamic_from_ieee_psz(
; CHECK-NEXT:    ret i32 7
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_ieee_psz() #3 {
; CHECK-LABEL: @call_dynamic_ieee_from_ieee_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_ieee_psz() #3 {
; CHECK-LABEL: @call_dynamic_psz_from_ieee_psz(
; CHECK-NEXT:    ret i32 9
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_ieee_psz() #3 {
; CHECK-LABEL: @call_psz_dynamic_from_ieee_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_dynamic_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_dynamic_dynamic_from_dynamic_dynamic(
; CHECK-NEXT:    ret i32 5
;
  %call = call i32 @func_dynamic_dynamic()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_ieee_ieee_from_dynamic_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_ieee_dynamic_from_dynamic_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_dynamic_ieee_from_dynamic_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_psz_dynamic_from_dynamic_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_dynamic_psz_from_dynamic_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_psz_psz_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_psz_psz_from_dynamic_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

define i32 @call_psz_ieee_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_psz_ieee_from_dynamic_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_dynamic_dynamic() #4 {
; CHECK-LABEL: @call_ieee_psz_from_dynamic_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_dynamic_ieee() #5 {
; CHECK-LABEL: @call_ieee_ieee_from_dynamic_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_dynamic_ieee() #5 {
; CHECK-LABEL: @call_ieee_dynamic_from_dynamic_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_dynamic_ieee() #5 {
; CHECK-LABEL: @call_dynamic_ieee_from_dynamic_ieee(
; CHECK-NEXT:    ret i32 6
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_dynamic_ieee() #5 {
; CHECK-LABEL: @call_psz_dynamic_from_dynamic_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_dynamic_ieee() #5 {
; CHECK-LABEL: @call_dynamic_psz_from_dynamic_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_psz_psz_from_dynamic_ieee() #5 {
; CHECK-LABEL: @call_psz_psz_from_dynamic_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

define i32 @call_psz_ieee_from_dynamic_ieee() #5 {
; CHECK-LABEL: @call_psz_ieee_from_dynamic_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_dynamic_ieee() #5 {
; CHECK-LABEL: @call_ieee_psz_from_dynamic_ieee(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_ieee_ieee_from_ieee_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_ieee_dynamic_from_ieee_dynamic(
; CHECK-NEXT:    ret i32 7
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_dynamic_ieee_from_ieee_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_dynamic_dynamic_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_dynamic_dynamic_from_ieee_dynamic(
; CHECK-NEXT:    ret i32 5
;
  %call = call i32 @func_dynamic_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_dynamic_psz_from_ieee_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_psz_dynamic_from_ieee_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_psz_psz_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_psz_psz_from_ieee_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

define i32 @call_psz_ieee_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_psz_ieee_from_ieee_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_ieee_dynamic() #6 {
; CHECK-LABEL: @call_ieee_psz_from_ieee_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_ieee_ieee_from_psz_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_ieee_dynamic_from_psz_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_dynamic_ieee_from_psz_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_dynamic_psz_from_psz_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_psz_dynamic_from_psz_dynamic(
; CHECK-NEXT:    ret i32 8
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_dynamic_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_dynamic_dynamic_from_psz_dynamic(
; CHECK-NEXT:    ret i32 5
;
  %call = call i32 @func_dynamic_dynamic()
  ret i32 %call
}

define i32 @call_psz_ieee_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_psz_ieee_from_psz_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_ieee_psz_from_psz_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_psz_psz_from_psz_dynamic() #7 {
; CHECK-LABEL: @call_psz_psz_from_psz_dynamic(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

define i32 @call_ieee_ieee_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_ieee_ieee_from_dynamic_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_ieee()
  ret i32 %call
}

define i32 @call_ieee_psz_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_ieee_psz_from_dynamic_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_psz()
  ret i32 %call
}

define i32 @call_psz_ieee_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_psz_ieee_from_dynamic_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_ieee()
  ret i32 %call
}

define i32 @call_dynamic_dynamic_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_dynamic_dynamic_from_dynamic_psz(
; CHECK-NEXT:    ret i32 5
;
  %call = call i32 @func_dynamic_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_psz_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_dynamic_psz_from_dynamic_psz(
; CHECK-NEXT:    ret i32 9
;
  %call = call i32 @func_dynamic_psz()
  ret i32 %call
}

define i32 @call_psz_dynamic_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_psz_dynamic_from_dynamic_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_dynamic()
  ret i32 %call
}

define i32 @call_dynamic_ieee_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_dynamic_ieee_from_dynamic_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_dynamic_ieee()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_dynamic_ieee()
  ret i32 %call
}

define i32 @call_ieee_dynamic_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_ieee_dynamic_from_dynamic_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_ieee_dynamic()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_ieee_dynamic()
  ret i32 %call
}

define i32 @call_psz_psz_from_dynamic_psz() #8 {
; CHECK-LABEL: @call_psz_psz_from_dynamic_psz(
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @func_psz_psz()
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @func_psz_psz()
  ret i32 %call
}

; --------------------------------------------------------------------
; denormal-fp-math-f32
; --------------------------------------------------------------------

define i32 @func_dynamic_dynamic_f32() #9 {
; CHECK-LABEL: @func_dynamic_dynamic_f32(
; CHECK-NEXT:    ret i32 10
;
  ret i32 10
}

define i32 @func_psz_psz_f32() #10 {
; CHECK-LABEL: @func_psz_psz_f32(
; CHECK-NEXT:    ret i32 11
;
  ret i32 11
}

define i32 @func_dynamic_dynamic_psz_psz_f32() #12 {
; CHECK-LABEL: @func_dynamic_dynamic_psz_psz_f32(
; CHECK-NEXT:    ret i32 12
;
  ret i32 12
}

define i32 @call_dynamic_dynamic_f32_from_psz_psz_f32() #10 {
; CHECK-LABEL: @call_dynamic_dynamic_f32_from_psz_psz_f32(
; CHECK-NEXT:    ret i32 10
;
  %result = call i32 @func_dynamic_dynamic_f32()
  ret i32 %result
}

define i32 @call_psz_psz_from_psz_psz_f32() #10 {
; CHECK-LABEL: @call_psz_psz_from_psz_psz_f32(
; CHECK-NEXT:    ret i32 10
;
  %result = call i32 @func_dynamic_dynamic_f32()
  ret i32 %result
}

define i32 @call_psz_psz_from_ieee_ieee_f32() #11 {
; CHECK-LABEL: @call_psz_psz_from_ieee_ieee_f32(
; CHECK-NEXT:    [[RESULT:%.*]] = call i32 @func_psz_psz_f32()
; CHECK-NEXT:    ret i32 [[RESULT]]
;
  %result = call i32 @func_psz_psz_f32()
  ret i32 %result
}

define i32 @call_dynamic_dynamic_from_psz_psz_f32() #10 {
; CHECK-LABEL: @call_dynamic_dynamic_from_psz_psz_f32(
; CHECK-NEXT:    ret i32 5
;
  %result = call i32 @func_dynamic_dynamic()
  ret i32 %result
}

define i32 @call_dynamic_dynamic_f32_from_psz_psz() #1 {
; CHECK-LABEL: @call_dynamic_dynamic_f32_from_psz_psz(
; CHECK-NEXT:    [[RESULT:%.*]] = call i32 @func_dynamic_dynamic_f32()
; CHECK-NEXT:    ret i32 [[RESULT]]
;
  %result = call i32 @func_dynamic_dynamic_f32()
  ret i32 %result
}

define i32 @call_psz_psz_f32_from_psz_psz() #1 {
; CHECK-LABEL: @call_psz_psz_f32_from_psz_psz(
; CHECK-NEXT:    [[RESULT:%.*]] = call i32 @func_psz_psz_f32()
; CHECK-NEXT:    ret i32 [[RESULT]]
;
  %result = call i32 @func_psz_psz_f32()
  ret i32 %result
}

define i32 @call_dynamic_dynamic_psz_psz_f32_from_psz_psz() #1 {
; CHECK-LABEL: @call_dynamic_dynamic_psz_psz_f32_from_psz_psz(
; CHECK-NEXT:    ret i32 12
;
  %result = call i32 @func_dynamic_dynamic_psz_psz_f32()
  ret i32 %result
}

attributes #0 = { "denormal-fp-math"="ieee,ieee" }
attributes #1 = { "denormal-fp-math"="preserve-sign,preserve-sign" }
attributes #2 = { "denormal-fp-math"="preserve-sign,ieee" }
attributes #3 = { "denormal-fp-math"="ieee,preserve-sign" }
attributes #4 = { "denormal-fp-math"="dynamic,dynamic" }
attributes #5 = { "denormal-fp-math"="dynamic,ieee" }
attributes #6 = { "denormal-fp-math"="ieee,dynamic" }
attributes #7 = { "denormal-fp-math"="preserve-sign,dynamic" }
attributes #8 = { "denormal-fp-math"="dynamic,preserve-sign" }
attributes #9 = { "denormal-fp-math-f32"="dynamic,dynamic" }
attributes #10 = { "denormal-fp-math-f32"="preserve-sign,preserve-sign" }
attributes #11 = { "denormal-fp-math-f32"="ieee,ieee" "denormal-fp-math"="preserve-sign,preserve-sign" }
attributes #12 = { "denormal-fp-math"="dynamic,dynamic" "denormal-fp-math-f32"="preserve-sign,preserve-sign" }
