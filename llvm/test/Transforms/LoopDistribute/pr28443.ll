; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=loop-distribute -enable-loop-distribute -verify-loop-info -verify-dom-info -S \
; RUN:   < %s | FileCheck %s

define void @fn1(i64 %a, ptr %b) {
; CHECK-LABEL: define void @fn1(
; CHECK-SAME: i64 [[A:%.*]], ptr [[B:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    br label %[[FOR_BODY:.*]]
; CHECK:       [[FOR_BODY]]:
; CHECK-NEXT:    [[ADD75_EPIL:%.*]] = phi i64 [ [[ADD7_EPIL:%.*]], %[[FOR_BODY]] ], [ [[A]], %[[ENTRY]] ]
; CHECK-NEXT:    [[ADD1_EPIL:%.*]] = add nsw i64 [[ADD75_EPIL]], 268435457
; CHECK-NEXT:    [[ARRAYIDX_EPIL:%.*]] = getelementptr inbounds i64, ptr [[B]], i64 [[ADD1_EPIL]]
; CHECK-NEXT:    [[LOAD:%.*]] = load i64, ptr [[ARRAYIDX_EPIL]], align 8
; CHECK-NEXT:    [[ADD5_EPIL:%.*]] = add nsw i64 [[ADD75_EPIL]], 805306369
; CHECK-NEXT:    [[ARRAYIDX6_EPIL:%.*]] = getelementptr inbounds i64, ptr [[B]], i64 [[ADD5_EPIL]]
; CHECK-NEXT:    store i64 [[LOAD]], ptr [[ARRAYIDX6_EPIL]], align 8
; CHECK-NEXT:    [[ADD7_EPIL]] = add nsw i64 [[ADD75_EPIL]], 2
; CHECK-NEXT:    [[EPIL_ITER_CMP:%.*]] = icmp eq i64 [[ADD7_EPIL]], 0
; CHECK-NEXT:    br i1 [[EPIL_ITER_CMP]], label %[[FOR_END:.*]], label %[[FOR_BODY]]
; CHECK:       [[FOR_END]]:
; CHECK-NEXT:    ret void
;
entry:
  br label %for.body

for.body:
  %add75.epil = phi i64 [ %add7.epil, %for.body ], [ %a, %entry ]
  %add1.epil = add nsw i64 %add75.epil, 268435457
  %arrayidx.epil = getelementptr inbounds i64, ptr %b, i64 %add1.epil
  %load = load i64, ptr %arrayidx.epil, align 8
  %add5.epil = add nsw i64 %add75.epil, 805306369
  %arrayidx6.epil = getelementptr inbounds i64, ptr %b, i64 %add5.epil
  store i64 %load, ptr %arrayidx6.epil, align 8
  %add7.epil = add nsw i64 %add75.epil, 2
  %epil.iter.cmp = icmp eq i64 %add7.epil, 0
  br i1 %epil.iter.cmp, label %for.end, label %for.body

for.end:
  ret void
}
