; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -loop-reduce -S | FileCheck %s

target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"
target triple = "riscv64"

; This test was added as example motivation for the changes in #89927, which
; causes LSR to drop solutions if deemed to be less profitable than the
; starting point. At the time of adding this test, LSR's search heuristics
; best identified solution was an unprofitable one. This could of course
; change with future LSR improvements.

%struct = type { i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i64, i64, i32, i64 }

define i32 @main() {
; CHECK-LABEL: define i32 @main() {
; CHECK-NEXT:    [[CALL:%.*]] = tail call ptr null(i64 0)
; CHECK-NEXT:    br label %[[BB2:.*]]
; CHECK:       [[BB1:.*:]]
; CHECK-NEXT:    [[LOAD:%.*]] = load i32, ptr [[CALL]], align 4
; CHECK-NEXT:    ret i32 0
; CHECK:       [[BB2]]:
; CHECK-NEXT:    [[PHI:%.*]] = phi i64 [ 0, [[TMP0:%.*]] ], [ [[ADD:%.*]], %[[BB2]] ]
; CHECK-NEXT:    [[GETELEMENTPTR:%.*]] = getelementptr [[STRUCT:%.*]], ptr [[CALL]], i64 [[PHI]]
; CHECK-NEXT:    [[SCEVGEP32:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 8
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP32]], align 8
; CHECK-NEXT:    [[SCEVGEP29:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 12
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP29]], align 4
; CHECK-NEXT:    [[SCEVGEP26:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 16
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP26]], align 8
; CHECK-NEXT:    [[SCEVGEP23:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 20
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP23]], align 4
; CHECK-NEXT:    [[SCEVGEP20:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 24
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP20]], align 8
; CHECK-NEXT:    [[SCEVGEP17:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 28
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP17]], align 4
; CHECK-NEXT:    [[SCEVGEP14:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 32
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP14]], align 8
; CHECK-NEXT:    [[SCEVGEP11:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 36
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP11]], align 4
; CHECK-NEXT:    [[SCEVGEP6:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 40
; CHECK-NEXT:    store i64 0, ptr [[SCEVGEP6]], align 8
; CHECK-NEXT:    [[SCEVGEP3:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 48
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP3]], align 8
; CHECK-NEXT:    [[SCEVGEP:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 72
; CHECK-NEXT:    store i32 0, ptr [[SCEVGEP]], align 8
; CHECK-NEXT:    [[SCEVGEP8:%.*]] = getelementptr i8, ptr [[GETELEMENTPTR]], i64 80
; CHECK-NEXT:    store i64 0, ptr [[SCEVGEP8]], align 8
; CHECK-NEXT:    [[ADD]] = add i64 [[PHI]], 1
; CHECK-NEXT:    br label %[[BB2]]
;
0:
  %call = tail call ptr null(i64 0)
  br label %2

1:
  %load = load i32, ptr %call, align 4
  ret i32 0

2:
  %phi = phi i64 [ 0, %0 ], [ %add, %2 ]
  %getelementptr = getelementptr %struct, ptr %call, i64 %phi
  %getelementptr3 = getelementptr i8, ptr %getelementptr, i64 8
  store i32 0, ptr %getelementptr3, align 8
  %getelementptr4 = getelementptr i8, ptr %getelementptr, i64 12
  store i32 0, ptr %getelementptr4, align 4
  %getelementptr5 = getelementptr i8, ptr %getelementptr, i64 16
  store i32 0, ptr %getelementptr5, align 8
  %getelementptr6 = getelementptr i8, ptr %getelementptr, i64 20
  store i32 0, ptr %getelementptr6, align 4
  %getelementptr7 = getelementptr i8, ptr %getelementptr, i64 24
  store i32 0, ptr %getelementptr7, align 8
  %getelementptr8 = getelementptr i8, ptr %getelementptr, i64 28
  store i32 0, ptr %getelementptr8, align 4
  %getelementptr9 = getelementptr i8, ptr %getelementptr, i64 32
  store i32 0, ptr %getelementptr9, align 8
  %getelementptr10 = getelementptr i8, ptr %getelementptr, i64 36
  store i32 0, ptr %getelementptr10, align 4
  %getelementptr11 = getelementptr i8, ptr %getelementptr, i64 40
  store i64 0, ptr %getelementptr11, align 8
  %getelementptr12 = getelementptr i8, ptr %getelementptr, i64 48
  store i32 0, ptr %getelementptr12, align 8
  %getelementptr13 = getelementptr i8, ptr %getelementptr, i64 72
  store i32 0, ptr %getelementptr13, align 8
  %getelementptr14 = getelementptr i8, ptr %getelementptr, i64 80
  store i64 0, ptr %getelementptr14, align 8
  %add = add i64 %phi, 1
  br label %2
}
