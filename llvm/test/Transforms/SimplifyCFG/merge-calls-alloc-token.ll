; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=simplifycfg -S | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"

declare ptr @_Znwm(i64)

define ptr @test_merge_alloc_token_same(i1 %b) {
; CHECK-LABEL: define ptr @test_merge_alloc_token_same(
; CHECK-SAME: i1 [[B:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALL:%.*]] = call ptr @_Znwm(i64 4), !alloc_token [[META0:![0-9]+]]
; CHECK-NEXT:    ret ptr [[CALL]]
;
entry:
  br i1 %b, label %if.then, label %if.else

if.then:
  %call = call ptr @_Znwm(i64 4), !alloc_token !0
  br label %if.end

if.else:
  %call1 = call ptr @_Znwm(i64 4), !alloc_token !0
  br label %if.end

if.end:
  %x.0 = phi ptr [ %call, %if.then ], [ %call1, %if.else ]
  ret ptr %x.0
}

define ptr @test_merge_alloc_token_different(i1 %b) {
; CHECK-LABEL: define ptr @test_merge_alloc_token_different(
; CHECK-SAME: i1 [[B:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALL:%.*]] = call ptr @_Znwm(i64 4)
; CHECK-NEXT:    ret ptr [[CALL]]
;
entry:
  br i1 %b, label %if.then, label %if.else

if.then:
  %call = call ptr @_Znwm(i64 4), !alloc_token !0
  br label %if.end

if.else:
  %call1 = call ptr @_Znwm(i64 4), !alloc_token !1
  br label %if.end

if.end:
  %x.0 = phi ptr [ %call, %if.then ], [ %call1, %if.else ]
  ret ptr %x.0
}

define ptr @test_merge_alloc_token_some1(i1 %b) {
; CHECK-LABEL: define ptr @test_merge_alloc_token_some1(
; CHECK-SAME: i1 [[B:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALL:%.*]] = call ptr @_Znwm(i64 4)
; CHECK-NEXT:    ret ptr [[CALL]]
;
entry:
  br i1 %b, label %if.then, label %if.else

if.then:
  %call = call ptr @_Znwm(i64 4), !alloc_token !0
  br label %if.end

if.else:
  %call1 = call ptr @_Znwm(i64 4)
  br label %if.end

if.end:
  %x.0 = phi ptr [ %call, %if.then ], [ %call1, %if.else ]
  ret ptr %x.0
}

define ptr @test_merge_alloc_token_some2(i1 %b) {
; CHECK-LABEL: define ptr @test_merge_alloc_token_some2(
; CHECK-SAME: i1 [[B:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALL:%.*]] = call ptr @_Znwm(i64 4)
; CHECK-NEXT:    ret ptr [[CALL]]
;
entry:
  br i1 %b, label %if.then, label %if.else

if.then:
  %call = call ptr @_Znwm(i64 4)
  br label %if.end

if.else:
  %call1 = call ptr @_Znwm(i64 4), !alloc_token !0
  br label %if.end

if.end:
  %x.0 = phi ptr [ %call, %if.then ], [ %call1, %if.else ]
  ret ptr %x.0
}

!0 = !{!"int"}
!1 = !{!"char[4]"}
;.
; CHECK: [[META0]] = !{!"int"}
;.
