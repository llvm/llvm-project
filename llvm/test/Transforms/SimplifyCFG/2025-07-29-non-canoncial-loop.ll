; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=simplifycfg -simplifycfg-require-and-preserve-domtree=1 --keep-loops="true" -S | FileCheck --check-prefix=NO-THREADING %s
; Checks that we do not thread the control flow through the loop header loop_header as
; that will introduce a non-canonical loop.

; RUN: opt < %s -passes=simplifycfg -simplifycfg-require-and-preserve-domtree=1 --keep-loops="false" -S | FileCheck --check-prefix=THREADING %s
; Checks that we thread the control flow through the loop header loop_header since we
; do not request --keep-loops.

define void @__start(i1 %cond) {
; NO-THREADING-LABEL: define void @__start(
; NO-THREADING-SAME: i1 [[COND:%.*]]) {
; NO-THREADING-NEXT:  [[ENTRY:.*:]]
; NO-THREADING-NEXT:    br label %[[LOOP_HEADER:.*]]
; NO-THREADING:       [[LOOP_HEADER]]:
; NO-THREADING-NEXT:    br i1 [[COND]], label %[[LOOP_BODY_1:.*]], label %[[LOOP_BODY_0:.*]]
; NO-THREADING:       [[LOOP_BODY_0]]:
; NO-THREADING-NEXT:    [[_0_:%.*]] = add i16 0, 0
; NO-THREADING-NEXT:    br label %[[LOOP_EXIT:.*]]
; NO-THREADING:       [[LOOP_BODY_1]]:
; NO-THREADING-NEXT:    [[_1_:%.*]] = add i32 0, 1
; NO-THREADING-NEXT:    br label %[[LOOP_EXIT]]
; NO-THREADING:       [[LOOP_EXIT]]:
; NO-THREADING-NEXT:    br i1 [[COND]], label %[[LOOP_HEADER]], label %[[EXIT:.*]]
; NO-THREADING:       [[EXIT]]:
; NO-THREADING-NEXT:    ret void
;
; THREADING-LABEL: define void @__start(
; THREADING-SAME: i1 [[COND:%.*]]) {
; THREADING-NEXT:  [[ENTRY:.*:]]
; THREADING-NEXT:    br i1 [[COND]], label %[[LOOP_BODY_1:.*]], label %[[LOOP_BODY_0:.*]]
; THREADING:       [[LOOP_BODY_0]]:
; THREADING-NEXT:    [[_0_:%.*]] = add i16 0, 0
; THREADING-NEXT:    br label %[[LOOP_EXIT:.*]]
; THREADING:       [[LOOP_BODY_1]]:
; THREADING-NEXT:    [[_1_:%.*]] = add i32 0, 1
; THREADING-NEXT:    br label %[[LOOP_EXIT]]
; THREADING:       [[LOOP_EXIT]]:
; THREADING-NEXT:    br i1 [[COND]], label %[[LOOP_BODY_1]], label %[[EXIT:.*]]
; THREADING:       [[EXIT]]:
; THREADING-NEXT:    ret void
;
entry:
  br label %loop_header

loop_header:                                            ; preds = %loop_exit, %entry
  br i1 %cond, label %loop_body_1, label %loop_body_0

loop_body_0:                                            ; preds = %loop_header
  %_0_ = add i16 0, 0
  br label %loop_exit

loop_body_1:                                            ; preds = %loop_header
  %_1_ = add i32 0, 1
  br label %loop_exit

loop_exit:                                            ; preds = %loop_body_1, %loop_body_0
  br i1 %cond, label %loop_header, label %exit

exit:                                            ; preds = %loop_exit
  ret void
}
