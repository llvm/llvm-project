; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=1024 -sbvec-allow-non-pow2 -sbvec-passes="seed-collection<tr-save,bottom-up-vec,tr-accept>" --sbvec-stop-at=0 %s -S | FileCheck %s --check-prefix=STOPAT0
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=1024 -sbvec-allow-non-pow2 -sbvec-passes="seed-collection<tr-save,bottom-up-vec,tr-accept>" --sbvec-stop-at=1 %s -S | FileCheck %s --check-prefix=STOPAT1
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=1024 -sbvec-allow-non-pow2 -sbvec-passes="seed-collection<tr-save,bottom-up-vec,tr-accept>" --sbvec-stop-at=2 %s -S | FileCheck %s --check-prefix=STOPAT2

define void @widen(ptr %ptrA, ptr %ptrB) {
; STOPAT0-LABEL: define void @widen(
; STOPAT0-SAME: ptr [[PTRA:%.*]], ptr [[PTRB:%.*]]) {
; STOPAT0-NEXT:    [[PTRA0:%.*]] = getelementptr float, ptr [[PTRA]], i32 0
; STOPAT0-NEXT:    [[PTRA1:%.*]] = getelementptr float, ptr [[PTRA]], i32 1
; STOPAT0-NEXT:    [[LDA0:%.*]] = load float, ptr [[PTRA0]], align 4
; STOPAT0-NEXT:    [[LDA1:%.*]] = load float, ptr [[PTRA1]], align 4
; STOPAT0-NEXT:    store float [[LDA0]], ptr [[PTRA0]], align 4
; STOPAT0-NEXT:    store float [[LDA1]], ptr [[PTRA1]], align 4
; STOPAT0-NEXT:    [[PTRB0:%.*]] = getelementptr float, ptr [[PTRB]], i32 0
; STOPAT0-NEXT:    [[PTRB1:%.*]] = getelementptr float, ptr [[PTRB]], i32 1
; STOPAT0-NEXT:    [[LDB0:%.*]] = load float, ptr [[PTRB0]], align 4
; STOPAT0-NEXT:    [[LDB1:%.*]] = load float, ptr [[PTRB1]], align 4
; STOPAT0-NEXT:    store float [[LDB0]], ptr [[PTRB0]], align 4
; STOPAT0-NEXT:    store float [[LDB1]], ptr [[PTRB1]], align 4
; STOPAT0-NEXT:    ret void
;
; STOPAT1-LABEL: define void @widen(
; STOPAT1-SAME: ptr [[PTRA:%.*]], ptr [[PTRB:%.*]]) {
; STOPAT1-NEXT:    [[PTRA0:%.*]] = getelementptr float, ptr [[PTRA]], i32 0
; STOPAT1-NEXT:    [[VECL:%.*]] = load <2 x float>, ptr [[PTRA0]], align 4
; STOPAT1-NEXT:    store <2 x float> [[VECL]], ptr [[PTRA0]], align 4
; STOPAT1-NEXT:    [[PTRB0:%.*]] = getelementptr float, ptr [[PTRB]], i32 0
; STOPAT1-NEXT:    [[PTRB1:%.*]] = getelementptr float, ptr [[PTRB]], i32 1
; STOPAT1-NEXT:    [[LDB0:%.*]] = load float, ptr [[PTRB0]], align 4
; STOPAT1-NEXT:    [[LDB1:%.*]] = load float, ptr [[PTRB1]], align 4
; STOPAT1-NEXT:    store float [[LDB0]], ptr [[PTRB0]], align 4
; STOPAT1-NEXT:    store float [[LDB1]], ptr [[PTRB1]], align 4
; STOPAT1-NEXT:    ret void
;
; STOPAT2-LABEL: define void @widen(
; STOPAT2-SAME: ptr [[PTRA:%.*]], ptr [[PTRB:%.*]]) {
; STOPAT2-NEXT:    [[PTRA0:%.*]] = getelementptr float, ptr [[PTRA]], i32 0
; STOPAT2-NEXT:    [[VECL:%.*]] = load <2 x float>, ptr [[PTRA0]], align 4
; STOPAT2-NEXT:    store <2 x float> [[VECL]], ptr [[PTRA0]], align 4
; STOPAT2-NEXT:    [[PTRB0:%.*]] = getelementptr float, ptr [[PTRB]], i32 0
; STOPAT2-NEXT:    [[VECL1:%.*]] = load <2 x float>, ptr [[PTRB0]], align 4
; STOPAT2-NEXT:    store <2 x float> [[VECL1]], ptr [[PTRB0]], align 4
; STOPAT2-NEXT:    ret void
;
  %ptrA0 = getelementptr float, ptr %ptrA, i32 0
  %ptrA1 = getelementptr float, ptr %ptrA, i32 1
  %ldA0 = load float, ptr %ptrA0
  %ldA1 = load float, ptr %ptrA1
  store float %ldA0, ptr %ptrA0
  store float %ldA1, ptr %ptrA1

  %ptrB0 = getelementptr float, ptr %ptrB, i32 0
  %ptrB1 = getelementptr float, ptr %ptrB, i32 1
  %ldB0 = load float, ptr %ptrB0
  %ldB1 = load float, ptr %ptrB1
  store float %ldB0, ptr %ptrB0
  store float %ldB1, ptr %ptrB1

  ret void
}
