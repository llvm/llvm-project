; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 6
; RUN: opt < %s -passes=instsimplify -S | FileCheck %s
; RUN: opt < %s -passes=instsimplify -use-constant-int-for-fixed-length-splat -use-constant-int-for-scalable-splat -S | FileCheck %s

define i16 @W() {
; CHECK-LABEL: define i16 @W() {
; CHECK-NEXT:    ret i16 -32768
;
  %Z = call i16 @llvm.bitreverse.i16(i16 1)
  ret i16 %Z
}

define i32 @X() {
; CHECK-LABEL: define i32 @X() {
; CHECK-NEXT:    ret i32 -2147483648
;
  %Z = call i32 @llvm.bitreverse.i32(i32 1)
  ret i32 %Z
}

define i64 @Y() {
; CHECK-LABEL: define i64 @Y() {
; CHECK-NEXT:    ret i64 -9223372036854775808
;
  %Z = call i64 @llvm.bitreverse.i64(i64 1)
  ret i64 %Z
}

define i80 @Z() {
; CHECK-LABEL: define i80 @Z() {
; CHECK-NEXT:    ret i80 23777929115895377691656
;
  %Z = call i80 @llvm.bitreverse.i80(i80 76151636403560493650080)
  ret i80 %Z
}

define <4 x i32> @bitreverse_splat_v4i32() {
; CHECK-LABEL: define <4 x i32> @bitreverse_splat_v4i32() {
; CHECK-NEXT:    ret <4 x i32> splat (i32 -2147483648)
;
  %Z = call <4 x i32> @llvm.bitreverse.v4i32(<4 x i32> splat(i32 1))
  ret <4 x i32> %Z
}

define <vscale x 4 x i32> @bitreverse_splat_nxv4i32() {
; CHECK-LABEL: define <vscale x 4 x i32> @bitreverse_splat_nxv4i32() {
; CHECK-NEXT:    ret <vscale x 4 x i32> splat (i32 -2147483648)
;
  %Z = call <vscale x 4 x i32> @llvm.bitreverse.v4i32(<vscale x 4 x i32> splat(i32 1))
  ret <vscale x 4 x i32> %Z
}
