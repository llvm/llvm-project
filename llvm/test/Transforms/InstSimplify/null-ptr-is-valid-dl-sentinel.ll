; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -passes=instsimplify < %s | FileCheck %s
; RUN: opt -S -passes=instsimplify -data-layout=z0:1-z2:neg1-z3:neg1-z5:neg1 -S < %s | FileCheck %s --check-prefixes=CHECK-DL
; A 0 valued byval pointer may be valid
define i1 @byval_may_be_zero(ptr addrspace(5) byval(i32) %ptr) {
; CHECK-LABEL: @byval_may_be_zero(
; CHECK-NEXT:    [[CMP:%.*]] = icmp eq ptr addrspace(5) [[PTR:%.*]], null
; CHECK-NEXT:    ret i1 [[CMP]]
;
; CHECK-DL-LABEL: @byval_may_be_zero(
; CHECK-DL-NEXT:    ret i1 false
;
  %cmp = icmp eq ptr addrspace(5) %ptr, null
  ret i1 %cmp
}

define i1 @non-byval_may_be_zero(ptr addrspace(5) %ptr) {
; CHECK-LABEL: @non-byval_may_be_zero(
; CHECK-NEXT:    [[CMP:%.*]] = icmp eq ptr addrspace(5) [[PTR:%.*]], null
; CHECK-NEXT:    ret i1 [[CMP]]
;
; CHECK-DL-LABEL: @non-byval_may_be_zero(
; CHECK-DL-NEXT:    ret i1 false
;
  %cmp = icmp eq ptr addrspace(5) %ptr, null
  ret i1 %cmp
}

define i1 @ptr_may_be_zero(ptr addrspace(5) %ptr) {
; CHECK-LABEL: @ptr_may_be_zero(
; CHECK-NEXT:    [[LOAD:%.*]] = load ptr addrspace(5), ptr addrspace(5) [[PTR:%.*]], align 8
; CHECK-NEXT:    [[CMP:%.*]] = icmp eq ptr addrspace(5) [[LOAD]], null
; CHECK-NEXT:    ret i1 [[CMP]]
;
; CHECK-DL-LABEL: @ptr_may_be_zero(
; CHECK-DL-NEXT:    ret i1 false
;
  %load = load ptr addrspace(5), ptr addrspace(5) %ptr
  %cmp = icmp eq ptr addrspace(5) %load, null
  ret i1 %cmp
}

; A 0 valued byval pointer may be valid
define i1 @byval_may_be_zero_addrspace3(ptr addrspace(3) byval(i32) %ptr) {
; CHECK-LABEL: @byval_may_be_zero_addrspace3(
; CHECK-NEXT:    [[CMP:%.*]] = icmp eq ptr addrspace(3) [[PTR:%.*]], null
; CHECK-NEXT:    ret i1 [[CMP]]
;
; CHECK-DL-LABEL: @byval_may_be_zero_addrspace3(
; CHECK-DL-NEXT:    ret i1 false
;
  %cmp = icmp eq ptr addrspace(3) %ptr, null
  ret i1 %cmp
}

define i1 @non-byval_may_be_zero_addrspace3(ptr addrspace(3) %ptr) {
; CHECK-LABEL: @non-byval_may_be_zero_addrspace3(
; CHECK-NEXT:    [[CMP:%.*]] = icmp eq ptr addrspace(3) [[PTR:%.*]], null
; CHECK-NEXT:    ret i1 [[CMP]]
;
; CHECK-DL-LABEL: @non-byval_may_be_zero_addrspace3(
; CHECK-DL-NEXT:    ret i1 false
;
  %cmp = icmp eq ptr addrspace(3) %ptr, null
  ret i1 %cmp
}

define i1 @ptr_may_be_zero_addrspace3(ptr addrspace(3) %ptr) {
; CHECK-LABEL: @ptr_may_be_zero_addrspace3(
; CHECK-NEXT:    [[LOAD:%.*]] = load ptr addrspace(3), ptr addrspace(3) [[PTR:%.*]], align 8
; CHECK-NEXT:    [[CMP:%.*]] = icmp eq ptr addrspace(3) [[LOAD]], null
; CHECK-NEXT:    ret i1 [[CMP]]
;
; CHECK-DL-LABEL: @ptr_may_be_zero_addrspace3(
; CHECK-DL-NEXT:    ret i1 false
;
  %load = load ptr addrspace(3), ptr addrspace(3) %ptr
  %cmp = icmp eq ptr addrspace(3) %load, null
  ret i1 %cmp
}
