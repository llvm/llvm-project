; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=instsimplify -S | FileCheck %s

define i8 @scmp_lt() {
; CHECK-LABEL: define i8 @scmp_lt() {
; CHECK-NEXT:    ret i8 -1
;
  %1 = call i8 @llvm.scmp(i32 -7, i32 3)
  ret i8 %1
}

define i8 @scmp_eq() {
; CHECK-LABEL: define i8 @scmp_eq() {
; CHECK-NEXT:    ret i8 0
;
  %1 = call i8 @llvm.scmp(i32 2, i32 2)
  ret i8 %1
}

define i8 @scmp_gt() {
; CHECK-LABEL: define i8 @scmp_gt() {
; CHECK-NEXT:    ret i8 1
;
  %1 = call i8 @llvm.scmp(i32 2, i32 -7)
  ret i8 %1
}

define i8 @ucmp_lt() {
; CHECK-LABEL: define i8 @ucmp_lt() {
; CHECK-NEXT:    ret i8 -1
;
  %1 = call i8 @llvm.ucmp(i32 7, i32 12)
  ret i8 %1
}

define i2 @ucmp_eq() {
; CHECK-LABEL: define i2 @ucmp_eq() {
; CHECK-NEXT:    ret i2 0
;
  %1 = call i2 @llvm.ucmp(i32 12, i32 12)
  ret i2 %1
}

define i100 @ucmp_gt() {
; CHECK-LABEL: define i100 @ucmp_gt() {
; CHECK-NEXT:    ret i100 1
;
  %1 = call i100 @llvm.ucmp(i32 7, i32 3)
  ret i100 %1
}

define i8 @ucmp_poison() {
; CHECK-LABEL: define i8 @ucmp_poison() {
; CHECK-NEXT:    ret i8 poison
;
  %1 = call i8 @llvm.ucmp(i32 poison, i32 5)
  ret i8 %1
}

define i8 @scmp_poison() {
; CHECK-LABEL: define i8 @scmp_poison() {
; CHECK-NEXT:    ret i8 poison
;
  %1 = call i8 @llvm.scmp(i32 0, i32 poison)
  ret i8 %1
}

define i8 @scmp_undef() {
; CHECK-LABEL: define i8 @scmp_undef() {
; CHECK-NEXT:    ret i8 0
;
  %1 = call i8 @llvm.scmp(i32 undef, i32 -12)
  ret i8 %1
}

define i8 @ucmp_undef() {
; CHECK-LABEL: define i8 @ucmp_undef() {
; CHECK-NEXT:    ret i8 0
;
  %1 = call i8 @llvm.ucmp(i32 2, i32 undef)
  ret i8 %1
}

define <4 x i8> @ucmp_lt_splat() {
; CHECK-LABEL: define <4 x i8> @ucmp_lt_splat() {
; CHECK-NEXT:    ret <4 x i8> <i8 -1, i8 -1, i8 -1, i8 -1>
;
  %1 = call <4 x i8> @llvm.ucmp(<4 x i32> splat(i32 1), <4 x i32> splat(i32 3))
  ret <4 x i8> %1
}

define <4 x i8> @scmp_nonsplat() {
; CHECK-LABEL: define <4 x i8> @scmp_nonsplat() {
; CHECK-NEXT:    ret <4 x i8> <i8 1, i8 0, i8 1, i8 -1>
;
  %1 = call <4 x i8> @llvm.scmp(<4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32> <i32 -1, i32 1, i32 -2, i32 4>)
  ret <4 x i8> %1
}
