; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=instsimplify -S | FileCheck %s

define {i32, i32} @insert_poison({i32, i32} %x) {
; CHECK-LABEL: @insert_poison(
; CHECK-NEXT:    ret { i32, i32 } [[X:%.*]]
;
  %v = insertvalue {i32, i32} %x, i32 poison, 0
  ret {i32, i32} %v
}

define {i32, i32} @insert_into_poison({i32, i32} %x) {
; CHECK-LABEL: @insert_into_poison(
; CHECK-NEXT:    ret { i32, i32 } [[X:%.*]]
;
  %elem = extractvalue {i32, i32} %x, 0
  %v = insertvalue {i32, i32} poison, i32 %elem, 0
  ret {i32, i32} %v
}

define {i32, i32} @insert_undef({i32, i32} %x) {
; CHECK-LABEL: @insert_undef(
; CHECK-NEXT:    [[V:%.*]] = insertvalue { i32, i32 } [[X:%.*]], i32 undef, 0
; CHECK-NEXT:    ret { i32, i32 } [[V]]
;
  %v = insertvalue {i32, i32} %x, i32 undef, 0
  ret {i32, i32} %v
}

define {i32, i32} @insert_undef_into_non_poison({i32, i32} noundef %x) {
; CHECK-LABEL: @insert_undef_into_non_poison(
; CHECK-NEXT:    ret { i32, i32 } [[X:%.*]]
;
  %v = insertvalue {i32, i32} %x, i32 undef, 0
  ret {i32, i32} %v
}
