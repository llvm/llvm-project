; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature
; RUN: opt -S < %s -argpromotion | FileCheck %s

; This shouldn't get infinitely promoted.

%S = type { %S* }

define i32 @test_inf_promote_caller(i32 %arg) {
; CHECK-LABEL: define {{[^@]+}}@test_inf_promote_caller
; CHECK-SAME: (i32 [[ARG:%.*]]) {
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[TMP:%.*]] = alloca [[S:%.*]], align 8
; CHECK-NEXT:    [[TMP1:%.*]] = alloca [[S]], align 8
; CHECK-NEXT:    [[TMP2:%.*]] = call i32 @test_inf_promote_callee(%S* [[TMP]], %S* [[TMP1]])
; CHECK-NEXT:    ret i32 0
;
bb:
  %tmp = alloca %S
  %tmp1 = alloca %S
  %tmp2 = call i32 @test_inf_promote_callee(%S* %tmp, %S* %tmp1)
  ret i32 0
}

define internal i32 @test_inf_promote_callee(%S* %arg, %S* %arg1) {
; CHECK-LABEL: define {{[^@]+}}@test_inf_promote_callee
; CHECK-SAME: (%S* [[ARG:%.*]], %S* [[ARG1:%.*]]) {
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[TMP:%.*]] = getelementptr [[S:%.*]], %S* [[ARG1]], i32 0, i32 0
; CHECK-NEXT:    [[TMP2:%.*]] = load %S*, %S** [[TMP]], align 8
; CHECK-NEXT:    [[TMP3:%.*]] = getelementptr [[S]], %S* [[ARG]], i32 0, i32 0
; CHECK-NEXT:    [[TMP4:%.*]] = load %S*, %S** [[TMP3]], align 8
; CHECK-NEXT:    [[TMP5:%.*]] = call i32 @test_inf_promote_callee2(%S* [[TMP4]], %S* [[TMP2]])
; CHECK-NEXT:    ret i32 0
;
bb:
  %tmp = getelementptr %S, %S* %arg1, i32 0, i32 0
  %tmp2 = load %S*, %S** %tmp
  %tmp3 = getelementptr %S, %S* %arg, i32 0, i32 0
  %tmp4 = load %S*, %S** %tmp3
  %tmp5 = call i32 @test_inf_promote_callee2(%S* %tmp4, %S* %tmp2)
  ret i32 0
}

define internal i32 @test_inf_promote_callee2(%S* %arg, %S* %arg1) {
; CHECK-LABEL: define {{[^@]+}}@test_inf_promote_callee2
; CHECK-SAME: (%S* [[ARG:%.*]], %S* [[ARG1:%.*]]) {
; CHECK-NEXT:    [[R:%.*]] = call i32 @test_inf_promote_callee(%S* [[ARG]], %S* [[ARG1]])
; CHECK-NEXT:    ret i32 0
;
  %r = call i32 @test_inf_promote_callee(%S* %arg, %S* %arg1)
  ret i32 0
}

declare i32 @wibble(...)
