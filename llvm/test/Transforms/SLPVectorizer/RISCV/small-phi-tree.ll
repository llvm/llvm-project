; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mtriple=riscv64 -mcpu=sifive-x280 -passes=slp-vectorizer -S -slp-threshold=-11 < %s | FileCheck %s

define float @test(ptr %call78) {
; CHECK-LABEL: @test(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = insertelement <2 x ptr> <ptr poison, ptr null>, ptr [[CALL78:%.*]], i32 0
; CHECK-NEXT:    br label [[FOR_BODY194:%.*]]
; CHECK:       for.body194:
; CHECK-NEXT:    [[INDVARS_IV132:%.*]] = phi i64 [ 0, [[ENTRY:%.*]] ], [ 0, [[FOR_BODY194]] ]
; CHECK-NEXT:    [[CURRENTW_031:%.*]] = phi ptr [ [[CALL78]], [[ENTRY]] ], [ [[PREVIOUSW_030:%.*]], [[FOR_BODY194]] ]
; CHECK-NEXT:    [[PREVIOUSW_030]] = phi ptr [ null, [[ENTRY]] ], [ [[CURRENTW_031]], [[FOR_BODY194]] ]
; CHECK-NEXT:    [[TMP1:%.*]] = phi <2 x ptr> [ [[TMP0]], [[ENTRY]] ], [ [[TMP3:%.*]], [[FOR_BODY194]] ]
; CHECK-NEXT:    [[TMP3]] = shufflevector <2 x ptr> [[TMP1]], <2 x ptr> poison, <2 x i32> <i32 1, i32 0>
; CHECK-NEXT:    store float 0.000000e+00, ptr [[CURRENTW_031]], align 4
; CHECK-NEXT:    tail call void null(ptr [[PREVIOUSW_030]], ptr null, ptr null, i32 0, i32 0, ptr null, ptr null, i32 0)
; CHECK-NEXT:    br i1 false, label [[FOR_END286_LOOPEXIT:%.*]], label [[FOR_BODY194]]
; CHECK:       for.end286.loopexit:
; CHECK-NEXT:    [[TMP4:%.*]] = phi <2 x ptr> [ [[TMP3]], [[FOR_BODY194]] ]
; CHECK-NEXT:    ret float 0.000000e+00
;
entry:
  br label %for.body194

for.body194:
  %indvars.iv132 = phi i64 [ 0, %entry ], [ 0, %for.body194 ]
  %currentw.031 = phi ptr [ %call78, %entry ], [ %previousw.030, %for.body194 ]
  %previousw.030 = phi ptr [ null, %entry ], [ %currentw.031, %for.body194 ]
  store float 0.000000e+00, ptr %currentw.031, align 4
  tail call void null(ptr %previousw.030, ptr null, ptr null, i32 0, i32 0, ptr null, ptr null, i32 0)
  br i1 false, label %for.end286.loopexit, label %for.body194

for.end286.loopexit:
  %currentw.031.lcssa = phi ptr [ %currentw.031, %for.body194 ]
  %previousw.030.lcssa = phi ptr [ %previousw.030, %for.body194 ]
  ret float 0.000000e+00
}


