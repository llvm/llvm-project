; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S --passes=slp-vectorizer -mtriple=x86_64-unknown-linux-gnu -slp-threshold=-99999 < %s | FileCheck %s

define i64 @test() {
; CHECK-LABEL: define i64 @test() {
; CHECK-NEXT:  [[BB:.*]]:
; CHECK-NEXT:    [[TMP0:%.*]] = insertelement <2 x i32> <i32 0, i32 poison>, i32 0, i32 1
; CHECK-NEXT:    br label %[[BB1:.*]]
; CHECK:       [[BB1]]:
; CHECK-NEXT:    [[TMP1:%.*]] = phi <2 x i32> [ zeroinitializer, %[[BB]] ], [ [[TMP4:%.*]], %[[BB5:.*]] ]
; CHECK-NEXT:    [[TMP2:%.*]] = or <2 x i32> [[TMP0]], [[TMP1]]
; CHECK-NEXT:    [[TMP3:%.*]] = shufflevector <2 x i32> [[TMP1]], <2 x i32> [[TMP2]], <2 x i32> <i32 0, i32 3>
; CHECK-NEXT:    [[TMP4]] = or <2 x i32> [[TMP3]], zeroinitializer
; CHECK-NEXT:    br label %[[BB5]]
; CHECK:       [[BB5]]:
; CHECK-NEXT:    br i1 false, label %[[BB6:.*]], label %[[BB1]]
; CHECK:       [[BB6]]:
; CHECK-NEXT:    [[TMP5:%.*]] = phi <2 x i32> [ [[TMP2]], %[[BB5]] ]
; CHECK-NEXT:    ret i64 0
;
bb:
  br label %bb1

bb1:
  %phi = phi i32 [ 0, %bb ], [ %or, %bb5 ]
  %phi2 = phi i32 [ 0, %bb ], [ %or4, %bb5 ]
  %or = or i32 %phi, 0
  %add = add i32 0, 0
  %or3 = or i32 %add, %phi2
  %or4 = or i32 %or3, 0
  br label %bb5

bb5:
  br i1 false, label %bb6, label %bb1

bb6:
  %phi7 = phi i32 [ %or, %bb5 ]
  %phi8 = phi i32 [ %or3, %bb5 ]
  ret i64 0
}
