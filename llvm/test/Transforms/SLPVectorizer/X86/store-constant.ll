; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -S -mtriple=x86_64-- -passes=slp-vectorizer -mcpu=x86-64    | FileCheck %s --check-prefixes=SSE
; RUN: opt < %s -S -mtriple=x86_64-- -passes=slp-vectorizer -mcpu=x86-64-v2 | FileCheck %s --check-prefixes=SSE
; RUN: opt < %s -S -mtriple=x86_64-- -passes=slp-vectorizer -mcpu=x86-64-v3 | FileCheck %s --check-prefixes=AVX
; RUN: opt < %s -S -mtriple=x86_64-- -passes=slp-vectorizer -mcpu=x86-64-v4 | FileCheck %s --check-prefixes=AVX

@arr = global [20 x i64] zeroinitializer, align 16

define void @PR111126() {
; SSE-LABEL: @PR111126(
; SSE-NEXT:    store i64 1, ptr @arr, align 16
; SSE-NEXT:    store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 8), align 8
; SSE-NEXT:    store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 16), align 16
; SSE-NEXT:    store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 24), align 8
; SSE-NEXT:    store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 32), align 16
; SSE-NEXT:    store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 40), align 8
; SSE-NEXT:    ret void
;
; AVX-LABEL: @PR111126(
; AVX-NEXT:    store <4 x i64> splat (i64 1), ptr @arr, align 16
; AVX-NEXT:    store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 32), align 16
; AVX-NEXT:    store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 40), align 8
; AVX-NEXT:    ret void
;
  store i64 1, ptr @arr, align 16
  store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 8), align 8
  store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 16), align 16
  store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 24), align 8
  store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 32), align 16
  store i64 1, ptr getelementptr inbounds (i8, ptr @arr, i64 40), align 8
  ret void
}
