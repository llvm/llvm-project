; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -passes=slp-vectorizer -slp-threshold=-100 -mtriple=x86_64-w64-windows-gnu < %s | FileCheck %s

define void @test(i16 %0) {
; CHECK-LABEL: @test(
; CHECK-NEXT:  for.body92.preheader:
; CHECK-NEXT:    br label [[FOR_BODY92:%.*]]
; CHECK:       for.body92:
; CHECK-NEXT:    [[CONV177_I:%.*]] = sext i16 0 to i32
; CHECK-NEXT:    [[TMP1:%.*]] = zext i16 [[TMP0:%.*]] to i32
; CHECK-NEXT:    [[TMP2:%.*]] = insertelement <4 x i32> <i32 poison, i32 0, i32 poison, i32 0>, i32 [[CONV177_I]], i32 0
; CHECK-NEXT:    [[TMP6:%.*]] = insertelement <4 x i32> [[TMP2]], i32 [[TMP1]], i32 2
; CHECK-NEXT:    [[TMP7:%.*]] = add nsw <4 x i32> zeroinitializer, [[TMP6]]
; CHECK-NEXT:    store <4 x i32> [[TMP7]], ptr undef, align 8
; CHECK-NEXT:    br label [[FOR_BODY92]]
;
for.body92.preheader:
  br label %for.body92

for.body92:
  %conv177.i = sext i16 0 to i32
  %add178.i = add nsw i32 0, %conv177.i
  store i32 %add178.i, ptr undef, align 8
  %1 = zext i16 %0 to i32
  %sum_mvr_abs.i = getelementptr i32, ptr undef, i32 2
  %add182.i = add nsw i32 0, %1
  store i32 %add182.i, ptr %sum_mvr_abs.i, align 8
  %sum_mvc.i = getelementptr i32, ptr undef, i32 1
  %add184.i = add nsw i32 0, 0
  store i32 %add184.i, ptr %sum_mvc.i, align 4
  %sum_mvc_abs.i = getelementptr i32, ptr undef, i32 3
  %add188.i = add nsw i32 0, 0
  store i32 %add188.i, ptr %sum_mvc_abs.i, align 4
  br label %for.body92
}
