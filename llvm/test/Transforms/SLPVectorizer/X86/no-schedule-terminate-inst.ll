; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S --passes=slp-vectorizer -mtriple=x86_64-unknown-linux-gnu < %s | FileCheck %s

define void @test() gc "statepoint-example" personality ptr null {
; CHECK-LABEL: define void @test() gc "statepoint-example" personality ptr null {
; CHECK-NEXT:  [[BB:.*:]]
; CHECK-NEXT:    [[INVOKE:%.*]] = invoke i32 null(ptr addrspace(1) null, i32 0, i32 0, i32 0)
; CHECK-NEXT:            to label %[[BB2:.*]] unwind label %[[BB8:.*]]
; CHECK:       [[BB2]]:
; CHECK-NEXT:    [[ADD3:%.*]] = add i32 [[INVOKE]], 0
; CHECK-NEXT:    br label %[[BB4:.*]]
; CHECK:       [[BB4]]:
; CHECK-NEXT:    [[PHI:%.*]] = phi i32 [ [[ADD3]], %[[BB2]] ]
; CHECK-NEXT:    [[PHI5:%.*]] = phi i32 [ 0, %[[BB2]] ]
; CHECK-NEXT:    [[TMP0:%.*]] = phi <2 x i32> [ zeroinitializer, %[[BB2]] ]
; CHECK-NEXT:    ret void
; CHECK:       [[BB8]]:
; CHECK-NEXT:    [[LANDINGPAD:%.*]] = landingpad { ptr, i32 }
; CHECK-NEXT:            cleanup
; CHECK-NEXT:    ret void
;
bb:
  %add = add i32 0, 0
  %add1 = add i32 0, 0
  %invoke = invoke i32 null(ptr addrspace(1) null, i32 0, i32 0, i32 0)
  to label %bb2 unwind label %bb8

bb2:
  %add3 = add i32 %invoke, 0
  br label %bb4

bb4:
  %phi = phi i32 [ %add3, %bb2 ]
  %phi5 = phi i32 [ 0, %bb2 ]
  %phi6 = phi i32 [ %add, %bb2 ]
  %phi7 = phi i32 [ %add1, %bb2 ]
  ret void

bb8:
  %landingpad = landingpad { ptr, i32 }
  cleanup
  ret void
}
