; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -slp-vectorizer < %s | FileCheck %s

define void @main() {
; CHECK-LABEL: @main(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load <2 x i64>, <2 x i64>* undef, align 16
; CHECK-NEXT:    [[TMP1:%.*]] = add <2 x i64> [[TMP0]], <i64 1, i64 1>
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <2 x i64> [[TMP1]], i32 0
; CHECK-NEXT:    [[CMP_I:%.*]] = icmp eq i64 [[TMP2]], 0
; CHECK-NEXT:    [[VEC_0_I:%.*]] = select i1 [[CMP_I]], <2 x i64> [[TMP1]], <2 x i64> [[TMP1]]
; CHECK-NEXT:    ret void
;
entry:
  %0 = load <2 x i64>, <2 x i64>* undef, align 16
  %vec.0.vec.extract.i = extractelement <2 x i64> %0, i32 0
  %add.i = add i64 %vec.0.vec.extract.i, 1
  %vec.0.vec.insert.i = insertelement <2 x i64> %0, i64 %add.i, i32 0
  %cmp.i = icmp eq i64 %add.i, 0
  %vec.8.vec.extract.i = extractelement <2 x i64> %0, i32 1
  %inc.i = add i64 %vec.8.vec.extract.i, 1
  %vec.8.vec.insert.i = insertelement <2 x i64> %vec.0.vec.insert.i, i64 %inc.i, i32 1
  %vec.0.i = select i1 %cmp.i, <2 x i64> %vec.8.vec.insert.i, <2 x i64> %vec.0.vec.insert.i
  ret void
}

