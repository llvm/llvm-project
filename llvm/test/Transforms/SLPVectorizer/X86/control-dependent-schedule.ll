; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S --passes=slp-vectorizer -mtriple=x86_64-unknown-linux-gnu < %s | FileCheck %s

define i32 @test(i32 %0, i32 %1) {
; CHECK-LABEL: define i32 @test(
; CHECK-SAME: i32 [[TMP0:%.*]], i32 [[TMP1:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[K:%.*]] = alloca [4 x i32], align 16
; CHECK-NEXT:    [[ADD1:%.*]] = add i32 [[TMP0]], [[TMP1]]
; CHECK-NEXT:    [[SUB2:%.*]] = add i32 [[ADD1]], -1
; CHECK-NEXT:    [[CALL:%.*]] = tail call i32 (ptr, ...) @printf(ptr null, i32 [[ADD1]])
; CHECK-NEXT:    [[ADD2:%.*]] = add i32 [[TMP1]], -1
; CHECK-NEXT:    [[SUB3:%.*]] = add i32 [[ADD2]], [[CALL]]
; CHECK-NEXT:    [[ADD4:%.*]] = add i32 [[SUB3]], [[TMP0]]
; CHECK-NEXT:    store i32 [[ADD4]], ptr [[K]], align 16
; CHECK-NEXT:    [[ARRAYINIT_ELEMENT:%.*]] = getelementptr i8, ptr [[K]], i64 4
; CHECK-NEXT:    store i32 0, ptr [[ARRAYINIT_ELEMENT]], align 4
; CHECK-NEXT:    [[ARRAYINIT_ELEMENT5:%.*]] = getelementptr i8, ptr [[K]], i64 8
; CHECK-NEXT:    [[ADD7:%.*]] = add i32 [[ADD2]], [[SUB2]]
; CHECK-NEXT:    [[SUB8:%.*]] = add i32 [[ADD7]], [[TMP0]]
; CHECK-NEXT:    store i32 [[SUB8]], ptr [[ARRAYINIT_ELEMENT5]], align 8
; CHECK-NEXT:    [[ARRAYINIT_ELEMENT9:%.*]] = getelementptr i8, ptr [[K]], i64 12
; CHECK-NEXT:    [[ADD13:%.*]] = add i32 [[TMP1]], 1
; CHECK-NEXT:    [[ADD10:%.*]] = add i32 [[ADD13]], [[TMP0]]
; CHECK-NEXT:    [[ADD11:%.*]] = add i32 [[ADD10]], [[ADD1]]
; CHECK-NEXT:    [[ADD12:%.*]] = add i32 [[ADD11]], [[TMP0]]
; CHECK-NEXT:    store i32 [[ADD12]], ptr [[ARRAYINIT_ELEMENT9]], align 4
; CHECK-NEXT:    [[CALL15:%.*]] = call i32 (ptr, ...) @printf(ptr null, ptr [[K]])
; CHECK-NEXT:    ret i32 [[CALL15]]
;
entry:
  %k = alloca [4 x i32], align 16
  %add1 = add i32 %0, %1
  %sub2 = add i32 %add1, -1
  %call = tail call i32 (ptr, ...) @printf(ptr null, i32 %add1)
  %add2 = add i32 %1, -1
  %sub3 = add i32 %add2, %call
  %add4 = add i32 %sub3, %0
  store i32 %add4, ptr %k, align 16
  %arrayinit.element = getelementptr i8, ptr %k, i64 4
  store i32 0, ptr %arrayinit.element, align 4
  %arrayinit.element5 = getelementptr i8, ptr %k, i64 8
  %add7 = add i32 %add2, %sub2
  %sub8 = add i32 %add7, %0
  store i32 %sub8, ptr %arrayinit.element5, align 8
  %arrayinit.element9 = getelementptr i8, ptr %k, i64 12
  %add13 = add i32 %1, 1
  %add10 = add i32 %add13, %0
  %add11 = add i32 %add10, %add1
  %add12 = add i32 %add11, %0
  store i32 %add12, ptr %arrayinit.element9, align 4
  %call15 = call i32 (ptr, ...) @printf(ptr null, ptr %k)
  ret i32 %call15
}

declare i32 @printf(ptr, ...)
