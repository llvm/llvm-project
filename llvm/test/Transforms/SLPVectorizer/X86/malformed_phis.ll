; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -slp-vectorizer < %s | FileCheck %s
; RUN: opt -S -passes=slp-vectorizer < %s | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128-ni:1-p2:32:8:8:32-ni:2"
target triple = "x86_64-unknown-linux-gnu"

; Make sure we do not generate malformed phis not in the beginning of block.
define void @test() #0 {
; CHECK-LABEL: @test(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    br label [[BB1:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    [[TMP:%.*]] = phi i32 [ undef, [[BB1]] ], [ undef, [[BB:%.*]] ]
; CHECK-NEXT:    [[TMP2:%.*]] = phi i32 [ [[TMP18:%.*]], [[BB1]] ], [ undef, [[BB]] ]
; CHECK-NEXT:    [[TMP3:%.*]] = mul i32 undef, [[TMP]]
; CHECK-NEXT:    [[TMP4:%.*]] = mul i32 [[TMP3]], [[TMP]]
; CHECK-NEXT:    [[TMP5:%.*]] = mul i32 [[TMP4]], [[TMP]]
; CHECK-NEXT:    [[TMP6:%.*]] = mul i32 [[TMP5]], [[TMP]]
; CHECK-NEXT:    [[TMP7:%.*]] = mul i32 [[TMP6]], [[TMP]]
; CHECK-NEXT:    [[TMP8:%.*]] = mul i32 [[TMP7]], [[TMP]]
; CHECK-NEXT:    [[TMP9:%.*]] = mul i32 [[TMP8]], [[TMP]]
; CHECK-NEXT:    [[TMP10:%.*]] = mul i32 [[TMP9]], [[TMP]]
; CHECK-NEXT:    [[TMP11:%.*]] = mul i32 [[TMP10]], [[TMP]]
; CHECK-NEXT:    [[TMP12:%.*]] = mul i32 [[TMP11]], [[TMP]]
; CHECK-NEXT:    [[TMP13:%.*]] = mul i32 [[TMP12]], [[TMP]]
; CHECK-NEXT:    [[TMP14:%.*]] = mul i32 [[TMP13]], [[TMP]]
; CHECK-NEXT:    [[TMP15:%.*]] = mul i32 [[TMP14]], [[TMP]]
; CHECK-NEXT:    [[TMP16:%.*]] = mul i32 [[TMP15]], [[TMP]]
; CHECK-NEXT:    [[TMP17:%.*]] = mul i32 [[TMP16]], [[TMP]]
; CHECK-NEXT:    [[TMP18]] = mul i32 [[TMP17]], [[TMP]]
; CHECK-NEXT:    br label [[BB1]]
;
bb:
  br label %bb1

bb1:                                              ; preds = %bb1, %bb
  %tmp = phi i32 [ undef, %bb1 ], [ undef, %bb ]
  %tmp2 = phi i32 [ %tmp18, %bb1 ], [ undef, %bb ]
  %tmp3 = mul i32 undef, %tmp
  %tmp4 = mul i32 %tmp3, %tmp
  %tmp5 = mul i32 %tmp4, %tmp
  %tmp6 = mul i32 %tmp5, %tmp
  %tmp7 = mul i32 %tmp6, %tmp
  %tmp8 = mul i32 %tmp7, %tmp
  %tmp9 = mul i32 %tmp8, %tmp
  %tmp10 = mul i32 %tmp9, %tmp
  %tmp11 = mul i32 %tmp10, %tmp
  %tmp12 = mul i32 %tmp11, %tmp
  %tmp13 = mul i32 %tmp12, %tmp
  %tmp14 = mul i32 %tmp13, %tmp
  %tmp15 = mul i32 %tmp14, %tmp
  %tmp16 = mul i32 %tmp15, %tmp
  %tmp17 = mul i32 %tmp16, %tmp
  %tmp18 = mul i32 %tmp17, %tmp
  br label %bb1
}

define void @test_2(i8 addrspace(1)* %arg, i32 %arg1) #0 {
; CHECK-LABEL: @test_2(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    br label [[BB2:%.*]]
; CHECK:       bb2:
; CHECK-NEXT:    [[TMP:%.*]] = phi i32 [ undef, [[BB:%.*]] ], [ undef, [[BB2]] ]
; CHECK-NEXT:    [[TMP3:%.*]] = phi i32 [ 0, [[BB]] ], [ undef, [[BB2]] ]
; CHECK-NEXT:    [[TMP4:%.*]] = add i32 [[TMP]], undef
; CHECK-NEXT:    [[TMP5:%.*]] = add i32 undef, [[TMP4]]
; CHECK-NEXT:    [[TMP6:%.*]] = add i32 [[TMP]], [[TMP5]]
; CHECK-NEXT:    [[TMP7:%.*]] = add i32 undef, [[TMP6]]
; CHECK-NEXT:    [[TMP8:%.*]] = add i32 [[TMP]], [[TMP7]]
; CHECK-NEXT:    [[TMP9:%.*]] = add i32 undef, [[TMP8]]
; CHECK-NEXT:    [[TMP10:%.*]] = add i32 [[TMP]], [[TMP9]]
; CHECK-NEXT:    [[TMP11:%.*]] = add i32 undef, [[TMP10]]
; CHECK-NEXT:    [[TMP12:%.*]] = add i32 [[TMP]], [[TMP11]]
; CHECK-NEXT:    [[TMP13:%.*]] = add i32 undef, [[TMP12]]
; CHECK-NEXT:    [[TMP14:%.*]] = add i32 [[TMP]], [[TMP13]]
; CHECK-NEXT:    [[TMP15:%.*]] = add i32 undef, [[TMP14]]
; CHECK-NEXT:    [[TMP16:%.*]] = add i32 [[TMP]], [[TMP15]]
; CHECK-NEXT:    [[TMP17:%.*]] = add i32 undef, [[TMP16]]
; CHECK-NEXT:    [[TMP18:%.*]] = add i32 [[TMP]], [[TMP17]]
; CHECK-NEXT:    [[TMP19:%.*]] = add i32 undef, [[TMP18]]
; CHECK-NEXT:    call void @use(i32 [[TMP19]])
; CHECK-NEXT:    br label [[BB2]]
;
bb:
  br label %bb2

bb2:                                              ; preds = %bb2, %bb
  %tmp = phi i32 [ undef, %bb ], [ undef, %bb2 ]
  %tmp3 = phi i32 [ 0, %bb ], [ undef, %bb2 ]
  %tmp4 = add i32 %tmp, undef
  %tmp5 = add i32 undef, %tmp4
  %tmp6 = add i32 %tmp, %tmp5
  %tmp7 = add i32 undef, %tmp6
  %tmp8 = add i32 %tmp, %tmp7
  %tmp9 = add i32 undef, %tmp8
  %tmp10 = add i32 %tmp, %tmp9
  %tmp11 = add i32 undef, %tmp10
  %tmp12 = add i32 %tmp, %tmp11
  %tmp13 = add i32 undef, %tmp12
  %tmp14 = add i32 %tmp, %tmp13
  %tmp15 = add i32 undef, %tmp14
  %tmp16 = add i32 %tmp, %tmp15
  %tmp17 = add i32 undef, %tmp16
  %tmp18 = add i32 %tmp, %tmp17
  %tmp19 = add i32 undef, %tmp18
  call void @use(i32 %tmp19)
  br label %bb2
}

declare void @use(i32) #0

attributes #0 = { "target-features"="+sse4.1" }
