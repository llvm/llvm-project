; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt -S -passes=slp-vectorizer -mtriple=aarch64-unknown-linux-gnu < %s | FileCheck %s

define i32 @test(ptr %b, ptr %c, i32 %0, ptr %a, i1 %tobool3.not) {
; CHECK-LABEL: define i32 @test(
; CHECK-SAME: ptr [[B:%.*]], ptr [[C:%.*]], i32 [[TMP0:%.*]], ptr [[A:%.*]], i1 [[TOBOOL3_NOT:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br i1 [[TOBOOL3_NOT]], label [[BB1:%.*]], label [[BB2:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    [[CONV1_I_US:%.*]] = ashr i32 [[TMP0]], 16
; CHECK-NEXT:    [[CMP2_I_US:%.*]] = icmp slt i32 [[CONV1_I_US]], [[TMP0]]
; CHECK-NEXT:    [[SEXT26_US:%.*]] = zext i1 [[CMP2_I_US]] to i32
; CHECK-NEXT:    [[CONV1_I_US_5:%.*]] = ashr i32 [[TMP0]], 16
; CHECK-NEXT:    [[CMP2_I_US_5:%.*]] = icmp slt i32 [[CONV1_I_US_5]], [[TMP0]]
; CHECK-NEXT:    [[SEXT26_US_5:%.*]] = zext i1 [[CMP2_I_US_5]] to i32
; CHECK-NEXT:    [[CONV1_I_US_6:%.*]] = ashr i32 [[TMP0]], 16
; CHECK-NEXT:    [[CMP2_I_US_6:%.*]] = icmp slt i32 [[CONV1_I_US_6]], [[TMP0]]
; CHECK-NEXT:    [[SEXT26_US_6:%.*]] = zext i1 [[CMP2_I_US_6]] to i32
; CHECK-NEXT:    [[CONV1_I_US_7:%.*]] = ashr i32 [[TMP0]], 16
; CHECK-NEXT:    [[CMP2_I_US_7:%.*]] = icmp slt i32 [[CONV1_I_US_7]], [[TMP0]]
; CHECK-NEXT:    [[SEXT26_US_7:%.*]] = zext i1 [[CMP2_I_US_7]] to i32
; CHECK-NEXT:    br label [[BB3:%.*]]
; CHECK:       bb2:
; CHECK-NEXT:    [[CMP2_I:%.*]] = icmp sgt i32 [[TMP0]], 0
; CHECK-NEXT:    [[TMP1:%.*]] = zext i1 [[CMP2_I]] to i32
; CHECK-NEXT:    [[COND_I:%.*]] = select i1 [[TOBOOL3_NOT]], i32 [[TMP0]], i32 [[TMP1]]
; CHECK-NEXT:    [[SEXT26:%.*]] = shl i32 [[COND_I]], 16
; CHECK-NEXT:    [[CONV13:%.*]] = ashr i32 [[SEXT26]], 16
; CHECK-NEXT:    [[CMP2_I_5:%.*]] = icmp sgt i32 [[TMP0]], 0
; CHECK-NEXT:    [[TMP2:%.*]] = zext i1 [[CMP2_I_5]] to i32
; CHECK-NEXT:    [[COND_I_5:%.*]] = select i1 [[TOBOOL3_NOT]], i32 [[TMP0]], i32 [[TMP2]]
; CHECK-NEXT:    [[SEXT26_5:%.*]] = shl i32 [[COND_I_5]], 16
; CHECK-NEXT:    [[CONV13_5:%.*]] = ashr i32 [[SEXT26_5]], 16
; CHECK-NEXT:    [[CMP2_I_6:%.*]] = icmp sgt i32 [[TMP0]], 0
; CHECK-NEXT:    [[TMP3:%.*]] = zext i1 [[CMP2_I_6]] to i32
; CHECK-NEXT:    [[COND_I_6:%.*]] = select i1 [[TOBOOL3_NOT]], i32 [[TMP0]], i32 [[TMP3]]
; CHECK-NEXT:    [[SEXT26_6:%.*]] = shl i32 [[COND_I_6]], 16
; CHECK-NEXT:    [[CONV13_6:%.*]] = ashr i32 [[SEXT26_6]], 16
; CHECK-NEXT:    [[CMP2_I_7:%.*]] = icmp sgt i32 [[TMP0]], 0
; CHECK-NEXT:    [[TMP4:%.*]] = zext i1 [[CMP2_I_7]] to i32
; CHECK-NEXT:    [[COND_I_7:%.*]] = select i1 [[TOBOOL3_NOT]], i32 [[TMP0]], i32 [[TMP4]]
; CHECK-NEXT:    [[SEXT26_7:%.*]] = shl i32 [[COND_I_7]], 16
; CHECK-NEXT:    [[CONV13_7:%.*]] = ashr i32 [[SEXT26_7]], 16
; CHECK-NEXT:    br i1 true, label [[BB3]], label [[BB2]]
; CHECK:       bb3:
; CHECK-NEXT:    [[TMP18:%.*]] = phi i32 [ [[SEXT26_US]], [[BB1]] ], [ [[CONV13]], [[BB2]] ]
; CHECK-NEXT:    [[TMP20:%.*]] = phi i32 [ [[SEXT26_US_5]], [[BB1]] ], [ [[CONV13_5]], [[BB2]] ]
; CHECK-NEXT:    [[TMP22:%.*]] = phi i32 [ [[SEXT26_US_6]], [[BB1]] ], [ [[CONV13_6]], [[BB2]] ]
; CHECK-NEXT:    [[TMP24:%.*]] = phi i32 [ [[SEXT26_US_7]], [[BB1]] ], [ [[CONV13_7]], [[BB2]] ]
; CHECK-NEXT:    store i32 [[TMP18]], ptr [[B]], align 16
; CHECK-NEXT:    store i32 [[TMP20]], ptr [[A]], align 8
; CHECK-NEXT:    store i32 [[TMP22]], ptr [[C]], align 16
; CHECK-NEXT:    store i32 [[TMP24]], ptr [[B]], align 8
; CHECK-NEXT:    ret i32 0
;
entry:
  br i1 %tobool3.not, label %bb1, label %bb2

bb1:
  %conv1.i.us = ashr i32 %0, 16
  %cmp2.i.us = icmp slt i32 %conv1.i.us, %0
  %sext26.us = zext i1 %cmp2.i.us to i32
  %conv1.i.us.5 = ashr i32 %0, 16
  %cmp2.i.us.5 = icmp slt i32 %conv1.i.us.5, %0
  %sext26.us.5 = zext i1 %cmp2.i.us.5 to i32
  %conv1.i.us.6 = ashr i32 %0, 16
  %cmp2.i.us.6 = icmp slt i32 %conv1.i.us.6, %0
  %sext26.us.6 = zext i1 %cmp2.i.us.6 to i32
  %conv1.i.us.7 = ashr i32 %0, 16
  %cmp2.i.us.7 = icmp slt i32 %conv1.i.us.7, %0
  %sext26.us.7 = zext i1 %cmp2.i.us.7 to i32
  br label %bb3

bb2:
  %cmp2.i = icmp sgt i32 %0, 0
  %1 = zext i1 %cmp2.i to i32
  %cond.i = select i1 %tobool3.not, i32 %0, i32 %1
  %sext26 = shl i32 %cond.i, 16
  %conv13 = ashr i32 %sext26, 16
  %cmp2.i.5 = icmp sgt i32 %0, 0
  %2 = zext i1 %cmp2.i.5 to i32
  %cond.i.5 = select i1 %tobool3.not, i32 %0, i32 %2
  %sext26.5 = shl i32 %cond.i.5, 16
  %conv13.5 = ashr i32 %sext26.5, 16
  %cmp2.i.6 = icmp sgt i32 %0, 0
  %3 = zext i1 %cmp2.i.6 to i32
  %cond.i.6 = select i1 %tobool3.not, i32 %0, i32 %3
  %sext26.6 = shl i32 %cond.i.6, 16
  %conv13.6 = ashr i32 %sext26.6, 16
  %cmp2.i.7 = icmp sgt i32 %0, 0
  %4 = zext i1 %cmp2.i.7 to i32
  %cond.i.7 = select i1 %tobool3.not, i32 %0, i32 %4
  %sext26.7 = shl i32 %cond.i.7, 16
  %conv13.7 = ashr i32 %sext26.7, 16
  br i1 true, label %bb3, label %bb2

bb3:
  %conv13p = phi i32 [ %sext26.us, %bb1 ], [ %conv13, %bb2 ]
  %conv13.5p = phi i32 [ %sext26.us.5, %bb1 ], [ %conv13.5, %bb2 ]
  %conv13.6p = phi i32 [ %sext26.us.6, %bb1 ], [ %conv13.6, %bb2 ]
  %conv13.7p = phi i32 [ %sext26.us.7, %bb1 ], [ %conv13.7, %bb2 ]
  store i32 %conv13p, ptr %b, align 16
  store i32 %conv13.5p, ptr %a, align 8
  store i32 %conv13.6p, ptr %c, align 16
  store i32 %conv13.7p, ptr %b, align 8
  ret i32 0
}
