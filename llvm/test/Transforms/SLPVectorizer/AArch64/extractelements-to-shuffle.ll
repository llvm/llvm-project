; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=slp-vectorizer -S < %s -mtriple=aarch64 -aarch64-insert-extract-base-cost=3 | FileCheck %s

define void @test(<2 x i64> %0, <2 x i64> %1, <2 x i64> %2) {
; CHECK-LABEL: @test(
; CHECK-NEXT:    [[TMP4:%.*]] = extractelement <2 x i64> [[TMP2:%.*]], i64 0
; CHECK-NEXT:    [[TMP5:%.*]] = shufflevector <2 x i64> [[TMP1:%.*]], <2 x i64> [[TMP0:%.*]], <4 x i32> <i32 0, i32 2, i32 undef, i32 2>
; CHECK-NEXT:    [[TMP6:%.*]] = insertelement <4 x i64> [[TMP5]], i64 [[TMP4]], i32 2
; CHECK-NEXT:    [[TMP7:%.*]] = shufflevector <2 x i64> [[TMP2]], <2 x i64> poison, <4 x i32> <i32 undef, i32 undef, i32 1, i32 undef>
; CHECK-NEXT:    [[TMP8:%.*]] = shufflevector <4 x i64> [[TMP7]], <4 x i64> <i64 0, i64 0, i64 poison, i64 0>, <4 x i32> <i32 4, i32 5, i32 2, i32 7>
; CHECK-NEXT:    [[TMP9:%.*]] = or <4 x i64> [[TMP6]], [[TMP8]]
; CHECK-NEXT:    [[TMP10:%.*]] = trunc <4 x i64> [[TMP9]] to <4 x i32>
; CHECK-NEXT:    br label [[TMP11:%.*]]
; CHECK:       11:
; CHECK-NEXT:    [[TMP12:%.*]] = phi <4 x i32> [ [[TMP16:%.*]], [[TMP11]] ], [ [[TMP10]], [[TMP3:%.*]] ]
; CHECK-NEXT:    [[TMP13:%.*]] = shufflevector <4 x i32> [[TMP12]], <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, <4 x i32> <i32 0, i32 5, i32 6, i32 7>
; CHECK-NEXT:    [[TMP14:%.*]] = or <4 x i32> zeroinitializer, [[TMP13]]
; CHECK-NEXT:    [[TMP15:%.*]] = add <4 x i32> zeroinitializer, [[TMP13]]
; CHECK-NEXT:    [[TMP16]] = shufflevector <4 x i32> [[TMP14]], <4 x i32> [[TMP15]], <4 x i32> <i32 0, i32 5, i32 6, i32 7>
; CHECK-NEXT:    br label [[TMP11]]
;
  %4 = extractelement <2 x i64> %1, i64 0
  %5 = or i64 %4, 0
  %6 = trunc i64 %5 to i32
  %7 = extractelement <2 x i64> %0, i64 0
  %8 = or i64 %7, 0
  %9 = trunc i64 %8 to i32
  %10 = extractelement <2 x i64> %2, i64 0
  %11 = extractelement <2 x i64> %2, i64 1
  %12 = or i64 %10, %11
  %13 = trunc i64 %12 to i32
  %14 = extractelement <2 x i64> %0, i64 0
  %15 = or i64 %14, 0
  %16 = trunc i64 %15 to i32
  br label %17

17:
  %18 = phi i32 [ %22, %17 ], [ %6, %3 ]
  %19 = phi i32 [ %23, %17 ], [ %9, %3 ]
  %20 = phi i32 [ %24, %17 ], [ %13, %3 ]
  %21 = phi i32 [ %25, %17 ], [ %16, %3 ]
  %22 = or i32 %18, 0
  %23 = add i32 0, 0
  %24 = add i32 0, 0
  %25 = add i32 0, 0
  br label %17
}
