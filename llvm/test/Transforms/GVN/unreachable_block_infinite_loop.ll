; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 6
; RUN: opt -passes=gvn -S < %s | FileCheck %s

target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-apple-darwin10.0"

define i32 @test2() nounwind ssp {
; CHECK-LABEL: define i32 @test2(
; CHECK-SAME: ) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    ret i32 0
; CHECK:       [[UNREACHABLE_BLOCK:.*:]]
; CHECK-NEXT:    [[A:%.*]] = add i32 [[A]], 1
; CHECK-NEXT:    ret i32 [[A]]
;
entry:
  ret i32 0

unreachable_block:
  %a = add i32 %a, 1
  ret i32 %a
}

define i32 @pr23096_test0(i1 %arg, ptr %arg2) {
; CHECK-LABEL: define i32 @pr23096_test0(
; CHECK-SAME: i1 [[ARG:%.*]], ptr [[ARG2:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    br label %[[BB0:.*]]
; CHECK:       [[BB1:.*]]:
; CHECK-NEXT:    [[PTR1:%.*]] = ptrtoint ptr [[PTR2:%.*]] to i64
; CHECK-NEXT:    [[PTR2]] = inttoptr i64 [[PTR1]] to ptr
; CHECK-NEXT:    br i1 [[ARG]], label %[[BB0]], label %[[BB1]]
; CHECK:       [[BB0]]:
; CHECK-NEXT:    [[PHI:%.*]] = phi ptr [ [[ARG2]], %[[ENTRY]] ], [ [[PTR2]], %[[BB1]] ]
; CHECK-NEXT:    [[LOAD:%.*]] = load i32, ptr [[PHI]], align 4
; CHECK-NEXT:    ret i32 [[LOAD]]
;
entry:
  br label %bb0

bb1:
  %ptr1 = ptrtoint ptr %ptr2 to i64
  %ptr2 = inttoptr i64 %ptr1 to ptr
  br i1 %arg, label %bb0, label %bb1

bb0:
  %phi = phi ptr [ %arg2, %entry ], [ %ptr2, %bb1 ]
  %load = load i32, ptr %phi
  ret i32 %load
}

define i32 @pr23096_test1(i1 %arg, ptr %arg2) {
; CHECK-LABEL: define i32 @pr23096_test1(
; CHECK-SAME: i1 [[ARG:%.*]], ptr [[ARG2:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    br label %[[BB0:.*]]
; CHECK:       [[BB1:.*]]:
; CHECK-NEXT:    [[PTR1:%.*]] = getelementptr i32, ptr [[PTR2:%.*]], i32 0
; CHECK-NEXT:    [[PTR2]] = getelementptr i32, ptr [[PTR1]], i32 0
; CHECK-NEXT:    br i1 [[ARG]], label %[[BB0]], label %[[BB1]]
; CHECK:       [[BB0]]:
; CHECK-NEXT:    [[PHI:%.*]] = phi ptr [ [[ARG2]], %[[ENTRY]] ], [ [[PTR2]], %[[BB1]] ]
; CHECK-NEXT:    [[LOAD:%.*]] = load i32, ptr [[PHI]], align 4
; CHECK-NEXT:    ret i32 [[LOAD]]
;
entry:
  br label %bb0

bb1:
  %ptr1 = getelementptr i32, ptr %ptr2, i32 0
  %ptr2 = getelementptr i32, ptr %ptr1, i32 0
  br i1 %arg, label %bb0, label %bb1

bb0:
  %phi = phi ptr [ %arg2, %entry ], [ %ptr2, %bb1 ]
  %load = load i32, ptr %phi
  ret i32 %load
}
