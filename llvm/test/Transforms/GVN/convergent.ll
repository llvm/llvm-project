; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -passes=gvn -o - %s | FileCheck %s

define i32 @foo(i1 %cond) {
; CHECK-LABEL: @foo(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[V0:%.*]] = call i32 @llvm.convergent()
; CHECK-NEXT:    br i1 [[COND:%.*]], label [[BODY:%.*]], label [[END:%.*]]
; CHECK:       body:
; CHECK-NEXT:    [[V1:%.*]] = call i32 @llvm.convergent()
; CHECK-NEXT:    br label [[END]]
; CHECK:       end:
; CHECK-NEXT:    [[RET:%.*]] = phi i32 [ [[V0]], [[ENTRY:%.*]] ], [ [[V1]], [[BODY]] ]
; CHECK-NEXT:    ret i32 [[RET]]
;
entry:
  %v0 = call i32 @llvm.convergent()
  br i1 %cond, label %body, label %end

body:
  %v1 = call i32 @llvm.convergent()
  br label %end

end:
  %ret = phi i32 [ %v0, %entry ], [ %v1, %body ]
  ret i32 %ret
}

declare i32 @llvm.convergent() convergent nounwind readnone willreturn
