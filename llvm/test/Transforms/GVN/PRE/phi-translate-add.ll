; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=gvn -gvn-add-phi-translation=true  -S < %s | FileCheck %s --check-prefix=ADD-TRANS-ON --check-prefixes=CHECK,PT-ON-MDEP
; RUN: opt -passes='gvn<memoryssa>' -gvn-add-phi-translation=true  -S < %s | FileCheck %s --check-prefix=ADD-TRANS-ON --check-prefixes=CHECK,PT-ON-MSSA
; RUN: opt -passes=gvn -gvn-add-phi-translation=false -S < %s | FileCheck %s --check-prefix=ADD-TRANS-OFF --check-prefixes=CHECK,PT-OFF-MDEP
; RUN: opt -passes='gvn<memoryssa>' -gvn-add-phi-translation=false -S < %s | FileCheck %s --check-prefix=ADD-TRANS-OFF --check-prefixes=CHECK,PT-OFF-MSSA

; Test that phi translation is able to hoist a load whose address
; depends on an add also being hoisted.
define double @phi_translation_hoists_add(ptr %a, i64 %idx) {
; PT-ON-MDEP-LABEL: @phi_translation_hoists_add(
; PT-ON-MDEP-NEXT:  entry:
; PT-ON-MDEP-NEXT:    [[ADD_PHI_TRANS_INSERT:%.*]] = add nuw nsw i64 [[IDX:%.*]], 1
; PT-ON-MDEP-NEXT:    [[GEP_PHI_TRANS_INSERT:%.*]] = getelementptr inbounds double, ptr [[A:%.*]], i64 [[ADD_PHI_TRANS_INSERT]]
; PT-ON-MDEP-NEXT:    [[LOAD_PRE:%.*]] = load double, ptr [[GEP_PHI_TRANS_INSERT]], align 8
; PT-ON-MDEP-NEXT:    br label [[FOR_BODY:%.*]]
; PT-ON-MDEP:       for.body:
; PT-ON-MDEP-NEXT:    [[CMP:%.*]] = fcmp ole double [[LOAD_PRE]], 1.000000e+00
; PT-ON-MDEP-NEXT:    br i1 [[CMP]], label [[EXIT:%.*]], label [[FOR_BODY]]
; PT-ON-MDEP:       exit:
; PT-ON-MDEP-NEXT:    ret double [[LOAD_PRE]]
;
; PT-ON-MSSA-LABEL: @phi_translation_hoists_add(
; PT-ON-MSSA-NEXT:  entry:
; PT-ON-MSSA-NEXT:    br label [[FOR_BODY:%.*]]
; PT-ON-MSSA:       for.body:
; PT-ON-MSSA-NEXT:    [[ADD:%.*]] = add nuw nsw i64 [[IDX:%.*]], 1
; PT-ON-MSSA-NEXT:    [[GEP:%.*]] = getelementptr inbounds double, ptr [[A:%.*]], i64 [[ADD]]
; PT-ON-MSSA-NEXT:    [[LOAD:%.*]] = load double, ptr [[GEP]], align 8
; PT-ON-MSSA-NEXT:    [[CMP:%.*]] = fcmp ole double [[LOAD]], 1.000000e+00
; PT-ON-MSSA-NEXT:    br i1 [[CMP]], label [[EXIT:%.*]], label [[FOR_BODY]]
; PT-ON-MSSA:       exit:
; PT-ON-MSSA-NEXT:    ret double [[LOAD]]
;
; ADD-TRANS-OFF-LABEL: @phi_translation_hoists_add(
; ADD-TRANS-OFF-NEXT:  entry:
; ADD-TRANS-OFF-NEXT:    br label [[FOR_BODY:%.*]]
; ADD-TRANS-OFF:       for.body:
; ADD-TRANS-OFF-NEXT:    [[ADD:%.*]] = add nuw nsw i64 [[IDX:%.*]], 1
; ADD-TRANS-OFF-NEXT:    [[GEP:%.*]] = getelementptr inbounds double, ptr [[A:%.*]], i64 [[ADD]]
; ADD-TRANS-OFF-NEXT:    [[LOAD:%.*]] = load double, ptr [[GEP]], align 8
; ADD-TRANS-OFF-NEXT:    [[CMP:%.*]] = fcmp ole double [[LOAD]], 1.000000e+00
; ADD-TRANS-OFF-NEXT:    br i1 [[CMP]], label [[EXIT:%.*]], label [[FOR_BODY]]
; ADD-TRANS-OFF:       exit:
; ADD-TRANS-OFF-NEXT:    ret double [[LOAD]]
;
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %add = add nuw nsw i64 %idx, 1
  %gep = getelementptr inbounds double, ptr %a, i64 %add
  %load = load double, ptr %gep
  %cmp = fcmp ole double %load, 1.000000e+00
  br i1 %cmp, label %exit, label %for.body

exit:
  ret double %load
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; ADD-TRANS-ON: {{.*}}
; CHECK: {{.*}}
; PT-OFF-MDEP: {{.*}}
; PT-OFF-MSSA: {{.*}}
