; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=rewrite-statepoints-for-gc -S < %s | FileCheck %s

define void @test() gc "statepoint-example" personality ptr @zot{
; CHECK-LABEL: @test(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[TMP:%.*]] = freeze ptr addrspace(1) undef
; CHECK-NEXT:    [[TMP3:%.*]] = getelementptr inbounds i8, ptr addrspace(1) [[TMP]], i64 16
; CHECK-NEXT:    [[STATEPOINT_TOKEN:%.*]] = call token (i64, i32, ptr, i32, i32, ...) @llvm.experimental.gc.statepoint.p0(i64 2882400000, i32 0, ptr elementtype(void ()) @wibble, i32 0, i32 0, i32 0, i32 0) [ "deopt"() ]
; CHECK-NEXT:    [[TMP5:%.*]] = getelementptr inbounds i32, ptr addrspace(1) [[TMP3]], i64 undef
; CHECK-NEXT:    ret void
;
bb:
  %tmp = freeze ptr addrspace(1) undef
  %tmp3 = getelementptr inbounds i8, ptr addrspace(1) %tmp, i64 16
  call void @wibble() #3 [ "deopt"() ]
  %tmp5 = getelementptr inbounds i32, ptr addrspace(1) %tmp3, i64 undef
  ret void
}

declare ptr @zot()

declare void @wibble()
