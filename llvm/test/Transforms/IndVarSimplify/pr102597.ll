; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=indvars < %s | FileCheck %s

; The %tobool condition should not be optimized away.
define void @test() {
; CHECK-LABEL: define void @test() {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    br label %[[LOOP:.*]]
; CHECK:       [[LOOP]]:
; CHECK-NEXT:    [[IV:%.*]] = phi i128 [ 3, %[[ENTRY]] ], [ [[IV_DEC:%.*]], %[[LOOP_LATCH:.*]] ]
; CHECK-NEXT:    [[TOBOOL:%.*]] = icmp ne i128 [[IV]], 0
; CHECK-NEXT:    br i1 [[TOBOOL]], label %[[LOOP_LATCH]], label %[[IF:.*]]
; CHECK:       [[IF]]:
; CHECK-NEXT:    call void @foo()
; CHECK-NEXT:    br label %[[LOOP_LATCH]]
; CHECK:       [[LOOP_LATCH]]:
; CHECK-NEXT:    [[IV_DEC]] = add nsw i128 [[IV]], -1
; CHECK-NEXT:    [[CMP:%.*]] = icmp ugt i128 [[IV]], 0
; CHECK-NEXT:    br i1 [[CMP]], label %[[LOOP]], label %[[EXIT:.*]]
; CHECK:       [[EXIT]]:
; CHECK-NEXT:    ret void
;
entry:
  br label %loop

loop:
  %iv = phi i128 [ 3, %entry ], [ %iv.dec, %loop.latch ]
  %tobool = icmp ne i128 %iv, 0
  br i1 %tobool, label %loop.latch, label %if

if:
  call void @foo()
  br label %loop.latch

loop.latch:
  %iv.dec = add nsw i128 %iv, -1
  %cmp = icmp sgt i128 %iv, 0
  br i1 %cmp, label %loop, label %exit

exit:
  ret void
}

declare void @foo()
