; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=sroa < %s | FileCheck %s

; Function Attrs: nounwind uwtable
define dso_local i32 @test2(i16 noundef signext %p1) {
; CHECK-LABEL: define dso_local i32 @test2(
; CHECK-SAME: i16 noundef signext [[P1:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[P2:%.*]] = alloca i16, align 2, !immutable [[META0:![0-9]+]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(ptr [[P2]])
; CHECK-NEXT:    store i16 [[P1]], ptr [[P2]], align 2
; CHECK-NEXT:    call void @foo(ptr noundef [[P2]])
; CHECK-NEXT:    [[CONV:%.*]] = sext i16 [[P1]] to i32
; CHECK-NEXT:    [[TMP0:%.*]] = load i16, ptr [[P2]], align 2
; CHECK-NEXT:    [[CONV1:%.*]] = sext i16 [[P1]] to i32
; CHECK-NEXT:    [[CMP:%.*]] = icmp eq i32 [[CONV]], [[CONV1]]
; CHECK-NEXT:    br i1 [[CMP]], label %[[IF_THEN:.*]], label %[[IF_END:.*]]
; CHECK:       [[IF_THEN]]:
; CHECK-NEXT:    br label %[[CLEANUP:.*]]
; CHECK:       [[IF_END]]:
; CHECK-NEXT:    br label %[[CLEANUP]]
; CHECK:       [[CLEANUP]]:
; CHECK-NEXT:    [[RETVAL_0:%.*]] = phi i32 [ 14, %[[IF_THEN]] ], [ 42, %[[IF_END]] ]
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(ptr [[P2]])
; CHECK-NEXT:    ret i32 [[RETVAL_0]]
;
entry:
  %retval = alloca i32, align 4
  %p1.addr = alloca i16, align 2
  %p2 = alloca i16, align 2, !immutable !1
  %cleanup.dest.slot = alloca i32, align 4
  store i16 %p1, ptr %p1.addr, align 2
  call void @llvm.lifetime.start.p0(ptr %p2)
  %0 = load i16, ptr %p1.addr, align 2
  store i16 %0, ptr %p2, align 2
  call void @foo(ptr noundef %p2)
  %1 = load i16, ptr %p1.addr, align 2
  %conv = sext i16 %1 to i32
  %2 = load i16, ptr %p2, align 2
  %conv1 = sext i16 %2 to i32
  %cmp = icmp eq i32 %conv, %conv1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 14, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 42, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(ptr %p2)
  %3 = load i32, ptr %retval, align 4
  ret i32 %3
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(ptr captures(none))

declare void @foo(ptr noundef)

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(ptr captures(none))

!1 = !{i32 1}
;.
; CHECK: [[META0]] = !{i32 1}
;.
