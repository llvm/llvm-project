; RUN: opt < %s -passes='sroa<preserve-cfg>' -S | FileCheck %s --check-prefixes=CHECK,CHECK-PRESERVE-CFG
; RUN: opt < %s -passes='sroa<modify-cfg>' -S | FileCheck %s --check-prefixes=CHECK,CHECK-MODIFY-CFG

define ptr addrspace(1) @sev_convert_addrspace_in(<1 x ptr> %arg) {
; CHECK-LABEL: @sev_convert_addrspace_in(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[BITCAST:%.*]] = bitcast <1 x ptr> %arg to ptr
; CHECK-NEXT:    [[PTRTOINT:%.*]] = ptrtoint ptr [[BITCAST]] to i64
; CHECK-NEXT:    [[INTTOPTR:%.*]] = inttoptr i64 [[PTRTOINT]] to ptr addrspace(1)
; CHECK-NEXT:    ret ptr addrspace(1) [[INTTOPTR]]
entry:
   %tmp = alloca <1 x ptr>
   store <1 x ptr> %arg, ptr %tmp
   %res = load ptr addrspace(1), ptr %tmp
   ret ptr addrspace(1) %res
 }

define <1 x ptr> @sev_convert_addrspace_out(ptr addrspace(1) %arg) {
; CHECK-LABEL: @sev_convert_addrspace_out(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[PTRTOINT:%.*]] = ptrtoint ptr addrspace(1) %arg to i64
; CHECK-NEXT:    [[INTTOPTR:%.*]] = inttoptr i64 [[PTRTOINT]] to ptr
; CHECK-NEXT:    [[BITCAST:%.*]] = bitcast ptr [[INTTOPTR]] to <1 x ptr>
; CHECK-NEXT:    ret <1 x ptr> [[BITCAST]]
entry:
  %tmp = alloca ptr addrspace(1)
  store ptr addrspace(1) %arg, ptr %tmp
  %res = load <1 x ptr>, ptr %tmp
  ret <1 x ptr> %res
 }

;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CHECK-MODIFY-CFG: {{.*}}
; CHECK-PRESERVE-CFG: {{.*}}
