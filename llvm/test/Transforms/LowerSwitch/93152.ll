; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=lower-switch -S | FileCheck %s
define void @i3_range_4(i3 %0) {
; CHECK-LABEL: define void @i3_range_4(
; CHECK-SAME: i3 [[TMP0:%.*]]) {
; CHECK-NEXT:  [[BB_0:.*:]]
; CHECK-NEXT:    br label %[[LEAFBLOCK:.*]]
; CHECK:       [[LEAFBLOCK]]:
; CHECK-NEXT:    [[DOTOFF:%.*]] = add i3 [[TMP0]], 2
; CHECK-NEXT:    [[SWITCHLEAF:%.*]] = icmp ule i3 [[DOTOFF]], -4
; CHECK-NEXT:    br i1 [[SWITCHLEAF]], label %[[BB_1:.*]], label %[[BB_2:.*]]
; CHECK:       [[BB_1]]:
; CHECK-NEXT:    [[TMP:%.*]] = phi i3 [ 0, %[[LEAFBLOCK]] ]
; CHECK-NEXT:    br label %[[BB_2]]
; CHECK:       [[BB_2]]:
; CHECK-NEXT:    ret void
;
bb.0:
  switch i3 %0, label %bb.2 [
  i3 -1, label %bb.1
  i3 -2, label %bb.1
  i3 2, label %bb.1
  i3 1, label %bb.1
  i3 0, label %bb.1
  ]

bb.1:                                             ; preds = %bb.0, %bb.0, %bb.0, %bb.0, %bb.0
  %tmp = phi i3 [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ]
  br label %bb.2

bb.2:                                             ; preds = %bb.1, %bb.0
  ret void
}

define void @i3_range_6(i3 %0) {
; CHECK-LABEL: define void @i3_range_6(
; CHECK-SAME: i3 [[TMP0:%.*]]) {
; CHECK-NEXT:  [[BB_0:.*:]]
; CHECK-NEXT:    br label %[[LEAFBLOCK:.*]]
; CHECK:       [[LEAFBLOCK]]:
; CHECK-NEXT:    [[SWITCHLEAF:%.*]] = icmp sge i3 [[TMP0]], -3
; CHECK-NEXT:    br i1 [[SWITCHLEAF]], label %[[BB_1:.*]], label %[[BB_2:.*]]
; CHECK:       [[BB_1]]:
; CHECK-NEXT:    [[TMP:%.*]] = phi i3 [ 0, %[[LEAFBLOCK]] ]
; CHECK-NEXT:    br label %[[BB_2]]
; CHECK:       [[BB_2]]:
; CHECK-NEXT:    ret void
;
bb.0:
  switch i3 %0, label %bb.2 [
  i3 -1, label %bb.1
  i3 -2, label %bb.1
  i3 -3, label %bb.1
  i3 3, label %bb.1
  i3 2, label %bb.1
  i3 1, label %bb.1
  i3 0, label %bb.1
  ]

bb.1:                                             ; preds = %bb.0, %bb.0, %bb.0, %bb.0, %bb.0
  %tmp = phi i3 [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ]
  br label %bb.2

bb.2:                                             ; preds = %bb.1, %bb.0
  ret void
}


define void @i3_range_7(i3 %0) {
; CHECK-LABEL: define void @i3_range_7(
; CHECK-SAME: i3 [[TMP0:%.*]]) {
; CHECK-NEXT:  [[BB_0:.*:]]
; CHECK-NEXT:    br label %[[BB_1:.*]]
; CHECK:       [[BB_1]]:
; CHECK-NEXT:    br label %[[BB_2:.*]]
; CHECK:       [[BB_2]]:
; CHECK-NEXT:    ret void
;
bb.0:
  switch i3 %0, label %bb.2 [
  i3 -1, label %bb.1
  i3 -2, label %bb.1
  i3 -3, label %bb.1
  i3 -4, label %bb.1
  i3 3, label %bb.1
  i3 2, label %bb.1
  i3 1, label %bb.1
  i3 0, label %bb.1
  ]

bb.1:                                             ; preds = %bb.0, %bb.0, %bb.0, %bb.0, %bb.0
  %tmp = phi i3 [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ], [ 0, %bb.0 ]
  br label %bb.2

bb.2:                                             ; preds = %bb.1, %bb.0
  ret void
}
