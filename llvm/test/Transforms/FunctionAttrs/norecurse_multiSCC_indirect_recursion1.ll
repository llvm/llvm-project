; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-attributes --version 5
; RUN: opt < %s -passes=function-attrs -S | FileCheck %s
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128-Fn32"
target triple = "aarch64-unknown-linux-gnu"

; This test includes a call graph with multiple SCCs. The purpose of this is
; to check that norecurse is added to a function which calls a function which
; is indirectly recursive but is not part of the recursive chain.
; There are two SCCs in this test:
;  SCC#1:  bar2, bar3, bar4
;  SCC#2:  baz, fun
; main() calls bar2 and baz, both of which are part of some indirect recursive
; chain. but does not call back main() and hence main() can be marked as
; norecurse. But main() does not have internal linkage, hence we avoid adding 
; norecurse for main() as well.

; Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
define dso_local noundef i32 @main() local_unnamed_addr #0 {
; CHECK: Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
; CHECK-LABEL: define dso_local noundef i32 @main(
; CHECK-SAME: ) local_unnamed_addr #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @bar2()
; CHECK-NEXT:    tail call void @baz()
; CHECK-NEXT:    ret i32 0
;
entry:
  tail call void @bar2()
  tail call void @baz()
  ret i32 0
}

; Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
define internal void @bar4() local_unnamed_addr #0 {
; CHECK: Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
; CHECK-LABEL: define internal void @bar4(
; CHECK-SAME: ) local_unnamed_addr #[[ATTR0]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @bar2()
; CHECK-NEXT:    ret void
;
entry:
  tail call void @bar2()
  ret void
}

; Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
define internal void @bar2() local_unnamed_addr #0 {
; CHECK: Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
; CHECK-LABEL: define internal void @bar2(
; CHECK-SAME: ) local_unnamed_addr #[[ATTR0]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @bar3()
; CHECK-NEXT:    ret void
;
entry:
  tail call void @bar3()
  ret void
}

; Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
define internal void @bar3() local_unnamed_addr #0 {
; CHECK: Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
; CHECK-LABEL: define internal void @bar3(
; CHECK-SAME: ) local_unnamed_addr #[[ATTR0]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @bar4()
; CHECK-NEXT:    ret void
;
entry:
  tail call void @bar4()
  ret void
}

; Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
define internal void @fun() local_unnamed_addr #0 {
; CHECK: Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
; CHECK-LABEL: define internal void @fun(
; CHECK-SAME: ) local_unnamed_addr #[[ATTR0]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @baz()
; CHECK-NEXT:    ret void
;
entry:
  tail call void @baz()
  ret void
}

; Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
define internal void @baz() local_unnamed_addr #0 {
; CHECK: Function Attrs: nofree noinline nosync nounwind memory(none) uwtable
; CHECK-LABEL: define internal void @baz(
; CHECK-SAME: ) local_unnamed_addr #[[ATTR0]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @fun()
; CHECK-NEXT:    ret void
;
entry:
  tail call void @fun()
  ret void
}

attributes #0 = { nofree noinline nosync nounwind memory(none) uwtable "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+fp-armv8,+neon,+outline-atomics,+v8a,-fmv" }
