; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 6
; RUN: opt -passes=function-attrs -S < %s | FileCheck --check-prefixes=FNATTRS %s
; RUN: opt -passes=attributor-light -S < %s | FileCheck --check-prefixes=ATTRIBUTOR %s

define i32 @test_read_errno() {
; FNATTRS-LABEL: define i32 @test_read_errno() {
; FNATTRS-NEXT:    [[CALL:%.*]] = call ptr @__errno_location()
; FNATTRS-NEXT:    [[ERRNO:%.*]] = load i32, ptr [[CALL]], align 4
; FNATTRS-NEXT:    ret i32 [[ERRNO]]
;
; ATTRIBUTOR-LABEL: define i32 @test_read_errno() {
; ATTRIBUTOR-NEXT:    [[CALL:%.*]] = call ptr @__errno_location()
; ATTRIBUTOR-NEXT:    [[ERRNO:%.*]] = load i32, ptr [[CALL]], align 4
; ATTRIBUTOR-NEXT:    ret i32 [[ERRNO]]
;
  %call = call ptr @__errno_location()
  %errno = load i32, ptr %call
  ret i32 %errno
}

define ptr @test_write_errno() {
; FNATTRS-LABEL: define noundef ptr @test_write_errno() {
; FNATTRS-NEXT:    [[CALL:%.*]] = call ptr @__errno_location()
; FNATTRS-NEXT:    store i32 0, ptr [[CALL]], align 4
; FNATTRS-NEXT:    ret ptr [[CALL]]
;
; ATTRIBUTOR-LABEL: define ptr @test_write_errno() {
; ATTRIBUTOR-NEXT:    [[CALL:%.*]] = call ptr @__errno_location()
; ATTRIBUTOR-NEXT:    store i32 0, ptr [[CALL]], align 4
; ATTRIBUTOR-NEXT:    ret ptr [[CALL]]
;
  %call = call ptr @__errno_location()
  store i32 0, ptr %call
  ret ptr %call
}

define i32 @test_readwrite_errno() {
; FNATTRS-LABEL: define i32 @test_readwrite_errno() {
; FNATTRS-NEXT:    [[CALL:%.*]] = call ptr @__errno_location()
; FNATTRS-NEXT:    store i32 0, ptr [[CALL]], align 4
; FNATTRS-NEXT:    [[ERRNO:%.*]] = load i32, ptr [[CALL]], align 4
; FNATTRS-NEXT:    ret i32 [[ERRNO]]
;
; ATTRIBUTOR-LABEL: define i32 @test_readwrite_errno() {
; ATTRIBUTOR-NEXT:    [[CALL:%.*]] = call ptr @__errno_location()
; ATTRIBUTOR-NEXT:    store i32 0, ptr [[CALL]], align 4
; ATTRIBUTOR-NEXT:    [[ERRNO:%.*]] = load i32, ptr [[CALL]], align 4
; ATTRIBUTOR-NEXT:    ret i32 [[ERRNO]]
;
  %call = call ptr @__errno_location()
  store i32 0, ptr %call
  %errno = load i32, ptr %call
  ret i32 %errno
}

declare ptr @__errno_location()
