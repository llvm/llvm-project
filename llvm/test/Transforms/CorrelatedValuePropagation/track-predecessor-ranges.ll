; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes="correlated-propagation"  -S 2>&1 | FileCheck %s
; RUN: opt < %s -passes="correlated-propagation" -lvi-per-pred-ranges -S 2>&1 | FileCheck %s -check-prefix=LVI-PRED-RANGES

@global = external local_unnamed_addr global [4338 x i32], align 16

define dso_local noundef zeroext i1 @bar(i64 noundef %arg, ptr noundef writeonly captures(none) %arg1) local_unnamed_addr {
; CHECK-LABEL: define dso_local noundef zeroext i1 @bar(
; CHECK-SAME: i64 noundef [[ARG:%.*]], ptr noundef writeonly captures(none) [[ARG1:%.*]]) local_unnamed_addr {
; CHECK-NEXT:  [[BB:.*]]:
; CHECK-NEXT:    [[ICMP:%.*]] = icmp ult i64 [[ARG]], 1025
; CHECK-NEXT:    br i1 [[ICMP]], label %[[BB4:.*]], label %[[BB2:.*]]
; CHECK:       [[BB2]]:
; CHECK-NEXT:    [[ICMP3:%.*]] = icmp ult i64 [[ARG]], 262145
; CHECK-NEXT:    br i1 [[ICMP3]], label %[[BB4]], label %[[BB9:.*]]
; CHECK:       [[BB4]]:
; CHECK-NEXT:    [[PHI:%.*]] = phi i64 [ 7, %[[BB]] ], [ 15487, %[[BB2]] ]
; CHECK-NEXT:    [[PHI5:%.*]] = phi i64 [ 3, %[[BB]] ], [ 7, %[[BB2]] ]
; CHECK-NEXT:    [[ADD:%.*]] = add nuw nsw i64 [[PHI]], [[ARG]]
; CHECK-NEXT:    [[LSHR:%.*]] = lshr i64 [[ADD]], [[PHI5]]
; CHECK-NEXT:    [[ICMP6:%.*]] = icmp samesign ult i64 [[LSHR]], 4338
; CHECK-NEXT:    br i1 [[ICMP6]], label %[[BB8:.*]], label %[[BB7:.*]]
; CHECK:       [[BB7]]:
; CHECK-NEXT:    tail call void @llvm.ubsantrap(i8 18)
; CHECK-NEXT:    unreachable
; CHECK:       [[BB8]]:
; CHECK-NEXT:    [[GETELEMENTPTR:%.*]] = getelementptr inbounds nuw [4338 x i32], ptr @global, i64 0, i64 [[LSHR]]
; CHECK-NEXT:    [[LOAD:%.*]] = load i32, ptr [[GETELEMENTPTR]], align 4
; CHECK-NEXT:    [[SEXT:%.*]] = sext i32 [[LOAD]] to i64
; CHECK-NEXT:    store i64 [[SEXT]], ptr [[ARG1]], align 8
; CHECK-NEXT:    br label %[[BB9]]
; CHECK:       [[BB9]]:
; CHECK-NEXT:    [[PHI10:%.*]] = phi i1 [ true, %[[BB8]] ], [ false, %[[BB2]] ]
; CHECK-NEXT:    ret i1 [[PHI10]]
;
; LVI-PRED-RANGES-LABEL: define dso_local noundef zeroext i1 @bar(
; LVI-PRED-RANGES-SAME: i64 noundef [[ARG:%.*]], ptr noundef writeonly captures(none) [[ARG1:%.*]]) local_unnamed_addr {
; LVI-PRED-RANGES-NEXT:  [[BB:.*]]:
; LVI-PRED-RANGES-NEXT:    [[ICMP:%.*]] = icmp ult i64 [[ARG]], 1025
; LVI-PRED-RANGES-NEXT:    br i1 [[ICMP]], label %[[BB4:.*]], label %[[BB2:.*]]
; LVI-PRED-RANGES:       [[BB2]]:
; LVI-PRED-RANGES-NEXT:    [[ICMP3:%.*]] = icmp ult i64 [[ARG]], 262145
; LVI-PRED-RANGES-NEXT:    br i1 [[ICMP3]], label %[[BB4]], label %[[BB9:.*]]
; LVI-PRED-RANGES:       [[BB4]]:
; LVI-PRED-RANGES-NEXT:    [[PHI:%.*]] = phi i64 [ 7, %[[BB]] ], [ 15487, %[[BB2]] ]
; LVI-PRED-RANGES-NEXT:    [[PHI5:%.*]] = phi i64 [ 3, %[[BB]] ], [ 7, %[[BB2]] ]
; LVI-PRED-RANGES-NEXT:    [[ADD:%.*]] = add nuw nsw i64 [[PHI]], [[ARG]]
; LVI-PRED-RANGES-NEXT:    [[LSHR:%.*]] = lshr i64 [[ADD]], [[PHI5]]
; LVI-PRED-RANGES-NEXT:    br i1 true, label %[[BB8:.*]], label %[[BB7:.*]]
; LVI-PRED-RANGES:       [[BB7]]:
; LVI-PRED-RANGES-NEXT:    tail call void @llvm.ubsantrap(i8 18)
; LVI-PRED-RANGES-NEXT:    unreachable
; LVI-PRED-RANGES:       [[BB8]]:
; LVI-PRED-RANGES-NEXT:    [[GETELEMENTPTR:%.*]] = getelementptr inbounds nuw [4338 x i32], ptr @global, i64 0, i64 [[LSHR]]
; LVI-PRED-RANGES-NEXT:    [[LOAD:%.*]] = load i32, ptr [[GETELEMENTPTR]], align 4
; LVI-PRED-RANGES-NEXT:    [[SEXT:%.*]] = sext i32 [[LOAD]] to i64
; LVI-PRED-RANGES-NEXT:    store i64 [[SEXT]], ptr [[ARG1]], align 8
; LVI-PRED-RANGES-NEXT:    br label %[[BB9]]
; LVI-PRED-RANGES:       [[BB9]]:
; LVI-PRED-RANGES-NEXT:    [[PHI10:%.*]] = phi i1 [ true, %[[BB8]] ], [ false, %[[BB2]] ]
; LVI-PRED-RANGES-NEXT:    ret i1 [[PHI10]]
;
bb:
  %icmp = icmp ult i64 %arg, 1025
  br i1 %icmp, label %bb4, label %bb2

bb2:                                              ; preds = %bb
  %icmp3 = icmp ult i64 %arg, 262145
  br i1 %icmp3, label %bb4, label %bb9

bb4:                                              ; preds = %bb2, %bb
  %phi = phi i64 [ 7, %bb ], [ 15487, %bb2 ]
  %phi5 = phi i64 [ 3, %bb ], [ 7, %bb2 ]
  %add = add nuw nsw i64 %phi, %arg
  %lshr = lshr i64 %add, %phi5
  %icmp6 = icmp samesign ult i64 %lshr, 4338
  br i1 %icmp6, label %bb8, label %bb7

bb7:                                              ; preds = %bb4
  tail call void @llvm.ubsantrap(i8 18)
  unreachable

bb8:                                              ; preds = %bb4
  %getelementptr = getelementptr inbounds nuw [4338 x i32], ptr @global, i64 0, i64 %lshr
  %load = load i32, ptr %getelementptr, align 4
  %sext = sext i32 %load to i64
  store i64 %sext, ptr %arg1, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb2
  %phi10 = phi i1 [ true, %bb8 ], [ false, %bb2 ]
  ret i1 %phi10
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.ubsantrap(i8 immarg) #0

attributes #0 = { cold noreturn nounwind }
