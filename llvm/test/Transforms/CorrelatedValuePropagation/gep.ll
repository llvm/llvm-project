; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=correlated-propagation -S | FileCheck %s

define ptr @noop_gep(ptr %ptr, i8 range(i8 0, 1) %index) {
; CHECK-LABEL: define ptr @noop_gep(
; CHECK-SAME: ptr [[PTR:%.*]], i8 range(i8 0, 1) [[INDEX:%.*]]) {
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr i1, ptr [[PTR]], i8 [[INDEX]]
; CHECK-NEXT:    ret ptr [[GEP]]
;
  %gep = getelementptr i1, ptr %ptr, i8 %index
  ret ptr %gep
}


define ptr @noop_gep_with_constant(ptr %ptr, i8 range(i8 0, 1) %index) {
; CHECK-LABEL: define ptr @noop_gep_with_constant(
; CHECK-SAME: ptr [[PTR:%.*]], i8 range(i8 0, 1) [[INDEX:%.*]]) {
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr [2 x i1], ptr [[PTR]], i8 0, i8 [[INDEX]]
; CHECK-NEXT:    ret ptr [[GEP]]
;
  %gep = getelementptr [2 x i1], ptr %ptr, i8 0, i8 %index
  ret ptr %gep
}


define ptr @noop_gep_nonzero_index_negative(ptr %ptr, i8 range(i8 0, 2) %index) {
; CHECK-LABEL: define ptr @noop_gep_nonzero_index_negative(
; CHECK-SAME: ptr [[PTR:%.*]], i8 range(i8 0, 2) [[INDEX:%.*]]) {
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr i1, ptr [[PTR]], i8 [[INDEX]]
; CHECK-NEXT:    ret ptr [[GEP]]
;
  %gep = getelementptr i1, ptr %ptr, i8 %index
  ret ptr %gep
}


define ptr @gep_no_range_negative(ptr %ptr, i8 %index) {
; CHECK-LABEL: define ptr @gep_no_range_negative(
; CHECK-SAME: ptr [[PTR:%.*]], i8 [[INDEX:%.*]]) {
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr i1, ptr [[PTR]], i8 [[INDEX]]
; CHECK-NEXT:    ret ptr [[GEP]]
;
  %gep = getelementptr i1, ptr %ptr, i8 %index
  ret ptr %gep
}
