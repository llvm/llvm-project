; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=correlated-propagation -S | FileCheck %s

; Make sure that the optimization does not introduce immediate UB.

define i8 @test(i16 %x) {
; CHECK-LABEL: define range(i8 -128, 1) i8 @test(
; CHECK-SAME: i16 [[X:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    [[OR:%.*]] = or i16 [[X]], 1
; CHECK-NEXT:    [[CONV:%.*]] = trunc i16 [[OR]] to i8
; CHECK-NEXT:    [[MIN:%.*]] = call noundef i8 @llvm.smin.i8(i8 [[CONV]], i8 0)
; CHECK-NEXT:    [[COND:%.*]] = icmp eq i16 [[X]], 0
; CHECK-NEXT:    br i1 [[COND]], label %[[IF_END:.*]], label %[[IF_THEN:.*]]
; CHECK:       [[IF_THEN]]:
; CHECK-NEXT:    br label %[[IF_END]]
; CHECK:       [[IF_END]]:
; CHECK-NEXT:    [[RES:%.*]] = phi i8 [ [[MIN]], %[[ENTRY]] ], [ 0, %[[IF_THEN]] ]
; CHECK-NEXT:    ret i8 [[RES]]
;
entry:
  %or = or i16 %x, 1
  %conv = trunc i16 %or to i8
  %min = call noundef i8 @llvm.smin.i8(i8 %conv, i8 0)
  %cond = icmp eq i16 %x, 0
  br i1 %cond, label %if.end, label %if.then

if.then:
  br label %if.end

if.end:
  %res = phi i8 [ %min, %entry ], [ 0, %if.then ]
  ret i8 %res
}
