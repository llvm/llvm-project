; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -O2 < %s | FileCheck %s

; Make sure we can get rid off the unnecessary branch in O2.
; CorrelatedValuePropagation does not handle `select` correctly, so we need
; to check for correct pass ordering.

declare void @bar(i8)

define void @foo(i8 %1) {
; CHECK-LABEL: @foo(
; CHECK-NEXT:    [[TMP2:%.*]] = srem i8 [[TMP0:%.*]], 12
; CHECK-NEXT:    [[TMP3:%.*]] = icmp slt i8 [[TMP2]], 1
; CHECK-NEXT:    [[TMP4:%.*]] = add nsw i8 [[TMP2]], 12
; CHECK-NEXT:    [[SPEC_SELECT:%.*]] = select i1 [[TMP3]], i8 [[TMP4]], i8 [[TMP2]]
; CHECK-NEXT:    tail call void @bar(i8 [[SPEC_SELECT]])
; CHECK-NEXT:    ret void
;
2:
  %3 = srem i8 %1, 12
  %4 = icmp slt i8 %3, 1
  br i1 %4, label %5, label %7

5:
  %6 = add nsw i8 %3, 12
  br label %7

7:
  %8 = phi i8 [ %6, %5 ], [ %3, %2 ]
  br label %9

9:
  %10 = icmp ult i8 %8, 13
  br i1 %10, label %11, label %12

11:
  call void @bar(i8 %8)
  ret void

12:
  tail call void @llvm.ubsantrap(i8 18)
  unreachable
}
