; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: -p --function-signature --include-generated-funcs
; RUN: opt -S --passes=always-specialize < %s | FileCheck %s
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define i32 @loop(i32 alwaysspecialize %x) {
entry:
  %call = call i32 @loop(i32 5)
  %call1 = call i32 @loop(i32 %x)
  %add = add i32 %call, %call1
  ret i32 %add
}

define i32 @loop_driver() {
entry:
  %call = call i32 @loop(i32 5)
  ret i32 %call
}



; CHECK-LABEL: define {{[^@]+}}@loop.spec
; CHECK-SAME: (i32 [[X:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @loop.spec(i32 5)
; CHECK-NEXT:    [[CALL1:%.*]] = call i32 @loop.spec(i32 5)
; CHECK-NEXT:    [[ADD:%.*]] = add i32 [[CALL]], [[CALL1]]
; CHECK-NEXT:    ret i32 [[ADD]]
;
;
; CHECK-LABEL: define {{[^@]+}}@loop
; CHECK-SAME: (i32 alwaysspecialize [[X:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @loop.spec(i32 5)
; CHECK-NEXT:    [[CALL1:%.*]] = call i32 @loop(i32 [[X]])
; CHECK-NEXT:    [[ADD:%.*]] = add i32 [[CALL]], [[CALL1]]
; CHECK-NEXT:    ret i32 [[ADD]]
;
;
; CHECK-LABEL: define {{[^@]+}}@loop_driver() {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CALL:%.*]] = call i32 @loop.spec(i32 5)
; CHECK-NEXT:    ret i32 [[CALL]]
;
