; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -codegenprepare < %s | FileCheck %s

target triple = "x86_64-unknown-linux-gnu"

define void @f1(i32 %a) {
; CHECK-LABEL: @f1(
; CHECK-NEXT:    [[FR:%.*]] = freeze i32 [[A:%.*]]
; CHECK-NEXT:    [[C:%.*]] = icmp eq i32 [[FR]], 0
; CHECK-NEXT:    br i1 [[C]], label [[A:%.*]], label [[B:%.*]]
; CHECK:       A:
; CHECK-NEXT:    call void @g1()
; CHECK-NEXT:    ret void
; CHECK:       B:
; CHECK-NEXT:    call void @g2()
; CHECK-NEXT:    ret void
;
  %c = icmp eq i32 %a, 0
  %fr = freeze i1 %c
  br i1 %fr, label %A, label %B
A:
  call void @g1()
  ret void
B:
  call void @g2()
  ret void
}

define void @f2(i32 %a) {
; CHECK-LABEL: @f2(
; CHECK-NEXT:    [[FR:%.*]] = freeze i32 [[A:%.*]]
; CHECK-NEXT:    [[C:%.*]] = icmp eq i32 0, [[FR]]
; CHECK-NEXT:    br i1 [[C]], label [[A:%.*]], label [[B:%.*]]
; CHECK:       A:
; CHECK-NEXT:    call void @g1()
; CHECK-NEXT:    ret void
; CHECK:       B:
; CHECK-NEXT:    call void @g2()
; CHECK-NEXT:    ret void
;
  %c = icmp eq i32 0, %a
  %fr = freeze i1 %c
  br i1 %fr, label %A, label %B
A:
  call void @g1()
  ret void
B:
  call void @g2()
  ret void
}

define void @f3(i32 %a) {
; CHECK-LABEL: @f3(
; CHECK-NEXT:    [[C:%.*]] = icmp eq i32 0, 1
; CHECK-NEXT:    br i1 [[C]], label [[A:%.*]], label [[B:%.*]]
; CHECK:       A:
; CHECK-NEXT:    call void @g1()
; CHECK-NEXT:    ret void
; CHECK:       B:
; CHECK-NEXT:    call void @g2()
; CHECK-NEXT:    ret void
;
  %c = icmp eq i32 0, 1
  %fr = freeze i1 %c
  br i1 %fr, label %A, label %B
A:
  call void @g1()
  ret void
B:
  call void @g2()
  ret void
}

declare void @g1()
declare void @g2()
