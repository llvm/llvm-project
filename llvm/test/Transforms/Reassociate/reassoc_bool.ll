; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt < %s -passes=reassociate -S | FileCheck %s

define i1 @scalar(i1 %b0, i1 %b1, i1 %b2, i1 %b3, i1 %b4, i1 %b5, i1 %b6, i1 %b7) {
; CHECK-LABEL: define i1 @scalar(
; CHECK-SAME: i1 [[B0:%.*]], i1 [[B1:%.*]], i1 [[B2:%.*]], i1 [[B3:%.*]], i1 [[B4:%.*]], i1 [[B5:%.*]], i1 [[B6:%.*]], i1 [[B7:%.*]]) {
; CHECK-NEXT:    [[OR01:%.*]] = or i1 [[B0]], [[B1]]
; CHECK-NEXT:    [[OR23:%.*]] = or i1 [[B2]], [[B3]]
; CHECK-NEXT:    [[OR45:%.*]] = or i1 [[B4]], [[B5]]
; CHECK-NEXT:    [[OR67:%.*]] = or i1 [[B6]], [[B7]]
; CHECK-NEXT:    [[OR0123:%.*]] = or i1 [[OR01]], [[OR23]]
; CHECK-NEXT:    [[OR4567:%.*]] = or i1 [[OR45]], [[OR67]]
; CHECK-NEXT:    [[OR01234567:%.*]] = or i1 [[OR0123]], [[OR4567]]
; CHECK-NEXT:    ret i1 [[OR01234567]]
;
  %or01 = or i1 %b0, %b1
  %or23 = or i1 %b2, %b3
  %or45 = or i1 %b4, %b5
  %or67 = or i1 %b6, %b7
  %or0123 = or i1 %or01, %or23
  %or4567 = or i1 %or45, %or67
  %or01234567 = or i1 %or0123, %or4567
  ret i1 %or01234567
}


define i1 @scalar1(i1 %a, i1 %b0, i1 %b1, i1 %b2, i1 %b3, i1 %b4, i1 %b5, i1 %b6, i1 %b7) {
; CHECK-LABEL: define i1 @scalar1(
; CHECK-SAME: i1 [[A:%.*]], i1 [[B0:%.*]], i1 [[B1:%.*]], i1 [[B2:%.*]], i1 [[B3:%.*]], i1 [[B4:%.*]], i1 [[B5:%.*]], i1 [[B6:%.*]], i1 [[B7:%.*]]) {
; CHECK-NEXT:    [[OR0:%.*]] = or i1 [[A]], [[B0]]
; CHECK-NEXT:    [[OR1:%.*]] = or i1 [[A]], [[B1]]
; CHECK-NEXT:    [[OR2:%.*]] = or i1 [[A]], [[B2]]
; CHECK-NEXT:    [[OR3:%.*]] = or i1 [[A]], [[B3]]
; CHECK-NEXT:    [[OR4:%.*]] = or i1 [[A]], [[B4]]
; CHECK-NEXT:    [[OR5:%.*]] = or i1 [[A]], [[B5]]
; CHECK-NEXT:    [[OR6:%.*]] = or i1 [[A]], [[B6]]
; CHECK-NEXT:    [[OR7:%.*]] = or i1 [[A]], [[B7]]
; CHECK-NEXT:    [[XOR0:%.*]] = xor i1 [[OR0]], [[OR1]]
; CHECK-NEXT:    [[XOR1:%.*]] = xor i1 [[XOR0]], [[OR2]]
; CHECK-NEXT:    [[XOR2:%.*]] = xor i1 [[XOR1]], [[OR3]]
; CHECK-NEXT:    [[XOR3:%.*]] = xor i1 [[XOR2]], [[OR4]]
; CHECK-NEXT:    [[XOR4:%.*]] = xor i1 [[XOR3]], [[OR5]]
; CHECK-NEXT:    [[XOR5:%.*]] = xor i1 [[XOR4]], [[OR6]]
; CHECK-NEXT:    [[XOR6:%.*]] = xor i1 [[XOR5]], [[OR7]]
; CHECK-NEXT:    [[OR001:%.*]] = or i1 [[XOR0]], [[XOR1]]
; CHECK-NEXT:    [[OR023:%.*]] = or i1 [[XOR2]], [[XOR3]]
; CHECK-NEXT:    [[OR045:%.*]] = or i1 [[XOR4]], [[XOR5]]
; CHECK-NEXT:    [[OR060:%.*]] = or i1 [[XOR0]], [[XOR6]]
; CHECK-NEXT:    [[OR0123:%.*]] = or i1 [[OR001]], [[OR023]]
; CHECK-NEXT:    [[OR4560:%.*]] = or i1 [[OR045]], [[OR060]]
; CHECK-NEXT:    [[OR01234567:%.*]] = or i1 [[OR0123]], [[OR4560]]
; CHECK-NEXT:    ret i1 [[OR01234567]]
;
  %or0 = or i1 %b0, %a
  %or1 = or i1 %b1, %a
  %or2 = or i1 %b2, %a
  %or3 = or i1 %b3, %a
  %or4 = or i1 %b4, %a
  %or5 = or i1 %b5, %a
  %or6 = or i1 %b6, %a
  %or7 = or i1 %b7, %a
  %xor0 = xor i1 %or0, %or1
  %xor1 = xor i1 %xor0, %or2
  %xor2 = xor i1 %xor1, %or3
  %xor3 = xor i1 %xor2, %or4
  %xor4 = xor i1 %xor3, %or5
  %xor5 = xor i1 %xor4, %or6
  %xor6 = xor i1 %xor5, %or7
  %or001 = or i1 %xor0, %xor1
  %or023 = or i1 %xor2, %xor3
  %or045 = or i1 %xor4, %xor5
  %or060 = or i1 %xor6, %xor0
  %or0123 = or i1 %or001, %or023
  %or4560 = or i1 %or045, %or060
  %or01234567 = or i1 %or0123, %or4560
  ret i1 %or01234567
}

define i1 @scalar2(i1 %a, i1 %b0, i1 %b1, i1 %b2, i1 %b3, i1 %b4, i1 %b5, i1 %b6, i1 %b7) {
; CHECK-LABEL: define i1 @scalar2(
; CHECK-SAME: i1 [[A:%.*]], i1 [[B0:%.*]], i1 [[B1:%.*]], i1 [[B2:%.*]], i1 [[B3:%.*]], i1 [[B4:%.*]], i1 [[B5:%.*]], i1 [[B6:%.*]], i1 [[B7:%.*]]) {
; CHECK-NEXT:    [[OR0:%.*]] = or i1 [[A]], [[B0]]
; CHECK-NEXT:    [[OR1:%.*]] = or i1 [[A]], [[B1]]
; CHECK-NEXT:    [[OR2:%.*]] = or i1 [[A]], [[B2]]
; CHECK-NEXT:    [[OR3:%.*]] = or i1 [[A]], [[B3]]
; CHECK-NEXT:    [[OR4:%.*]] = or i1 [[A]], [[B4]]
; CHECK-NEXT:    [[OR5:%.*]] = or i1 [[A]], [[B5]]
; CHECK-NEXT:    [[OR6:%.*]] = or i1 [[A]], [[B6]]
; CHECK-NEXT:    [[OR7:%.*]] = or i1 [[A]], [[B7]]
; CHECK-NEXT:    [[XOR0:%.*]] = xor i1 [[OR0]], [[OR1]]
; CHECK-NEXT:    [[XOR1:%.*]] = xor i1 [[OR2]], [[OR3]]
; CHECK-NEXT:    [[XOR2:%.*]] = xor i1 [[OR4]], [[OR5]]
; CHECK-NEXT:    [[XOR3:%.*]] = xor i1 [[OR6]], [[OR7]]
; CHECK-NEXT:    [[OR01:%.*]] = xor i1 [[XOR0]], [[XOR1]]
; CHECK-NEXT:    [[OR23:%.*]] = xor i1 [[XOR2]], [[XOR3]]
; CHECK-NEXT:    [[OR0123:%.*]] = xor i1 [[OR01]], [[OR23]]
; CHECK-NEXT:    ret i1 [[OR0123]]
;
  %or0 = or i1 %b0, %a
  %or1 = or i1 %b1, %a
  %or2 = or i1 %b2, %a
  %or3 = or i1 %b3, %a
  %or4 = or i1 %b4, %a
  %or5 = or i1 %b5, %a
  %or6 = or i1 %b6, %a
  %or7 = or i1 %b7, %a
  %xor0 = xor i1 %or0, %or1
  %xor1 = xor i1 %or2, %or3
  %xor2 = xor i1 %or4, %or5
  %xor3 = xor i1 %or6, %or7
  %or01 = xor i1 %xor0, %xor1
  %or23 = xor i1 %xor2, %xor3
  %or0123 = xor i1 %or01, %or23
  ret i1 %or0123
}

define i1 @scalar3(i1 %a, i1 %b0, i1 %b1, i1 %b2, i1 %b3, i1 %b4, i1 %b5, i1 %b6, i1 %b7) {
; CHECK-LABEL: define i1 @scalar3(
; CHECK-SAME: i1 [[A:%.*]], i1 [[B0:%.*]], i1 [[B1:%.*]], i1 [[B2:%.*]], i1 [[B3:%.*]], i1 [[B4:%.*]], i1 [[B5:%.*]], i1 [[B6:%.*]], i1 [[B7:%.*]]) {
; CHECK-NEXT:    [[XOR0:%.*]] = xor i1 [[A]], [[B0]]
; CHECK-NEXT:    [[XOR1:%.*]] = xor i1 [[A]], [[B1]]
; CHECK-NEXT:    [[XOR2:%.*]] = xor i1 [[A]], [[B2]]
; CHECK-NEXT:    [[XOR3:%.*]] = xor i1 [[A]], [[B3]]
; CHECK-NEXT:    [[XOR4:%.*]] = xor i1 [[A]], [[B4]]
; CHECK-NEXT:    [[XOR5:%.*]] = xor i1 [[A]], [[B5]]
; CHECK-NEXT:    [[XOR6:%.*]] = xor i1 [[A]], [[B6]]
; CHECK-NEXT:    [[XOR7:%.*]] = xor i1 [[A]], [[B7]]
; CHECK-NEXT:    [[AND0:%.*]] = and i1 [[XOR0]], [[XOR1]]
; CHECK-NEXT:    [[AND1:%.*]] = and i1 [[XOR2]], [[XOR3]]
; CHECK-NEXT:    [[AND2:%.*]] = and i1 [[XOR4]], [[XOR5]]
; CHECK-NEXT:    [[AND3:%.*]] = and i1 [[XOR6]], [[XOR7]]
; CHECK-NEXT:    [[OR01:%.*]] = and i1 [[AND0]], [[AND1]]
; CHECK-NEXT:    [[OR23:%.*]] = and i1 [[AND2]], [[AND3]]
; CHECK-NEXT:    [[OR0123:%.*]] = and i1 [[OR01]], [[OR23]]
; CHECK-NEXT:    ret i1 [[OR0123]]
;
  %xor0 = xor i1 %b0, %a
  %xor1 = xor i1 %b1, %a
  %xor2 = xor i1 %b2, %a
  %xor3 = xor i1 %b3, %a
  %xor4 = xor i1 %b4, %a
  %xor5 = xor i1 %b5, %a
  %xor6 = xor i1 %b6, %a
  %xor7 = xor i1 %b7, %a
  %and0 = and i1 %xor0, %xor1
  %and1 = and i1 %xor2, %xor3
  %and2 = and i1 %xor4, %xor5
  %and3 = and i1 %xor6, %xor7
  %or01 = and i1 %and0, %and1
  %or23 = and i1 %and2, %and3
  %or0123 = and i1 %or01, %or23
  ret i1 %or0123
}

define i1 @scalar4(i1 %a, i1 %b0, i1 %b1, i1 %b2, i1 %b3, i1 %b4, i1 %b5, i1 %b6, i1 %b7) {
; CHECK-LABEL: define i1 @scalar4(
; CHECK-SAME: i1 [[A:%.*]], i1 [[B0:%.*]], i1 [[B1:%.*]], i1 [[B2:%.*]], i1 [[B3:%.*]], i1 [[B4:%.*]], i1 [[B5:%.*]], i1 [[B6:%.*]], i1 [[B7:%.*]]) {
; CHECK-NEXT:    [[XOR0:%.*]] = xor i1 [[A]], [[B0]]
; CHECK-NEXT:    [[XOR1:%.*]] = xor i1 [[A]], [[B1]]
; CHECK-NEXT:    [[XOR2:%.*]] = xor i1 [[A]], [[B2]]
; CHECK-NEXT:    [[XOR3:%.*]] = xor i1 [[A]], [[B3]]
; CHECK-NEXT:    [[XOR4:%.*]] = xor i1 [[A]], [[B4]]
; CHECK-NEXT:    [[XOR5:%.*]] = xor i1 [[A]], [[B5]]
; CHECK-NEXT:    [[XOR6:%.*]] = xor i1 [[A]], [[B6]]
; CHECK-NEXT:    [[XOR7:%.*]] = xor i1 [[A]], [[B7]]
; CHECK-NEXT:    [[OR0:%.*]] = or i1 [[XOR0]], [[XOR1]]
; CHECK-NEXT:    [[OR1:%.*]] = or i1 [[XOR2]], [[XOR3]]
; CHECK-NEXT:    [[OR2:%.*]] = or i1 [[XOR4]], [[XOR5]]
; CHECK-NEXT:    [[OR3:%.*]] = or i1 [[XOR6]], [[XOR7]]
; CHECK-NEXT:    [[OR4:%.*]] = or i1 [[B0]], [[B1]]
; CHECK-NEXT:    [[OR5:%.*]] = or i1 [[B2]], [[B3]]
; CHECK-NEXT:    [[OR6:%.*]] = or i1 [[B4]], [[B5]]
; CHECK-NEXT:    [[OR7:%.*]] = or i1 [[B6]], [[B7]]
; CHECK-NEXT:    [[OR01:%.*]] = or i1 [[OR0]], [[OR1]]
; CHECK-NEXT:    [[OR23:%.*]] = or i1 [[OR2]], [[OR3]]
; CHECK-NEXT:    [[OR45:%.*]] = or i1 [[OR4]], [[OR5]]
; CHECK-NEXT:    [[OR67:%.*]] = or i1 [[OR6]], [[OR7]]
; CHECK-NEXT:    [[OR0123:%.*]] = or i1 [[OR01]], [[OR23]]
; CHECK-NEXT:    [[OR4567:%.*]] = or i1 [[OR45]], [[OR67]]
; CHECK-NEXT:    [[OR01234567:%.*]] = or i1 [[OR4567]], [[OR0123]]
; CHECK-NEXT:    ret i1 [[OR01234567]]
;
  %xor0 = xor i1 %b0, %a
  %xor1 = xor i1 %b1, %a
  %xor2 = xor i1 %b2, %a
  %xor3 = xor i1 %b3, %a
  %xor4 = xor i1 %b4, %a
  %xor5 = xor i1 %b5, %a
  %xor6 = xor i1 %b6, %a
  %xor7 = xor i1 %b7, %a
  %or0 = or i1 %xor0, %xor1
  %or1 = or i1 %xor2, %xor3
  %or2 = or i1 %xor4, %xor5
  %or3 = or i1 %xor6, %xor7
  %or4 = or i1 %b0, %b1
  %or5 = or i1 %b2, %b3
  %or6 = or i1 %b4, %b5
  %or7 = or i1 %b6, %b7
  %or01 = or i1 %or0, %or1
  %or23 = or i1 %or2, %or3
  %or45 = or i1 %or4, %or5
  %or67 = or i1 %or6, %or7
  %or0123 = or i1 %or01, %or23
  %or4567 = or i1 %or45, %or67
  %or01234567 = or i1 %or0123, %or4567
  ret i1 %or01234567
}
