; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -mtriple=amdgcn-amd-amdhsa -mcpu=gfx90a -S -passes=separate-const-offset-from-gep < %s | FileCheck %s

define void @inboundsPossiblyNegative(ptr %in.ptr, i32 %in.idx1) {
; CHECK-LABEL: define void @inboundsPossiblyNegative(
; CHECK-SAME: ptr [[IN_PTR:%.*]], i32 [[IN_IDX1:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[IDXPROM:%.*]] = sext i32 [[IN_IDX1]] to i64
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr <2 x i8>, ptr [[IN_PTR]], i64 [[IDXPROM]]
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr <2 x i8>, ptr [[TMP0]], i32 1
; CHECK-NEXT:    ret void
;
entry:
  %const1 = getelementptr inbounds <2 x i8>, ptr %in.ptr, i32 1
  %idx1 = getelementptr inbounds <2 x i8>, ptr %const1, i32 %in.idx1
  ret void
}

define void @inboundsNonNegative(ptr %in.ptr, i32 %in.idx1) {
; CHECK-LABEL: define void @inboundsNonNegative(
; CHECK-SAME: ptr [[IN_PTR:%.*]], i32 [[IN_IDX1:%.*]]) #[[ATTR0]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[IN_IDX1_NNEG:%.*]] = and i32 [[IN_IDX1]], 2147483647
; CHECK-NEXT:    [[IDXPROM:%.*]] = sext i32 [[IN_IDX1_NNEG]] to i64
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr inbounds <2 x i8>, ptr [[IN_PTR]], i64 [[IDXPROM]]
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr inbounds <2 x i8>, ptr [[TMP0]], i32 1
; CHECK-NEXT:    ret void
;
entry:
  %in.idx1.nneg = and i32 %in.idx1, 2147483647
  %const1 = getelementptr inbounds <2 x i8>, ptr %in.ptr, i32 1
  %idx1 = getelementptr inbounds <2 x i8>, ptr %const1, i32 %in.idx1.nneg
  ret void
}

define void @inboundsNonchained(ptr %in.ptr, i32 %in.idx1) {
; CHECK-LABEL: define void @inboundsNonchained(
; CHECK-SAME: ptr [[IN_PTR:%.*]], i32 [[IN_IDX1:%.*]]) #[[ATTR0]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[IN_IDX1_NNEG:%.*]] = and i32 [[IN_IDX1]], 2147483647
; CHECK-NEXT:    [[IDXPROM:%.*]] = sext i32 [[IN_IDX1_NNEG]] to i64
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr <2 x i8>, ptr [[IN_PTR]], i64 [[IDXPROM]]
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr <2 x i8>, ptr [[TMP0]], i32 1
; CHECK-NEXT:    ret void
;
entry:
  %in.idx1.nneg = and i32 %in.idx1, 2147483647
  %const1 = getelementptr inbounds <2 x i8>, ptr %in.ptr, i32 1
  %idx1 = getelementptr <2 x i8>, ptr %const1, i32 %in.idx1.nneg
  ret void
}
