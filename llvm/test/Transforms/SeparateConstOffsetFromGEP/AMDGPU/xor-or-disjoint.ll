; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt -S -mtriple=amdgcn-amd-amdhsa -mcpu=gfx90a --passes=separate-const-offset-from-gep < %s | FileCheck %s

@global_smem = external addrspace(3) global [0 x i8], align 16

define amdgpu_kernel void @matmul_kernel(ptr addrspace(1) %inptr, <4 x i32> %data0, <4 x i32> %data1, i1 %cond) {
entry:
  %28 = tail call i32 @llvm.amdgcn.workitem.id.x()
  %29 = and i32 %28, 8
  %.not = icmp eq i32 %29, 0
  %30 = and i32 %28, 16
  %31 = icmp eq i32 %30, 0
  %32 = and i32 %28, 32
  %33 = icmp eq i32 %32, 0
  %34 = and i32 %28, 256
  %53 = shl i32 %28, 3
  %54 = and i32 %53, 56
  %121 = select i1 %.not, i32 0, i32 72
  %122 = select i1 %31, i32 0, i32 144
  %123 = or disjoint i32 %121, %122
  %124 = select i1 %33, i32 0, i32 288
  %125 = or disjoint i32 %123, %124
  %126 = xor i32 %125, %54
  %127 = and i32 %53, 1536
  %128 = or disjoint i32 %127, %126
  %129 = shl nuw nsw i32 %34, 3
  %130 = or disjoint i32 %128, %129
  %132 = xor i32 %130, 4096
  %133 = getelementptr inbounds nuw half, ptr addrspace(3) @global_smem, i32 %132
  br i1 %cond, label %s1, label %s2

s1:
  store <4 x i32> %data0, ptr addrspace(3) %133, align 16
  br label %end

s2:
  br label %end

end:
  ret void
}
