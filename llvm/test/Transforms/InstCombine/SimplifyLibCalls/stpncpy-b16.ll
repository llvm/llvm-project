; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -p instcombine -S %s | FileCheck %s

target datalayout = "b:16-p:32:32"

declare ptr @stpncpy(ptr, ptr, i32)

@empty = constant [1 x i16] [i16 0]
@hello = constant [6 x i16] [i16 104, i16 101, i16 108, i16 108, i16 111, i16 0]

; stpncpy(dst, src, 1) -> (*dst = *src) ? dst + 1 : dst
define ptr @test_1(ptr %dst, ptr %src) {
; CHECK-LABEL: define ptr @test_1(
; CHECK-SAME: ptr [[DST:%.*]], ptr [[SRC:%.*]]) {
; CHECK-NEXT:    [[STXNCPY_CHAR0:%.*]] = load i16, ptr [[SRC]], align 1
; CHECK-NEXT:    store i16 [[STXNCPY_CHAR0]], ptr [[DST]], align 1
; CHECK-NEXT:    [[STPNCPY_CHAR0CMP:%.*]] = icmp ne i16 [[STXNCPY_CHAR0]], 0
; CHECK-NEXT:    [[STPNCPY_SEL_IDX:%.*]] = zext i1 [[STPNCPY_CHAR0CMP]] to i32
; CHECK-NEXT:    [[STPNCPY_SEL:%.*]] = getelementptr inbounds nuw i16, ptr [[DST]], i32 [[STPNCPY_SEL_IDX]]
; CHECK-NEXT:    ret ptr [[STPNCPY_SEL]]
;
  %call = call ptr @stpncpy(ptr %dst, ptr %src, i32 1)
  ret ptr %call
}

; stpncpy(dst, "", n) -> memset(dst, '\0', n), dst
define ptr @test_2(ptr %dst, i32 %n) {
; CHECK-LABEL: define ptr @test_2(
; CHECK-SAME: ptr [[DST:%.*]], i32 [[N:%.*]]) {
; CHECK-NEXT:    call void @llvm.memset.p0.i32(ptr align 1 [[DST]], i16 0, i32 [[N]], i1 false)
; CHECK-NEXT:    ret ptr [[DST]]
;
  %call = call ptr @stpncpy(ptr %dst, ptr @empty, i32 %n)
  ret ptr %call
}

; stpncpy(dst, src, n) -> memcpy(dst, src, n), dst + min(strlen(src), n)
define ptr @test_3(ptr %dst) {
; CHECK-LABEL: define ptr @test_3(
; CHECK-SAME: ptr [[DST:%.*]]) {
; CHECK-NEXT:    call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 1 dereferenceable(6) [[DST]], ptr noundef nonnull align 1 dereferenceable(6) @hello, i32 6, i1 false)
; CHECK-NEXT:    [[ENDPTR:%.*]] = getelementptr inbounds nuw i16, ptr [[DST]], i32 5
; CHECK-NEXT:    ret ptr [[ENDPTR]]
;
  %call = call ptr @stpncpy(ptr %dst, ptr @hello, i32 6)
  ret ptr %call
}
