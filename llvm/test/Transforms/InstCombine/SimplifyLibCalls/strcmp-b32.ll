; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -p instcombine -S %s | FileCheck %s

target datalayout = "b:32-p:32:32"

declare i32 @strcmp(ptr, ptr)

@empty = constant [1 x i32] [i32 0]
@hello = constant [6 x i32] [i32 104, i32 101, i32 108, i32 108, i32 111, i32 0]
@bell = constant [5 x i32] [i32 98, i32 101, i32 108, i32 108, i32 0]
@cell = constant [5 x i32] [i32 99, i32 101, i32 108, i32 108, i32 0]

; strcmp("", rhs) -> sext(rhs[0] != '\0')
define i32 @test_1(ptr %rhs) {
; CHECK-LABEL: define i32 @test_1(
; CHECK-SAME: ptr [[RHS:%.*]]) {
; CHECK-NEXT:    [[STRCMPLOAD:%.*]] = load i32, ptr [[RHS]], align 1
; CHECK-NEXT:    [[TMP1:%.*]] = icmp ne i32 [[STRCMPLOAD]], 0
; CHECK-NEXT:    [[CALL:%.*]] = sext i1 [[TMP1]] to i32
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @strcmp(ptr @empty, ptr %rhs)
  ret i32 %call
}

; strcmp(lhs, "") -> zext(lhs[0] != '\0')
define i32 @test_2(ptr %lhs) {
; CHECK-LABEL: define i32 @test_2(
; CHECK-SAME: ptr [[LHS:%.*]]) {
; CHECK-NEXT:    [[STRCMPLOAD:%.*]] = load i32, ptr [[LHS]], align 1
; CHECK-NEXT:    [[TMP1:%.*]] = icmp ne i32 [[STRCMPLOAD]], 0
; CHECK-NEXT:    [[CALL:%.*]] = zext i1 [[TMP1]] to i32
; CHECK-NEXT:    ret i32 [[CALL]]
;
  %call = call i32 @strcmp(ptr %lhs, ptr @empty)
  ret i32 %call
}

; strcmp(lhs, rhs) -> memcmp(lhs, rhs, min(strlen(lhs), strlen(rhs)) + 1)
define i32 @test_3(i1 %b) {
; CHECK-LABEL: define i32 @test_3(
; CHECK-SAME: i1 [[B:%.*]]) {
; CHECK-NEXT:    [[RHS:%.*]] = select i1 [[B]], ptr @bell, ptr @cell
; CHECK-NEXT:    [[MEMCMP:%.*]] = call i32 @memcmp(ptr noundef nonnull dereferenceable(5) @hello, ptr noundef nonnull dereferenceable(5) [[RHS]], i32 5)
; CHECK-NEXT:    ret i32 [[MEMCMP]]
;
  %rhs = select i1 %b, ptr @bell, ptr @cell
  %call = call i32 @strcmp(ptr @hello, ptr %rhs)
  ret i32 %call
}
