; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -p instcombine -S %s | FileCheck %s

target datalayout = "b:16-p:32:32-n64"

declare ptr @memchr(ptr, i32, i32)

; memchr(str, c, n) == str -> (unsigned char)*str == (unsigned char)c
define i1 @test_eq(ptr %str, i32 %c) {
; CHECK-LABEL: define i1 @test_eq(
; CHECK-SAME: ptr [[STR:%.*]], i32 [[C:%.*]]) {
; CHECK-NEXT:    [[TMP1:%.*]] = load i16, ptr [[STR]], align 1
; CHECK-NEXT:    [[TMP2:%.*]] = trunc i32 [[C]] to i16
; CHECK-NEXT:    [[CHAR0CMP:%.*]] = icmp eq i16 [[TMP1]], [[TMP2]]
; CHECK-NEXT:    ret i1 [[CHAR0CMP]]
;
  %call = call ptr @memchr(ptr %str, i32 %c, i32 42)
  %cmp = icmp eq ptr %call, %str
  ret i1 %cmp
}

; memchr(str, c, 1) -> (unsigned char)*str == (unsigned char)c ? str : null
define ptr @test_n_1(ptr %str, i32 %c) {
; CHECK-LABEL: define ptr @test_n_1(
; CHECK-SAME: ptr [[STR:%.*]], i32 [[C:%.*]]) {
; CHECK-NEXT:    [[MEMCHR_CHAR0:%.*]] = load i16, ptr [[STR]], align 1
; CHECK-NEXT:    [[TMP1:%.*]] = trunc i32 [[C]] to i16
; CHECK-NEXT:    [[MEMCHR_CHAR0CMP:%.*]] = icmp eq i16 [[MEMCHR_CHAR0]], [[TMP1]]
; CHECK-NEXT:    [[MEMCHR_SEL:%.*]] = select i1 [[MEMCHR_CHAR0CMP]], ptr [[STR]], ptr null
; CHECK-NEXT:    ret ptr [[MEMCHR_SEL]]
;
  %call = call ptr @memchr(ptr %str, i32 %c, i32 1)
  ret ptr %call
}
