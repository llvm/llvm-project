; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=instcombine < %s | FileCheck %s

define i1 @extract_const_idx(<vscale x 4 x i1> %a) {
; CHECK-LABEL: define i1 @extract_const_idx(
; CHECK-SAME: <vscale x 4 x i1> [[A:%.*]]) {
; CHECK-NEXT:    [[ELT:%.*]] = extractelement <vscale x 4 x i1> [[A]], i64 1
; CHECK-NEXT:    ret i1 [[ELT]]
;
  %subvec = call <vscale x 2 x i1> @llvm.vector.extract.nxv2i1.nxv4i1.i64(<vscale x 4 x i1> %a, i64 0)
  %elt = extractelement <vscale x 2 x i1> %subvec, i32 1
  ret i1 %elt
}

define float @extract_variable_idx(<vscale x 4 x float> %a, i32 %idx) {
; CHECK-LABEL: define float @extract_variable_idx(
; CHECK-SAME: <vscale x 4 x float> [[A:%.*]], i32 [[IDX:%.*]]) {
; CHECK-NEXT:    [[ELT:%.*]] = extractelement <vscale x 4 x float> [[A]], i32 [[IDX]]
; CHECK-NEXT:    ret float [[ELT]]
;
  %subvec = call <vscale x 2 x float> @llvm.vector.extract.nxv2f32.nxv4f32.i64(<vscale x 4 x float> %a, i64 0)
  %elt = extractelement <vscale x 2 x float> %subvec, i32 %idx
  ret float %elt
}

define float @negative_test(<vscale x 4 x float> %a) {
; CHECK-LABEL: define float @negative_test(
; CHECK-SAME: <vscale x 4 x float> [[A:%.*]]) {
; CHECK-NEXT:    [[SUBVEC:%.*]] = call <vscale x 2 x float> @llvm.vector.extract.nxv2f32.nxv4f32(<vscale x 4 x float> [[A]], i64 2)
; CHECK-NEXT:    [[ELT:%.*]] = extractelement <vscale x 2 x float> [[SUBVEC]], i64 1
; CHECK-NEXT:    ret float [[ELT]]
;
  %subvec = call <vscale x 2 x float> @llvm.vector.extract.nxv2f32.nxv4f32.i64(<vscale x 4 x float> %a, i64 2)
  %elt = extractelement <vscale x 2 x float> %subvec, i32 1
  ret float %elt
}
