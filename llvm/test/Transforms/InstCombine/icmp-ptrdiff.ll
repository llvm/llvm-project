; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

define ptr @icmp_ptrdiff_gt(ptr %0, ptr %1, ptr %2) {
; CHECK-LABEL: @icmp_ptrdiff_gt(
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds nuw i8, ptr [[TMP0:%.*]], i64 1
; CHECK-NEXT:    [[TMP10:%.*]] = icmp ugt ptr [[TMP4]], [[TMP2:%.*]]
; CHECK-NEXT:    [[TMP11:%.*]] = select i1 [[TMP10]], ptr [[TMP2]], ptr [[TMP4]]
; CHECK-NEXT:    ret ptr [[TMP11]]
;
  %4 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %5 = ptrtoint ptr %4 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %5, %6
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %7, %9
  %11 = select i1 %10, ptr %2, ptr %4
  ret ptr %11
}

define ptr @icmp_ptrdiff_lt(ptr %0, ptr %1, ptr %2) {
; CHECK-LABEL: @icmp_ptrdiff_lt(
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds nuw i8, ptr [[TMP0:%.*]], i64 1
; CHECK-NEXT:    [[TMP10:%.*]] = icmp ult ptr [[TMP4]], [[TMP2:%.*]]
; CHECK-NEXT:    [[TMP11:%.*]] = select i1 [[TMP10]], ptr [[TMP2]], ptr [[TMP4]]
; CHECK-NEXT:    ret ptr [[TMP11]]
;
  %4 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %5 = ptrtoint ptr %4 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %5, %6
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %8, %6
  %10 = icmp slt i64 %7, %9
  %11 = select i1 %10, ptr %2, ptr %4
  ret ptr %11
}

define ptr @icmp_ptrdiff_ge(ptr %0, ptr %1, ptr %2) {
; CHECK-LABEL: @icmp_ptrdiff_ge(
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds nuw i8, ptr [[TMP0:%.*]], i64 1
; CHECK-NEXT:    [[DOTNOT:%.*]] = icmp ult ptr [[TMP4]], [[TMP2:%.*]]
; CHECK-NEXT:    [[TMP10:%.*]] = select i1 [[DOTNOT]], ptr [[TMP4]], ptr [[TMP2]]
; CHECK-NEXT:    ret ptr [[TMP10]]
;
  %4 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %5 = ptrtoint ptr %4 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %5, %6
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sge i64 %7, %9
  %11 = select i1 %10, ptr %2, ptr %4
  ret ptr %11
}

define ptr @icmp_ptrdiff_le(ptr %0, ptr %1, ptr %2) {
; CHECK-LABEL: @icmp_ptrdiff_le(
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds nuw i8, ptr [[TMP0:%.*]], i64 1
; CHECK-NEXT:    [[DOTNOT:%.*]] = icmp ugt ptr [[TMP4]], [[TMP2:%.*]]
; CHECK-NEXT:    [[TMP10:%.*]] = select i1 [[DOTNOT]], ptr [[TMP4]], ptr [[TMP2]]
; CHECK-NEXT:    ret ptr [[TMP10]]
;
  %4 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %5 = ptrtoint ptr %4 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %5, %6
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sle i64 %7, %9
  %11 = select i1 %10, ptr %2, ptr %4
  ret ptr %11
}

define ptr @icmp_ptrdiff_eq(ptr %0, ptr %1, ptr %2) {
; CHECK-LABEL: @icmp_ptrdiff_eq(
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds nuw i8, ptr [[TMP0:%.*]], i64 1
; CHECK-NEXT:    ret ptr [[TMP4]]
;
  %4 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %5 = ptrtoint ptr %4 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %5, %6
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %8, %6
  %10 = icmp eq i64 %7, %9
  %11 = select i1 %10, ptr %2, ptr %4
  ret ptr %11
}

define ptr @icmp_ptrdiff_ne(ptr %0, ptr %1, ptr %2) {
; CHECK-LABEL: @icmp_ptrdiff_ne(
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds nuw i8, ptr [[TMP0:%.*]], i64 1
; CHECK-NEXT:    [[DOTNOT:%.*]] = icmp eq ptr [[TMP4]], [[TMP2:%.*]]
; CHECK-NEXT:    [[TMP5:%.*]] = select i1 [[DOTNOT]], ptr [[TMP4]], ptr [[TMP2]]
; CHECK-NEXT:    ret ptr [[TMP5]]
;
  %4 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %5 = ptrtoint ptr %4 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %5, %6
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %8, %6
  %10 = icmp ne i64 %7, %9
  %11 = select i1 %10, ptr %2, ptr %4
  ret ptr %11
}

