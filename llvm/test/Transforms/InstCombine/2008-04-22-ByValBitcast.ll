; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
;; The bitcast cannot be eliminated because byval arguments need
;; the correct type, or at least a type of the correct size.
; RUN: opt -S -passes=instcombine < %s | FileCheck %s
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128"
target triple = "i386-apple-darwin9"

%struct.NSRect = type { [4 x float] }

define void @foo(ptr %context) nounwind  {
; CHECK-LABEL: @foo(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void (i32, ...) @bar(i32 3, ptr byval([[STRUCT_NSRECT:%.*]]) align 4 [[CONTEXT:%.*]]) #[[ATTR0:[0-9]+]]
; CHECK-NEXT:    ret void
;
entry:
  call void (i32, ...) @bar( i32 3, ptr byval(%struct.NSRect) align 4  %context ) nounwind
  ret void
}

declare void @bar(i32, ...)
