; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mattr=+sme -S -passes=instcombine < %s | FileCheck %s -check-prefix=NON-STREAMING
; RUN: opt -mattr=+sme -S -passes=instcombine -force-streaming < %s | FileCheck %s -check-prefix=STREAMING

target triple = "aarch64-unknown-linux-gnu"

define i64 @cntsb() {
; NON-STREAMING-LABEL: @cntsb(
; NON-STREAMING-NEXT:    [[OUT:%.*]] = call i64 @llvm.aarch64.sme.cntsb()
; NON-STREAMING-NEXT:    ret i64 [[OUT]]
;
; STREAMING-LABEL: @cntsb(
; STREAMING-NEXT:    [[TMP1:%.*]] = call i64 @llvm.vscale.i64()
; STREAMING-NEXT:    [[OUT:%.*]] = shl nuw i64 [[TMP1]], 4
; STREAMING-NEXT:    ret i64 [[OUT]]
;
  %out = call i64 @llvm.aarch64.sme.cntsb()
  ret i64 %out
}

define i64 @cntsh() {
; NON-STREAMING-LABEL: @cntsh(
; NON-STREAMING-NEXT:    [[OUT:%.*]] = call i64 @llvm.aarch64.sme.cntsh()
; NON-STREAMING-NEXT:    ret i64 [[OUT]]
;
; STREAMING-LABEL: @cntsh(
; STREAMING-NEXT:    [[TMP1:%.*]] = call i64 @llvm.vscale.i64()
; STREAMING-NEXT:    [[OUT:%.*]] = shl nuw i64 [[TMP1]], 3
; STREAMING-NEXT:    ret i64 [[OUT]]
;
  %out = call i64 @llvm.aarch64.sme.cntsh()
  ret i64 %out
}

define i64 @cntsw() {
; NON-STREAMING-LABEL: @cntsw(
; NON-STREAMING-NEXT:    [[OUT:%.*]] = call i64 @llvm.aarch64.sme.cntsw()
; NON-STREAMING-NEXT:    ret i64 [[OUT]]
;
; STREAMING-LABEL: @cntsw(
; STREAMING-NEXT:    [[TMP1:%.*]] = call i64 @llvm.vscale.i64()
; STREAMING-NEXT:    [[OUT:%.*]] = shl nuw i64 [[TMP1]], 2
; STREAMING-NEXT:    ret i64 [[OUT]]
;
  %out = call i64 @llvm.aarch64.sme.cntsw()
  ret i64 %out
}

define i64 @cntsd() {
; NON-STREAMING-LABEL: @cntsd(
; NON-STREAMING-NEXT:    [[OUT:%.*]] = call i64 @llvm.aarch64.sme.cntsd()
; NON-STREAMING-NEXT:    ret i64 [[OUT]]
;
; STREAMING-LABEL: @cntsd(
; STREAMING-NEXT:    [[TMP1:%.*]] = call i64 @llvm.vscale.i64()
; STREAMING-NEXT:    [[OUT:%.*]] = shl nuw i64 [[TMP1]], 1
; STREAMING-NEXT:    ret i64 [[OUT]]
;
  %out = call i64 @llvm.aarch64.sme.cntsd()
  ret i64 %out
}

declare i64 @llvm.aarch64.sve.cntsb()
declare i64 @llvm.aarch64.sve.cntsh()
declare i64 @llvm.aarch64.sve.cntsw()
declare i64 @llvm.aarch64.sve.cntsd()

