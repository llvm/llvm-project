; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

;; Target triple for gep raising case below.
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128"
target triple = "i686-apple-darwin8"

; PR1795
define void @test2(i32 %.val24) {
; CHECK-LABEL: define void @test2(
; CHECK-SAME: i32 [[DOTVAL24:%.*]]) {
; CHECK-NEXT:  EntryBlock:
; CHECK-NEXT:    [[TMP0:%.*]] = add i32 [[DOTVAL24]], -12
; CHECK-NEXT:    [[TMP1:%.*]] = inttoptr i32 [[TMP0]] to ptr
; CHECK-NEXT:    store i32 1, ptr [[TMP1]], align 4
; CHECK-NEXT:    [[TMP2:%.*]] = add i32 [[DOTVAL24]], -16
; CHECK-NEXT:    [[TMP3:%.*]] = inttoptr i32 [[TMP2]] to ptr
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr i8, ptr [[TMP3]], i32 4
; CHECK-NEXT:    [[TMP5:%.*]] = load i32, ptr [[TMP4]], align 4
; CHECK-NEXT:    [[TMP6:%.*]] = tail call i32 @callee(i32 [[TMP5]])
; CHECK-NEXT:    ret void
;
EntryBlock:
  add i32 %.val24, -12
  inttoptr i32 %0 to ptr
  store i32 1, ptr %1
  add i32 %.val24, -16
  inttoptr i32 %2 to ptr
  getelementptr i32, ptr %3, i32 1
  load i32, ptr %4
  tail call i32 @callee( i32 %5 )
  ret void
}

declare i32 @callee(i32)
