; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -passes=instcombine < %s | FileCheck %s

@g = global [16 x i16] zeroinitializer

define ptr @gep_constexpr_gv_1() {
; CHECK-LABEL: @gep_constexpr_gv_1(
; CHECK-NEXT:    ret ptr getelementptr inbounds nuw (i8, ptr @g, i64 20)
;
  ret ptr getelementptr([16 x i16], ptr @g, i64 0, i64 10)
}

define ptr @gep_constexpr_gv_2() {
; CHECK-LABEL: @gep_constexpr_gv_2(
; CHECK-NEXT:    ret ptr getelementptr inbounds nuw (i8, ptr @g, i64 24)
;
  ret ptr getelementptr(i32, ptr getelementptr([16 x i16], ptr @g, i64 0, i64 10), i64 1)
}

; Silly expression to get an inttoptr that does not combine with the GEP.
define ptr @gep_constexpr_inttoptr() {
; CHECK-LABEL: @gep_constexpr_inttoptr(
; CHECK-NEXT:    [[MUL:%.*]] = shl i64 ptrtoint (ptr @g to i64), 1
; CHECK-NEXT:    [[INTTOPTR:%.*]] = inttoptr i64 [[MUL]] to ptr
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr i8, ptr [[INTTOPTR]], i64 20
; CHECK-NEXT:    ret ptr [[GEP]]
;
  %mul = mul i64 ptrtoint (ptr @g to i64), 2
  %inttoptr = inttoptr i64 %mul to ptr
  %gep = getelementptr [16 x i16], ptr %inttoptr, i64 0, i64 10
  ret ptr %gep
}
