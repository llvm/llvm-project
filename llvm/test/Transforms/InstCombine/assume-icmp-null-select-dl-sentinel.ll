; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=instcombine -S | FileCheck %s
; RUN: opt < %s -passes=instcombine -data-layout=z0:1-z2:neg1-z3:neg1-z5:neg1 -S | FileCheck -check-prefixes=CHECK-DL %s

target triple = "x86_64-unknown-linux-gnu"

; TODO: this should be folded to `ret ptr %x` as well.
define ptr @example2(ptr %x) {
; CHECK-LABEL: @example2(
; CHECK-NEXT:    [[Y:%.*]] = load ptr, ptr [[X:%.*]], align 8
; CHECK-NEXT:    [[Y_IS_NULL:%.*]] = icmp eq ptr [[Y]], null
; CHECK-NEXT:    [[RES:%.*]] = select i1 [[Y_IS_NULL]], ptr null, ptr [[X]]
; CHECK-NEXT:    [[NONNULL:%.*]] = icmp ne ptr [[RES]], null
; CHECK-NEXT:    call void @llvm.assume(i1 [[NONNULL]])
; CHECK-NEXT:    ret ptr [[RES]]
;
; CHECK-DL-LABEL: @example2(
; CHECK-DL-NEXT:    ret ptr [[X:%.*]]
;
  %y = load ptr, ptr %x, align 8
  %y_is_null = icmp eq ptr %y, null

  %res = select i1 %y_is_null, ptr null, ptr %x

  %nonnull = icmp ne ptr %res, null
  call void @llvm.assume(i1 %nonnull)

  ret ptr %res
}

declare void @llvm.assume(i1)
