; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

define float @tgammaf_in_range() {
; CHECK-LABEL: define float @tgammaf_in_range() {
; CHECK-NEXT:    ret float 0x479A216280000000
;
  %r = call float @tgammaf(float 34.0)
  ret float %r
}

define double @tgamma_in_range() {
; CHECK-LABEL: define double @tgamma_in_range() {
; CHECK-NEXT:    ret double 0x605166C698CF183B
;
  %r = call double @tgamma(double 100.0)
  ret double %r
}

define float @tgammaf_const_left_range() {
; CHECK-LABEL: define float @tgammaf_const_left_range() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 0x3810000000000000)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 0x3810000000000000)
  ret float %r
}

define double @tgamma_const_left_range() {
; CHECK-LABEL: define double @tgamma_const_left_range() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 0x10000000000000)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 0x0010000000000000)
  ret double %r
}

define float @tgammaf_const_right_range() {
; CHECK-LABEL: define float @tgammaf_const_right_range() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 3.600000e+01)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 36.0)
  ret float %r
}

define double @tgamma_const_right_range() {
; CHECK-LABEL: define double @tgamma_const_right_range() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 1.720000e+02)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 172.0)
  ret double %r
}

define float @tgammaf_minus_one() {
; CHECK-LABEL: define float @tgammaf_minus_one() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float -1.000000e+00)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float -1.000000e+00)
  ret float %r
}

define double @tgamma_minus_one() {
; CHECK-LABEL: define double @tgamma_minus_one() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double -1.000000e+00)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double -1.000000e+00)
  ret double %r
}

define float @tgammaf_minus_one_memory_none() {
; CHECK-LABEL: define float @tgammaf_minus_one_memory_none() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float -1.000000e+00) #[[ATTR1:[0-9]+]]
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float -1.000000e+00) readnone
  ret float %r
}

define double @tgamma_minus_one_memory_none() {
; CHECK-LABEL: define double @tgamma_minus_one_memory_none() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double -1.000000e+00) #[[ATTR1]]
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double -1.000000e+00) readnone
  ret double %r
}

define float @tgammaf_zero() {
; CHECK-LABEL: define float @tgammaf_zero() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 0.000000e+00)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 0.000000e+00)
  ret float %r
}

define double @tgamma_zero() {
; CHECK-LABEL: define double @tgamma_zero() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 0.000000e+00)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 0.000000e+00)
  ret double %r
}

define float @tgammaf_neg_zero() {
; CHECK-LABEL: define float @tgammaf_neg_zero() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float -0.000000e+00)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float -0.000000e+00)
  ret float %r
}

define double @tgamma_neg_zero() {
; CHECK-LABEL: define double @tgamma_neg_zero() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double -0.000000e+00)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double -0.000000e+00)
  ret double %r
}

define float @tgammaf_inf() {
; CHECK-LABEL: define float @tgammaf_inf() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 0x7FF0000000000000)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 0x7FF0000000000000)
  ret float %r
}

define double @tgamma_inf() {
; CHECK-LABEL: define double @tgamma_inf() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 0x7FF0000000000000)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 0x7FF0000000000000)
  ret double %r
}

define float @tgammaf_inf_memory_none() {
; CHECK-LABEL: define float @tgammaf_inf_memory_none() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 0x7FF0000000000000) #[[ATTR1]]
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 0x7FF0000000000000) readnone
  ret float %r
}

define double @tgamma_inf_memory_none() {
; CHECK-LABEL: define double @tgamma_inf_memory_none() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 0x7FF0000000000000) #[[ATTR1]]
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 0x7FF0000000000000) readnone
  ret double %r
}

define float @tgammaf_neg_inf() {
; CHECK-LABEL: define float @tgammaf_neg_inf() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 0xFFF0000000000000)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 0xFFF0000000000000)
  ret float %r
}

define double @tgamma_neg_inf() {
; CHECK-LABEL: define double @tgamma_neg_inf() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 0xFFF0000000000000)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 0xFFF0000000000000)
  ret double %r
}

define float @tgammaf_neg_inf_memory_none() {
; CHECK-LABEL: define float @tgammaf_neg_inf_memory_none() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 0xFFF0000000000000) #[[ATTR1]]
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 0xFFF0000000000000) readnone
  ret float %r
}

define double @tgamma_neg_inf_memory_none() {
; CHECK-LABEL: define double @tgamma_neg_inf_memory_none() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 0xFFF0000000000000) #[[ATTR1]]
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 0xFFF0000000000000) readnone
  ret double %r
}

define float @tgammaf_nan() {
; CHECK-LABEL: define float @tgammaf_nan() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 0x7FF8000000000000)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 0x7FF8000000000000)
  ret float %r
}

define double @tgamma_nan() {
; CHECK-LABEL: define double @tgamma_nan() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 0x7FF8000000000000)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 0x7FF8000000000000)
  ret double %r
}

define float @tgammaf_nan_memory_none() {
; CHECK-LABEL: define float @tgammaf_nan_memory_none() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float 0x7FF8000000000000) #[[ATTR1]]
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float 0x7FF8000000000000) readnone
  ret float %r
}

define double @tgamma_nan_memory_none() {
; CHECK-LABEL: define double @tgamma_nan_memory_none() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double 0x7FF8000000000000) #[[ATTR1]]
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double 0x7FF8000000000000) readnone
  ret double %r
}

define float @tgammaf_poison() {
; CHECK-LABEL: define float @tgammaf_poison() {
; CHECK-NEXT:    [[R:%.*]] = call float @tgammaf(float poison)
; CHECK-NEXT:    ret float [[R]]
;
  %r = call float @tgammaf(float poison)
  ret float %r
}

define double @tgamma_poison() {
; CHECK-LABEL: define double @tgamma_poison() {
; CHECK-NEXT:    [[R:%.*]] = call double @tgamma(double poison)
; CHECK-NEXT:    ret double [[R]]
;
  %r = call double @tgamma(double poison)
  ret double %r
}

declare float @tgammaf(float) willreturn
declare double @tgamma(double) willreturn
