; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -S -passes=instcombine < %s | FileCheck %s

define double @fdiv_exp(double %x) {
; CHECK-LABEL: define double @fdiv_exp
; CHECK-SAME: (double [[X:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[EXP_X:%.*]] = call fast double @llvm.exp.f64(double [[X]])
; CHECK-NEXT:    [[TMP0:%.*]] = fsub fast double [[EXP_X]], [[X]]
; CHECK-NEXT:    [[DIV:%.*]] = call fast double @llvm.exp.f64(double [[TMP0]])
; CHECK-NEXT:    ret double [[DIV]]
;
entry:
  %exp_x = call fast double @llvm.exp.f64(double %x)
  %exp_exp_x = call fast double @llvm.exp.f64(double %exp_x)
  %div = fdiv fast double %exp_exp_x, %exp_x
  ret double %div
}

define double @fdiv_exp_multiple_uses(double %x) {
; CHECK-LABEL: define double @fdiv_exp_multiple_uses
; CHECK-SAME: (double [[X:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[EXP_X:%.*]] = call fast double @llvm.exp.f64(double [[X]])
; CHECK-NEXT:    [[EXP_EXP_X:%.*]] = call fast double @llvm.exp.f64(double [[EXP_X]])
; CHECK-NEXT:    [[DIV:%.*]] = fdiv fast double [[EXP_EXP_X]], [[EXP_X]]
; CHECK-NEXT:    call void @use(double [[EXP_X]])
; CHECK-NEXT:    ret double [[DIV]]
;
entry:
  %exp_x = call fast double @llvm.exp.f64(double %x)
  %exp_exp_x = call fast double @llvm.exp.f64(double %exp_x)
  %div = fdiv fast double %exp_exp_x, %exp_x
  call void @use(double %exp_x)
  ret double %div
}

define double @fdiv_exp_swapped(double %x) {
; CHECK-LABEL: define double @fdiv_exp_swapped
; CHECK-SAME: (double [[X:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[EXP_X:%.*]] = call fast double @llvm.exp.f64(double [[X]])
; CHECK-NEXT:    [[TMP0:%.*]] = fsub fast double [[X]], [[EXP_X]]
; CHECK-NEXT:    [[DIV:%.*]] = call fast double @llvm.exp.f64(double [[TMP0]])
; CHECK-NEXT:    ret double [[DIV]]
;
entry:
  %exp_x = call fast double @llvm.exp.f64(double %x)
  %exp_exp_x = call fast double @llvm.exp.f64(double %exp_x)
  %div = fdiv fast double %exp_x, %exp_exp_x
  ret double %div
}

declare double @llvm.exp.f64(double)
declare void @use(double)
