; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt -S -passes=instcombine < %s | FileCheck %s

define i64 @func(i32 %p, i1 %cmp1) {
; CHECK-LABEL: define i64 @func(
; CHECK-SAME: i32 [[P:%.*]], i1 [[CMP1:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[NOT:%.*]] = xor i32 [[P]], -1
; CHECK-NEXT:    br label [[FOR_BODY:%.*]]
; CHECK:       for.body:
; CHECK-NEXT:    [[P0:%.*]] = phi i32 [ [[NOT]], [[ENTRY:%.*]] ], [ [[CONV:%.*]], [[FOR_BODY]] ]
; CHECK-NEXT:    [[COND:%.*]] = select i1 [[CMP1]], i32 0, i32 -1231558963
; CHECK-NEXT:    [[XOR:%.*]] = xor i32 [[COND]], [[P0]]
; CHECK-NEXT:    [[CMP2:%.*]] = icmp ne i32 [[XOR]], 1
; CHECK-NEXT:    [[CONV]] = zext i1 [[CMP2]] to i32
; CHECK-NEXT:    br i1 [[CMP2]], label [[FOR_BODY]], label [[FOR_EXIT:%.*]]
; CHECK:       for.exit:
; CHECK-NEXT:    ret i64 0
;
entry:
  %not = xor i32 %p, -1
  br label %for.body

for.body:
  %p0 = phi i32 [ %not, %entry ], [ %conv, %for.body ]
  %cond = select i1 %cmp1, i32 0, i32 -1231558963
  %xor = xor i32 %cond, %p0
  %cmp2 = icmp ne i32 %xor, 1
  %conv = zext i1 %cmp2 to i32
  br i1 %cmp2, label %for.body, label %for.exit

for.exit:
  ret i64 0
}
