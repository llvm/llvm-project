; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=instcombine -S %s -o - | FileCheck %s

define void @foo() personality ptr null !dbg !4 {
; CHECK-LABEL: define void @foo(
; CHECK-SAME: ) personality ptr null !dbg [[DBG3:![0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    invoke void @llvm.donothing()
; CHECK-NEXT:            to label %[[COMMON_RET:.*]] unwind label %[[LPAD159:.*]], !dbg [[DBG7:![0-9]+]]
; CHECK:       [[COMMON_RET]]:
; CHECK-NEXT:    ret void
; CHECK:       [[LPAD159]]:
; CHECK-NEXT:    [[TMP0:%.*]] = landingpad { ptr, i32 }
; CHECK-NEXT:            cleanup
; CHECK-NEXT:    br label %[[COMMON_RET]]
;
entry:
  %call.i.i895904 = invoke ptr @_Znam(i64 0)
          to label %common.ret unwind label %lpad159, !dbg !9

common.ret:                                       ; preds = %lpad159, %entry
  ret void

lpad159:                                          ; preds = %entry
  %0 = landingpad { ptr, i32 }
  cleanup
  br label %common.ret
}

declare ptr @_Znam(i64)

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1, producer: "clang version 20.0.0git")
!1 = !DIFile(filename: "ArchiveCommandLine.cpp", directory: "/tmp")
!2 = !{}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "foo", scope: !1, file: !1, line: 13, type: !6, scopeLine: 13, unit: !0, retainedNodes: !2)
!6 = distinct !DISubroutineType(types: !7)
!7 = !{null}
!9 = !DILocation(line: 14, column: 20, scope: !4)
;.
; CHECK: [[META0:![0-9]+]] = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: [[META1:![0-9]+]], producer: "{{.*}}clang version {{.*}}", isOptimized: false, runtimeVersion: 0, emissionKind: NoDebug)
; CHECK: [[META1]] = !DIFile(filename: "ArchiveCommandLine.cpp", directory: {{.*}})
; CHECK: [[DBG3]] = distinct !DISubprogram(name: "foo", scope: [[META1]], file: [[META1]], line: 13, type: [[META4:![0-9]+]], scopeLine: 13, spFlags: DISPFlagDefinition, unit: [[META0]], retainedNodes: [[META6:![0-9]+]])
; CHECK: [[META4]] = distinct !DISubroutineType(types: [[META5:![0-9]+]])
; CHECK: [[META5]] = !{null}
; CHECK: [[META6]] = !{}
; CHECK: [[DBG7]] = !DILocation(line: 14, column: 20, scope: [[DBG3]])
;.
