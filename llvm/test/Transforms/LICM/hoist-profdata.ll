; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals --version 2
; Test that hoisting conditional branches copies the debug and profiling info
; metadata from the branch being hoisted.
; RUN: opt -S -passes=licm %s -o - | FileCheck %s

declare i32 @foo()

; to_hoist should get hoisted, and that should not result
; in a loss of profiling info
define i32 @hoist_select(i1 %cond, i32 %a, i32 %b) nounwind {
; CHECK-LABEL: define i32 @hoist_select
; CHECK-SAME: (i1 [[COND:%.*]], i32 [[A:%.*]], i32 [[B:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TO_HOIST:%.*]] = select i1 [[COND]], i32 [[A]], i32 [[B]], !prof [[PROF0:![0-9]+]]
; CHECK-NEXT:    br label [[L0:%.*]]
; CHECK:       L0:
; CHECK-NEXT:    [[G:%.*]] = call i32 @foo()
; CHECK-NEXT:    [[SUM:%.*]] = add i32 [[G]], [[TO_HOIST]]
; CHECK-NEXT:    [[C:%.*]] = icmp eq i32 [[SUM]], 0
; CHECK-NEXT:    br i1 [[C]], label [[L0]], label [[EXIT:%.*]], !prof [[PROF1:![0-9]+]]
; CHECK:       exit:
; CHECK-NEXT:    [[SUM_LCSSA:%.*]] = phi i32 [ [[SUM]], [[L0]] ]
; CHECK-NEXT:    ret i32 [[SUM_LCSSA]]
;
entry:
  br label %L0
L0:
  %g = call i32 @foo()
  %to_hoist = select i1 %cond, i32 %a, i32 %b, !prof !0
  %sum = add i32 %g, %to_hoist
  %c = icmp eq i32 %sum, 0
  br i1 %c, label %L0, label %exit, !prof !1

exit:
  ret i32 %sum
}

!0 = !{!"branch_weights", i32 2, i32 5}
!1 = !{!"branch_weights", i32 101, i32 189}
;.
; CHECK: attributes #[[ATTR0]] = { nounwind }
;.
; CHECK: [[PROF0]] = !{!"branch_weights", i32 2, i32 5}
; CHECK: [[PROF1]] = !{!"branch_weights", i32 101, i32 189}
;.
