; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 6
; RUN: opt -S -passes='loop-mssa(licm)' < %s | FileCheck %s
@e = external dso_local global ptr, align 8

define void @main(i1 %arg, ptr %arg1) {
; CHECK-LABEL: define void @main(
; CHECK-SAME: i1 [[ARG:%.*]], ptr [[ARG1:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    br label %[[LOOP1:.*]]
; CHECK:       [[LOOP1]]:
; CHECK-NEXT:    br label %[[LOOP2:.*]]
; CHECK:       [[LOOP2]]:
; CHECK-NEXT:    br i1 [[ARG]], label %[[LOOP2_LATCH:.*]], label %[[LOOP_LATCH:.*]]
; CHECK:       [[LOOP2_LATCH]]:
; CHECK-NEXT:    store i32 0, ptr [[ARG1]], align 4
; CHECK-NEXT:    br label %[[LOOP2]]
; CHECK:       [[LOOP_LATCH]]:
; CHECK-NEXT:    store ptr null, ptr @e, align 8, !tbaa [[ANYPTR_TBAA0:![0-9]+]]
; CHECK-NEXT:    [[PTR:%.*]] = load ptr, ptr @e, align 8, !tbaa [[ANYPTR_TBAA0]]
; CHECK-NEXT:    store i32 0, ptr [[PTR]], align 4, !tbaa [[INT_TBAA4:![0-9]+]]
; CHECK-NEXT:    br label %[[LOOP1]]
;
entry:
  br label %loop1

loop1:
  br label %loop2

loop2:
  br i1 %arg, label %loop2.latch, label %loop.latch

loop2.latch:
  store i32 0, ptr %arg1, align 4
  br label %loop2

loop.latch:
  store ptr null, ptr @e, align 8, !tbaa !0
  %ptr = load ptr, ptr @e, align 8, !tbaa !0
  store i32 0, ptr %ptr, align 4, !tbaa !4
  br label %loop1
}

define void @store_null(i1 %arg) {
; CHECK-LABEL: define void @store_null(
; CHECK-SAME: i1 [[ARG:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    br label %[[LOOP1:.*]]
; CHECK:       [[LOOP1]]:
; CHECK-NEXT:    br label %[[LOOP2:.*]]
; CHECK:       [[LOOP2]]:
; CHECK-NEXT:    br i1 [[ARG]], label %[[LOOP2_LATCH:.*]], label %[[LOOP_LATCH:.*]]
; CHECK:       [[LOOP2_LATCH]]:
; CHECK-NEXT:    store i32 0, ptr null, align 4
; CHECK-NEXT:    br label %[[LOOP2]]
; CHECK:       [[LOOP_LATCH]]:
; CHECK-NEXT:    store i32 0, ptr null, align 4, !tbaa [[INT_TBAA4]]
; CHECK-NEXT:    br label %[[LOOP1]]
;
entry:
  br label %loop1

loop1:
  br label %loop2

loop2:
  br i1 %arg, label %loop2.latch, label %loop.latch

loop2.latch:
  store i32 0, ptr null, align 4
  br label %loop2

loop.latch:
  store ptr null, ptr @e, align 8, !tbaa !0
  %ptr = load ptr, ptr @e, align 8, !tbaa !0
  store i32 0, ptr %ptr, align 4, !tbaa !4
  br label %loop1
}

!0 = !{!1, !1, i64 0}
!1 = !{!"any pointer", !2, i64 0}
!2 = !{!"omnipotent char", !3, i64 0}
!3 = !{!"Simple C/C++ TBAA"}
!4 = !{!5, !5, i64 0}
!5 = !{!"int", !2, i64 0}
;.
; CHECK: [[ANYPTR_TBAA0]] = !{[[META1:![0-9]+]], [[META1]], i64 0}
; CHECK: [[META1]] = !{!"any pointer", [[META2:![0-9]+]], i64 0}
; CHECK: [[META2]] = !{!"omnipotent char", [[META3:![0-9]+]], i64 0}
; CHECK: [[META3]] = !{!"Simple C/C++ TBAA"}
; CHECK: [[INT_TBAA4]] = !{[[META5:![0-9]+]], [[META5]], i64 0}
; CHECK: [[META5]] = !{!"int", [[META2]], i64 0}
;.
