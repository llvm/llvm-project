; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -mtriple=mipsisa32r6 -mattr=-soft-float | FileCheck %s

define i16 @fcvt_h_s_sat(float %a) {
; CHECK-LABEL: fcvt_h_s_sat:
; CHECK:       # %bb.0: # %start
; CHECK-NEXT:    lui $1, %hi($CPI0_0)
; CHECK-NEXT:    lwc1 $f0, %lo($CPI0_0)($1)
; CHECK-NEXT:    max.s $f0, $f12, $f0
; CHECK-NEXT:    lui $1, %hi($CPI0_1)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI0_1)($1)
; CHECK-NEXT:    min.s $f0, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f0, $f0
; CHECK-NEXT:    mfc1 $1, $f0
; CHECK-NEXT:    cmp.un.s $f0, $f12, $f12
; CHECK-NEXT:    mfc1 $2, $f0
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    seleqz $2, $1, $2
start:
  %0 = tail call i16 @llvm.fptosi.sat.i16.f32(float %a)
  ret i16 %0
}

define i16 @fcvt_hu_s_sat(float %a) {
; CHECK-LABEL: fcvt_hu_s_sat:
; CHECK:       # %bb.0: # %start
; CHECK-NEXT:    max.s $f0, $f12, $f12
; CHECK-NEXT:    mtc1 $zero, $f1
; CHECK-NEXT:    max.s $f0, $f0, $f1
; CHECK-NEXT:    lui $1, %hi($CPI1_0)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI1_0)($1)
; CHECK-NEXT:    min.s $f0, $f0, $f1
; CHECK-NEXT:    lui $1, %hi($CPI1_1)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI1_1)($1)
; CHECK-NEXT:    cmp.lt.s $f2, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f3, $f0
; CHECK-NEXT:    mfc1 $1, $f3
; CHECK-NEXT:    mfc1 $2, $f2
; CHECK-NEXT:    selnez $1, $1, $2
; CHECK-NEXT:    sub.s $f0, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f0, $f0
; CHECK-NEXT:    mfc1 $3, $f0
; CHECK-NEXT:    lui $4, 32768
; CHECK-NEXT:    xor $3, $3, $4
; CHECK-NEXT:    seleqz $2, $3, $2
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    or $2, $1, $2
start:
  %0 = tail call i16 @llvm.fptoui.sat.i16.f32(float %a)
  ret i16 %0
}

define i16 @fcvt_h_s_sat_nnan(float nofpclass(nan) %a) {
; CHECK-LABEL: fcvt_h_s_sat_nnan:
; CHECK:       # %bb.0: # %start
; CHECK-NEXT:    lui $1, %hi($CPI2_0)
; CHECK-NEXT:    lwc1 $f0, %lo($CPI2_0)($1)
; CHECK-NEXT:    max.s $f0, $f12, $f0
; CHECK-NEXT:    lui $1, %hi($CPI2_1)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI2_1)($1)
; CHECK-NEXT:    min.s $f0, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f0, $f0
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    mfc1 $2, $f0
start:
  %0 = tail call i16 @llvm.fptosi.sat.i16.f32(float %a)
  ret i16 %0
}

define i16 @fcvt_hu_s_sat_nnan(float nofpclass(nan) %a) {
; CHECK-LABEL: fcvt_hu_s_sat_nnan:
; CHECK:       # %bb.0: # %start
; CHECK-NEXT:    mtc1 $zero, $f0
; CHECK-NEXT:    max.s $f0, $f12, $f0
; CHECK-NEXT:    lui $1, %hi($CPI3_0)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI3_0)($1)
; CHECK-NEXT:    min.s $f0, $f0, $f1
; CHECK-NEXT:    lui $1, %hi($CPI3_1)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI3_1)($1)
; CHECK-NEXT:    cmp.lt.s $f2, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f3, $f0
; CHECK-NEXT:    mfc1 $1, $f3
; CHECK-NEXT:    mfc1 $2, $f2
; CHECK-NEXT:    selnez $1, $1, $2
; CHECK-NEXT:    sub.s $f0, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f0, $f0
; CHECK-NEXT:    mfc1 $3, $f0
; CHECK-NEXT:    lui $4, 32768
; CHECK-NEXT:    xor $3, $3, $4
; CHECK-NEXT:    seleqz $2, $3, $2
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    or $2, $1, $2
start:
  %0 = tail call i16 @llvm.fptoui.sat.i16.f32(float %a)
  ret i16 %0
}

define i16 @fcvt_h_s_sat_nsnan(float nofpclass(snan) %a) {
; CHECK-LABEL: fcvt_h_s_sat_nsnan:
; CHECK:       # %bb.0: # %start
; CHECK-NEXT:    lui $1, %hi($CPI4_0)
; CHECK-NEXT:    lwc1 $f0, %lo($CPI4_0)($1)
; CHECK-NEXT:    max.s $f0, $f12, $f0
; CHECK-NEXT:    lui $1, %hi($CPI4_1)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI4_1)($1)
; CHECK-NEXT:    min.s $f0, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f0, $f0
; CHECK-NEXT:    mfc1 $1, $f0
; CHECK-NEXT:    cmp.un.s $f0, $f12, $f12
; CHECK-NEXT:    mfc1 $2, $f0
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    seleqz $2, $1, $2
start:
  %0 = tail call i16 @llvm.fptosi.sat.i16.f32(float %a)
  ret i16 %0
}

define i16 @fcvt_hu_s_sat_nsnan(float nofpclass(snan) %a) {
; CHECK-LABEL: fcvt_hu_s_sat_nsnan:
; CHECK:       # %bb.0: # %start
; CHECK-NEXT:    mtc1 $zero, $f0
; CHECK-NEXT:    max.s $f0, $f12, $f0
; CHECK-NEXT:    lui $1, %hi($CPI5_0)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI5_0)($1)
; CHECK-NEXT:    min.s $f0, $f0, $f1
; CHECK-NEXT:    lui $1, %hi($CPI5_1)
; CHECK-NEXT:    lwc1 $f1, %lo($CPI5_1)($1)
; CHECK-NEXT:    cmp.lt.s $f2, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f3, $f0
; CHECK-NEXT:    mfc1 $1, $f3
; CHECK-NEXT:    mfc1 $2, $f2
; CHECK-NEXT:    selnez $1, $1, $2
; CHECK-NEXT:    sub.s $f0, $f0, $f1
; CHECK-NEXT:    trunc.w.s $f0, $f0
; CHECK-NEXT:    mfc1 $3, $f0
; CHECK-NEXT:    lui $4, 32768
; CHECK-NEXT:    xor $3, $3, $4
; CHECK-NEXT:    seleqz $2, $3, $2
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    or $2, $1, $2
start:
  %0 = tail call i16 @llvm.fptoui.sat.i16.f32(float %a)
  ret i16 %0
}

