; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=next32 < %s | FileCheck %s

define dso_local zeroext i8 @and1(i8 noundef zeroext %0, i8 noundef zeroext %1) {
; CHECK-LABEL: and1
; CHECK:    and r2, r1
  %3 = and i8 %1, %0
  ret i8 %3
}

define dso_local zeroext i16 @and2(i16 noundef zeroext %0, i16 noundef zeroext %1) {
; CHECK-LABEL: and2
; CHECK:    and r2, r1
  %3 = and i16 %1, %0
  ret i16 %3
}

define dso_local i32 @and3(i32 noundef %0, i32 noundef %1) {
; CHECK-LABEL: and3
; CHECK:    and r2, r1
  %3 = and i32 %1, %0
  ret i32 %3
}

define dso_local i64 @and4(i64 noundef %0, i64 noundef %1) {
; CHECK-LABEL: and4
; CHECK:    and r4, r2
; CHECK-NEXT:    and r3, r1
  %3 = and i64 %1, %0
  ret i64 %3
}

define dso_local i128 @and5(i128 noundef %0, i128 noundef %1) {
; CHECK-LABEL: and5
; CHECK:    and r8, r4
; CHECK-NEXT:    and r7, r3
; CHECK-NEXT:    and r6, r2
; CHECK-NEXT:    and r5, r1
  %3 = and i128 %1, %0
  ret i128 %3
}

define dso_local <8 x i32> @and6(<8 x i32> noundef %0, <8 x i32> noundef %1) {
; CHECK-LABEL: and6
; CHECK:    and r16, r8
; CHECK-NEXT:    and r15, r7
; CHECK-NEXT:    and r14, r6
; CHECK-NEXT:    and r13, r5
; CHECK-NEXT:    and r12, r4
; CHECK-NEXT:    and r11, r3
; CHECK-NEXT:    and r10, r2
; CHECK-NEXT:    and r9, r1
  %3 = and <8 x i32> %1, %0
  ret <8 x i32> %3
}

define dso_local <16 x i32> @and7(<16 x i32> noundef %0, <16 x i32> noundef %1) {
; CHECK-LABEL: and7
; CHECK:    and r32, r16
; CHECK-NEXT:    and r31, r15
; CHECK-NEXT:    and r30, r14
; CHECK-NEXT:    and r29, r13
; CHECK-NEXT:    and r28, r12
; CHECK-NEXT:    and r27, r11
; CHECK-NEXT:    and r26, r10
; CHECK-NEXT:    and r25, r9
; CHECK-NEXT:    and r24, r8
; CHECK-NEXT:    and r23, r7
; CHECK-NEXT:    and r22, r6
; CHECK-NEXT:    and r21, r5
; CHECK-NEXT:    and r20, r4
; CHECK-NEXT:    and r19, r3
; CHECK-NEXT:    and r18, r2
; CHECK-NEXT:    and r17, r1
  %3 = and <16 x i32> %1, %0
  ret <16 x i32> %3
}

define dso_local <32 x i32> @and8(<32 x i32> noundef %0, <32 x i32> noundef %1) {
; CHECK-LABEL: and8
; CHECK:    and r64, r32
; CHECK-NEXT:    and r63, r31
; CHECK-NEXT:    and r62, r30
; CHECK-NEXT:    and r61, r29
; CHECK-NEXT:    and r60, r28
; CHECK-NEXT:    and r59, r27
; CHECK-NEXT:    and r58, r26
; CHECK-NEXT:    and r57, r25
; CHECK-NEXT:    and r56, r24
; CHECK-NEXT:    and r55, r23
; CHECK-NEXT:    and r54, r22
; CHECK-NEXT:    and r53, r21
; CHECK-NEXT:    and r52, r20
; CHECK-NEXT:    and r51, r19
; CHECK-NEXT:    and r50, r18
; CHECK-NEXT:    and r49, r17
; CHECK-NEXT:    and r48, r16
; CHECK-NEXT:    and r47, r15
; CHECK-NEXT:    and r46, r14
; CHECK-NEXT:    and r45, r13
; CHECK-NEXT:    and r44, r12
; CHECK-NEXT:    and r43, r11
; CHECK-NEXT:    and r42, r10
; CHECK-NEXT:    and r41, r9
; CHECK-NEXT:    and r40, r8
; CHECK-NEXT:    and r39, r7
; CHECK-NEXT:    and r38, r6
; CHECK-NEXT:    and r37, r5
; CHECK-NEXT:    and r36, r4
; CHECK-NEXT:    and r35, r3
; CHECK-NEXT:    and r34, r2
; CHECK-NEXT:    and r33, r1
  %3 = and <32 x i32> %1, %0
  ret <32 x i32> %3
}
