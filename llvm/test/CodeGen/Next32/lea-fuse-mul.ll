; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=next32 -mattr=+lea < %s | FileCheck %s

define dso_local i64 @test(i32 noundef %a, i64* nocapture noundef writeonly %b) {
; CHECK-LABEL: test:
; CHECK:       .Ltest$local:
; CHECK:       .type	.Ltest$local,@function
; CHECK-NEXT:  LBB0_0:
; CHECK-NEXT:  # %bb.0: # %entry
; CHECK-NEXT:    feeder.32 tid
; CHECK-NEXT:    feeder.32 ret_fid
; CHECK-NEXT:    feeder.32 r1
; CHECK-NEXT:    feeder.64 r2
; CHECK-NEXT:    feeder.64 r3
; CHECK-NEXT:    movl r2, 0x6
; CHECK-NEXT:    umul r1, r2
; CHECK-NEXT:    movl r3, 0x2
; CHECK-NEXT:    movl r4, 0x1
; CHECK-NEXT:    movl r5, 0x0
; CHECK-NEXT:    leadisp r5, r3
; CHECK-NEXT:    leascale r5, r4
; CHECK-NEXT:    leaindex r2, r1
; CHECK-NEXT:    leabase r2, r1
; CHECK-NEXT:    chain ret_fid, 0x64
; CHECK-NEXT:    writer.32 ret_fid, tid
; CHECK-NEXT:    writer.64 ret_fid, r1
; CHECK-NEXT:    writer.64 ret_fid, r2
entry:
  %conv = zext i32 %a to i64
  %mul = mul nuw nsw i64 %conv, 3
  %shl = shl nuw nsw i64 %mul, 1
  %add = add i64 %mul, 1
  %shl1 = shl i64 %add, 1
  %res = add i64 %shl1, %shl
  ret i64 %res
}
