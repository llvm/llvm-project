; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=next32 --mcpu=next32gen1 < %s | FileCheck %s -check-prefix CHECK-NO-FATOMIC
; RUN: llc -mtriple=next32 --mcpu=next32gen2 < %s | FileCheck %s -check-prefix CHECK-FATOMIC

define void @test_fadd(half* nocapture noundef %f16, float* nocapture noundef %f32, double* nocapture noundef %f64) {
; CHECK-NO-FATOMIC-LABEL: test_fadd:
; CHECK-NO-FATOMIC:       LBB0_0:
; CHECK-NO-FATOMIC-NEXT:  # %bb.0: # %entry
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r6
; CHECK-NO-FATOMIC-NEXT:    memread.16.align[2] r2, r1, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r7
; CHECK-NO-FATOMIC-NEXT:    dup r8, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r8, r7
; CHECK-NO-FATOMIC-NEXT:    dup tid, r8
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_1
; CHECK-NO-FATOMIC-NEXT:    chain mbb_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r7
; CHECK-NO-FATOMIC-NEXT:  LBB0_1: # %atomicrmw.start
; CHECK-NO-FATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r7
; CHECK-NO-FATOMIC-NEXT:    dup r8, r7
; CHECK-NO-FATOMIC-NEXT:    zext.16 r8
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __gnu_h2f_ieee
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp0
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.16 call_addr, r8
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB0_2
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r7
; CHECK-NO-FATOMIC-NEXT:  LBB0_2: # %atomicrmw.start
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB0_1 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r7
; CHECK-NO-FATOMIC-NEXT:  .Ltmp0:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 r8
; CHECK-NO-FATOMIC-NEXT:    movl r9, 0x3F800000
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __addsf3
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp1
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r8
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r9
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB0_3
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r7
; CHECK-NO-FATOMIC-NEXT:  LBB0_3: # %atomicrmw.start
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB0_1 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r7
; CHECK-NO-FATOMIC-NEXT:  .Ltmp1:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 r8
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __gnu_f2h_ieee
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp2
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r8
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB0_4
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r7
; CHECK-NO-FATOMIC-NEXT:  LBB0_4: # %atomicrmw.start
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB0_1 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r7
; CHECK-NO-FATOMIC-NEXT:  .Ltmp2:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 r8
; CHECK-NO-FATOMIC-NEXT:    memcas.16.align[2] r2, r1, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r7
; CHECK-NO-FATOMIC-NEXT:    memdata r8
; CHECK-NO-FATOMIC-NEXT:    dup r9, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r9, r8
; CHECK-NO-FATOMIC-NEXT:    dup tid, r9
; CHECK-NO-FATOMIC-NEXT:    dup r9, r8
; CHECK-NO-FATOMIC-NEXT:    sub r9, r7
; CHECK-NO-FATOMIC-NEXT:    dup r10, r9
; CHECK-NO-FATOMIC-NEXT:    flags r10
; CHECK-NO-FATOMIC-NEXT:    dup r7, r8
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_1
; CHECK-NO-FATOMIC-NEXT:    chain.p.ne mbb_addr, 0x60 [r10]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r7
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_5
; CHECK-NO-FATOMIC-NEXT:    chain.e mbb_addr, 0x3 [r10]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:  LBB0_5: # %atomicrmw.end
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    memread.32.align[4] r4, r3, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r1
; CHECK-NO-FATOMIC-NEXT:    dup r2, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r2, r1
; CHECK-NO-FATOMIC-NEXT:    dup tid, r2
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_6
; CHECK-NO-FATOMIC-NEXT:    chain mbb_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:  LBB0_6: # %atomicrmw.start2
; CHECK-NO-FATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    movl r2, 0x3F800000
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __addsf3
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp3
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r2
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB0_7
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:  LBB0_7: # %atomicrmw.start2
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB0_6 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:  .Ltmp3:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 r2
; CHECK-NO-FATOMIC-NEXT:    memcas.32.align[4] r4, r3, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r1
; CHECK-NO-FATOMIC-NEXT:    memdata r2
; CHECK-NO-FATOMIC-NEXT:    dup r7, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r7, r2
; CHECK-NO-FATOMIC-NEXT:    dup tid, r7
; CHECK-NO-FATOMIC-NEXT:    dup r7, r2
; CHECK-NO-FATOMIC-NEXT:    sub r7, r1
; CHECK-NO-FATOMIC-NEXT:    dup r8, r7
; CHECK-NO-FATOMIC-NEXT:    flags r8
; CHECK-NO-FATOMIC-NEXT:    dup r1, r2
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_6
; CHECK-NO-FATOMIC-NEXT:    chain.p.ne mbb_addr, 0x60 [r8]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_8
; CHECK-NO-FATOMIC-NEXT:    chain.e mbb_addr, 0x3 [r8]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:  LBB0_8: # %atomicrmw.end1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    memread.64.align[8] r6, r5, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r2
; CHECK-NO-FATOMIC-NEXT:    memdata r1
; CHECK-NO-FATOMIC-NEXT:    dup r3, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r3, r2
; CHECK-NO-FATOMIC-NEXT:    dup tid, r3
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_9
; CHECK-NO-FATOMIC-NEXT:    chain mbb_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:  LBB0_9: # %atomicrmw.start8
; CHECK-NO-FATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    movl r4, 0x3FF00000
; CHECK-NO-FATOMIC-NEXT:    movl r3, 0x0
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __adddf3
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp4
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.64 call_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.64 call_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.64 call_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.64 call_addr, r4
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB0_10
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:  LBB0_10: # %atomicrmw.start8
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB0_9 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:  .Ltmp4:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r7
; CHECK-NO-FATOMIC-NEXT:    memcas.64.align[8] r6, r5, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r2
; CHECK-NO-FATOMIC-NEXT:    memdata r1
; CHECK-NO-FATOMIC-NEXT:    memdata r7
; CHECK-NO-FATOMIC-NEXT:    memdata r4
; CHECK-NO-FATOMIC-NEXT:    dup r8, r7
; CHECK-NO-FATOMIC-NEXT:    xor r8, r2
; CHECK-NO-FATOMIC-NEXT:    dup r2, r4
; CHECK-NO-FATOMIC-NEXT:    xor r2, r1
; CHECK-NO-FATOMIC-NEXT:    dup r1, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r1, r7
; CHECK-NO-FATOMIC-NEXT:    dup tid, r1
; CHECK-NO-FATOMIC-NEXT:    or r2, r8
; CHECK-NO-FATOMIC-NEXT:    sub r2, r3
; CHECK-NO-FATOMIC-NEXT:    dup r3, r2
; CHECK-NO-FATOMIC-NEXT:    flags r3
; CHECK-NO-FATOMIC-NEXT:    dup r1, r4
; CHECK-NO-FATOMIC-NEXT:    dup r2, r7
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_9
; CHECK-NO-FATOMIC-NEXT:    chain.p.ne mbb_addr, 0x60 [r3]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB0_11
; CHECK-NO-FATOMIC-NEXT:    chain.e mbb_addr, 0x3 [r3]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:  LBB0_11: # %atomicrmw.end7
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    chain ret_fid, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 ret_fid, tid
;
; CHECK-FATOMIC-LABEL: test_fadd:
; CHECK-FATOMIC:       LBB0_0:
; CHECK-FATOMIC-NEXT:  # %bb.0: # %entry
; CHECK-FATOMIC-NEXT:    feeder.32 tid
; CHECK-FATOMIC-NEXT:    feeder.32 ret_fid
; CHECK-FATOMIC-NEXT:    feeder.64 r1
; CHECK-FATOMIC-NEXT:    feeder.64 r2
; CHECK-FATOMIC-NEXT:    feeder.64 r3
; CHECK-FATOMIC-NEXT:    feeder.64 r4
; CHECK-FATOMIC-NEXT:    feeder.64 r5
; CHECK-FATOMIC-NEXT:    feeder.64 r6
; CHECK-FATOMIC-NEXT:    movl r7, 0x3C00
; CHECK-FATOMIC-NEXT:    memfa.fadd.16.align[2] r2, r1, tid
; CHECK-FATOMIC-NEXT:    memdata r7
; CHECK-FATOMIC-NEXT:    dup r1, tid
; CHECK-FATOMIC-NEXT:    barrier r1, r7
; CHECK-FATOMIC-NEXT:    movl r2, 0x3F800000
; CHECK-FATOMIC-NEXT:    memfa.fadd.32.align[4] r4, r3, r1
; CHECK-FATOMIC-NEXT:    memdata r2
; CHECK-FATOMIC-NEXT:    barrier r1, r2
; CHECK-FATOMIC-NEXT:    movl r2, 0x0
; CHECK-FATOMIC-NEXT:    movl r3, 0x3FF00000
; CHECK-FATOMIC-NEXT:    memfa.fadd.64.align[8] r6, r5, r1
; CHECK-FATOMIC-NEXT:    memdata r3
; CHECK-FATOMIC-NEXT:    memdata r2
; CHECK-FATOMIC-NEXT:    barrier r1, r3
; CHECK-FATOMIC-NEXT:    dup tid, r1
; CHECK-FATOMIC-NEXT:    chain ret_fid, 0x64
; CHECK-FATOMIC-NEXT:    writer.32 ret_fid, tid
entry:
  %0 = atomicrmw fadd half* %f16, half 0xH3C00 monotonic, align 2
  %1 = atomicrmw fadd float* %f32, float 1.000000e+00 monotonic, align 4
  %2 = atomicrmw fadd double* %f64, double 1.000000e+00 monotonic, align 8
  ret void
}

define void @test_fsub(half* nocapture noundef %f16, float* nocapture noundef %f32, double* nocapture noundef %f64) {
; CHECK-NO-FATOMIC-LABEL: test_fsub:
; CHECK-NO-FATOMIC:       LBB1_0:
; CHECK-NO-FATOMIC-NEXT:  # %bb.0: # %entry
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r6
; CHECK-NO-FATOMIC-NEXT:    memread.16.align[2] r2, r1, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r7
; CHECK-NO-FATOMIC-NEXT:    dup r8, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r8, r7
; CHECK-NO-FATOMIC-NEXT:    dup tid, r8
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_1
; CHECK-NO-FATOMIC-NEXT:    chain mbb_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r7
; CHECK-NO-FATOMIC-NEXT:  LBB1_1: # %atomicrmw.start
; CHECK-NO-FATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r7
; CHECK-NO-FATOMIC-NEXT:    dup r8, r7
; CHECK-NO-FATOMIC-NEXT:    zext.16 r8
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __gnu_h2f_ieee
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp5
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.16 call_addr, r8
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB1_2
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r7
; CHECK-NO-FATOMIC-NEXT:  LBB1_2: # %atomicrmw.start
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB1_1 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r7
; CHECK-NO-FATOMIC-NEXT:  .Ltmp5:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 r8
; CHECK-NO-FATOMIC-NEXT:    movl r9, 0xBF800000
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __addsf3
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp6
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r8
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r9
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB1_3
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r7
; CHECK-NO-FATOMIC-NEXT:  LBB1_3: # %atomicrmw.start
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB1_1 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r7
; CHECK-NO-FATOMIC-NEXT:  .Ltmp6:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 r8
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __gnu_f2h_ieee
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp7
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r8
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB1_4
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r7
; CHECK-NO-FATOMIC-NEXT:  LBB1_4: # %atomicrmw.start
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB1_1 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r7
; CHECK-NO-FATOMIC-NEXT:  .Ltmp7:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 r8
; CHECK-NO-FATOMIC-NEXT:    memcas.16.align[2] r2, r1, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r7
; CHECK-NO-FATOMIC-NEXT:    memdata r8
; CHECK-NO-FATOMIC-NEXT:    dup r9, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r9, r8
; CHECK-NO-FATOMIC-NEXT:    dup tid, r9
; CHECK-NO-FATOMIC-NEXT:    dup r9, r8
; CHECK-NO-FATOMIC-NEXT:    sub r9, r7
; CHECK-NO-FATOMIC-NEXT:    dup r10, r9
; CHECK-NO-FATOMIC-NEXT:    flags r10
; CHECK-NO-FATOMIC-NEXT:    dup r7, r8
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_1
; CHECK-NO-FATOMIC-NEXT:    chain.p.ne mbb_addr, 0x60 [r10]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r7
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_5
; CHECK-NO-FATOMIC-NEXT:    chain.e mbb_addr, 0x3 [r10]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:  LBB1_5: # %atomicrmw.end
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    memread.32.align[4] r4, r3, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r1
; CHECK-NO-FATOMIC-NEXT:    dup r2, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r2, r1
; CHECK-NO-FATOMIC-NEXT:    dup tid, r2
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_6
; CHECK-NO-FATOMIC-NEXT:    chain mbb_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:  LBB1_6: # %atomicrmw.start2
; CHECK-NO-FATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    movl r2, 0xBF800000
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __addsf3
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp8
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, r2
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB1_7
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:  LBB1_7: # %atomicrmw.start2
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB1_6 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:  .Ltmp8:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.32 r2
; CHECK-NO-FATOMIC-NEXT:    memcas.32.align[4] r4, r3, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r1
; CHECK-NO-FATOMIC-NEXT:    memdata r2
; CHECK-NO-FATOMIC-NEXT:    dup r7, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r7, r2
; CHECK-NO-FATOMIC-NEXT:    dup tid, r7
; CHECK-NO-FATOMIC-NEXT:    dup r7, r2
; CHECK-NO-FATOMIC-NEXT:    sub r7, r1
; CHECK-NO-FATOMIC-NEXT:    dup r8, r7
; CHECK-NO-FATOMIC-NEXT:    flags r8
; CHECK-NO-FATOMIC-NEXT:    dup r1, r2
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_6
; CHECK-NO-FATOMIC-NEXT:    chain.p.ne mbb_addr, 0x60 [r8]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r4
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_8
; CHECK-NO-FATOMIC-NEXT:    chain.e mbb_addr, 0x3 [r8]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:  LBB1_8: # %atomicrmw.end1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    memread.64.align[8] r6, r5, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r2
; CHECK-NO-FATOMIC-NEXT:    memdata r1
; CHECK-NO-FATOMIC-NEXT:    dup r3, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r3, r2
; CHECK-NO-FATOMIC-NEXT:    dup tid, r3
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_9
; CHECK-NO-FATOMIC-NEXT:    chain mbb_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:  LBB1_9: # %atomicrmw.start8
; CHECK-NO-FATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:    movl r4, 0xBFF00000
; CHECK-NO-FATOMIC-NEXT:    movl r3, 0x0
; CHECK-NO-FATOMIC-NEXT:    movl call_addr, __adddf3
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_fid, .Ltmp9
; CHECK-NO-FATOMIC-NEXT:    chain call_addr, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_addr, call_ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.64 call_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.64 call_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.64 call_addr, r3
; CHECK-NO-FATOMIC-NEXT:    writer.64 call_addr, r4
; CHECK-NO-FATOMIC-NEXT:    movl call_ret_bb, LBB1_10
; CHECK-NO-FATOMIC-NEXT:    chain.rn call_ret_bb, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r3
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 call_ret_bb, r6
; CHECK-NO-FATOMIC-NEXT:  LBB1_10: # %atomicrmw.start8
; CHECK-NO-FATOMIC-NEXT:    # in Loop: Header=BB1_9 Depth=1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r1
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r2
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r3
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r5
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 r6
; CHECK-NO-FATOMIC-NEXT:  .Ltmp9:
; CHECK-NO-FATOMIC-NEXT:    feeder.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r4
; CHECK-NO-FATOMIC-NEXT:    feeder.64 r7
; CHECK-NO-FATOMIC-NEXT:    memcas.64.align[8] r6, r5, tid
; CHECK-NO-FATOMIC-NEXT:    memdata r2
; CHECK-NO-FATOMIC-NEXT:    memdata r1
; CHECK-NO-FATOMIC-NEXT:    memdata r7
; CHECK-NO-FATOMIC-NEXT:    memdata r4
; CHECK-NO-FATOMIC-NEXT:    dup r8, r7
; CHECK-NO-FATOMIC-NEXT:    xor r8, r2
; CHECK-NO-FATOMIC-NEXT:    dup r2, r4
; CHECK-NO-FATOMIC-NEXT:    xor r2, r1
; CHECK-NO-FATOMIC-NEXT:    dup r1, tid
; CHECK-NO-FATOMIC-NEXT:    barrier r1, r7
; CHECK-NO-FATOMIC-NEXT:    dup tid, r1
; CHECK-NO-FATOMIC-NEXT:    or r2, r8
; CHECK-NO-FATOMIC-NEXT:    sub r2, r3
; CHECK-NO-FATOMIC-NEXT:    dup r3, r2
; CHECK-NO-FATOMIC-NEXT:    flags r3
; CHECK-NO-FATOMIC-NEXT:    dup r1, r4
; CHECK-NO-FATOMIC-NEXT:    dup r2, r7
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_9
; CHECK-NO-FATOMIC-NEXT:    chain.p.ne mbb_addr, 0x60 [r3]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r1
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r2
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r5
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, r6
; CHECK-NO-FATOMIC-NEXT:    movl mbb_addr, LBB1_11
; CHECK-NO-FATOMIC-NEXT:    chain.e mbb_addr, 0x3 [r3]
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, tid
; CHECK-NO-FATOMIC-NEXT:    writer.32 mbb_addr, ret_fid
; CHECK-NO-FATOMIC-NEXT:  LBB1_11: # %atomicrmw.end7
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 tid
; CHECK-NO-FATOMIC-NEXT:    feeder.p.32 ret_fid
; CHECK-NO-FATOMIC-NEXT:    chain ret_fid, 0x64
; CHECK-NO-FATOMIC-NEXT:    writer.32 ret_fid, tid
;
; CHECK-FATOMIC-LABEL: test_fsub:
; CHECK-FATOMIC:       LBB1_0:
; CHECK-FATOMIC-NEXT:  # %bb.0: # %entry
; CHECK-FATOMIC-NEXT:    feeder.32 tid
; CHECK-FATOMIC-NEXT:    feeder.32 ret_fid
; CHECK-FATOMIC-NEXT:    feeder.64 r1
; CHECK-FATOMIC-NEXT:    feeder.64 r2
; CHECK-FATOMIC-NEXT:    feeder.64 r3
; CHECK-FATOMIC-NEXT:    feeder.64 r4
; CHECK-FATOMIC-NEXT:    feeder.64 r5
; CHECK-FATOMIC-NEXT:    feeder.64 r6
; CHECK-FATOMIC-NEXT:    movl r7, 0x3C00
; CHECK-FATOMIC-NEXT:    memfa.fsub.16.align[2] r2, r1, tid
; CHECK-FATOMIC-NEXT:    memdata r7
; CHECK-FATOMIC-NEXT:    dup r1, tid
; CHECK-FATOMIC-NEXT:    barrier r1, r7
; CHECK-FATOMIC-NEXT:    movl r2, 0x3F800000
; CHECK-FATOMIC-NEXT:    memfa.fsub.32.align[4] r4, r3, r1
; CHECK-FATOMIC-NEXT:    memdata r2
; CHECK-FATOMIC-NEXT:    barrier r1, r2
; CHECK-FATOMIC-NEXT:    movl r2, 0x0
; CHECK-FATOMIC-NEXT:    movl r3, 0x3FF00000
; CHECK-FATOMIC-NEXT:    memfa.fsub.64.align[8] r6, r5, r1
; CHECK-FATOMIC-NEXT:    memdata r3
; CHECK-FATOMIC-NEXT:    memdata r2
; CHECK-FATOMIC-NEXT:    barrier r1, r3
; CHECK-FATOMIC-NEXT:    dup tid, r1
; CHECK-FATOMIC-NEXT:    chain ret_fid, 0x64
; CHECK-FATOMIC-NEXT:    writer.32 ret_fid, tid
entry:
  %0 = atomicrmw fsub half* %f16, half 0xH3C00 monotonic, align 2
  %1 = atomicrmw fsub float* %f32, float 1.000000e+00 monotonic, align 4
  %2 = atomicrmw fsub double* %f64, double 1.000000e+00 monotonic, align 8
  ret void
}
