; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=next32 < %s | FileCheck %s

define dso_local zeroext i8 @add1(i8 noundef zeroext %0, i8 noundef zeroext %1) {
; CHECK-LABEL: add1
; CHECK:    add r2, r1
; CHECK-NEXT:    zext.8 r2
  %3 = add i8 %1, %0
  ret i8 %3
}

define dso_local zeroext i16 @add2(i16 noundef zeroext %0, i16 noundef zeroext %1) {
; CHECK-LABEL: add2
; CHECK:    add r2, r1
; CHECK-NEXT:    zext.16 r2
  %3 = add i16 %1, %0
  ret i16 %3
}

define dso_local i32 @add3(i32 noundef %0, i32 noundef %1) {
; CHECK-LABEL: add3
; CHECK:    add r2, r1
  %3 = add i32 %1, %0
  ret i32 %3
}

define dso_local i64 @add4(i64 noundef %0, i64 noundef %1) {
; CHECK-LABEL: add4
; CHECK:    leadisp r6, r6
; CHECK-NEXT:    leascale r6, r5
; CHECK-NEXT:    leaindex r2, r1
; CHECK-NEXT:    leabase r4, r3
  %3 = add i64 %1, %0
  ret i64 %3
}

define dso_local i128 @add5(i128 noundef %0, i128 noundef %1) {
; CHECK-LABEL: add5
; CHECK:    add r5, r1
; CHECK-NEXT:    dup r1, r5
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r6, r2 [r1]
; CHECK-NEXT:    dup r1, r6
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r7, r3 [r1]
; CHECK-NEXT:    dup r1, r7
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r8, r4 [r1]
  %3 = add i128 %1, %0
  ret i128 %3
}

define dso_local signext i8 @add6(i8 noundef signext %0, i8 noundef signext %1) {
; CHECK-LABEL: add6
; CHECK:    add r2, r1
; CHECK-NEXT:    sext.8 r2
  %3 = add i8 %1, %0
  ret i8 %3
}

define dso_local signext i16 @add7(i16 noundef signext %0, i16 noundef signext %1) {
; CHECK-LABEL: add7
; CHECK:    add r2, r1
; CHECK-NEXT:    sext.16 r2
  %3 = add i16 %1, %0
  ret i16 %3
}

define dso_local i32 @add8(i32 noundef %0, i32 noundef %1) {
; CHECK-LABEL: add8
; CHECK:    add r2, r1
  %3 = add nsw i32 %1, %0
  ret i32 %3
}

define dso_local i64 @add9(i64 noundef %0, i64 noundef %1) {
; CHECK-LABEL: add9
; CHECK:    leadisp r6, r6
; CHECK-NEXT:    leascale r6, r5
; CHECK-NEXT:    leaindex r2, r1
; CHECK-NEXT:    leabase r4, r3
  %3 = add nsw i64 %1, %0
  ret i64 %3
}

define dso_local i128 @add10(i128 noundef %0, i128 noundef %1) {
; CHECK-LABEL: add10
; CHECK:    add r5, r1
; CHECK-NEXT:    dup r1, r5
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r6, r2 [r1]
; CHECK-NEXT:    dup r1, r6
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r7, r3 [r1]
; CHECK-NEXT:    dup r1, r7
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r8, r4 [r1]
  %3 = add i128 %1, %0
  ret i128 %3
}

define dso_local i128 @add11(i128 noundef %0, i128 noundef %1) {
; CHECK-LABEL: add11
; CHECK:    add r5, r1
; CHECK-NEXT:    dup r1, r5
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r6, r2 [r1]
; CHECK-NEXT:    dup r1, r6
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r7, r3 [r1]
; CHECK-NEXT:    dup r1, r7
; CHECK-NEXT:    flags r1
; CHECK-NEXT:    adc r8, r4 [r1]
  %3 = add nsw i128 %1, %0
  ret i128 %3
}

define dso_local <8 x i32> @add12(<8 x i32> noundef %0, <8 x i32> noundef %1) {
; CHECK-LABEL: add12
; CHECK:    add r16, r8
; CHECK-NEXT:    add r15, r7
; CHECK-NEXT:    add r14, r6
; CHECK-NEXT:    add r13, r5
; CHECK-NEXT:    add r12, r4
; CHECK-NEXT:    add r11, r3
; CHECK-NEXT:    add r10, r2
; CHECK-NEXT:    add r9, r1
  %3 = add <8 x i32> %1, %0
  ret <8 x i32> %3
}

define dso_local <16 x i32> @add13(<16 x i32> noundef %0, <16 x i32> noundef %1) {
; CHECK-LABEL: add13
; CHECK:    add r32, r16
; CHECK-NEXT:    add r31, r15
; CHECK-NEXT:    add r30, r14
; CHECK-NEXT:    add r29, r13
; CHECK-NEXT:    add r28, r12
; CHECK-NEXT:    add r27, r11
; CHECK-NEXT:    add r26, r10
; CHECK-NEXT:    add r25, r9
; CHECK-NEXT:    add r24, r8
; CHECK-NEXT:    add r23, r7
; CHECK-NEXT:    add r22, r6
; CHECK-NEXT:    add r21, r5
; CHECK-NEXT:    add r20, r4
; CHECK-NEXT:    add r19, r3
; CHECK-NEXT:    add r18, r2
; CHECK-NEXT:    add r17, r1
  %3 = add <16 x i32> %1, %0
  ret <16 x i32> %3
}

define dso_local <32 x i32> @add14(<32 x i32> noundef %0, <32 x i32> noundef %1) {
; CHECK-LABEL: add14
; CHECK:    add r64, r32
; CHECK-NEXT:    add r63, r31
; CHECK-NEXT:    add r62, r30
; CHECK-NEXT:    add r61, r29
; CHECK-NEXT:    add r60, r28
; CHECK-NEXT:    add r59, r27
; CHECK-NEXT:    add r58, r26
; CHECK-NEXT:    add r57, r25
; CHECK-NEXT:    add r56, r24
; CHECK-NEXT:    add r55, r23
; CHECK-NEXT:    add r54, r22
; CHECK-NEXT:    add r53, r21
; CHECK-NEXT:    add r52, r20
; CHECK-NEXT:    add r51, r19
; CHECK-NEXT:    add r50, r18
; CHECK-NEXT:    add r49, r17
; CHECK-NEXT:    add r48, r16
; CHECK-NEXT:    add r47, r15
; CHECK-NEXT:    add r46, r14
; CHECK-NEXT:    add r45, r13
; CHECK-NEXT:    add r44, r12
; CHECK-NEXT:    add r43, r11
; CHECK-NEXT:    add r42, r10
; CHECK-NEXT:    add r41, r9
; CHECK-NEXT:    add r40, r8
; CHECK-NEXT:    add r39, r7
; CHECK-NEXT:    add r38, r6
; CHECK-NEXT:    add r37, r5
; CHECK-NEXT:    add r36, r4
; CHECK-NEXT:    add r35, r3
; CHECK-NEXT:    add r34, r2
; CHECK-NEXT:    add r33, r1
  %3 = add <32 x i32> %1, %0
  ret <32 x i32> %3
}

define dso_local <8 x i32> @add15(<8 x i32> noundef %0, <8 x i32> noundef %1) {
; CHECK-LABEL: add15
; CHECK:    add r16, r8
; CHECK-NEXT:    add r15, r7
; CHECK-NEXT:    add r14, r6
; CHECK-NEXT:    add r13, r5
; CHECK-NEXT:    add r12, r4
; CHECK-NEXT:    add r11, r3
; CHECK-NEXT:    add r10, r2
; CHECK-NEXT:    add r9, r1
  %3 = add <8 x i32> %1, %0
  ret <8 x i32> %3
}

define dso_local <16 x i32> @add16(<16 x i32> noundef %0, <16 x i32> noundef %1) {
; CHECK-LABEL: add16
; CHECK:    add r32, r16
; CHECK-NEXT:    add r31, r15
; CHECK-NEXT:    add r30, r14
; CHECK-NEXT:    add r29, r13
; CHECK-NEXT:    add r28, r12
; CHECK-NEXT:    add r27, r11
; CHECK-NEXT:    add r26, r10
; CHECK-NEXT:    add r25, r9
; CHECK-NEXT:    add r24, r8
; CHECK-NEXT:    add r23, r7
; CHECK-NEXT:    add r22, r6
; CHECK-NEXT:    add r21, r5
; CHECK-NEXT:    add r20, r4
; CHECK-NEXT:    add r19, r3
; CHECK-NEXT:    add r18, r2
; CHECK-NEXT:    add r17, r1
  %3 = add <16 x i32> %1, %0
  ret <16 x i32> %3
}

define dso_local <32 x i32> @add17(<32 x i32> noundef %0, <32 x i32> noundef %1) {
; CHECK-LABEL: add17
; CHECK:    add r64, r32
; CHECK-NEXT:    add r63, r31
; CHECK-NEXT:    add r62, r30
; CHECK-NEXT:    add r61, r29
; CHECK-NEXT:    add r60, r28
; CHECK-NEXT:    add r59, r27
; CHECK-NEXT:    add r58, r26
; CHECK-NEXT:    add r57, r25
; CHECK-NEXT:    add r56, r24
; CHECK-NEXT:    add r55, r23
; CHECK-NEXT:    add r54, r22
; CHECK-NEXT:    add r53, r21
; CHECK-NEXT:    add r52, r20
; CHECK-NEXT:    add r51, r19
; CHECK-NEXT:    add r50, r18
; CHECK-NEXT:    add r49, r17
; CHECK-NEXT:    add r48, r16
; CHECK-NEXT:    add r47, r15
; CHECK-NEXT:    add r46, r14
; CHECK-NEXT:    add r45, r13
; CHECK-NEXT:    add r44, r12
; CHECK-NEXT:    add r43, r11
; CHECK-NEXT:    add r42, r10
; CHECK-NEXT:    add r41, r9
; CHECK-NEXT:    add r40, r8
; CHECK-NEXT:    add r39, r7
; CHECK-NEXT:    add r38, r6
; CHECK-NEXT:    add r37, r5
; CHECK-NEXT:    add r36, r4
; CHECK-NEXT:    add r35, r3
; CHECK-NEXT:    add r34, r2
; CHECK-NEXT:    add r33, r1
  %3 = add <32 x i32> %1, %0
  ret <32 x i32> %3
}
