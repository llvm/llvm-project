; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=armv7a--none-eabi -float-abi soft -mattr=+fp16 < %s | FileCheck %s --check-prefix=CHECK --check-prefix=SOFT
; RUN: llc -mtriple=armv7a--none-eabi -float-abi hard -mattr=+fp16 < %s | FileCheck %s --check-prefix=CHECK --check-prefix=HARD
; RUN: llc -mtriple=armv7a--none-eabi -float-abi soft -mattr=+fullfp16 < %s | FileCheck %s --check-prefix=CHECK --check-prefix=FULL-SOFT
; RUN: llc -mtriple=armv7a--none-eabi -float-abi hard -mattr=+fullfp16 < %s | FileCheck %s --check-prefix=CHECK --check-prefix=FULL-HARD
; RUN: llc -mtriple=armv7aeb--none-eabi -float-abi soft -mattr=+fp16 < %s | FileCheck %s --check-prefix=CHECK --check-prefix=SOFT
; RUN: llc -mtriple=armv7aeb--none-eabi -float-abi hard -mattr=+fp16 < %s | FileCheck %s --check-prefix=CHECK --check-prefix=HARD
; RUN: llc -mtriple=armv7aeb--none-eabi -float-abi soft -mattr=+fullfp16 < %s | FileCheck %s --check-prefix=CHECK --check-prefix=FULL-SOFT
; RUN: llc -mtriple=armv7aeb--none-eabi -float-abi hard -mattr=+fullfp16 < %s | FileCheck %s --check-prefix=CHECK --check-prefix=FULL-HARD

define half @foo(half %a, half %b) {
; SOFT-LABEL: foo:
; SOFT:       @ %bb.0: @ %entry
; SOFT-NEXT:    vmov s0, r0
; SOFT-NEXT:    vmov s2, r1
; SOFT-NEXT:    vcvtb.f32.f16 s0, s0
; SOFT-NEXT:    vcvtb.f32.f16 s2, s2
; SOFT-NEXT:    vadd.f32 s0, s0, s2
; SOFT-NEXT:    vcvtb.f16.f32 s0, s0
; SOFT-NEXT:    vmov r0, s0
; SOFT-NEXT:    bx lr
;
; HARD-LABEL: foo:
; HARD:       @ %bb.0: @ %entry
; HARD-NEXT:    vcvtb.f32.f16 s2, s1
; HARD-NEXT:    vcvtb.f32.f16 s0, s0
; HARD-NEXT:    vadd.f32 s0, s0, s2
; HARD-NEXT:    vcvtb.f16.f32 s0, s0
; HARD-NEXT:    bx lr
;
; FULL-SOFT-LABEL: foo:
; FULL-SOFT:       @ %bb.0: @ %entry
; FULL-SOFT-NEXT:    vmov.f16 s0, r1
; FULL-SOFT-NEXT:    vmov.f16 s2, r0
; FULL-SOFT-NEXT:    vadd.f16 s0, s2, s0
; FULL-SOFT-NEXT:    vmov r0, s0
; FULL-SOFT-NEXT:    bx lr
;
; FULL-HARD-LABEL: foo:
; FULL-HARD:       @ %bb.0: @ %entry
; FULL-HARD-NEXT:    vadd.f16 s0, s0, s1
; FULL-HARD-NEXT:    bx lr
entry:
  %0 = fadd half %a, %b
  ret half %0
}
