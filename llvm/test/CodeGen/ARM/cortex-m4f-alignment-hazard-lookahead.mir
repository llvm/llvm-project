# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -mtriple=thumbv7-apple-darwin -mcpu=cortex-m4 -verify-machineinstrs -run-pass post-RA-hazard-rec -o - %s | FileCheck %s
# RUN: llc -mtriple=thumbv7-apple-darwin -mcpu=cortex-m4 -verify-machineinstrs -run-pass post-RA-hazard-rec -o - %s -cortex-m4-alignment-hazard-rec-max-lookahead=1 -cortex-m4-alignment-hazard-rec-reqd-hazard-count=1 | FileCheck %s --check-prefix=LA1-H1
# RUN: llc -mtriple=thumbv7-apple-darwin -mcpu=cortex-m4 -verify-machineinstrs -run-pass post-RA-hazard-rec -o - %s -cortex-m4-alignment-hazard-rec-max-lookahead=3 -cortex-m4-alignment-hazard-rec-reqd-hazard-count=3 | FileCheck %s --check-prefix=LA3-H3
# RUN: llc -mtriple=thumbv7-apple-darwin -mcpu=cortex-m4 -verify-machineinstrs -run-pass post-RA-hazard-rec -o - %s -cortex-m4-alignment-hazard-rec-max-lookahead=6 -cortex-m4-alignment-hazard-rec-reqd-hazard-count=6 | FileCheck %s --check-prefix=LA6-H6
# RUN: llc -mtriple=thumbv7-apple-darwin -mcpu=cortex-m4 -verify-machineinstrs -run-pass post-RA-hazard-rec -o - %s -cortex-m4-alignment-hazard-rec-max-lookahead=6 -cortex-m4-alignment-hazard-rec-reqd-hazard-count=6 | FileCheck %s --check-prefix=LA6-H3
--- |
  define void @hazard_lookahead_6() {
  entry:
    ret void
  }

  define void @hazard_lookahead_5() {
  entry:
    ret void
  }

  define void @hazard_lookahead_4() {
  entry:
    ret void
  }

  define void @hazard_lookahead_3() {
  entry:
    ret void
  }

  define void @hazard_lookahead_2() {
  entry:
    ret void
  }

  define void @hazard_lookahead_1() {
  entry:
    ret void
  }

  define void @hazard_lookahead_0() {
  entry:
    ret void
  }

...
---
name:            hazard_lookahead_6
alignment:       4
body:             |
  ; CHECK-LABEL: name: hazard_lookahead_6
  ; CHECK: bb.0 (align 4):
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; CHECK-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s8 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA1-H1-LABEL: name: hazard_lookahead_6
  ; LA1-H1: bb.0 (align 4):
  ; LA1-H1-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA1-H1-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s8 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT: bb.1:
  ; LA1-H1-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA3-H3-LABEL: name: hazard_lookahead_6
  ; LA3-H3: bb.0 (align 4):
  ; LA3-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA3-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s8 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT: bb.1:
  ; LA3-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H6-LABEL: name: hazard_lookahead_6
  ; LA6-H6: bb.0 (align 4):
  ; LA6-H6-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA6-H6-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s8 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT: bb.1:
  ; LA6-H6-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H3-LABEL: name: hazard_lookahead_6
  ; LA6-H3: bb.0 (align 4):
  ; LA6-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA6-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s8 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT: bb.1:
  ; LA6-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  bb.0 (align 4):
    successors: %bb.0, %bb.1

    renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14, $noreg
    $s2 = VMOVSR $r1, 14, $noreg
    $s3 = VMOVSR $r1, 14, $noreg
    $s4 = VMOVSR $r1, 14, $noreg
    $s5 = VMOVSR $r1, 14, $noreg
    $s6 = VMOVSR $r1, 14, $noreg
    $s7 = VMOVSR $r1, 14, $noreg
    $s8 = VMOVSR $r1, 14, $noreg

    tBcc %bb.0, 1, killed $cpsr

  bb.1:
    tPOP_RET 14, $noreg, def $r4, def $r6, def $r7, def $pc
...
---
name:            hazard_lookahead_5
alignment:       4
body:             |
  ; CHECK-LABEL: name: hazard_lookahead_5
  ; CHECK: bb.0 (align 4):
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; CHECK-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA1-H1-LABEL: name: hazard_lookahead_5
  ; LA1-H1: bb.0 (align 4):
  ; LA1-H1-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA1-H1-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT: bb.1:
  ; LA1-H1-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA3-H3-LABEL: name: hazard_lookahead_5
  ; LA3-H3: bb.0 (align 4):
  ; LA3-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA3-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT: bb.1:
  ; LA3-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H6-LABEL: name: hazard_lookahead_5
  ; LA6-H6: bb.0 (align 4):
  ; LA6-H6-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA6-H6-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT: bb.1:
  ; LA6-H6-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H3-LABEL: name: hazard_lookahead_5
  ; LA6-H3: bb.0 (align 4):
  ; LA6-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA6-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s7 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT: bb.1:
  ; LA6-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  bb.0 (align 4):
    successors: %bb.0, %bb.1

    renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14, $noreg
    $s2 = VMOVSR $r1, 14, $noreg
    $s3 = VMOVSR $r1, 14, $noreg
    $s4 = VMOVSR $r1, 14, $noreg
    $s5 = VMOVSR $r1, 14, $noreg
    $s6 = VMOVSR $r1, 14, $noreg
    $s7 = VMOVSR $r1, 14, $noreg

    tBcc %bb.0, 1, killed $cpsr

  bb.1:
    tPOP_RET 14, $noreg, def $r4, def $r6, def $r7, def $pc
...
---
name:            hazard_lookahead_4
alignment:       4
body:             |
  ; CHECK-LABEL: name: hazard_lookahead_4
  ; CHECK: bb.0 (align 4):
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA1-H1-LABEL: name: hazard_lookahead_4
  ; LA1-H1: bb.0 (align 4):
  ; LA1-H1-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA1-H1-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT: bb.1:
  ; LA1-H1-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA3-H3-LABEL: name: hazard_lookahead_4
  ; LA3-H3: bb.0 (align 4):
  ; LA3-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA3-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT: bb.1:
  ; LA3-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H6-LABEL: name: hazard_lookahead_4
  ; LA6-H6: bb.0 (align 4):
  ; LA6-H6-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT: bb.1:
  ; LA6-H6-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H3-LABEL: name: hazard_lookahead_4
  ; LA6-H3: bb.0 (align 4):
  ; LA6-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s6 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT: bb.1:
  ; LA6-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  bb.0 (align 4):
    successors: %bb.0, %bb.1

    renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14, $noreg
    $s2 = VMOVSR $r1, 14, $noreg
    $s3 = VMOVSR $r1, 14, $noreg
    $s4 = VMOVSR $r1, 14, $noreg
    $s5 = VMOVSR $r1, 14, $noreg
    $s6 = VMOVSR $r1, 14, $noreg

    tBcc %bb.0, 1, killed $cpsr

  bb.1:
    tPOP_RET 14, $noreg, def $r4, def $r6, def $r7, def $pc
...
---
name:            hazard_lookahead_3
alignment:       4
body:             |
  ; CHECK-LABEL: name: hazard_lookahead_3
  ; CHECK: bb.0 (align 4):
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA1-H1-LABEL: name: hazard_lookahead_3
  ; LA1-H1: bb.0 (align 4):
  ; LA1-H1-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA1-H1-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT: bb.1:
  ; LA1-H1-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA3-H3-LABEL: name: hazard_lookahead_3
  ; LA3-H3: bb.0 (align 4):
  ; LA3-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA3-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT: bb.1:
  ; LA3-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H6-LABEL: name: hazard_lookahead_3
  ; LA6-H6: bb.0 (align 4):
  ; LA6-H6-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT: bb.1:
  ; LA6-H6-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H3-LABEL: name: hazard_lookahead_3
  ; LA6-H3: bb.0 (align 4):
  ; LA6-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s5 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT: bb.1:
  ; LA6-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  bb.0 (align 4):
    successors: %bb.0, %bb.1

    renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14, $noreg
    $s2 = VMOVSR $r1, 14, $noreg
    $s3 = VMOVSR $r1, 14, $noreg
    $s4 = VMOVSR $r1, 14, $noreg
    $s5 = VMOVSR $r1, 14, $noreg

    tBcc %bb.0, 1, killed $cpsr

  bb.1:
    tPOP_RET 14, $noreg, def $r4, def $r6, def $r7, def $pc
...
---
name:            hazard_lookahead_2
alignment:       4
body:             |
  ; CHECK-LABEL: name: hazard_lookahead_2
  ; CHECK: bb.0 (align 4):
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA1-H1-LABEL: name: hazard_lookahead_2
  ; LA1-H1: bb.0 (align 4):
  ; LA1-H1-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA1-H1-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT: bb.1:
  ; LA1-H1-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA3-H3-LABEL: name: hazard_lookahead_2
  ; LA3-H3: bb.0 (align 4):
  ; LA3-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA3-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT: bb.1:
  ; LA3-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H6-LABEL: name: hazard_lookahead_2
  ; LA6-H6: bb.0 (align 4):
  ; LA6-H6-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT: bb.1:
  ; LA6-H6-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H3-LABEL: name: hazard_lookahead_2
  ; LA6-H3: bb.0 (align 4):
  ; LA6-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s4 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT: bb.1:
  ; LA6-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  bb.0 (align 4):
    successors: %bb.0, %bb.1

    renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14, $noreg
    $s2 = VMOVSR $r1, 14, $noreg
    $s3 = VMOVSR $r1, 14, $noreg
    $s4 = VMOVSR $r1, 14, $noreg

    tBcc %bb.0, 1, killed $cpsr

  bb.1:
    tPOP_RET 14, $noreg, def $r4, def $r6, def $r7, def $pc
...
---
name:            hazard_lookahead_1
alignment:       4
body:             |
  ; CHECK-LABEL: name: hazard_lookahead_1
  ; CHECK: bb.0 (align 4):
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA1-H1-LABEL: name: hazard_lookahead_1
  ; LA1-H1: bb.0 (align 4):
  ; LA1-H1-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA1-H1-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT: bb.1:
  ; LA1-H1-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA3-H3-LABEL: name: hazard_lookahead_1
  ; LA3-H3: bb.0 (align 4):
  ; LA3-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT: bb.1:
  ; LA3-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H6-LABEL: name: hazard_lookahead_1
  ; LA6-H6: bb.0 (align 4):
  ; LA6-H6-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT: bb.1:
  ; LA6-H6-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H3-LABEL: name: hazard_lookahead_1
  ; LA6-H3: bb.0 (align 4):
  ; LA6-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s3 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT: bb.1:
  ; LA6-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  bb.0 (align 4):
    successors: %bb.0, %bb.1

    renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14, $noreg
    $s2 = VMOVSR $r1, 14, $noreg
    $s3 = VMOVSR $r1, 14, $noreg

    tBcc %bb.0, 1, killed $cpsr

  bb.1:
    tPOP_RET 14, $noreg, def $r4, def $r6, def $r7, def $pc
...
---
name:            hazard_lookahead_0
alignment:       4
body:             |
  ; CHECK-LABEL: name: hazard_lookahead_0
  ; CHECK: bb.0 (align 4):
  ; CHECK-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; CHECK-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA1-H1-LABEL: name: hazard_lookahead_0
  ; LA1-H1: bb.0 (align 4):
  ; LA1-H1-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tHINT 0, 14 /* CC::al */, 0
  ; LA1-H1-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA1-H1-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA1-H1-NEXT: {{  $}}
  ; LA1-H1-NEXT: bb.1:
  ; LA1-H1-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA3-H3-LABEL: name: hazard_lookahead_0
  ; LA3-H3: bb.0 (align 4):
  ; LA3-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA3-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA3-H3-NEXT: {{  $}}
  ; LA3-H3-NEXT: bb.1:
  ; LA3-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H6-LABEL: name: hazard_lookahead_0
  ; LA6-H6: bb.0 (align 4):
  ; LA6-H6-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H6-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H6-NEXT: {{  $}}
  ; LA6-H6-NEXT: bb.1:
  ; LA6-H6-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  ;
  ; LA6-H3-LABEL: name: hazard_lookahead_0
  ; LA6-H3: bb.0 (align 4):
  ; LA6-H3-NEXT:   successors: %bb.0(0x40000000), %bb.1(0x40000000)
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT:   renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   $s2 = VMOVSR $r1, 14 /* CC::al */, $noreg
  ; LA6-H3-NEXT:   tBcc %bb.0, 1 /* CC::ne */, killed $cpsr
  ; LA6-H3-NEXT: {{  $}}
  ; LA6-H3-NEXT: bb.1:
  ; LA6-H3-NEXT:   tPOP_RET 14 /* CC::al */, $noreg, def $r4, def $r6, def $r7, def $pc
  bb.0 (align 4):
    successors: %bb.0, %bb.1

    renamable $r2, dead $cpsr = tLSRri renamable $r1, 1, 14, $noreg
    $s2 = VMOVSR $r1, 14, $noreg

    tBcc %bb.0, 1, killed $cpsr

  bb.1:
    tPOP_RET 14, $noreg, def $r4, def $r6, def $r7, def $pc
...
