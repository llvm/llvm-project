; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=arm-eabi -mattr=+vfp2 -global-isel=1 --verify-machineinstrs %s -o - | FileCheck %s

declare i32 @llvm.get.fpenv.i32()
declare void @llvm.set.fpenv.i32(i32)
declare void @llvm.reset.fpenv()

define i32 @func_get_fpenv() {
; CHECK-LABEL: func_get_fpenv:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    vmrs r0, fpscr
; CHECK-NEXT:    mov pc, lr
entry:
  %fpenv = call i32 @llvm.get.fpenv.i32()
  ret i32 %fpenv
}

define i32 @func_get_fpenv_soft() #0 {
; CHECK-LABEL: func_get_fpenv_soft:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    .save {r4, lr}
; CHECK-NEXT:    push {r4, lr}
; CHECK-NEXT:    .pad #8
; CHECK-NEXT:    sub sp, sp, #8
; CHECK-NEXT:    add r4, sp, #4
; CHECK-NEXT:    mov r0, r4
; CHECK-NEXT:    bl fegetenv
; CHECK-NEXT:    ldr r0, [r4]
; CHECK-NEXT:    add sp, sp, #8
; CHECK-NEXT:    pop {r4, lr}
; CHECK-NEXT:    mov pc, lr
entry:
  %fpenv = call i32 @llvm.get.fpenv.i32()
  ret i32 %fpenv
}

define void @func_set_fpenv(i32 %fpenv) {
; CHECK-LABEL: func_set_fpenv:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    vmsr fpscr, r0
; CHECK-NEXT:    mov pc, lr
entry:
  call void @llvm.set.fpenv.i32(i32 %fpenv)
  ret void
}

define void @func_set_fpenv_soft(i32 %fpenv) #0 {
; CHECK-LABEL: func_set_fpenv_soft:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    .save {r11, lr}
; CHECK-NEXT:    push {r11, lr}
; CHECK-NEXT:    .pad #8
; CHECK-NEXT:    sub sp, sp, #8
; CHECK-NEXT:    add r1, sp, #4
; CHECK-NEXT:    str r0, [r1]
; CHECK-NEXT:    mov r0, r1
; CHECK-NEXT:    bl fesetenv
; CHECK-NEXT:    add sp, sp, #8
; CHECK-NEXT:    pop {r11, lr}
; CHECK-NEXT:    mov pc, lr
entry:
  call void @llvm.set.fpenv.i32(i32 %fpenv)
  ret void
}

define void @func_reset() {
; CHECK-LABEL: func_reset:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    mov r0, #0
; CHECK-NEXT:    vmsr fpscr, r0
; CHECK-NEXT:    mov pc, lr
entry:
  call void @llvm.reset.fpenv()
  ret void
}

define void @func_reset_soft() #0 {
; CHECK-LABEL: func_reset_soft:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    .save {r11, lr}
; CHECK-NEXT:    push {r11, lr}
; CHECK-NEXT:    mvn r0, #0
; CHECK-NEXT:    bl fesetenv
; CHECK-NEXT:    pop {r11, lr}
; CHECK-NEXT:    mov pc, lr
entry:
  call void @llvm.reset.fpenv()
  ret void
}

attributes #0 = { nounwind "use-soft-float"="true" }

