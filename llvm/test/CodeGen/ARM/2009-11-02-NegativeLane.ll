; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mcpu=cortex-a8 -arm-atomic-cfg-tidy=0 < %s | FileCheck %s
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
target triple = "armv7-eabi"

define arm_aapcs_vfpcc void @foo(ptr nocapture %pBuffer, i32 %numItems) nounwind {
; CHECK-LABEL: foo:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    mov r0, #0
; CHECK-NEXT:    cmp r0, #0
; CHECK-NEXT:    bxne lr
; CHECK-NEXT:  .LBB0_1: @ %bb.preheader
; CHECK-NEXT:    ldrh r0, [r0]
; CHECK-NEXT:    vdup.16 q8, r0
; CHECK-NEXT:    vmov.16 d16[2], r0
; CHECK-NEXT:    vmul.i16 q8, q8, q8
; CHECK-NEXT:    vst1.16 {d16[2]}, [r0:16]
; CHECK-NEXT:    bx lr
entry:
  br i1 undef, label %return, label %bb

bb:                                               ; preds = %bb, %entry
  %0 = load i16, ptr undef, align 2
  %1 = insertelement <8 x i16> undef, i16 %0, i32 2
  %2 = insertelement <8 x i16> %1, i16 undef, i32 3
  %3 = mul <8 x i16> %2, %2
  %4 = extractelement <8 x i16> %3, i32 2
  store i16 %4, ptr undef, align 2
  br i1 undef, label %return, label %bb

return:                                           ; preds = %bb, %entry
  ret void
}
