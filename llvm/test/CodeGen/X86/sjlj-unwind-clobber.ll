; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=x86_64 -exception-model=sjlj -o - %s | FileCheck %s

declare dso_local i32 @__gxx_personality_sj0(...)
declare dso_local preserve_allcc void @foo(ptr)

define void @test() personality ptr @__gxx_personality_sj0 {
; CHECK-LABEL: test:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rbp
; CHECK-NEXT:    movq %rsp, %rbp
; CHECK-NEXT:    pushq %r15
; CHECK-NEXT:    pushq %r14
; CHECK-NEXT:    pushq %r13
; CHECK-NEXT:    pushq %r12
; CHECK-NEXT:    pushq %rbx
; CHECK-NEXT:    subq $104, %rsp
; CHECK-NEXT:    movq $__gxx_personality_sj0, -104(%rbp)
; CHECK-NEXT:    movq $GCC_except_table0, -96(%rbp)
; CHECK-NEXT:    movq %rbp, -88(%rbp)
; CHECK-NEXT:    movq %rsp, -72(%rbp)
; CHECK-NEXT:    movq $.LBB0_3, -80(%rbp)
; CHECK-NEXT:    leaq -136(%rbp), %rdi
; CHECK-NEXT:    callq _Unwind_SjLj_Register@PLT
; CHECK-NEXT:    leaq -44(%rbp), %rdi
; CHECK-NEXT:    leaq .LJTI0_0(%rip), %rax
; CHECK-NEXT:  .LBB0_1: # %while.cond
; CHECK-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    movl $1, -128(%rbp)
; CHECK-NEXT:  .Ltmp0:
; CHECK-NEXT:    callq foo
; CHECK-NEXT:  .Ltmp1:
; CHECK-NEXT:    jmp .LBB0_2
; CHECK-NEXT:  .LBB0_3: # in Loop: Header=BB0_1 Depth=1
; CHECK-NEXT:    movl -128(%rbp), %ecx
; CHECK-NEXT:    cmpl $1, %ecx
; CHECK-NEXT:    jae .LBB0_5
; CHECK-NEXT:  # %bb.4: # in Loop: Header=BB0_1 Depth=1
; CHECK-NEXT:    jmpq *(%rax,%rcx,8)
; CHECK-NEXT:  .LBB0_6: # %lpad
; CHECK-NEXT:    # in Loop: Header=BB0_1 Depth=1
; CHECK-NEXT:  .Ltmp2:
; CHECK-NEXT:    movl -124(%rbp), %ecx
; CHECK-NEXT:    movl -120(%rbp), %ecx
; CHECK-NEXT:    jmp .LBB0_1
; CHECK-NEXT:  .LBB0_2: # %while.end
; CHECK-NEXT:    leaq -136(%rbp), %rdi
; CHECK-NEXT:    callq _Unwind_SjLj_Unregister@PLT
; CHECK-NEXT:    addq $104, %rsp
; CHECK-NEXT:    popq %rbx
; CHECK-NEXT:    popq %r12
; CHECK-NEXT:    popq %r13
; CHECK-NEXT:    popq %r14
; CHECK-NEXT:    popq %r15
; CHECK-NEXT:    popq %rbp
; CHECK-NEXT:    retq
; CHECK-NEXT:  .LBB0_5:
; CHECK-NEXT:    ud2
entry:
  %ptr = alloca i32, align 4
  br label %while.cond

while.cond:
  invoke preserve_allcc void @foo(ptr %ptr)
          to label %while.end unwind label %lpad

lpad:
  %lp = landingpad { ptr, i32 }
          catch ptr null
  br label %while.cond

while.end:
  ret void
}
