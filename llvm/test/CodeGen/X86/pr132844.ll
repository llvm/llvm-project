; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -mtriple=x86_64-- -mcpu=x86-64-v4 | FileCheck %s

define  { ptr, i8 } @PR132844(<4 x ptr> %0, <4 x ptr> %1) {
; CHECK-LABEL: PR132844:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vextracti128 $1, %ymm0, %xmm2
; CHECK-NEXT:    vinserti128 $1, %xmm0, %ymm1, %ymm0
; CHECK-NEXT:    movb $10, %al
; CHECK-NEXT:    kmovd %eax, %k1
; CHECK-NEXT:    vinserti64x2 $1, 16, %ymm2, %ymm0 {%k1}
; CHECK-NEXT:    vmovdqu %ymm0, {{[0-9]+}}(%rsp)
; CHECK-NEXT:    xorl %eax, %eax
; CHECK-NEXT:    xorl %edx, %edx
; CHECK-NEXT:    vzeroupper
; CHECK-NEXT:    retq
  %3 = alloca [35 x ptr], i32 0, align 16
  %4 = load <4 x ptr>, ptr null, align 8
  %5 = getelementptr i8, ptr %3, i64 216
  %6 = extractelement <4 x ptr> %4, i64 3
  store ptr %6, ptr %5, align 8
  %7 = getelementptr i8, ptr %3, i64 208
  %8 = extractelement <4 x ptr> %0, i64 0
  store ptr %8, ptr %7, align 8
  %9 = getelementptr i8, ptr %3, i64 200
  %10 = extractelement <4 x ptr> %0, i64 3
  store ptr %10, ptr %9, align 8
  %11 = getelementptr i8, ptr %3, i64 192
  %12 = extractelement <4 x ptr> %1, i64 0
  store ptr %12, ptr %11, align 8
  ret { ptr, i8 } zeroinitializer
}
