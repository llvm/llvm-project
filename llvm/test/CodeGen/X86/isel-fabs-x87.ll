; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -mtriple=x86_64-- | FileCheck %s --check-prefixes=SDAG-X64
; RUN: llc < %s -mtriple=x86_64-- -fast-isel -fast-isel-abort=1 | FileCheck %s --check-prefixes=FASTISEL-X64
; RUN: llc < %s -mtriple=x86_64-- -global-isel -global-isel-abort=1 | FileCheck %s --check-prefixes=GISEL-X64
; RUN: llc < %s -mtriple=i686-- -mattr=+x87,-sse2,-sse | FileCheck %s --check-prefixes=X86,SDAG-X86
; RUN: llc < %s -mtriple=i686-- -mattr=+x87,-sse2,-sse -fast-isel -fast-isel-abort=1 | FileCheck %s --check-prefixes=X86,FASTISEL-X86
; RUN: llc < %s -mtriple=i686-- -mattr=+x87,-sse2,-sse -global-isel -global-isel-abort=1 | FileCheck %s --check-prefixes=X86,GISEL-X86

define x86_fp80 @test_x86_fp80_abs(x86_fp80 %arg) {
; SDAG-X64-LABEL: test_x86_fp80_abs:
; SDAG-X64:       # %bb.0:
; SDAG-X64-NEXT:    fldt {{[0-9]+}}(%rsp)
; SDAG-X64-NEXT:    fabs
; SDAG-X64-NEXT:    retq
;
; FASTISEL-X64-LABEL: test_x86_fp80_abs:
; FASTISEL-X64:       # %bb.0:
; FASTISEL-X64-NEXT:    fldt {{[0-9]+}}(%rsp)
; FASTISEL-X64-NEXT:    fabs
; FASTISEL-X64-NEXT:    retq
;
; X86-LABEL: test_x86_fp80_abs:
; X86:       # %bb.0:
; X86-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-NEXT:    fabs
; X86-NEXT:    retl
  %abs = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %arg)
  ret x86_fp80 %abs
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; FASTISEL-X86: {{.*}}
; GISEL-X86: {{.*}}
; SDAG-X86: {{.*}}
