; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=x86_64-windows-gnu %s -o - | FileCheck %s

define i32 @foobar() gc "statepoint-example" personality ptr @__gxx_personality_seh0 {
; CHECK-LABEL: foobar:
; CHECK:       # %bb.0:
; CHECK-NEXT:    subq $40, %rsp
; CHECK-NEXT:    .seh_stackalloc 40
; CHECK-NEXT:    .seh_endprologue
; CHECK-NEXT:    callq bar
; CHECK-NEXT:  .Ltmp0:
; CHECK-NEXT:    nop
; CHECK-NEXT:    addq $40, %rsp
; CHECK-NEXT:    retq
; CHECK-NEXT:    .seh_endproc
    %statepoint_token = call token (i64, i32, ptr, i32, i32, ...) @llvm.experimental.gc.statepoint.p0(i64 2882400000, i32 0, ptr elementtype(i32 ()) @bar, i32 0, i32 0, i32 0, i32 0)
    %res = call i32 @llvm.experimental.gc.result.i32(token %statepoint_token)
    ret i32 %res
}

declare i32 @bar()

declare dso_local i32 @__gxx_personality_seh0(...)

declare token @llvm.experimental.gc.statepoint.p0(i64 immarg, i32 immarg, ptr, i32 immarg, i32 immarg, ...)
declare i32 @llvm.experimental.gc.result.i32(token)
