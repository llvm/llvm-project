; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown -mattr=+ppx | FileCheck %s --check-prefix=CHECK
; RUN: llc < %s -mtriple=x86_64-unknown -mattr=+ppx -frame-pointer=all | FileCheck %s --check-prefix=FRAME
; RUN: llc < %s -mtriple=x86_64-unknown -mattr=+ppx -frame-pointer=all --enable-spill-fpbp=true | FileCheck %s --check-prefix=FRAME-SPILL

define void @csr2() nounwind {
; CHECK-LABEL: csr2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushp %rbp
; CHECK-NEXT:    pushp %r15
; CHECK-NEXT:    #APP
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    popp %r15
; CHECK-NEXT:    popp %rbp
; CHECK-NEXT:    retq
;
; FRAME-LABEL: csr2:
; FRAME:       # %bb.0: # %entry
; FRAME-NEXT:    pushp %rbp
; FRAME-NEXT:    movq %rsp, %rbp
; FRAME-NEXT:    pushp %r15
; FRAME-NEXT:    #APP
; FRAME-NEXT:    #NO_APP
; FRAME-NEXT:    popp %r15
; FRAME-NEXT:    popp %rbp
; FRAME-NEXT:    retq
;
; FRAME-SPILL-LABEL: csr2:
; FRAME-SPILL:       # %bb.0: # %entry
; FRAME-SPILL-NEXT:    pushp %rbp
; FRAME-SPILL-NEXT:    movq %rsp, %rbp
; FRAME-SPILL-NEXT:    pushp %r15
; FRAME-SPILL-NEXT:    pushp %rbp
; FRAME-SPILL-NEXT:    pushq %rax
; FRAME-SPILL-NEXT:    #APP
; FRAME-SPILL-NEXT:    #NO_APP
; FRAME-SPILL-NEXT:    popq %rax
; FRAME-SPILL-NEXT:    popp %rbp
; FRAME-SPILL-NEXT:    popp %r15
; FRAME-SPILL-NEXT:    popp %rbp
; FRAME-SPILL-NEXT:    retq
entry:
  tail call void asm sideeffect "", "~{rbp},~{r15},~{dirflag},~{fpsr},~{flags}"()
  ret void
}
