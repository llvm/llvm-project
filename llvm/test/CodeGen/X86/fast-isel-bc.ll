; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -O0 -mtriple=i686-apple-darwin9.8 -mattr=+mmx,+sse2 | FileCheck %s --check-prefixes=X86
; RUN: llc < %s -O0 -mtriple=x86_64-apple-darwin9.8 -mattr=+mmx,+sse2 | FileCheck %s --check-prefixes=X64

; PR4684

declare void @func2(<1 x i64>)

; This isn't spectacular, but it's MMX code at -O0...

define void @func1() nounwind {
; X86-LABEL: func1:
; X86:       ## %bb.0:
; X86-NEXT:    subl $12, %esp
; X86-NEXT:    movl $2, %edx
; X86-NEXT:    xorl %ecx, %ecx
; X86-NEXT:    movl %esp, %eax
; X86-NEXT:    movl %edx, 4(%eax)
; X86-NEXT:    movl %ecx, (%eax)
; X86-NEXT:    calll _func2
; X86-NEXT:    addl $12, %esp
; X86-NEXT:    retl
;
; X64-LABEL: func1:
; X64:       ## %bb.0:
; X64-NEXT:    pushq %rax
; X64-NEXT:    movabsq $8589934592, %rdi ## imm = 0x200000000
; X64-NEXT:    callq _func2
; X64-NEXT:    popq %rax
; X64-NEXT:    retq
  %tmp0 = bitcast <2 x i32> <i32 0, i32 2> to <1 x i64>
  call void @func2(<1 x i64> %tmp0)
  ret void
}
