; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -mtriple=i686-- | FileCheck %s --check-prefixes=X86
; RUN: llc < %s -mtriple=x86_64-- | FileCheck %s --check-prefixes=X64

define fastcc i32* @force.ri32(i32* %x) nounwind {
; X86-LABEL: force.ri32:
; X86:       # %bb.0: # %entry
; X86-NEXT:    testl %ecx, %ecx
; X86-NEXT:    je .LBB0_2
; X86-NEXT:  # %bb.1: # %Limpl0.pre
; X86-NEXT:    movl %ecx, %eax
; X86-NEXT:    retl
; X86-NEXT:  .LBB0_2: # %Limpl1.pre
; X86-NEXT:    calll pr.error@PLT
;
; X64-LABEL: force.ri32:
; X64:       # %bb.0: # %entry
; X64-NEXT:    testq %rdi, %rdi
; X64-NEXT:    je .LBB0_2
; X64-NEXT:  # %bb.1: # %Limpl0.pre
; X64-NEXT:    movq %rdi, %rax
; X64-NEXT:    retq
; X64-NEXT:  .LBB0_2: # %Limpl1.pre
; X64-NEXT:    pushq %rax
; X64-NEXT:    callq pr.error@PLT
entry:
  %nz = icmp eq i32* %x, null
  br i1 %nz, label %Limpl1.pre, label %Limpl0.pre

Limpl0.pre:                                       ; preds = %entry
  ret i32* %x

Limpl1.pre:                                       ; preds = %entry
  tail call fastcc void @pr.error() noreturn nounwind
  unreachable
}

declare fastcc void @pr.error() noreturn nounwind
