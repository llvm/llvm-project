# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=i386-linux-gnu -run-pass=legalizer %s -o - | FileCheck %s --check-prefixes=CHECK

--- |
  define void @test_gep_i32c(ptr %addr) {
    %arrayidx = getelementptr i32, ptr undef, i32 5
    ret void
  }
  define void @test_gep_i32(ptr %addr, i32 %ofs) {
    %arrayidx = getelementptr i32, ptr undef, i32 %ofs
    ret void
  }
...
---
name:            test_gep_i32c
legalized:       false
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
body:             |
  bb.1 (%ir-block.0):
    ; CHECK-LABEL: name: test_gep_i32c
    ; CHECK: [[DEF:%[0-9]+]]:_(p0) = IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[DEF]], [[C]](s32)
    ; CHECK-NEXT: G_STORE [[PTR_ADD]](p0), [[DEF]](p0) :: (store (p0) into %ir.addr)
    ; CHECK-NEXT: RET 0
    %0(p0) = IMPLICIT_DEF
    %1(s32) = G_CONSTANT i32 20
    %2(p0) = G_PTR_ADD %0, %1(s32)
    G_STORE %2, %0 :: (store (p0) into %ir.addr)
    RET 0
...
---
name:            test_gep_i32
legalized:       false
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
body:             |
  bb.1 (%ir-block.0):
    ; CHECK-LABEL: name: test_gep_i32
    ; CHECK: [[DEF:%[0-9]+]]:_(p0) = IMPLICIT_DEF
    ; CHECK-NEXT: [[DEF1:%[0-9]+]]:_(s32) = IMPLICIT_DEF
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[DEF]], [[DEF1]](s32)
    ; CHECK-NEXT: G_STORE [[PTR_ADD]](p0), [[DEF]](p0) :: (store (p0) into %ir.addr)
    ; CHECK-NEXT: RET 0
    %0(p0) = IMPLICIT_DEF
    %1(s32) = IMPLICIT_DEF
    %2(p0) = G_PTR_ADD %0, %1(s32)
    G_STORE %2, %0 :: (store (p0) into %ir.addr)
    RET 0
...
