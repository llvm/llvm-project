; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -mtriple=x86_64-- | FileCheck %s

define i32 @PR120906(ptr %p) {
; CHECK-LABEL: PR120906:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movl $564341309, (%rdi) # imm = 0x21A32A3D
; CHECK-NEXT:    movdqa {{.*#+}} xmm0 = [11,0,11,0,11,0,11,0]
; CHECK-NEXT:    por {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm0
; CHECK-NEXT:    pshufd {{.*#+}} xmm1 = xmm0[1,1,1,1]
; CHECK-NEXT:    por %xmm0, %xmm1
; CHECK-NEXT:    movd %xmm1, %eax
; CHECK-NEXT:    retq
  store i32 564341309, ptr %p, align 4
  %load = load i32, ptr %p, align 4
  %broadcast.splatinsert.1 = insertelement <4 x i32> zeroinitializer, i32 %load, i64 0
  %broadcast.splat.1 = shufflevector <4 x i32> %broadcast.splatinsert.1, <4 x i32> zeroinitializer, <4 x i32> zeroinitializer
  %icmp = icmp ugt <4 x i32> %broadcast.splat.1, splat (i32 -9)
  %zext8 = zext <4 x i1> %icmp to <4 x i8>
  %shl = shl <4 x i8> splat (i8 11), %zext8
  %or = or <4 x i8> %shl, splat (i8 11)
  %zext32 = zext <4 x i8> %or to <4 x i32>
  %rdx = tail call i32 @llvm.vector.reduce.or.v4i32(<4 x i32> %zext32)
  ret i32 %rdx
}
