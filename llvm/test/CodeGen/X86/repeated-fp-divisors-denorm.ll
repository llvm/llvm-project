; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=x86_64 < %s | FileCheck %s

; Negative test: repeated FP divisor transform should bail out when the rewrite
; would introduce infinities because of subnormal constant divisors.
define void @two_denorm_fdivs(float %a0, float %a1, float %a2, ptr %res) {
; CHECK-LABEL: two_denorm_fdivs:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    movss {{.*#+}} xmm0 = [1.95915678E-39,0.0E+0,0.0E+0,0.0E+0]
; CHECK-NEXT:    divss %xmm0, %xmm1
; CHECK-NEXT:    movss %xmm1, (%rdi)
; CHECK-NEXT:    divss %xmm0, %xmm2
; CHECK-NEXT:    movss %xmm2, 4(%rdi)
; CHECK-NEXT:    retq
entry:
  %div0 = fdiv arcp float %a1, 0x37E5555500000000
  store float %div0, ptr %res
  %ptr1 = getelementptr inbounds float, ptr %res, i64 1
  %div1 = fdiv arcp float %a2, 0x37E5555500000000
  store float %div1, ptr %ptr1
  ret void
}
