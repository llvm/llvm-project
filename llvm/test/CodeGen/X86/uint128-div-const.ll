; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-linux-gnu -O2 | FileCheck %s

define i128 @div_by_7(i128 %x) {
; CHECK-LABEL: div_by_7:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    movq %rsi, %rax
; CHECK-NEXT:    shldq $4, %rdi, %rax
; CHECK-NEXT:    movq %rdi, %rcx
; CHECK-NEXT:    shrq $30, %rcx
; CHECK-NEXT:    addl %edi, %ecx
; CHECK-NEXT:    movl %ecx, %edx
; CHECK-NEXT:    andl $1073741823, %edx # imm = 0x3FFFFFFF
; CHECK-NEXT:    movl %edi, %r8d
; CHECK-NEXT:    andl $1073741823, %r8d # imm = 0x3FFFFFFF
; CHECK-NEXT:    cmpl %r8d, %edx
; CHECK-NEXT:    movl %ecx, %r8d
; CHECK-NEXT:    adcl %eax, %r8d
; CHECK-NEXT:    addl %eax, %ecx
; CHECK-NEXT:    andl $1073741823, %ecx # imm = 0x3FFFFFFF
; CHECK-NEXT:    movq %rsi, %rax
; CHECK-NEXT:    shrq $26, %rax
; CHECK-NEXT:    cmpl %edx, %ecx
; CHECK-NEXT:    movl %r8d, %edx
; CHECK-NEXT:    adcl %eax, %edx
; CHECK-NEXT:    movl %r8d, %r9d
; CHECK-NEXT:    andl $1073741823, %r9d # imm = 0x3FFFFFFF
; CHECK-NEXT:    addl %eax, %r8d
; CHECK-NEXT:    andl $1073741823, %r8d # imm = 0x3FFFFFFF
; CHECK-NEXT:    movq %rsi, %rcx
; CHECK-NEXT:    shrq $56, %rcx
; CHECK-NEXT:    cmpl %r9d, %r8d
; CHECK-NEXT:    adcl %edx, %ecx
; CHECK-NEXT:    andl $1073741823, %ecx # imm = 0x3FFFFFFF
; CHECK-NEXT:    movabsq $2635249153387078803, %rdx # imm = 0x2492492492492493
; CHECK-NEXT:    movq %rcx, %rax
; CHECK-NEXT:    mulq %rdx
; CHECK-NEXT:    leal (,%rdx,8), %eax
; CHECK-NEXT:    subq %rax, %rdx
; CHECK-NEXT:    addq %rcx, %rdx
; CHECK-NEXT:    subq %rdx, %rdi
; CHECK-NEXT:    sbbq $0, %rsi
; CHECK-NEXT:    movabsq $-5270498306774157605, %rcx # imm = 0xB6DB6DB6DB6DB6DB
; CHECK-NEXT:    imulq %rdi, %rcx
; CHECK-NEXT:    movabsq $7905747460161236407, %r8 # imm = 0x6DB6DB6DB6DB6DB7
; CHECK-NEXT:    movq %rdi, %rax
; CHECK-NEXT:    mulq %r8
; CHECK-NEXT:    addq %rcx, %rdx
; CHECK-NEXT:    imulq %rsi, %r8
; CHECK-NEXT:    addq %r8, %rdx
; CHECK-NEXT:    retq
entry:
  %div = udiv i128 %x, 7
  ret i128 %div
}

define i128 @div_by_9(i128 %x) {
; CHECK-LABEL: div_by_9:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    movq %rsi, %rax
; CHECK-NEXT:    shldq $4, %rdi, %rax
; CHECK-NEXT:    movq %rdi, %rcx
; CHECK-NEXT:    shrq $30, %rcx
; CHECK-NEXT:    addl %edi, %ecx
; CHECK-NEXT:    movl %ecx, %edx
; CHECK-NEXT:    andl $1073741823, %edx # imm = 0x3FFFFFFF
; CHECK-NEXT:    movl %edi, %r8d
; CHECK-NEXT:    andl $1073741823, %r8d # imm = 0x3FFFFFFF
; CHECK-NEXT:    cmpl %r8d, %edx
; CHECK-NEXT:    movl %ecx, %r8d
; CHECK-NEXT:    adcl %eax, %r8d
; CHECK-NEXT:    addl %eax, %ecx
; CHECK-NEXT:    andl $1073741823, %ecx # imm = 0x3FFFFFFF
; CHECK-NEXT:    movq %rsi, %rax
; CHECK-NEXT:    shrq $26, %rax
; CHECK-NEXT:    cmpl %edx, %ecx
; CHECK-NEXT:    movl %r8d, %edx
; CHECK-NEXT:    adcl %eax, %edx
; CHECK-NEXT:    movl %r8d, %r9d
; CHECK-NEXT:    andl $1073741823, %r9d # imm = 0x3FFFFFFF
; CHECK-NEXT:    addl %eax, %r8d
; CHECK-NEXT:    andl $1073741823, %r8d # imm = 0x3FFFFFFF
; CHECK-NEXT:    movq %rsi, %rcx
; CHECK-NEXT:    shrq $56, %rcx
; CHECK-NEXT:    cmpl %r9d, %r8d
; CHECK-NEXT:    adcl %edx, %ecx
; CHECK-NEXT:    andl $1073741823, %ecx # imm = 0x3FFFFFFF
; CHECK-NEXT:    movabsq $2049638230412172402, %rdx # imm = 0x1C71C71C71C71C72
; CHECK-NEXT:    movq %rcx, %rax
; CHECK-NEXT:    mulq %rdx
; CHECK-NEXT:    leaq (%rdx,%rdx,8), %rax
; CHECK-NEXT:    subq %rax, %rcx
; CHECK-NEXT:    subq %rcx, %rdi
; CHECK-NEXT:    sbbq $0, %rsi
; CHECK-NEXT:    movabsq $4099276460824344803, %rcx # imm = 0x38E38E38E38E38E3
; CHECK-NEXT:    imulq %rdi, %rcx
; CHECK-NEXT:    movabsq $-8198552921648689607, %r8 # imm = 0x8E38E38E38E38E39
; CHECK-NEXT:    movq %rdi, %rax
; CHECK-NEXT:    mulq %r8
; CHECK-NEXT:    addq %rcx, %rdx
; CHECK-NEXT:    imulq %rsi, %r8
; CHECK-NEXT:    addq %r8, %rdx
; CHECK-NEXT:    retq
entry:
  %div = udiv i128 %x, 9
  ret i128 %div
}

define i128 @div_by_25(i128 %x) {
; CHECK-LABEL: div_by_25:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    movq %rsi, %rax
; CHECK-NEXT:    shldq $24, %rdi, %rax
; CHECK-NEXT:    movq %rdi, %rcx
; CHECK-NEXT:    shrq $20, %rcx
; CHECK-NEXT:    addl %edi, %ecx
; CHECK-NEXT:    movl %ecx, %edx
; CHECK-NEXT:    andl $1048575, %edx # imm = 0xFFFFF
; CHECK-NEXT:    movl %edi, %r8d
; CHECK-NEXT:    andl $1048575, %r8d # imm = 0xFFFFF
; CHECK-NEXT:    cmpl %r8d, %edx
; CHECK-NEXT:    movl %ecx, %r8d
; CHECK-NEXT:    adcl %eax, %r8d
; CHECK-NEXT:    addl %eax, %ecx
; CHECK-NEXT:    andl $1048575, %ecx # imm = 0xFFFFF
; CHECK-NEXT:    movq %rsi, %rax
; CHECK-NEXT:    shldq $4, %rdi, %rax
; CHECK-NEXT:    cmpl %edx, %ecx
; CHECK-NEXT:    movl %r8d, %ecx
; CHECK-NEXT:    adcl %eax, %ecx
; CHECK-NEXT:    movl %r8d, %edx
; CHECK-NEXT:    andl $1048575, %edx # imm = 0xFFFFF
; CHECK-NEXT:    addl %eax, %r8d
; CHECK-NEXT:    andl $1048575, %r8d # imm = 0xFFFFF
; CHECK-NEXT:    movq %rsi, %rax
; CHECK-NEXT:    shrq $16, %rax
; CHECK-NEXT:    cmpl %edx, %r8d
; CHECK-NEXT:    movl %ecx, %edx
; CHECK-NEXT:    adcl %eax, %edx
; CHECK-NEXT:    movl %ecx, %r8d
; CHECK-NEXT:    andl $1048575, %r8d # imm = 0xFFFFF
; CHECK-NEXT:    addl %eax, %ecx
; CHECK-NEXT:    andl $1048575, %ecx # imm = 0xFFFFF
; CHECK-NEXT:    movq %rsi, %rax
; CHECK-NEXT:    shrq $36, %rax
; CHECK-NEXT:    cmpl %r8d, %ecx
; CHECK-NEXT:    movl %edx, %r8d
; CHECK-NEXT:    adcl %eax, %r8d
; CHECK-NEXT:    movl %edx, %r9d
; CHECK-NEXT:    andl $1048575, %r9d # imm = 0xFFFFF
; CHECK-NEXT:    addl %eax, %edx
; CHECK-NEXT:    andl $1048575, %edx # imm = 0xFFFFF
; CHECK-NEXT:    movq %rsi, %rcx
; CHECK-NEXT:    shrq $56, %rcx
; CHECK-NEXT:    cmpl %r9d, %edx
; CHECK-NEXT:    adcl %r8d, %ecx
; CHECK-NEXT:    andl $1048575, %ecx # imm = 0xFFFFF
; CHECK-NEXT:    movabsq $737869762948382065, %rdx # imm = 0xA3D70A3D70A3D71
; CHECK-NEXT:    movq %rcx, %rax
; CHECK-NEXT:    mulq %rdx
; CHECK-NEXT:    leaq (%rdx,%rdx,4), %rax
; CHECK-NEXT:    leaq (%rax,%rax,4), %rax
; CHECK-NEXT:    subq %rax, %rcx
; CHECK-NEXT:    subq %rcx, %rdi
; CHECK-NEXT:    sbbq $0, %rsi
; CHECK-NEXT:    movabsq $2951479051793528258, %rcx # imm = 0x28F5C28F5C28F5C2
; CHECK-NEXT:    imulq %rdi, %rcx
; CHECK-NEXT:    movabsq $-8116567392432202711, %r8 # imm = 0x8F5C28F5C28F5C29
; CHECK-NEXT:    movq %rdi, %rax
; CHECK-NEXT:    mulq %r8
; CHECK-NEXT:    addq %rcx, %rdx
; CHECK-NEXT:    imulq %rsi, %r8
; CHECK-NEXT:    addq %r8, %rdx
; CHECK-NEXT:    retq
entry:
  %div = udiv i128 %x, 25
  ret i128 %div
}

define i128 @div_by_14(i128 %x) {
; CHECK-LABEL: div_by_14:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rax
; CHECK-NEXT:    .cfi_def_cfa_offset 16
; CHECK-NEXT:    movl $14, %edx
; CHECK-NEXT:    xorl %ecx, %ecx
; CHECK-NEXT:    callq __udivti3@PLT
; CHECK-NEXT:    popq %rcx
; CHECK-NEXT:    .cfi_def_cfa_offset 8
; CHECK-NEXT:    retq
entry:
  %div = udiv i128 %x, 14
  ret i128 %div
}

define i128 @div_by_22(i128 %x) {
; CHECK-LABEL: div_by_22:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rax
; CHECK-NEXT:    .cfi_def_cfa_offset 16
; CHECK-NEXT:    movl $22, %edx
; CHECK-NEXT:    xorl %ecx, %ecx
; CHECK-NEXT:    callq __udivti3@PLT
; CHECK-NEXT:    popq %rcx
; CHECK-NEXT:    .cfi_def_cfa_offset 8
; CHECK-NEXT:    retq
entry:
  %div = udiv i128 %x, 22
  ret i128 %div
}
