; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=i686-- | FileCheck %s --check-prefixes=SDAG-X86
; RUN: llc < %s -mtriple=i686-- -fast-isel -fast-isel-abort=1 | FileCheck %s --check-prefixes=FASTISEL-X86
; TODO: Enable when x87 is supported
; llc < %s -mtriple=i686-- -global-isel -global-isel-abort=1 | FileCheck %s --check-prefixes=GISEL-X86
; RUN: llc < %s -mtriple=x86_64-- | FileCheck %s --check-prefixes=X64
; RUN: llc < %s -mtriple=x86_64-- -fast-isel -fast-isel-abort=1 | FileCheck %s --check-prefixes=X64
; RUN: llc < %s -mtriple=x86_64-- -global-isel -global-isel-abort=1 | FileCheck %s --check-prefixes=X64

define float @test_fsub_float(float %arg1, float %arg2) {
; SDAG-X86-LABEL: test_fsub_float:
; SDAG-X86:       # %bb.0:
; SDAG-X86-NEXT:    flds {{[0-9]+}}(%esp)
; SDAG-X86-NEXT:    fsubs {{[0-9]+}}(%esp)
; SDAG-X86-NEXT:    retl
;
; FASTISEL-X86-LABEL: test_fsub_float:
; FASTISEL-X86:       # %bb.0:
; FASTISEL-X86-NEXT:    flds {{[0-9]+}}(%esp)
; FASTISEL-X86-NEXT:    flds {{[0-9]+}}(%esp)
; FASTISEL-X86-NEXT:    fsubp %st, %st(1)
; FASTISEL-X86-NEXT:    retl
;
; X64-LABEL: test_fsub_float:
; X64:       # %bb.0:
; X64-NEXT:    subss %xmm1, %xmm0
; X64-NEXT:    retq
  %ret = fsub float %arg1, %arg2
  ret float %ret
}

define double @test_fsub_double(double %arg1, double %arg2) {
; SDAG-X86-LABEL: test_fsub_double:
; SDAG-X86:       # %bb.0:
; SDAG-X86-NEXT:    fldl {{[0-9]+}}(%esp)
; SDAG-X86-NEXT:    fsubl {{[0-9]+}}(%esp)
; SDAG-X86-NEXT:    retl
;
; FASTISEL-X86-LABEL: test_fsub_double:
; FASTISEL-X86:       # %bb.0:
; FASTISEL-X86-NEXT:    fldl {{[0-9]+}}(%esp)
; FASTISEL-X86-NEXT:    fldl {{[0-9]+}}(%esp)
; FASTISEL-X86-NEXT:    fsubp %st, %st(1)
; FASTISEL-X86-NEXT:    retl
;
; X64-LABEL: test_fsub_double:
; X64:       # %bb.0:
; X64-NEXT:    subsd %xmm1, %xmm0
; X64-NEXT:    retq
  %ret = fsub double %arg1, %arg2
  ret double %ret
}
