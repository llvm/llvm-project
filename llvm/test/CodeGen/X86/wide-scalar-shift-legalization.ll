; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-linux-gnu -mattr=+sse2,-bmi2,+slow-shld | FileCheck %s --check-prefixes=ALL,X64,X64-NO-BMI2,X64-NO-SHLD,X64-NO-BMI2-NO-SHLD
; RUN: llc < %s -mtriple=x86_64-unknown-linux-gnu -mattr=+sse2,-bmi2,-slow-shld | FileCheck %s --check-prefixes=ALL,X64,X64-NO-BMI2,X64-SHLD,X64-NO-BMI2-HAVE-SHLD
; RUN: llc < %s -mtriple=x86_64-unknown-linux-gnu -mattr=+sse2,+bmi2,+slow-shld | FileCheck %s --check-prefixes=ALL,X64,X64-BMI2,X64-NO-SHLD,X64-HAVE-BMI2-NO-SHLD
; RUN: llc < %s -mtriple=x86_64-unknown-linux-gnu -mattr=+sse2,+bmi2,-slow-shld | FileCheck %s --check-prefixes=ALL,X64,X64-BMI2,X64-SHLD,X64-HAVE-BMI2-HAVE-SHLD
; RUN: llc < %s -mtriple=i686-unknown-linux-gnu -mattr=+sse2,-bmi2,+slow-shld | FileCheck %s --check-prefixes=ALL,X32,X32-NO-BMI2,X32-NO-SHLD,X32-NO-BMI2-NO-SHLD
; RUN: llc < %s -mtriple=i686-unknown-linux-gnu -mattr=+sse2,-bmi2,-slow-shld | FileCheck %s --check-prefixes=ALL,X32,X32-NO-BMI2,X32-SHLD,X32-NO-BMI2-HAVE-SHLD
; RUN: llc < %s -mtriple=i686-unknown-linux-gnu -mattr=+sse2,+bmi2,+slow-shld | FileCheck %s --check-prefixes=ALL,X32,X32-BMI2,X32-NO-SHLD,X32-HAVE-BMI2-NO-SHLD
; RUN: llc < %s -mtriple=i686-unknown-linux-gnu -mattr=+sse2,+bmi2,-slow-shld | FileCheck %s --check-prefixes=ALL,X32,X32-BMI2,X32-SHLD,X32-HAVE-BMI2-HAVE-SHLD

define void @lshr_4bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-LABEL: lshr_4bytes:
; X64-NO-BMI2:       # %bb.0:
; X64-NO-BMI2-NEXT:    movl (%rdi), %eax
; X64-NO-BMI2-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-NEXT:    shrl %cl, %eax
; X64-NO-BMI2-NEXT:    movl %eax, (%rdx)
; X64-NO-BMI2-NEXT:    retq
;
; X64-BMI2-LABEL: lshr_4bytes:
; X64-BMI2:       # %bb.0:
; X64-BMI2-NEXT:    movzbl (%rsi), %eax
; X64-BMI2-NEXT:    shrxl %eax, (%rdi), %eax
; X64-BMI2-NEXT:    movl %eax, (%rdx)
; X64-BMI2-NEXT:    retq
;
; X32-NO-BMI2-LABEL: lshr_4bytes:
; X32-NO-BMI2:       # %bb.0:
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NEXT:    movl (%edx), %edx
; X32-NO-BMI2-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-NEXT:    shrl %cl, %edx
; X32-NO-BMI2-NEXT:    movl %edx, (%eax)
; X32-NO-BMI2-NEXT:    retl
;
; X32-BMI2-LABEL: lshr_4bytes:
; X32-BMI2:       # %bb.0:
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-BMI2-NEXT:    movzbl (%edx), %edx
; X32-BMI2-NEXT:    shrxl %edx, (%ecx), %ecx
; X32-BMI2-NEXT:    movl %ecx, (%eax)
; X32-BMI2-NEXT:    retl
  %src = load i32, ptr %src.ptr, align 1
  %bitOff = load i32, ptr %bitOff.ptr, align 1
  %res = lshr i32 %src, %bitOff
  store i32 %res, ptr %dst, align 1
  ret void
}
define void @shl_4bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-LABEL: shl_4bytes:
; X64-NO-BMI2:       # %bb.0:
; X64-NO-BMI2-NEXT:    movl (%rdi), %eax
; X64-NO-BMI2-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-NEXT:    shll %cl, %eax
; X64-NO-BMI2-NEXT:    movl %eax, (%rdx)
; X64-NO-BMI2-NEXT:    retq
;
; X64-BMI2-LABEL: shl_4bytes:
; X64-BMI2:       # %bb.0:
; X64-BMI2-NEXT:    movzbl (%rsi), %eax
; X64-BMI2-NEXT:    shlxl %eax, (%rdi), %eax
; X64-BMI2-NEXT:    movl %eax, (%rdx)
; X64-BMI2-NEXT:    retq
;
; X32-NO-BMI2-LABEL: shl_4bytes:
; X32-NO-BMI2:       # %bb.0:
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NEXT:    movl (%edx), %edx
; X32-NO-BMI2-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-NEXT:    shll %cl, %edx
; X32-NO-BMI2-NEXT:    movl %edx, (%eax)
; X32-NO-BMI2-NEXT:    retl
;
; X32-BMI2-LABEL: shl_4bytes:
; X32-BMI2:       # %bb.0:
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-BMI2-NEXT:    movzbl (%edx), %edx
; X32-BMI2-NEXT:    shlxl %edx, (%ecx), %ecx
; X32-BMI2-NEXT:    movl %ecx, (%eax)
; X32-BMI2-NEXT:    retl
  %src = load i32, ptr %src.ptr, align 1
  %bitOff = load i32, ptr %bitOff.ptr, align 1
  %res = shl i32 %src, %bitOff
  store i32 %res, ptr %dst, align 1
  ret void
}
define void @ashr_4bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-LABEL: ashr_4bytes:
; X64-NO-BMI2:       # %bb.0:
; X64-NO-BMI2-NEXT:    movl (%rdi), %eax
; X64-NO-BMI2-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-NEXT:    sarl %cl, %eax
; X64-NO-BMI2-NEXT:    movl %eax, (%rdx)
; X64-NO-BMI2-NEXT:    retq
;
; X64-BMI2-LABEL: ashr_4bytes:
; X64-BMI2:       # %bb.0:
; X64-BMI2-NEXT:    movzbl (%rsi), %eax
; X64-BMI2-NEXT:    sarxl %eax, (%rdi), %eax
; X64-BMI2-NEXT:    movl %eax, (%rdx)
; X64-BMI2-NEXT:    retq
;
; X32-NO-BMI2-LABEL: ashr_4bytes:
; X32-NO-BMI2:       # %bb.0:
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NEXT:    movl (%edx), %edx
; X32-NO-BMI2-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-NEXT:    sarl %cl, %edx
; X32-NO-BMI2-NEXT:    movl %edx, (%eax)
; X32-NO-BMI2-NEXT:    retl
;
; X32-BMI2-LABEL: ashr_4bytes:
; X32-BMI2:       # %bb.0:
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-BMI2-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-BMI2-NEXT:    movzbl (%edx), %edx
; X32-BMI2-NEXT:    sarxl %edx, (%ecx), %ecx
; X32-BMI2-NEXT:    movl %ecx, (%eax)
; X32-BMI2-NEXT:    retl
  %src = load i32, ptr %src.ptr, align 1
  %bitOff = load i32, ptr %bitOff.ptr, align 1
  %res = ashr i32 %src, %bitOff
  store i32 %res, ptr %dst, align 1
  ret void
}

define void @lshr_8bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-LABEL: lshr_8bytes:
; X64-NO-BMI2:       # %bb.0:
; X64-NO-BMI2-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-NEXT:    shrq %cl, %rax
; X64-NO-BMI2-NEXT:    movq %rax, (%rdx)
; X64-NO-BMI2-NEXT:    retq
;
; X64-BMI2-LABEL: lshr_8bytes:
; X64-BMI2:       # %bb.0:
; X64-BMI2-NEXT:    movzbl (%rsi), %eax
; X64-BMI2-NEXT:    shrxq %rax, (%rdi), %rax
; X64-BMI2-NEXT:    movq %rax, (%rdx)
; X64-BMI2-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: lshr_8bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%ecx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%esi,%esi), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    xorl %ecx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    testb $32, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    cmovnel %esi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    cmovel %esi, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 4(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, (%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: lshr_8bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esi), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%esi), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %esi, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    xorl %esi, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    testb $32, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    cmovnel %edi, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    cmovel %edi, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, 4(%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: lshr_8bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%edx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %ecx, (%edx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %bl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    leal (%esi,%esi), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ebx, %edi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edx, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %ecx, %esi, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    xorl %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    testb $32, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    cmovnel %edx, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    cmovel %edx, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, 4(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, (%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: lshr_8bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%esi), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %esi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %esi, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    xorl %edi, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    testb $32, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovnel %esi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovel %esi, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, 4(%eax)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%eax)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i64, ptr %src.ptr, align 1
  %bitOff = load i64, ptr %bitOff.ptr, align 1
  %res = lshr i64 %src, %bitOff
  store i64 %res, ptr %dst, align 1
  ret void
}
define void @shl_8bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-LABEL: shl_8bytes:
; X64-NO-BMI2:       # %bb.0:
; X64-NO-BMI2-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-NEXT:    shlq %cl, %rax
; X64-NO-BMI2-NEXT:    movq %rax, (%rdx)
; X64-NO-BMI2-NEXT:    retq
;
; X64-BMI2-LABEL: shl_8bytes:
; X64-BMI2:       # %bb.0:
; X64-BMI2-NEXT:    movzbl (%rsi), %eax
; X64-BMI2-NEXT:    shlxq %rax, (%rdi), %rax
; X64-BMI2-NEXT:    movq %rax, (%rdx)
; X64-BMI2-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: shl_8bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%ecx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    xorl %ecx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    testb $32, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    cmovnel %esi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    cmovel %esi, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, (%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, 4(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: shl_8bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%edx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%edx), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %esi, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    xorl %esi, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    testb $32, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    cmovnel %edi, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    cmovel %edi, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, 4(%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: shl_8bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%edx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, 4(%edx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %bl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %esi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %ebx, %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edx, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    xorl %edx, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    testb $32, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    cmovnel %edi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    cmovel %edi, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, (%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, 4(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: shl_8bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%edx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%edx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %esi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ecx, %esi, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    xorl %edi, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    testb $32, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovnel %esi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovel %esi, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 4(%eax)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, (%eax)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i64, ptr %src.ptr, align 1
  %bitOff = load i64, ptr %bitOff.ptr, align 1
  %res = shl i64 %src, %bitOff
  store i64 %res, ptr %dst, align 1
  ret void
}
define void @ashr_8bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-LABEL: ashr_8bytes:
; X64-NO-BMI2:       # %bb.0:
; X64-NO-BMI2-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-NEXT:    sarq %cl, %rax
; X64-NO-BMI2-NEXT:    movq %rax, (%rdx)
; X64-NO-BMI2-NEXT:    retq
;
; X64-BMI2-LABEL: ashr_8bytes:
; X64-BMI2:       # %bb.0:
; X64-BMI2-NEXT:    movzbl (%rsi), %eax
; X64-BMI2-NEXT:    sarxq %rax, (%rdi), %rax
; X64-BMI2-NEXT:    movq %rax, (%rdx)
; X64-BMI2-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: ashr_8bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%ecx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%esi,%esi), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    sarl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    sarl $31, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    testb $32, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    cmovnel %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    cmovel %ebx, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, 4(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, (%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: ashr_8bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esi), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%esi), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    sarl %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %esi, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    sarl $31, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    testb $32, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    cmovnel %edi, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    cmovel %edi, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, 4(%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: ashr_8bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%edx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, (%esi), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %bl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    leal (%ecx,%ecx), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ebx, %edi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %esi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    sarxl %edx, %ecx, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    sarl $31, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    testb $32, %dl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    cmovnel %esi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    cmovel %esi, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 4(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, (%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: ashr_8bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%esi), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %esi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    sarxl %ecx, %esi, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    sarl $31, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    testb $32, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovnel %edi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovel %edi, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, 4(%eax)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%eax)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i64, ptr %src.ptr, align 1
  %bitOff = load i64, ptr %bitOff.ptr, align 1
  %res = ashr i64 %src, %bitOff
  store i64 %res, ptr %dst, align 1
  ret void
}

define void @lshr_16bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-NO-SHLD-LABEL: lshr_16bytes:
; X64-NO-BMI2-NO-SHLD:       # %bb.0:
; X64-NO-BMI2-NO-SHLD-NEXT:    movq (%rdi), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %eax
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    notb %cl
; X64-NO-BMI2-NO-SHLD-NEXT:    leaq (%rdi,%rdi), %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r8, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    xorl %ecx, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    testb $64, %al
; X64-NO-BMI2-NO-SHLD-NEXT:    cmovneq %rdi, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    cmoveq %rdi, %rcx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rcx, 8(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rsi, (%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    retq
;
; X64-NO-BMI2-HAVE-SHLD-LABEL: lshr_16bytes:
; X64-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrq %cl, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %rdi, %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    xorl %edi, %edi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    testb $64, %cl
; X64-NO-BMI2-HAVE-SHLD-NEXT:    cmovneq %rsi, %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    cmoveq %rsi, %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rax, (%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-NO-SHLD-LABEL: lshr_16bytes:
; X64-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rcx, (%rdi), %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %edi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    notb %dil
; X64-HAVE-BMI2-NO-SHLD-NEXT:    leaq (%rax,%rax), %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rdi, %r8, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %rsi, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rcx, %rax, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    xorl %esi, %esi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    testb $64, %cl
; X64-HAVE-BMI2-NO-SHLD-NEXT:    cmovneq %rax, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    cmoveq %rax, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rsi, 8(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, (%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-HAVE-SHLD-LABEL: lshr_16bytes:
; X64-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %rdi, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxq %rcx, %rdi, %rsi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    xorl %edi, %edi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    testb $64, %cl
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovneq %rsi, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    cmoveq %rsi, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rax, (%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: lshr_16bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    subl $36, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%ecx), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 12(%ecx), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb (%eax), %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $15, %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl %ah, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 8(%esp,%ebp), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %dl
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 12(%esp,%ebp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%ecx,%ecx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%esp,%ebp), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    addl %esi, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, (%esp) # 4-byte Folded Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 16(%esp,%ebp), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%ebx,%ebx), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    orl (%esp), %ebp # 4-byte Folded Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, 12(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, 8(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, (%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, 4(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    addl $36, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: lshr_16bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    subl $32, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%ecx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%ecx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 8(%ecx), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 12(%ecx), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movb (%eax), %ah
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movb %ah, %al
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %ah
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $15, %ah
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl %ah, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%esp,%ebp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    notb %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 8(%esp,%ebp), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    leal (%ebx,%ebx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 12(%esp,%ebp), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %ebp, %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, 8(%ecx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, 12(%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, 4(%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    addl $32, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: lshr_16bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    subl $32, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%ecx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 12(%ecx), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, (%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %bl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $15, %bl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl %bl, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%esp,%esi), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 8(%esp,%esi), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %ebx, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    leal (%edi,%edi), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %edx, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, (%esp,%esi), %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ebx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %ebx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %edi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 12(%esp,%esi), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %esi, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %esi, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 12(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 8(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, (%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, 4(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl $32, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: lshr_16bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    subl $32, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%ecx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 12(%ecx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $15, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl %al, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%esp,%edx), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %eax, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %bl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 8(%esp,%edx), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    leal (%edi,%edi), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ebx, %ebp, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %esi, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esp,%edx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 12(%esp,%edx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, 8(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %edx, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 12(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %eax, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebx, 4(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    addl $32, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i128, ptr %src.ptr, align 1
  %bitOff = load i128, ptr %bitOff.ptr, align 1
  %res = lshr i128 %src, %bitOff
  store i128 %res, ptr %dst, align 1
  ret void
}
define void @shl_16bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-NO-SHLD-LABEL: shl_16bytes:
; X64-NO-BMI2-NO-SHLD:       # %bb.0:
; X64-NO-BMI2-NO-SHLD-NEXT:    movq (%rdi), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %eax
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    notb %cl
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r8, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %rdi, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    xorl %ecx, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    testb $64, %al
; X64-NO-BMI2-NO-SHLD-NEXT:    cmovneq %r8, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    cmoveq %r8, %rcx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rcx, (%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rsi, 8(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    retq
;
; X64-NO-BMI2-HAVE-SHLD-LABEL: shl_16bytes:
; X64-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rax, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shlq %cl, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shldq %cl, %rax, %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    xorl %eax, %eax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    testb $64, %cl
; X64-NO-BMI2-HAVE-SHLD-NEXT:    cmovneq %rsi, %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    cmoveq %rsi, %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rax, (%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-NO-SHLD-LABEL: shl_16bytes:
; X64-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rcx, 8(%rdi), %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %edi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    notb %dil
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rcx, %rax, %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrq %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rdi, %rax, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %rsi, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    xorl %esi, %esi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    testb $64, %cl
; X64-HAVE-BMI2-NO-SHLD-NEXT:    cmovneq %r8, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    cmoveq %r8, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rsi, (%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rax, 8(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-HAVE-SHLD-LABEL: shl_16bytes:
; X64-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shldq %cl, %rax, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxq %rcx, %rax, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    xorl %esi, %esi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    testb $64, %cl
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovneq %rax, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    cmoveq %rax, %rsi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rsi, (%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: shl_16bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    subl $40, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%ecx), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 12(%ecx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $15, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    negb %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movsbl %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 24(%esp,%ebp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 28(%esp,%ebp), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %dl
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %ebx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %edi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 36(%esp,%ebp), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 32(%esp,%ebp), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    orl {{[-0-9]+}}(%e{{[sb]}}p), %ebp # 4-byte Folded Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %edi, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, (%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, 8(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, 12(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, 4(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    addl $40, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: shl_16bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    subl $32, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%ecx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%ecx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 8(%ecx), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 12(%ecx), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, (%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $15, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    negb %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movsbl %cl, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 24(%esp,%ebp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    notb %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 20(%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 16(%esp,%ebp), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 28(%esp,%ebp), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %edx, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, 12(%edx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %ebx, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, (%edx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, 4(%edx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, 8(%edx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    addl $32, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: shl_16bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    subl $32, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%ecx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 12(%ecx), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %bl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, (%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $15, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    negb %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movsbl %cl, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 16(%esp,%edx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 20(%esp,%edx), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ebx, %ecx, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ebx, %esi, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %al
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ebx, 28(%esp,%edx), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 24(%esp,%edx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ebx, %edx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %edx, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %ecx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebp, (%ecx)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 8(%ecx)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, 12(%ecx)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, 4(%ecx)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl $32, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: shl_16bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    subl $32, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%ecx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 12(%ecx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, (%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $15, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    negb %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movsbl %al, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 24(%esp,%esi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ecx, %edx, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %bl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 20(%esp,%esi), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ebx, %ebp, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %edi, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 16(%esp,%esi), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 28(%esp,%esi), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, 12(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ecx, %edi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %edi, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 4(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebx, 8(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    addl $32, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i128, ptr %src.ptr, align 1
  %bitOff = load i128, ptr %bitOff.ptr, align 1
  %res = shl i128 %src, %bitOff
  store i128 %res, ptr %dst, align 1
  ret void
}
define void @ashr_16bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-NO-SHLD-LABEL: ashr_16bytes:
; X64-NO-BMI2-NO-SHLD:       # %bb.0:
; X64-NO-BMI2-NO-SHLD-NEXT:    movq (%rdi), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %eax
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    notb %cl
; X64-NO-BMI2-NO-SHLD-NEXT:    leaq (%rdi,%rdi), %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r8, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    sarq %cl, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    sarq $63, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    testb $64, %al
; X64-NO-BMI2-NO-SHLD-NEXT:    cmovneq %r8, %rsi
; X64-NO-BMI2-NO-SHLD-NEXT:    cmoveq %r8, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rsi, (%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    retq
;
; X64-NO-BMI2-HAVE-SHLD-LABEL: ashr_16bytes:
; X64-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    sarq %cl, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %rdi, %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    sarq $63, %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    testb $64, %cl
; X64-NO-BMI2-HAVE-SHLD-NEXT:    cmovneq %rsi, %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    cmoveq %rsi, %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rax, (%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-NO-SHLD-LABEL: ashr_16bytes:
; X64-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rcx, (%rdi), %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %edi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    notb %dil
; X64-HAVE-BMI2-NO-SHLD-NEXT:    leaq (%rax,%rax), %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rdi, %r8, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %rsi, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    sarxq %rcx, %rax, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    sarq $63, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    testb $64, %cl
; X64-HAVE-BMI2-NO-SHLD-NEXT:    cmovneq %rsi, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    cmoveq %rsi, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rax, 8(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, (%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-HAVE-SHLD-LABEL: ashr_16bytes:
; X64-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %ecx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %rdi, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    sarxq %rcx, %rdi, %rsi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    sarq $63, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    testb $64, %cl
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    cmovneq %rsi, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    cmoveq %rsi, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rax, (%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: ashr_16bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    subl $36, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%ecx), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 12(%ecx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    sarl $31, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $15, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 8(%esp,%ebp), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %dl
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 12(%esp,%ebp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%ecx,%ecx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%esp,%ebp), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    addl %esi, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, (%esp) # 4-byte Folded Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 16(%esp,%ebp), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%ebx,%ebx), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    orl (%esp), %ebp # 4-byte Folded Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    sarl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, 12(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, 8(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, (%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, 4(%edx)
; X32-NO-BMI2-NO-SHLD-NEXT:    addl $36, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: ashr_16bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    subl $32, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%ecx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%ecx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 8(%ecx), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 12(%ecx), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    sarl $31, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $15, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl %cl, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%esp,%ebp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    notb %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 8(%esp,%ebp), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    leal (%ebx,%ebx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 12(%esp,%ebp), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %ebp, %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, 8(%ecx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    sarl %cl, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, 12(%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, 4(%eax)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    addl $32, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: ashr_16bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    subl $32, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%ecx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 12(%ecx), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, (%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    sarl $31, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $15, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl %cl, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%esp,%esi), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 8(%esp,%esi), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %ebx, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    leal (%edi,%edi), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %edx, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, (%esp,%esi), %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ebx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %ebx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %edi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 12(%esp,%esi), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    sarxl %eax, %esi, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %esi, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 12(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 8(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, (%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, 4(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl $32, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: ashr_16bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    subl $32, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%ecx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%ecx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 12(%ecx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    sarl $31, %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $15, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl %al, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%esp,%edx), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %eax, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %bl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 8(%esp,%edx), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    leal (%edi,%edi), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ebx, %ebp, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %esi, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esp,%edx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 12(%esp,%edx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, 8(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    sarxl %ecx, %edx, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 12(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %eax, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebx, 4(%ebp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    addl $32, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i128, ptr %src.ptr, align 1
  %bitOff = load i128, ptr %bitOff.ptr, align 1
  %res = ashr i128 %src, %bitOff
  store i128 %res, ptr %dst, align 1
  ret void
}

define void @lshr_32bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-NO-SHLD-LABEL: lshr_32bytes:
; X64-NO-BMI2-NO-SHLD:       # %bb.0:
; X64-NO-BMI2-NO-SHLD-NEXT:    pushq %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %eax
; X64-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X64-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %sil
; X64-NO-BMI2-NO-SHLD-NEXT:    movzbl %sil, %r9d
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -64(%rsp,%r9), %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -56(%rsp,%r9), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, %r11
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %r11
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %esi
; X64-NO-BMI2-NO-SHLD-NEXT:    notb %sil
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -48(%rsp,%r9), %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    leaq (%rbx,%rbx), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r11, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    addq %rdi, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r10, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -40(%rsp,%r9), %r9
; X64-NO-BMI2-NO-SHLD-NEXT:    leaq (%r9,%r9), %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %rbx, %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %r9
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r9, 24(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r10, 16(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, (%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r8, 8(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    popq %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    retq
;
; X64-NO-BMI2-HAVE-SHLD-LABEL: lshr_32bytes:
; X64-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, %eax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %sil
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movzbl %sil, %esi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -64(%rsp,%rsi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -56(%rsp,%rsi), %r8
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r8, %r9
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrq %cl, %r9
; X64-NO-BMI2-HAVE-SHLD-NEXT:    notb %cl
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -48(%rsp,%rsi), %r10
; X64-NO-BMI2-HAVE-SHLD-NEXT:    leaq (%r10,%r10), %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shlq %cl, %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    orq %r9, %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -40(%rsp,%rsi), %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %rsi, %r10
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %r8, %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrq %cl, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r10, 16(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rsi, 24(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, (%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r11, 8(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-NO-SHLD-LABEL: lshr_32bytes:
; X64-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, %eax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %sil
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movzbl %sil, %ecx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -56(%rsp,%rcx), %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -48(%rsp,%rcx), %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, %rsi, %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, -64(%rsp,%rcx), %r9
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, %rdi, %r10
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -40(%rsp,%rcx), %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, %rcx, %r11
; X64-HAVE-BMI2-NO-SHLD-NEXT:    # kill: def $al killed $al killed $rax def $rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    notb %al
; X64-HAVE-BMI2-NO-SHLD-NEXT:    addq %rdi, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rdi, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r8, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    addq %rsi, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rsi, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r9, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    addq %rcx, %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rcx, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r10, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %r11, 24(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rax, 16(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rsi, (%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-HAVE-SHLD-LABEL: lshr_32bytes:
; X64-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    pushq %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, %ecx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %sil
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl %sil, %eax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -56(%rsp,%rax), %rsi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxq %rcx, %rsi, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -40(%rsp,%rax), %r8
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxq %rcx, %r8, %r9
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %r10d
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %r10b
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -48(%rsp,%rax), %r11
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    leaq (%r11,%r11), %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxq %r10, %rbx, %r10
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -64(%rsp,%rax), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    orq %rdi, %r10
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %r8, %r11
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $rcx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %rsi, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r11, 16(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r9, 24(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rax, (%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r10, 8(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    popq %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: lshr_32bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    subl $88, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%edx), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%edx), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 8(%edx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 12(%edx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 16(%edx), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movb (%ecx), %ch
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 20(%edx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 24(%edx), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 28(%edx), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ch, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %ch
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl %ch, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 24(%esp,%edi), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 28(%esp,%edi), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 32(%esp,%edi), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%edi,%edi), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %ebx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    addl %ebx, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %esi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 36(%esp,%ebx), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 40(%esp,%ebx), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%ecx,%ecx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %esi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    addl %ebp, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %edi, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 44(%esp,%edx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 48(%esp,%edx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%esi,%esi), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %ch
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    addl %edi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %dl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %esi # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 52(%esp,%esi), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%ebx,%ebx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %dl, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %eax, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ch, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, 28(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, 24(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, 16(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 20(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, 8(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 12(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, (%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 4(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    addl $88, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: lshr_32bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    subl $92, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%edx), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%edx), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, (%esp) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 8(%edx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 12(%edx), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 16(%edx), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 20(%edx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 24(%edx), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 28(%edx), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl %cl, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 32(%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    notb %dl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 36(%esp,%ebp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    leal (%ecx,%ecx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 40(%esp,%ebp), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 44(%esp,%ebp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    leal (%ecx,%ecx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %edi, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 48(%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 52(%esp,%ebp), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    leal (%ebx,%ebx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Folded Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, (%esp) # 4-byte Folded Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 28(%esp,%ebp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 56(%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %esi, %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, 24(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %ebx, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, 28(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 16(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 8(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, 20(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 12(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 4(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    addl $92, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: lshr_32bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    subl $84, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%edx), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%edx), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 8(%edx), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 12(%edx), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 16(%edx), %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 20(%edx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 24(%edx), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 28(%edx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl %cl, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 24(%esp,%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 28(%esp,%esi), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %ecx, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %dl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ebx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %edx, %ebx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, 20(%esp,%esi), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %edx, %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 36(%esp,%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %edx, %ecx, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 32(%esp,%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, %ecx, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %eax, (%esp), %ebx # 4-byte Folded Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %edx, %ecx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 44(%esp,%esi), %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    leal (%ebp,%ebp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %edx, %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 40(%esp,%esi), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edi, %eax, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edi, {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Folded Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %eax, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %edx, %eax, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edi, %ebp, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 48(%esp,%esi), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edi, %esi, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %edx, %esi, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, 28(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, 24(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 16(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 20(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 8(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 12(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, (%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 4(%esi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl $84, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: lshr_32bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    subl $84, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%edx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%edx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 8(%edx), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 12(%edx), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 16(%edx), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 20(%edx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 24(%edx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 28(%edx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %ecx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl %al, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 24(%esp,%edi), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %eax, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 28(%esp,%edi), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    leal (%esi,%esi), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %eax, %ebx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 36(%esp,%edi), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    leal (%ebp,%ebp), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %eax, %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 32(%esp,%edi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %edx, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 44(%esp,%edi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    leal (%edx,%edx), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %eax, %ebx, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 40(%esp,%edi), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %ebx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %esi, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %esi # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %esi, (%esp) # 4-byte Folded Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %ebx, %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 20(%esp,%edi), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 48(%esp,%edi), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 24(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %edi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 28(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebp, 16(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %edx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 8(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 20(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 12(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 4(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    addl $84, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i256, ptr %src.ptr, align 1
  %bitOff = load i256, ptr %bitOff.ptr, align 1
  %res = lshr i256 %src, %bitOff
  store i256 %res, ptr %dst, align 1
  ret void
}
define void @shl_32bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-NO-SHLD-LABEL: shl_32bytes:
; X64-NO-BMI2-NO-SHLD:       # %bb.0:
; X64-NO-BMI2-NO-SHLD-NEXT:    pushq %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %eax
; X64-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X64-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %sil
; X64-NO-BMI2-NO-SHLD-NEXT:    negb %sil
; X64-NO-BMI2-NO-SHLD-NEXT:    movsbq %sil, %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -32(%rsp,%r10), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -24(%rsp,%r10), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, %r11
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r11
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %esi
; X64-NO-BMI2-NO-SHLD-NEXT:    notb %sil
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r8, %r9
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %r9
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %r9
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r11, %r9
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -8(%rsp,%r10), %r11
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r11
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -16(%rsp,%r10), %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r10, %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r11, %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r10, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r8, (%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, 16(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rbx, 24(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r9, 8(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    popq %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    retq
;
; X64-NO-BMI2-HAVE-SHLD-LABEL: shl_32bytes:
; X64-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, %eax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %sil
; X64-NO-BMI2-HAVE-SHLD-NEXT:    negb %sil
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movsbq %sil, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -16(%rsp,%rsi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, %r8
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shlq %cl, %r8
; X64-NO-BMI2-HAVE-SHLD-NEXT:    notb %cl
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -32(%rsp,%rsi), %r9
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -24(%rsp,%rsi), %r10
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r10, %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrq %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrq %cl, %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    orq %r8, %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -8(%rsp,%rsi), %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shldq %cl, %rdi, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shldq %cl, %r9, %r10
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shlq %cl, %r9
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rsi, 24(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r9, (%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r10, 8(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r11, 16(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-NO-SHLD-LABEL: shl_32bytes:
; X64-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, %eax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %sil
; X64-HAVE-BMI2-NO-SHLD-NEXT:    negb %sil
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movsbq %sil, %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -32(%rsp,%rcx), %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -24(%rsp,%rcx), %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rdi, %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, -8(%rsp,%rcx), %r9
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -16(%rsp,%rcx), %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rcx, %r10
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rsi, %r11
; X64-HAVE-BMI2-NO-SHLD-NEXT:    # kill: def $al killed $al killed $rax def $rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    notb %al
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrq %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, %rsi, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r8, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrq %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, %rcx, %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r9, %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrq %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, %rdi, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r10, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %r11, (%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rax, 16(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rcx, 24(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rsi, 8(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-HAVE-SHLD-LABEL: shl_32bytes:
; X64-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    pushq %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, %ecx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq $0, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %sil
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    negb %sil
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movsbq %sil, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -16(%rsp,%rax), %rsi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxq %rcx, %rsi, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -32(%rsp,%rax), %r8
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxq %rcx, %r8, %r9
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %r10d
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %r10b
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -24(%rsp,%rax), %r11
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r11, %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrq %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxq %r10, %rbx, %r10
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    orq %rdi, %r10
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -8(%rsp,%rax), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shldq %cl, %rsi, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $rcx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shldq %cl, %r8, %r11
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rax, 24(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r9, (%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r11, 8(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r10, 16(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    popq %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: shl_32bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    subl $88, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%edx), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%edx), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 8(%edx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 12(%edx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 16(%edx), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 20(%edx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 24(%edx), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 28(%edx), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    negb %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movsbl %cl, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 56(%esp,%ecx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 60(%esp,%ecx), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %esi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 68(%esp,%ebx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 64(%esp,%edi), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %esi, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 76(%esp,%ebp), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 72(%esp,%ebp), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %edi, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %edx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edi # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 84(%esp,%edi), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 80(%esp,%edi), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %edx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, (%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, 24(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, 28(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 16(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, 20(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 8(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 12(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 4(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    addl $88, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: shl_32bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    subl $92, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%edx), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%edx), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, (%esp) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 8(%edx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 12(%edx), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 16(%edx), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 20(%edx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 24(%edx), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 28(%edx), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    negb %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movsbl %cl, %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 68(%esp,%ebx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    notb %dl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 64(%esp,%ebx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %edi, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 76(%esp,%ebx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 72(%esp,%ebx), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %edi, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 84(%esp,%ebx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 80(%esp,%ebx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, (%esp) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Folded Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %edx, (%esp) # 4-byte Folded Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 60(%esp,%ebx), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 88(%esp,%ebx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %ebx, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, 28(%ebx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %ecx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, 20(%ebx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, 12(%ebx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %esi # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %edx, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%ebx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, 4(%ebx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, 24(%ebx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, 16(%ebx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 8(%ebx)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    addl $92, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: shl_32bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    subl $88, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%edx), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%edx), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 8(%edx), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 12(%edx), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 16(%edx), %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%ecx), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 20(%edx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 24(%edx), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 28(%edx), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    negb %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movsbl %cl, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 56(%esp,%ecx), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 60(%esp,%ecx), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %eax, %esi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %dl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %ebx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 64(%esp,%ecx), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %edi, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 68(%esp,%ecx), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebp, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ebp, %edi, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %ebx, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebx, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%esp), %ebp # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 72(%esp,%ebp), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %ebx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 76(%esp,%ebp), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %ebx, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %edi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %esi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, {{[-0-9]+}}(%e{{[sb]}}p), %esi # 4-byte Folded Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%esp), %ecx # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %eax, 84(%esp,%ecx), %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 80(%esp,%ecx), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %eax, %ecx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %ebx, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %eax, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, (%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, 24(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 28(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, 16(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 20(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 8(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 12(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, 4(%eax)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl $88, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: shl_32bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    subl $84, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%edx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%edx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 8(%edx), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 12(%edx), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 16(%edx), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 20(%edx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 24(%edx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 28(%edx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %ecx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl $0, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    negb %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movsbl %al, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 60(%esp,%esi), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ecx, %eax, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 56(%esp,%esi), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %eax, %ebx, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %edx, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 64(%esp,%esi), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebp, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrl %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %eax, %edx, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 68(%esp,%esi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ecx, %edx, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %edx, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 72(%esp,%esi), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrl %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %eax, %edx, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 76(%esp,%esi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ecx, %edx, %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %ebx, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %ebx, %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %ebx, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 52(%esp,%esi), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 80(%esp,%esi), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, 28(%edx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, 20(%edx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebp, 12(%edx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %ecx, %ebx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%edx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %esi # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shldl %cl, %ebx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, 4(%edx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 24(%edx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 16(%edx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 8(%edx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    addl $84, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i256, ptr %src.ptr, align 1
  %bitOff = load i256, ptr %bitOff.ptr, align 1
  %res = shl i256 %src, %bitOff
  store i256 %res, ptr %dst, align 1
  ret void
}
define void @ashr_32bytes(ptr %src.ptr, ptr %bitOff.ptr, ptr %dst) nounwind {
; X64-NO-BMI2-NO-SHLD-LABEL: ashr_32bytes:
; X64-NO-BMI2-NO-SHLD:       # %bb.0:
; X64-NO-BMI2-NO-SHLD-NEXT:    pushq %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    sarq $63, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %eax
; X64-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X64-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %sil
; X64-NO-BMI2-NO-SHLD-NEXT:    movzbl %sil, %r9d
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -64(%rsp,%r9), %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -56(%rsp,%r9), %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, %r11
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %r11
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %esi
; X64-NO-BMI2-NO-SHLD-NEXT:    notb %sil
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -48(%rsp,%r9), %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    leaq (%rbx,%rbx), %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r11, %r8
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    addq %rdi, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %r10, %rdi
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shrq %cl, %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    movq -40(%rsp,%r9), %r9
; X64-NO-BMI2-NO-SHLD-NEXT:    leaq (%r9,%r9), %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    shlq %cl, %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    orq %rbx, %r10
; X64-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-NO-SHLD-NEXT:    sarq %cl, %r9
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r9, 24(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r10, 16(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %rdi, (%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    movq %r8, 8(%rdx)
; X64-NO-BMI2-NO-SHLD-NEXT:    popq %rbx
; X64-NO-BMI2-NO-SHLD-NEXT:    retq
;
; X64-NO-BMI2-HAVE-SHLD-LABEL: ashr_32bytes:
; X64-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    sarq $63, %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, %eax
; X64-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %sil
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movzbl %sil, %esi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -64(%rsp,%rsi), %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -56(%rsp,%rsi), %r8
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r8, %r9
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrq %cl, %r9
; X64-NO-BMI2-HAVE-SHLD-NEXT:    notb %cl
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -48(%rsp,%rsi), %r10
; X64-NO-BMI2-HAVE-SHLD-NEXT:    leaq (%r10,%r10), %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shlq %cl, %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    orq %r9, %r11
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq -40(%rsp,%rsi), %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %rsi, %r10
; X64-NO-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %r8, %rdi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    sarq %cl, %rsi
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r10, 16(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rsi, 24(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %rdi, (%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    movq %r11, 8(%rdx)
; X64-NO-BMI2-HAVE-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-NO-SHLD-LABEL: ashr_32bytes:
; X64-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    sarq $63, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, %eax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %sil
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movzbl %sil, %ecx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -56(%rsp,%rcx), %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -48(%rsp,%rcx), %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, %rsi, %r8
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, -64(%rsp,%rcx), %r9
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shrxq %rax, %rdi, %r10
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq -40(%rsp,%rcx), %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    sarxq %rax, %rcx, %r11
; X64-HAVE-BMI2-NO-SHLD-NEXT:    # kill: def $al killed $al killed $rax def $rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    notb %al
; X64-HAVE-BMI2-NO-SHLD-NEXT:    addq %rdi, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rdi, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r8, %rdi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    addq %rsi, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rsi, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r9, %rsi
; X64-HAVE-BMI2-NO-SHLD-NEXT:    addq %rcx, %rcx
; X64-HAVE-BMI2-NO-SHLD-NEXT:    shlxq %rax, %rcx, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    orq %r10, %rax
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %r11, 24(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rax, 16(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rsi, (%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    movq %rdi, 8(%rdx)
; X64-HAVE-BMI2-NO-SHLD-NEXT:    retq
;
; X64-HAVE-BMI2-HAVE-SHLD-LABEL: ashr_32bytes:
; X64-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    pushq %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq (%rdi), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 8(%rdi), %rcx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 16(%rdi), %r8
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq 24(%rdi), %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%rsi), %esi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r8, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rcx, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rax, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    sarq $63, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rdi, -{{[0-9]+}}(%rsp)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, %ecx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %sil
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl %sil, %eax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -56(%rsp,%rax), %rsi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxq %rcx, %rsi, %rdi
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -40(%rsp,%rax), %r8
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    sarxq %rcx, %r8, %r9
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %r10d
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %r10b
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -48(%rsp,%rax), %r11
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    leaq (%r11,%r11), %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxq %r10, %rbx, %r10
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq -64(%rsp,%rax), %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    orq %rdi, %r10
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %r8, %r11
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $rcx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdq %cl, %rsi, %rax
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r11, 16(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r9, 24(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %rax, (%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    movq %r10, 8(%rdx)
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    popq %rbx
; X64-HAVE-BMI2-HAVE-SHLD-NEXT:    retq
;
; X32-NO-BMI2-NO-SHLD-LABEL: ashr_32bytes:
; X32-NO-BMI2-NO-SHLD:       # %bb.0:
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    subl $88, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esi), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 4(%esi), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 8(%esi), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 12(%esi), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 16(%esi), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb (%eax), %ch
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 20(%esi), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 24(%esi), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 28(%esi), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %edx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    sarl $31, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ch, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-NO-SHLD-NEXT:    shrb $3, %ch
; X32-NO-BMI2-NO-SHLD-NEXT:    movzbl %ch, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 24(%esp,%edi), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 28(%esp,%edi), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    notb %ah
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 32(%esp,%edi), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%edi,%edi), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %ebx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    addl %ebx, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %esi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, (%esp) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 36(%esp,%ebx), %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 40(%esp,%ebx), %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%ecx,%ecx), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %esi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    addl %ebp, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %edi, %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 44(%esp,%edx), %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 48(%esp,%edx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%esi,%esi), %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %ch
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    addl %edi, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ah, %dl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %ebx, %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %al, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    shrl %cl, %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %esi # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl 52(%esp,%esi), %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    leal (%ebx,%ebx), %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %dl, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    orl %eax, %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    movb %ch, %cl
; X32-NO-BMI2-NO-SHLD-NEXT:    sarl %cl, %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebx, 28(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %esi, 24(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %edi, 16(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 20(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ebp, 8(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 12(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl (%esp), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, (%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ecx # 4-byte Reload
; X32-NO-BMI2-NO-SHLD-NEXT:    movl %ecx, 4(%eax)
; X32-NO-BMI2-NO-SHLD-NEXT:    addl $88, %esp
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-NO-SHLD-NEXT:    retl
;
; X32-NO-BMI2-HAVE-SHLD-LABEL: ashr_32bytes:
; X32-NO-BMI2-HAVE-SHLD:       # %bb.0:
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    subl $92, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esi), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 4(%esi), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 8(%esi), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 12(%esi), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 16(%esi), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 20(%esi), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 24(%esi), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 28(%esi), %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    sarl $31, %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %eax
; X32-NO-BMI2-HAVE-SHLD-NEXT:    andb $7, %al
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrb $3, %cl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movzbl %cl, %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 32(%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    notb %dl
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 36(%esp,%ebp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    leal (%ecx,%ecx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 40(%esp,%ebp), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 44(%esp,%ebp), %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    leal (%ecx,%ecx), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %edi, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 48(%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 52(%esp,%ebp), %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    leal (%ebx,%ebx), %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shll %cl, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    orl %esi, %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Folded Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, (%esp) # 4-byte Folded Spill
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 28(%esp,%ebp), %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl 56(%esp,%ebp), %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %esi, %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %ebx, 24(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %ebx, %edx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    sarl %cl, %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %esi, 28(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 16(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 8(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %edi, 20(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 12(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-NO-BMI2-HAVE-SHLD-NEXT:    movl %eax, 4(%ebp)
; X32-NO-BMI2-HAVE-SHLD-NEXT:    addl $92, %esp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-NO-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-NO-BMI2-HAVE-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-NO-SHLD-LABEL: ashr_32bytes:
; X32-HAVE-BMI2-NO-SHLD:       # %bb.0:
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    subl $84, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 4(%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 8(%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 12(%esi), %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 16(%esi), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl (%eax), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 20(%esi), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 24(%esi), %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 28(%esi), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    sarl $31, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    andb $7, %dl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrb $3, %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movzbl %cl, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 24(%esp,%esi), %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 28(%esp,%esi), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %ebp, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    notb %cl
; X32-HAVE-BMI2-NO-SHLD-NEXT:    leal (%eax,%eax), %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %ebx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, 20(%esp,%esi), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ebp, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %ebp, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 36(%esp,%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %eax, %ecx, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 32(%esp,%esi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %ecx, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebp, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, (%esp), %edi # 4-byte Folded Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %eax, %ecx, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ecx, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 44(%esp,%esi), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    leal (%edi,%edi), %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %eax, %ecx, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 40(%esp,%esi), %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %eax, %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebx, %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, {{[-0-9]+}}(%e{{[sb]}}p), %ebx # 4-byte Folded Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %eax, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %eax, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %ebx, %eax
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shrxl %edx, %edi, %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl 48(%esp,%esi), %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    sarxl %edx, %esi, %edx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    shlxl %ecx, %esi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    orl %edi, %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %edx, 28(%edi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %esi, 24(%edi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 16(%edi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %ebp, 20(%edi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl (%esp), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 8(%edi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 12(%edi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, (%edi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-NO-SHLD-NEXT:    movl %eax, 4(%edi)
; X32-HAVE-BMI2-NO-SHLD-NEXT:    addl $84, %esp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-NO-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-NO-SHLD-NEXT:    retl
;
; X32-HAVE-BMI2-HAVE-SHLD-LABEL: ashr_32bytes:
; X32-HAVE-BMI2-HAVE-SHLD:       # %bb.0:
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    pushl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    subl $84, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%ecx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 4(%ecx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 8(%ecx), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 12(%ecx), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 16(%ecx), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl (%eax), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 20(%ecx), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 24(%ecx), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 28(%ecx), %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebp, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edi, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %edx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    sarl $31, %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, {{[0-9]+}}(%esp)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, %ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    andb $7, %cl
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrb $3, %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movzbl %al, %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 24(%esp,%edi), %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %eax, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ecx, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    notb %al
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 28(%esp,%edi), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%esp) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    leal (%esi,%esi), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %eax, %ebx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 36(%esp,%edi), %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    leal (%ebp,%ebp), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %eax, %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 32(%esp,%edi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %edx, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, {{[-0-9]+}}(%e{{[sb]}}p) # 4-byte Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 44(%esp,%edi), %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    leal (%edx,%edx), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shlxl %eax, %ebx, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 40(%esp,%edi), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrxl %ecx, %ebx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    orl %esi, %eax
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %esi # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %esi, (%esp) # 4-byte Folded Spill
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %ebx, %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 20(%esp,%edi), %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl 48(%esp,%edi), %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[0-9]+}}(%esp), %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 24(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    sarxl %ecx, %edi, %edx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 28(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %ebp, 16(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl (%esp), %edx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %edx, 8(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    # kill: def $cl killed $cl killed $ecx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %edx # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    shrdl %cl, %edx, %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %esi, (%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 20(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 12(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl {{[-0-9]+}}(%e{{[sb]}}p), %eax # 4-byte Reload
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    movl %eax, 4(%ebx)
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    addl $84, %esp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %esi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %edi
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebx
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    popl %ebp
; X32-HAVE-BMI2-HAVE-SHLD-NEXT:    retl
  %src = load i256, ptr %src.ptr, align 1
  %bitOff = load i256, ptr %bitOff.ptr, align 1
  %res = ashr i256 %src, %bitOff
  store i256 %res, ptr %dst, align 1
  ret void
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; ALL: {{.*}}
; X32: {{.*}}
; X32-NO-SHLD: {{.*}}
; X32-SHLD: {{.*}}
; X64: {{.*}}
; X64-NO-SHLD: {{.*}}
; X64-SHLD: {{.*}}
