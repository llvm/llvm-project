; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s | FileCheck %s
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32"
target triple = "i386-pc-linux-gnu"
; PR7651

%struct.anon = type { [72 x i32], i32 }

@mp2grad_ = external dso_local global %struct.anon

define void @chomp2g_setup_(i32 %n, i32 %m) nounwind {
; CHECK-LABEL: chomp2g_setup_:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushl %edi
; CHECK-NEXT:    pushl %esi
; CHECK-NEXT:    movl {{[0-9]+}}(%esp), %eax
; CHECK-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; CHECK-NEXT:    shll $5, %ecx
; CHECK-NEXT:    movl $mp2grad_, %edx
; CHECK-NEXT:    .p2align 4
; CHECK-NEXT:  .LBB0_1: # %bb1
; CHECK-NEXT:    # =>This Loop Header: Depth=1
; CHECK-NEXT:    # Child Loop BB0_2 Depth 2
; CHECK-NEXT:    movl mp2grad_+288, %esi
; CHECK-NEXT:    imull %ecx, %esi
; CHECK-NEXT:    addl %edx, %esi
; CHECK-NEXT:    xorl %edi, %edi
; CHECK-NEXT:    .p2align 4
; CHECK-NEXT:  .LBB0_2: # %bb2
; CHECK-NEXT:    # Parent Loop BB0_1 Depth=1
; CHECK-NEXT:    # => This Inner Loop Header: Depth=2
; CHECK-NEXT:    movl $0, (%esi,%edi,4)
; CHECK-NEXT:    incl %edi
; CHECK-NEXT:    cmpl %edi, %eax
; CHECK-NEXT:    jne .LBB0_2
; CHECK-NEXT:  # %bb.3: # %bb6
; CHECK-NEXT:    # in Loop: Header=BB0_1 Depth=1
; CHECK-NEXT:    addl $32, %edx
; CHECK-NEXT:    jmp .LBB0_1
entry:
  br label %bb1

bb1:                                              ; preds = %bb6, %bb
  %indvar11 = phi i32 [ %indvar.next12, %bb6 ], [ 0, %entry ] ; <i32> [#uses=2]
  %tmp21 = add i32 %indvar11, 1                   ; <i32> [#uses=1]
  %t = load i32, ptr getelementptr inbounds (%struct.anon, ptr @mp2grad_, i32 0, i32 1)
  %tmp15 = mul i32 %n, %t                      ; <i32> [#uses=1]
  %tmp16 = add i32 %tmp21, %tmp15                 ; <i32> [#uses=1]
  %tmp17 = shl i32 %tmp16, 3                      ; <i32> [#uses=1]
  %tmp18 = add i32 %tmp17, -8                     ; <i32> [#uses=1]
  br label %bb2

bb2:                                              ; preds = %bb2, %bb2.preheader
  %indvar = phi i32 [ 0, %bb1 ], [ %indvar.next, %bb2 ] ; <i32> [#uses=2]
  %tmp19 = add i32 %tmp18, %indvar                ; <i32> [#uses=1]
  %scevgep = getelementptr %struct.anon, ptr @mp2grad_, i32 0, i32 0, i32 %tmp19 ; <ptr> [#uses=1]
  store i32 0, ptr %scevgep
  %indvar.next = add i32 %indvar, 1               ; <i32> [#uses=1]
  %c = icmp ne i32 %indvar.next, %m
  br i1 %c, label %bb2, label %bb6

bb6:                                              ; preds = %bb2, %bb1
  %indvar.next12 = add i32 %indvar11, 1           ; <i32> [#uses=1]
  br label %bb1
}
