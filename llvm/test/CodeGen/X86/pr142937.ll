; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -mtriple=i686-- -O0   | FileCheck %s --check-prefix=X86
; RUN: llc < %s -mtriple=x86_64-- -O0 | FileCheck %s --check-prefix=X64

define void @public_type_test() {
; X86-LABEL: public_type_test:
; X86:       # %bb.0: # %bb
; X86-NEXT:    movb $1, %al
; X86-NEXT:  # %bb.1: # %bb1
; X86-NEXT:    retl
;
; X64-LABEL: public_type_test:
; X64:       # %bb.0: # %bb
; X64-NEXT:    movb $1, %al
; X64-NEXT:  # %bb.1: # %bb1
; X64-NEXT:    retq
bb:
  %call = call i1 @llvm.public.type.test(ptr null, metadata !"typeinfo")
  br label %bb1

bb1:
  call void @llvm.assume(i1 %call)
  ret void
}

define void @type_test() {
; X86-LABEL: type_test:
; X86:       # %bb.0: # %bb
; X86-NEXT:    movb $1, %al
; X86-NEXT:    testb $1, %al
; X86-NEXT:    jne .LBB1_2
; X86-NEXT:  # %bb.1: # %bb1
; X86-NEXT:    ud1l 2(%eax), %eax
; X86-NEXT:  .LBB1_2: # %bb2
; X86-NEXT:    retl
;
; X64-LABEL: type_test:
; X64:       # %bb.0: # %bb
; X64-NEXT:    movb $1, %al
; X64-NEXT:    testb $1, %al
; X64-NEXT:    jne .LBB1_2
; X64-NEXT:  # %bb.1: # %bb1
; X64-NEXT:    ud1l 2(%eax), %eax
; X64-NEXT:  .LBB1_2: # %bb2
; X64-NEXT:    retq
bb:
  %call = tail call i1 @llvm.type.test(ptr null, metadata !"typeinfo")
  br i1 %call, label %bb2, label %bb1

bb1:
  tail call void @llvm.ubsantrap(i8 2)
  unreachable

bb2:
  ret void
}

declare i1 @llvm.public.type.test(ptr, metadata)

declare void @llvm.assume(i1 noundef)

declare i1 @llvm.type.test(ptr, metadata)

declare void @llvm.ubsantrap(i8 immarg)
