; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=i686-unknown-unknown -mattr=+bmi | FileCheck %s --check-prefix=X86-WITH-BMI
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mattr=+bmi | FileCheck %s --check-prefix=X64-WITH-BMI
; RUN: llc < %s -mtriple=i686-unknown-unknown | FileCheck %s --check-prefix=X86-WITHOUT-BMI
; RUN: llc < %s -mtriple=x86_64-unknown-unknown | FileCheck %s --check-prefix=X64-WITHOUT-BMI

define i32 @reassoc_demorgan_i32(i32 %a, i32 %b) nounwind {
; X86-WITH-BMI-LABEL: reassoc_demorgan_i32:
; X86-WITH-BMI:       # %bb.0:
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-WITH-BMI-NEXT:    notl %ecx
; X86-WITH-BMI-NEXT:    andnl %ecx, %eax, %eax
; X86-WITH-BMI-NEXT:    retl
;
; X64-WITH-BMI-LABEL: reassoc_demorgan_i32:
; X64-WITH-BMI:       # %bb.0:
; X64-WITH-BMI-NEXT:    notl %edi
; X64-WITH-BMI-NEXT:    andnl %edi, %esi, %eax
; X64-WITH-BMI-NEXT:    retq
;
; X86-WITHOUT-BMI-LABEL: reassoc_demorgan_i32:
; X86-WITHOUT-BMI:       # %bb.0:
; X86-WITHOUT-BMI-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    notl %eax
; X86-WITHOUT-BMI-NEXT:    retl
;
; X64-WITHOUT-BMI-LABEL: reassoc_demorgan_i32:
; X64-WITHOUT-BMI:       # %bb.0:
; X64-WITHOUT-BMI-NEXT:    movl %edi, %eax
; X64-WITHOUT-BMI-NEXT:    orl %esi, %eax
; X64-WITHOUT-BMI-NEXT:    notl %eax
; X64-WITHOUT-BMI-NEXT:    retq
  %temp = or i32 %b, %a
  %res = xor i32 %temp, -1
  ret i32 %res
}

define i32 @reassoc_demorgan_three_arguments_i32(i32 %a, i32 %b, i32 %c) nounwind {
; X86-WITH-BMI-LABEL: reassoc_demorgan_three_arguments_i32:
; X86-WITH-BMI:       # %bb.0:
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X86-WITH-BMI-NEXT:    notl %edx
; X86-WITH-BMI-NEXT:    andnl %edx, %ecx, %ecx
; X86-WITH-BMI-NEXT:    andnl %ecx, %eax, %eax
; X86-WITH-BMI-NEXT:    retl
;
; X64-WITH-BMI-LABEL: reassoc_demorgan_three_arguments_i32:
; X64-WITH-BMI:       # %bb.0:
; X64-WITH-BMI-NEXT:    notl %edi
; X64-WITH-BMI-NEXT:    andnl %edi, %esi, %eax
; X64-WITH-BMI-NEXT:    andnl %eax, %edx, %eax
; X64-WITH-BMI-NEXT:    retq
;
; X86-WITHOUT-BMI-LABEL: reassoc_demorgan_three_arguments_i32:
; X86-WITHOUT-BMI:       # %bb.0:
; X86-WITHOUT-BMI-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    notl %eax
; X86-WITHOUT-BMI-NEXT:    retl
;
; X64-WITHOUT-BMI-LABEL: reassoc_demorgan_three_arguments_i32:
; X64-WITHOUT-BMI:       # %bb.0:
; X64-WITHOUT-BMI-NEXT:    movl %edi, %eax
; X64-WITHOUT-BMI-NEXT:    orl %esi, %eax
; X64-WITHOUT-BMI-NEXT:    orl %edx, %eax
; X64-WITHOUT-BMI-NEXT:    notl %eax
; X64-WITHOUT-BMI-NEXT:    retq
  %and.demorgan = or i32 %b, %a
  %and3.demorgan = or i32 %and.demorgan, %c
  %and3 = xor i32 %and3.demorgan, -1
  ret i32 %and3
}

define i64 @reassoc_demorgan_i64(i64 %a, i64 %b) nounwind {
; X86-WITH-BMI-LABEL: reassoc_demorgan_i64:
; X86-WITH-BMI:       # %bb.0:
; X86-WITH-BMI-NEXT:    pushl %esi
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X86-WITH-BMI-NEXT:    notl %edx
; X86-WITH-BMI-NEXT:    andnl %edx, %eax, %eax
; X86-WITH-BMI-NEXT:    notl %esi
; X86-WITH-BMI-NEXT:    andnl %esi, %ecx, %edx
; X86-WITH-BMI-NEXT:    popl %esi
; X86-WITH-BMI-NEXT:    retl
;
; X64-WITH-BMI-LABEL: reassoc_demorgan_i64:
; X64-WITH-BMI:       # %bb.0:
; X64-WITH-BMI-NEXT:    notq %rdi
; X64-WITH-BMI-NEXT:    andnq %rdi, %rsi, %rax
; X64-WITH-BMI-NEXT:    retq
;
; X86-WITHOUT-BMI-LABEL: reassoc_demorgan_i64:
; X86-WITHOUT-BMI:       # %bb.0:
; X86-WITHOUT-BMI-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %edx
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    notl %eax
; X86-WITHOUT-BMI-NEXT:    notl %edx
; X86-WITHOUT-BMI-NEXT:    retl
;
; X64-WITHOUT-BMI-LABEL: reassoc_demorgan_i64:
; X64-WITHOUT-BMI:       # %bb.0:
; X64-WITHOUT-BMI-NEXT:    movq %rdi, %rax
; X64-WITHOUT-BMI-NEXT:    orq %rsi, %rax
; X64-WITHOUT-BMI-NEXT:    notq %rax
; X64-WITHOUT-BMI-NEXT:    retq
  %temp = or i64 %b, %a
  %res = xor i64 %temp, -1
  ret i64 %res
}

define i64 @reassoc_demorgan_three_arguments_i64(i64 %a, i64 %b, i64 %c) nounwind {
; X86-WITH-BMI-LABEL: reassoc_demorgan_three_arguments_i64:
; X86-WITH-BMI:       # %bb.0:
; X86-WITH-BMI-NEXT:    pushl %ebx
; X86-WITH-BMI-NEXT:    pushl %edi
; X86-WITH-BMI-NEXT:    pushl %esi
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %esi
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %edi
; X86-WITH-BMI-NEXT:    movl {{[0-9]+}}(%esp), %ebx
; X86-WITH-BMI-NEXT:    notl %edi
; X86-WITH-BMI-NEXT:    andnl %edi, %edx, %edx
; X86-WITH-BMI-NEXT:    andnl %edx, %eax, %eax
; X86-WITH-BMI-NEXT:    notl %ebx
; X86-WITH-BMI-NEXT:    andnl %ebx, %esi, %edx
; X86-WITH-BMI-NEXT:    andnl %edx, %ecx, %edx
; X86-WITH-BMI-NEXT:    popl %esi
; X86-WITH-BMI-NEXT:    popl %edi
; X86-WITH-BMI-NEXT:    popl %ebx
; X86-WITH-BMI-NEXT:    retl
;
; X64-WITH-BMI-LABEL: reassoc_demorgan_three_arguments_i64:
; X64-WITH-BMI:       # %bb.0:
; X64-WITH-BMI-NEXT:    notq %rdi
; X64-WITH-BMI-NEXT:    andnq %rdi, %rsi, %rax
; X64-WITH-BMI-NEXT:    andnq %rax, %rdx, %rax
; X64-WITH-BMI-NEXT:    retq
;
; X86-WITHOUT-BMI-LABEL: reassoc_demorgan_three_arguments_i64:
; X86-WITHOUT-BMI:       # %bb.0:
; X86-WITHOUT-BMI-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    movl {{[0-9]+}}(%esp), %edx
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %edx
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %edx
; X86-WITHOUT-BMI-NEXT:    orl {{[0-9]+}}(%esp), %eax
; X86-WITHOUT-BMI-NEXT:    notl %eax
; X86-WITHOUT-BMI-NEXT:    notl %edx
; X86-WITHOUT-BMI-NEXT:    retl
;
; X64-WITHOUT-BMI-LABEL: reassoc_demorgan_three_arguments_i64:
; X64-WITHOUT-BMI:       # %bb.0:
; X64-WITHOUT-BMI-NEXT:    movq %rdi, %rax
; X64-WITHOUT-BMI-NEXT:    orq %rsi, %rax
; X64-WITHOUT-BMI-NEXT:    orq %rdx, %rax
; X64-WITHOUT-BMI-NEXT:    notq %rax
; X64-WITHOUT-BMI-NEXT:    retq
  %and.demorgan = or i64 %b, %a
  %and3.demorgan = or i64 %and.demorgan, %c
  %and3 = xor i64 %and3.demorgan, -1
  ret i64 %and3
}
