# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc %s -o - -mtriple=x86_64-unknown-linux -enable-spill2reg -mattr=+avx512f --run-pass=spill2reg -simplify-mir -spill2reg-mem-instrs=0 -spill2reg-vec-instrs=99999 | FileCheck %s

# Checks that spills reading from $k mask registers are skipped by Spill2Reg.

--- |
  @D0 = dso_local local_unnamed_addr global i32 0, align 4
  @U0 = dso_local local_unnamed_addr global i32 0, align 4
  define void @func() { ret void }
...
---
name: func
alignment:       16
tracksRegLiveness: true
tracksDebugUserValues: true
frameInfo:
  maxAlignment:    4
stack:
  - { id: 0, type: spill-slot, size: 4, alignment: 4 }
machineFunctionInfo: {}
body:             |
  bb.0:
    liveins: $k1
    ; CHECK-LABEL: name: func
    ; CHECK: liveins: $k1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: KMOVWmk %stack.0, 1, $noreg, 0, $noreg, killed renamable $k1 :: (store (s16) into %stack.0)
    ; CHECK-NEXT: renamable $k1 = KMOVWkm %stack.0, 1, $noreg, 0, $noreg :: (load (s16) from %stack.0)
    ; CHECK-NEXT: RET 0
    KMOVWmk %stack.0, 1, $noreg, 0, $noreg, killed renamable $k1 :: (store (s16) into %stack.0)
    renamable $k1 = KMOVWkm %stack.0, 1, $noreg, 0, $noreg :: (load (s16) from %stack.0)
    RET 0
...
