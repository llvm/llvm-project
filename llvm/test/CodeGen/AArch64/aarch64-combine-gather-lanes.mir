# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -run-pass=machine-combiner -mcpu=neoverse-n2 -mtriple=aarch64-none-linux-gnu -verify-machineinstrs %s -o - | FileCheck %s

---
name:            split_loads_to_fpr128
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3, $x4

    ; CHECK-LABEL: name: split_loads_to_fpr128
    ; CHECK: [[COPY:%[0-9]+]]:gpr64common = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64common = COPY $x1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64common = COPY $x2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr64common = COPY $x3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr64common = COPY $x4
    ; CHECK-NEXT: [[LD_i32:%[0-9]+]]:fpr32 = LDRSroX [[COPY]], killed [[COPY1]], 0, 1
    ; CHECK-NEXT: [[FIRST_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD_i32]], %subreg.ssub
    ; CHECK-NEXT: [[LD0_1:%[0-9]+]]:fpr128 = LD1i32 [[FIRST_REG]], 1, killed [[COPY2]] 
    ; CHECK-NEXT: [[LD1_0:%[0-9]+]]:fpr32 = LDRSui [[COPY3]], 0
    ; CHECK-NEXT: [[SECOND_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD1_0]], %subreg.ssub
    ; CHECK-NEXT: [[LD1_1:%[0-9]+]]:fpr128 = LD1i32 [[SECOND_REG]], 1, killed [[COPY4]]
    ; CHECK-NEXT: [[ZIP:%[0-9]+]]:fpr128 = ZIP1v2i64 [[LD0_1]], [[LD1_1]]
    ; CHECK-NEXT: $q0 = COPY [[ZIP]]
    ; CHECK-NEXT: RET_ReallyLR implicit $q0
    %0:gpr64common = COPY $x0
    %1:gpr64common = COPY $x1
    %2:gpr64common = COPY $x2
    %3:gpr64common = COPY $x3
    %4:gpr64common = COPY $x4
    %5:fpr32 = LDRSroX %0, killed %1, 0, 1
    %6:fpr128 = SUBREG_TO_REG 0, killed %5, %subreg.ssub
    %7:fpr128 = LD1i32 %6, 1, killed %2
    %8:fpr128 = LD1i32 %7, 2, killed %3
    %9:fpr128 = LD1i32 %8, 3, killed %4
    $q0 = COPY %9
    RET_ReallyLR implicit $q0

---
name:            split_loads_to_fpr128_ui
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3, $x4

    ; CHECK-LABEL: name: split_loads_to_fpr128_ui
    ; CHECK: [[COPY:%[0-9]+]]:gpr64common = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64common = COPY $x1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64common = COPY $x2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr64common = COPY $x3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr64common = COPY $x4
    ; CHECK-NEXT: [[LD_i32:%[0-9]+]]:fpr32 = LDRSui [[COPY]], 0
    ; CHECK-NEXT: [[FIRST_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD_i32]], %subreg.ssub
    ; CHECK-NEXT: [[LD0_1:%[0-9]+]]:fpr128 = LD1i32 [[FIRST_REG]], 1, killed [[COPY1]] 
    ; CHECK-NEXT: [[LD1_0:%[0-9]+]]:fpr32 = LDRSui [[COPY2]], 0
    ; CHECK-NEXT: [[SECOND_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD1_0]], %subreg.ssub
    ; CHECK-NEXT: [[LD1_1:%[0-9]+]]:fpr128 = LD1i32 [[SECOND_REG]], 1, killed [[COPY3]]
    ; CHECK-NEXT: [[ZIP:%[0-9]+]]:fpr128 = ZIP1v2i64 [[LD0_1]], [[LD1_1]]
    ; CHECK-NEXT: $q0 = COPY [[ZIP]]
    ; CHECK-NEXT: RET_ReallyLR implicit $q0
    %0:gpr64common = COPY $x0
    %1:gpr64common = COPY $x1
    %2:gpr64common = COPY $x2
    %3:gpr64common = COPY $x3
    %4:gpr64common = COPY $x4
    %5:fpr32 = LDRSui %0, 0
    %6:fpr128 = SUBREG_TO_REG 0, killed %5, %subreg.ssub
    %7:fpr128 = LD1i32 %6, 1, killed %1
    %8:fpr128 = LD1i32 %7, 2, killed %2
    %9:fpr128 = LD1i32 %8, 3, killed %3
    $q0 = COPY %9
    RET_ReallyLR implicit $q0

---
name:            split_loads_to_fpr128_i16
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8

    ; CHECK-LABEL: name: split_loads_to_fpr128_i16
    ; CHECK: [[COPY:%[0-9]+]]:gpr64common = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64common = COPY $x1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64common = COPY $x2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr64common = COPY $x3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr64common = COPY $x4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:gpr64common = COPY $x5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:gpr64common = COPY $x6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:gpr64common = COPY $x7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:gpr64common = COPY $x8
    ; CHECK-NEXT: [[LD_i16:%[0-9]+]]:fpr16 = LDRHroX [[COPY]], killed [[COPY1]], 0, 1
    ; CHECK-NEXT: [[FIRST_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD_i16]], %subreg.hsub
    ; CHECK-NEXT: [[LD0_1:%[0-9]+]]:fpr128 = LD1i16 [[FIRST_REG]], 1, killed [[COPY2]]
    ; CHECK-NEXT: [[LD0_2:%[0-9]+]]:fpr128 = LD1i16 [[LD0_1]], 2, killed [[COPY3]]
    ; CHECK-NEXT: [[LD0_3:%[0-9]+]]:fpr128 = LD1i16 [[LD0_2]], 3, killed [[COPY4]]
    ; CHECK-NEXT: [[LD1_0:%[0-9]+]]:fpr16 = LDRHui [[COPY5]], 0
    ; CHECK-NEXT: [[SECOND_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD1_0]], %subreg.hsub
    ; CHECK-NEXT: [[LD1_1:%[0-9]+]]:fpr128 = LD1i16 [[SECOND_REG]], 1, killed [[COPY6]]
    ; CHECK-NEXT: [[LD1_2:%[0-9]+]]:fpr128 = LD1i16 [[LD1_1]], 2, killed [[COPY7]]
    ; CHECK-NEXT: [[LD1_3:%[0-9]+]]:fpr128 = LD1i16 [[LD1_2]], 3, killed [[COPY8]]
    ; CHECK-NEXT: [[ZIP:%[0-9]+]]:fpr128 = ZIP1v2i64 [[LD0_3]], [[LD1_3]]
    ; CHECK-NEXT: $q0 = COPY [[ZIP]]
    ; CHECK-NEXT: RET_ReallyLR implicit $q0
    %0:gpr64common = COPY $x0
    %1:gpr64common = COPY $x1
    %2:gpr64common = COPY $x2
    %3:gpr64common = COPY $x3
    %4:gpr64common = COPY $x4
    %5:gpr64common = COPY $x5
    %6:gpr64common = COPY $x6
    %7:gpr64common = COPY $x7
    %8:gpr64common = COPY $x8
    %9:fpr16 = LDRHroX %0, killed %1, 0, 1
    %10:fpr128 = SUBREG_TO_REG 0, killed %9, %subreg.hsub
    %11:fpr128 = LD1i16 %10, 1, killed %2
    %12:fpr128 = LD1i16 %11, 2, killed %3
    %13:fpr128 = LD1i16 %12, 3, killed %4
    %14:fpr128 = LD1i16 %13, 4, killed %5
    %15:fpr128 = LD1i16 %14, 5, killed %6
    %16:fpr128 = LD1i16 %15, 6, killed %7
    %17:fpr128 = LD1i16 %16, 7, killed %8
    $q0 = COPY %17
    RET_ReallyLR implicit $q0

---
name:            split_loads_to_fpr128_i16_ui
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8

    ; CHECK-LABEL: name: split_loads_to_fpr128_i16_ui
    ; CHECK: [[COPY:%[0-9]+]]:gpr64common = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64common = COPY $x1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64common = COPY $x2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr64common = COPY $x3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr64common = COPY $x4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:gpr64common = COPY $x5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:gpr64common = COPY $x6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:gpr64common = COPY $x7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:gpr64common = COPY $x8
    ; CHECK-NEXT: [[LD_i16:%[0-9]+]]:fpr16 = LDRHui [[COPY]], 0
    ; CHECK-NEXT: [[FIRST_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD_i16]], %subreg.hsub
    ; CHECK-NEXT: [[LD0_1:%[0-9]+]]:fpr128 = LD1i16 [[FIRST_REG]], 1, killed [[COPY1]]
    ; CHECK-NEXT: [[LD0_2:%[0-9]+]]:fpr128 = LD1i16 [[LD0_1]], 2, killed [[COPY2]]
    ; CHECK-NEXT: [[LD0_3:%[0-9]+]]:fpr128 = LD1i16 [[LD0_2]], 3, killed [[COPY3]]
    ; CHECK-NEXT: [[LD1_0:%[0-9]+]]:fpr16 = LDRHui [[COPY4]], 0
    ; CHECK-NEXT: [[SECOND_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD1_0]], %subreg.hsub
    ; CHECK-NEXT: [[LD1_1:%[0-9]+]]:fpr128 = LD1i16 [[SECOND_REG]], 1, killed [[COPY5]]
    ; CHECK-NEXT: [[LD1_2:%[0-9]+]]:fpr128 = LD1i16 [[LD1_1]], 2, killed [[COPY6]]
    ; CHECK-NEXT: [[LD1_3:%[0-9]+]]:fpr128 = LD1i16 [[LD1_2]], 3, killed [[COPY7]]
    ; CHECK-NEXT: [[ZIP:%[0-9]+]]:fpr128 = ZIP1v2i64 [[LD0_3]], [[LD1_3]]
    ; CHECK-NEXT: $q0 = COPY [[ZIP]]
    ; CHECK-NEXT: RET_ReallyLR implicit $q0
    %0:gpr64common = COPY $x0
    %1:gpr64common = COPY $x1
    %2:gpr64common = COPY $x2
    %3:gpr64common = COPY $x3
    %4:gpr64common = COPY $x4
    %5:gpr64common = COPY $x5
    %6:gpr64common = COPY $x6
    %7:gpr64common = COPY $x7
    %8:gpr64common = COPY $x8
    %9:fpr16 = LDRHui %0, 0
    %10:fpr128 = SUBREG_TO_REG 0, killed %9, %subreg.hsub
    %11:fpr128 = LD1i16 %10, 1, killed %1
    %12:fpr128 = LD1i16 %11, 2, killed %2
    %13:fpr128 = LD1i16 %12, 3, killed %3
    %14:fpr128 = LD1i16 %13, 4, killed %4
    %15:fpr128 = LD1i16 %14, 5, killed %5
    %16:fpr128 = LD1i16 %15, 6, killed %6
    %17:fpr128 = LD1i16 %16, 7, killed %7
    $q0 = COPY %17
    RET_ReallyLR implicit $q0

---
name:            split_loads_to_fpr128_i8
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12, $x13, $x14, $x15, $x16

    ; CHECK-LABEL: name: split_loads_to_fpr128_i8
    ; CHECK: [[COPY:%[0-9]+]]:gpr64common = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64common = COPY $x1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64common = COPY $x2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr64common = COPY $x3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr64common = COPY $x4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:gpr64common = COPY $x5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:gpr64common = COPY $x6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:gpr64common = COPY $x7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:gpr64common = COPY $x8
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:gpr64common = COPY $x9
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:gpr64common = COPY $x10
    ; CHECK-NEXT: [[COPY11:%[0-9]+]]:gpr64common = COPY $x11
    ; CHECK-NEXT: [[COPY12:%[0-9]+]]:gpr64common = COPY $x12
    ; CHECK-NEXT: [[COPY13:%[0-9]+]]:gpr64common = COPY $x13
    ; CHECK-NEXT: [[COPY14:%[0-9]+]]:gpr64common = COPY $x14
    ; CHECK-NEXT: [[COPY15:%[0-9]+]]:gpr64common = COPY $x15
    ; CHECK-NEXT: [[COPY16:%[0-9]+]]:gpr64common = COPY $x16
    ; CHECK-NEXT: [[LD_i8:%[0-9]+]]:fpr8 = LDRBroX [[COPY]], killed [[COPY1]], 0, 0
    ; CHECK-NEXT: [[FIRST_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD_i8]], %subreg.bsub
    ; CHECK-NEXT: [[LD0_1:%[0-9]+]]:fpr128 = LD1i8 [[FIRST_REG]], 1, killed [[COPY2]]
    ; CHECK-NEXT: [[LD0_2:%[0-9]+]]:fpr128 = LD1i8 [[LD0_1]], 2, killed [[COPY3]]
    ; CHECK-NEXT: [[LD0_3:%[0-9]+]]:fpr128 = LD1i8 [[LD0_2]], 3, killed [[COPY4]]
    ; CHECK-NEXT: [[LD0_4:%[0-9]+]]:fpr128 = LD1i8 [[LD0_3]], 4, killed [[COPY5]]
    ; CHECK-NEXT: [[LD0_5:%[0-9]+]]:fpr128 = LD1i8 [[LD0_4]], 5, killed [[COPY6]]
    ; CHECK-NEXT: [[LD0_6:%[0-9]+]]:fpr128 = LD1i8 [[LD0_5]], 6, killed [[COPY7]]
    ; CHECK-NEXT: [[LD0_7:%[0-9]+]]:fpr128 = LD1i8 [[LD0_6]], 7, killed [[COPY8]]
    ; CHECK-NEXT: [[LD1_0:%[0-9]+]]:fpr8 = LDRBui [[COPY9]], 0
    ; CHECK-NEXT: [[SECOND_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD1_0]], %subreg.bsub
    ; CHECK-NEXT: [[LD1_1:%[0-9]+]]:fpr128 = LD1i8 [[SECOND_REG]], 1, killed [[COPY10]]
    ; CHECK-NEXT: [[LD1_2:%[0-9]+]]:fpr128 = LD1i8 [[LD1_1]], 2, killed [[COPY11]]
    ; CHECK-NEXT: [[LD1_3:%[0-9]+]]:fpr128 = LD1i8 [[LD1_2]], 3, killed [[COPY12]]
    ; CHECK-NEXT: [[LD1_4:%[0-9]+]]:fpr128 = LD1i8 [[LD1_3]], 4, killed [[COPY13]]
    ; CHECK-NEXT: [[LD1_5:%[0-9]+]]:fpr128 = LD1i8 [[LD1_4]], 5, killed [[COPY14]]
    ; CHECK-NEXT: [[LD1_6:%[0-9]+]]:fpr128 = LD1i8 [[LD1_5]], 6, killed [[COPY15]]
    ; CHECK-NEXT: [[LD1_7:%[0-9]+]]:fpr128 = LD1i8 [[LD1_6]], 7, killed [[COPY16]]
    ; CHECK-NEXT: [[ZIP:%[0-9]+]]:fpr128 = ZIP1v2i64 [[LD0_7]], [[LD1_7]]
    ; CHECK-NEXT: $q0 = COPY [[ZIP]]
    ; CHECK-NEXT: RET_ReallyLR implicit $q0
    %0:gpr64common = COPY $x0
    %1:gpr64common = COPY $x1
    %2:gpr64common = COPY $x2
    %3:gpr64common = COPY $x3
    %4:gpr64common = COPY $x4
    %5:gpr64common = COPY $x5
    %6:gpr64common = COPY $x6
    %7:gpr64common = COPY $x7
    %8:gpr64common = COPY $x8
    %9:gpr64common = COPY $x9
    %10:gpr64common = COPY $x10
    %11:gpr64common = COPY $x11
    %12:gpr64common = COPY $x12
    %13:gpr64common = COPY $x13
    %14:gpr64common = COPY $x14
    %15:gpr64common = COPY $x15
    %16:gpr64common = COPY $x16
    %17:fpr8 = LDRBroX %0, killed %1, 0, 0
    %18:fpr128 = SUBREG_TO_REG 0, killed %17, %subreg.bsub
    %19:fpr128 = LD1i8 %18, 1, killed %2
    %20:fpr128 = LD1i8 %19, 2, killed %3
    %21:fpr128 = LD1i8 %20, 3, killed %4
    %22:fpr128 = LD1i8 %21, 4, killed %5
    %23:fpr128 = LD1i8 %22, 5, killed %6
    %24:fpr128 = LD1i8 %23, 6, killed %7
    %25:fpr128 = LD1i8 %24, 7, killed %8
    %26:fpr128 = LD1i8 %25, 8, killed %9
    %27:fpr128 = LD1i8 %26, 9, killed %10
    %28:fpr128 = LD1i8 %27, 10, killed %11
    %29:fpr128 = LD1i8 %28, 11, killed %12
    %30:fpr128 = LD1i8 %29, 12, killed %13
    %31:fpr128 = LD1i8 %30, 13, killed %14
    %32:fpr128 = LD1i8 %31, 14, killed %15
    %33:fpr128 = LD1i8 %32, 15, killed %16
    $q0 = COPY %33
    RET_ReallyLR implicit $q0

---
name:            negative_pattern_missing_lanes
body:             |
  bb.0.entry:
    liveins: $x0, $x1

    ; CHECK-LABEL: name: negative_pattern_missing_lanes
    ; CHECK:      [[LD1:%.*]]:fpr128 = LDRQui $x1, 0
    ; CHECK-NEXT: [[LD2:%.*]]:fpr128 = LD1i32 [[LD1]]
  
    %0:gpr64common = COPY $x0
    %1:fpr128 = LDRQui $x1, 0
    %2:fpr128 = LD1i32 %1, 3, %0
    $q0 = COPY %2
    RET_ReallyLR implicit $q0

---
name:            out_of_order_lanes
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3, $x4

    ; CHECK-LABEL: name: out_of_order_lanes
    ; CHECK: [[COPY:%[0-9]+]]:gpr64common = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64common = COPY $x1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64common = COPY $x2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr64common = COPY $x3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr64common = COPY $x4
    ; CHECK-NEXT: [[LD_i32:%[0-9]+]]:fpr32 = LDRSroX [[COPY]], killed [[COPY1]], 0, 1
    ; CHECK-NEXT: [[FIRST_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD_i32]], %subreg.ssub
    ; CHECK-NEXT: [[LD0_1:%[0-9]+]]:fpr128 = LD1i32 [[FIRST_REG]], 1, killed [[COPY3]] 
    ; CHECK-NEXT: [[LD1_0:%[0-9]+]]:fpr32 = LDRSui [[COPY2]], 0
    ; CHECK-NEXT: [[SECOND_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD1_0]], %subreg.ssub
    ; CHECK-NEXT: [[LD1_1:%[0-9]+]]:fpr128 = LD1i32 [[SECOND_REG]], 1, killed [[COPY4]]
    ; CHECK-NEXT: [[ZIP:%[0-9]+]]:fpr128 = ZIP1v2i64 [[LD0_1]], [[LD1_1]]
    ; CHECK-NEXT: $q0 = COPY [[ZIP]]
    ; CHECK-NEXT: RET_ReallyLR implicit $q0
    %0:gpr64common = COPY $x0
    %1:gpr64common = COPY $x1
    %2:gpr64common = COPY $x2
    %3:gpr64common = COPY $x3
    %4:gpr64common = COPY $x4
    %5:fpr32 = LDRSroX %0, killed %1, 0, 1
    %6:fpr128 = SUBREG_TO_REG 0, killed %5, %subreg.ssub
    %7:fpr128 = LD1i32 %6, 2, killed %2
    %8:fpr128 = LD1i32 %7, 1, killed %3
    %9:fpr128 = LD1i32 %8, 3, killed %4
    $q0 = COPY %9
    RET_ReallyLR implicit $q0

---
name:            negative_pattern_no_subreg_to_reg
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3

    ; CHECK-LABEL: name: negative_pattern_no_subreg_to_reg
    ; CHECK: [[COPY:%[0-9]+]]:gpr64common = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64common = COPY $x1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64common = COPY $x2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr64common = COPY $x3
    ; CHECK-NEXT: [[INITIAL_VEC:%[0-9]+]]:fpr128 = LDRQui [[COPY]], 0
    ; CHECK-NEXT: [[LD_LANE_1:%[0-9]+]]:fpr128 = LD1i32 [[INITIAL_VEC]], 1, killed [[COPY1]]
    ; CHECK-NEXT: [[LD_LANE_2:%[0-9]+]]:fpr128 = LD1i32 [[LD_LANE_1]], 2, killed [[COPY2]]
    ; CHECK-NEXT: [[LD_LANE_3:%[0-9]+]]:fpr128 = LD1i32 [[LD_LANE_2]], 3, killed [[COPY3]]
    ; CHECK-NEXT: $q0 = COPY [[LD_LANE_3]]
    ; CHECK-NEXT: RET_ReallyLR implicit $q0
    %0:gpr64common = COPY $x0
    %1:gpr64common = COPY $x1
    %2:gpr64common = COPY $x2
    %3:gpr64common = COPY $x3
    %4:fpr128 = LDRQui %0, 0            
    %5:fpr128 = LD1i32 %4, 1, killed %1 
    %6:fpr128 = LD1i32 %5, 2, killed %2
    %7:fpr128 = LD1i32 %6, 3, killed %3
    $q0 = COPY %7
    RET_ReallyLR implicit $q0

---
name:            negative_pattern_multiple_users
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3, $x4

    ; CHECK-LABEL: name: negative_pattern_multiple_users
    ; CHECK: [[COPY:%[0-9]+]]:gpr64common = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64common = COPY $x1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64common = COPY $x2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr64common = COPY $x3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:gpr64common = COPY $x4
    ; CHECK-NEXT: [[LD_i32:%[0-9]+]]:fpr32 = LDRSroX [[COPY]], killed [[COPY1]], 0, 1
    ; CHECK-NEXT: [[FIRST_REG:%[0-9]+]]:fpr128 = SUBREG_TO_REG 0, killed [[LD_i32]], %subreg.ssub
    ; CHECK-NEXT: [[LD_LANE_1:%[0-9]+]]:fpr128 = LD1i32 [[FIRST_REG]], 1, killed [[COPY2]]
    ; CHECK-NEXT: [[LD_LANE_2:%[0-9]+]]:fpr128 = LD1i32 [[LD_LANE_1]], 2, killed [[COPY3]]
    ; CHECK-NEXT: [[LD_LANE_3:%[0-9]+]]:fpr128 = LD1i32 [[LD_LANE_2]], 3, killed [[COPY4]]
    ; CHECK-NEXT: $q0 = COPY [[LD_LANE_3]]
    ; CHECK-NEXT: $q1 = COPY [[LD_LANE_2]]
    ; CHECK-NEXT: RET_ReallyLR implicit $q0, implicit $q1
    %0:gpr64common = COPY $x0
    %1:gpr64common = COPY $x1
    %2:gpr64common = COPY $x2
    %3:gpr64common = COPY $x3
    %4:gpr64common = COPY $x4
    %5:fpr32 = LDRSroX %0, killed %1, 0, 1
    %6:fpr128 = SUBREG_TO_REG 0, killed %5, %subreg.ssub
    %7:fpr128 = LD1i32 %6, 1, killed %2
    %8:fpr128 = LD1i32 %7, 2, killed %3
    %9:fpr128 = LD1i32 %8, 3, killed %4
    $q0 = COPY %9
    $q1 = COPY %8
    RET_ReallyLR implicit $q0, implicit $q1
