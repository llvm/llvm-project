; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=aarch64-none-elf -verify-machineinstrs -global-isel=0 %s -o - | FileCheck %s --check-prefixes=CHECK,CHECK-SD
; RUN: llc -mtriple=aarch64-none-elf -verify-machineinstrs -global-isel=1 %s -o - | FileCheck %s --check-prefixes=CHECK,CHECK-GI

define <8 x i8> @test_sqxtn_v8s8v8s16(<8 x i16> %a) {
; CHECK-LABEL: test_sqxtn_v8s8v8s16:
; CHECK:       // %bb.0:
; CHECK-NEXT:    sqxtn v0.8b, v0.8h
; CHECK-NEXT:    ret
  %r = call <8 x i8> @llvm.aarch64.neon.sqxtn(<8 x i16> %a)
  ret <8 x i8> %r
}

define <4 x i16> @test_sqxtn_v4s16v4s32(<4 x i32> %a) {
; CHECK-LABEL: test_sqxtn_v4s16v4s32:
; CHECK:       // %bb.0:
; CHECK-NEXT:    sqxtn v0.4h, v0.4s
; CHECK-NEXT:    ret
  %r = call <4 x i16> @llvm.aarch64.neon.sqxtn(<4 x i32> %a)
  ret <4 x i16> %r
}

define <2 x i32> @test_sqxtn_v2s32v2s64(<2 x i64> %a) {
; CHECK-LABEL: test_sqxtn_v2s32v2s64:
; CHECK:       // %bb.0:
; CHECK-NEXT:    sqxtn v0.2s, v0.2d
; CHECK-NEXT:    ret
  %r = call <2 x i32> @llvm.aarch64.neon.sqxtn(<2 x i64> %a)
  ret <2 x i32> %r
}

define <8 x i8> @test_sqxtun_v8s8v8s16(<8 x i16> %a) {
; CHECK-LABEL: test_sqxtun_v8s8v8s16:
; CHECK:       // %bb.0:
; CHECK-NEXT:    sqxtun v0.8b, v0.8h
; CHECK-NEXT:    ret
  %r = call <8 x i8> @llvm.aarch64.neon.sqxtun(<8 x i16> %a)
  ret <8 x i8> %r
}

define <4 x i16> @test_sqxtun_v4s16v4s32(<4 x i32> %a) {
; CHECK-LABEL: test_sqxtun_v4s16v4s32:
; CHECK:       // %bb.0:
; CHECK-NEXT:    sqxtun v0.4h, v0.4s
; CHECK-NEXT:    ret
  %r = call <4 x i16> @llvm.aarch64.neon.sqxtun(<4 x i32> %a)
  ret <4 x i16> %r
}

define <2 x i32> @test_sqxtun_v2s32v2s64(<2 x i64> %a) {
; CHECK-LABEL: test_sqxtun_v2s32v2s64:
; CHECK:       // %bb.0:
; CHECK-NEXT:    sqxtun v0.2s, v0.2d
; CHECK-NEXT:    ret
  %r = call <2 x i32> @llvm.aarch64.neon.sqxtun(<2 x i64> %a)
  ret <2 x i32> %r
}

define <8 x i8> @test_uqxtn_v8s8v8s16(<8 x i16> %a) {
; CHECK-LABEL: test_uqxtn_v8s8v8s16:
; CHECK:       // %bb.0:
; CHECK-NEXT:    uqxtn v0.8b, v0.8h
; CHECK-NEXT:    ret
  %r = call <8 x i8> @llvm.aarch64.neon.uqxtn(<8 x i16> %a)
  ret <8 x i8> %r
}

define <4 x i16> @test_uqxtn_v4s16v4s32(<4 x i32> %a) {
; CHECK-LABEL: test_uqxtn_v4s16v4s32:
; CHECK:       // %bb.0:
; CHECK-NEXT:    uqxtn v0.4h, v0.4s
; CHECK-NEXT:    ret
  %r = call <4 x i16> @llvm.aarch64.neon.uqxtn(<4 x i32> %a)
  ret <4 x i16> %r
}

define <2 x i32> @test_uqxtn_v2s32v2s64(<2 x i64> %a) {
; CHECK-LABEL: test_uqxtn_v2s32v2s64:
; CHECK:       // %bb.0:
; CHECK-NEXT:    uqxtn v0.2s, v0.2d
; CHECK-NEXT:    ret
  %r = call <2 x i32> @llvm.aarch64.neon.uqxtn(<2 x i64> %a)
  ret <2 x i32> %r
}


;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CHECK-GI: {{.*}}
; CHECK-SD: {{.*}}
