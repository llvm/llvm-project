; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --extra_scrub
; RUN: llc -mtriple=aarch64 -mattr=+sha3,+sve2 -mcpu=neoverse-v1 < %s | FileCheck --check-prefix=CHECK-NOMERGE %s
; RUN: llc -mtriple=aarch64 -mattr=+sha3,+sve2 -mcpu=neoverse-v2 < %s | FileCheck --check-prefix=CHECK-NOMERGE %s
; RUN: llc -mtriple=aarch64 -mattr=+sha3,+sve2 -mcpu=neoverse-v3 < %s | FileCheck --check-prefix=CHECK-MERGE %s
; RUN: llc -mtriple=aarch64 -mattr=+sha3,+sve2 -mcpu=neoverse-n2 < %s | FileCheck --check-prefix=CHECK-NOMERGE %s
; RUN: llc -mtriple=aarch64 -mattr=+sha3,+sve2 -mcpu=neoverse-n3 < %s | FileCheck --check-prefix=CHECK-MERGE %s

define <8 x i8> @eor3_8x8(<8 x i8> %0, <8 x i8> %1, <8 x i8> %2) {
; CHECK-NOMERGE-LABEL: eor3_8x8:
; CHECK-NOMERGE:       // %bb.0:
; CHECK-NOMERGE-NEXT:    eor v1.8b, v1.8b, v2.8b
; CHECK-NOMERGE-NEXT:    eor v0.8b, v1.8b, v0.8b
; CHECK-NOMERGE-NEXT:    ret
;
; CHECK-MERGE-LABEL: eor3_8x8:
; CHECK-MERGE:       // %bb.0:
; CHECK-MERGE-NEXT:    // kill: def $d2 killed $d2 def $q2
; CHECK-MERGE-NEXT:    // kill: def $d1 killed $d1 def $q1
; CHECK-MERGE-NEXT:    // kill: def $d0 killed $d0 def $q0
; CHECK-MERGE-NEXT:    eor3 v0.16b, v1.16b, v2.16b, v0.16b
; CHECK-MERGE-NEXT:    // kill: def $d0 killed $d0 killed $q0
; CHECK-MERGE-NEXT:    ret
  %4 = xor <8 x i8> %1, %2
  %5 = xor <8 x i8> %4, %0
  ret <8 x i8> %5
}
