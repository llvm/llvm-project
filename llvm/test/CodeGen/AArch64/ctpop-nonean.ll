; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=aarch64-none-linux-gnu -mattr=-neon < %s | FileCheck %s
; RUN: llc -mtriple=aarch64-none-linux-gnu -mattr=-neon -mattr=+cssc < %s | FileCheck %s -check-prefix=CHECK-CSSC

declare i128 @llvm.ctpop.i128(i128)

define i128 @ctpop_i128(i128 %i) {
; CHECK-LABEL: ctpop_i128:
; CHECK:       // %bb.0:
; CHECK-NEXT:    lsr x9, x0, #1
; CHECK-NEXT:    lsr x10, x1, #1
; CHECK-NEXT:    mov x8, #72340172838076673 // =0x101010101010101
; CHECK-NEXT:    and x9, x9, #0x5555555555555555
; CHECK-NEXT:    and x10, x10, #0x5555555555555555
; CHECK-NEXT:    sub x9, x0, x9
; CHECK-NEXT:    sub x10, x1, x10
; CHECK-NEXT:    mov x1, xzr
; CHECK-NEXT:    lsr x11, x9, #2
; CHECK-NEXT:    lsr x12, x10, #2
; CHECK-NEXT:    and x9, x9, #0x3333333333333333
; CHECK-NEXT:    and x10, x10, #0x3333333333333333
; CHECK-NEXT:    and x11, x11, #0x3333333333333333
; CHECK-NEXT:    add x9, x9, x11
; CHECK-NEXT:    and x11, x12, #0x3333333333333333
; CHECK-NEXT:    add x9, x9, x9, lsr #4
; CHECK-NEXT:    add x10, x10, x11
; CHECK-NEXT:    add x10, x10, x10, lsr #4
; CHECK-NEXT:    and x9, x9, #0xf0f0f0f0f0f0f0f
; CHECK-NEXT:    mul x9, x9, x8
; CHECK-NEXT:    and x10, x10, #0xf0f0f0f0f0f0f0f
; CHECK-NEXT:    mul x8, x10, x8
; CHECK-NEXT:    lsr x9, x9, #56
; CHECK-NEXT:    add x0, x9, x8, lsr #56
; CHECK-NEXT:    ret
;
; CHECK-CSSC-LABEL: ctpop_i128:
; CHECK-CSSC:       // %bb.0:
; CHECK-CSSC-NEXT:    cnt x8, x1
; CHECK-CSSC-NEXT:    cnt x9, x0
; CHECK-CSSC-NEXT:    mov x1, xzr
; CHECK-CSSC-NEXT:    add x0, x9, x8
; CHECK-CSSC-NEXT:    ret
  %c = call i128 @llvm.ctpop.i128(i128 %i)
  ret i128 %c
}
