# RUN: llc -mtriple=aarch64 -run-pass=patchable-function %s -o - | FileCheck %s

# CHECK:    name: empty
# CHECK:    bb.0.entry
# CHECK:      PATCHABLE_FUNCTION_ENTER debug-location !DILocation(line: 1,
# CHECK-NEXT: RET undef $lr, debug-location !DILocation(line: 1,

## Empty entry MBB, no debug location.
# CHECK:    name: empty_entry
# CHECK:    bb.0.entry
# CHECK:      PATCHABLE_FUNCTION_ENTER{{$}}
# CHECK:    bb.1.here

--- |
  define void @empty() #0 !dbg !7 {
  entry:
    ret void, !dbg !10
  }

  define void @empty_entry() #0 !dbg !11 {
  entry:
    br label %here
  here:
    ret void, !dbg !12
  }

  attributes #0 = { "patchable-function-entry"="1" }
  !0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 11.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
  !1 = !DIFile(filename: "a.c", directory: "/tmp")
  !2 = !{}
  !3 = !{i32 7, !"Dwarf Version", i32 4}
  !4 = !{i32 2, !"Debug Info Version", i32 3}
  !5 = !{i32 1, !"wchar_size", i32 4}
  !6 = !{!"clang version 11.0.0 "}
  !7 = distinct !DISubprogram(name: "empty", scope: !1, file: !1, line: 1, type: !8, scopeLine: 1, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
  !8 = !DISubroutineType(types: !9)
  !9 = !{null}
  !10 = !DILocation(line: 1, column: 61, scope: !7)
  !11 = distinct !DISubprogram(name: "empty_entry", scope: !1, file: !1, line: 2, type: !8, scopeLine: 2, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
  !12 = !DILocation(line: 2, column: 61, scope: !11)

...
---
name:            empty
alignment:       4
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $lr
    RET undef $lr, debug-location !10

...
---
name:            empty_entry
alignment:       4
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $lr
  bb.1.here:
    liveins: $lr
    RET undef $lr, debug-location !12

...
