# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
# RUN: llc -O2 -mtriple=aarch64 -mcpu=ampere1 -simplify-mir -o - %s -run-pass=aarch64-ldst-opt | FileCheck %s --check-prefixes=CHECK
# RUN: llc -O2 -mtriple=aarch64 -simplify-mir -o - %s -run-pass=aarch64-ldst-opt | FileCheck %s --check-prefixes=CHECK-DEFAULT

--- |
  define i32 @ldp_no_size_info(ptr %0) #0 {
    %2 = ptrtoint ptr %0 to i64
    %3 = and i64 %2, -64
    %4 = inttoptr i64 %3 to ptr
    %5 = load i32, ptr %4, align 4
    %6 = getelementptr inbounds i32, ptr %4, i64 1
    %7 = load i32, ptr %6, align 4
    %8 = add nsw i32 %7, %5
    ret i32 %8
  }

...
---
name:            ldp_no_size_info
alignment:       64
tracksRegLiveness: true
tracksDebugUserValues: true
liveins:
  - { reg: '$x0' }
frameInfo:
  maxAlignment:    1
  maxCallFrameSize: 0
machineFunctionInfo:
  hasRedZone:      false
body:             |
  bb.0 (%ir-block.1):
    liveins: $x0

    ; CHECK-LABEL: name: ldp_no_size_info
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: renamable $x8 = ANDXri killed renamable $x0, 7865
    ; CHECK-NEXT: renamable $w9 = LDRWui renamable $x8, 0 :: (load unknown-size from %ir.4, align 1)
    ; CHECK-NEXT: renamable $w8 = LDRWui killed renamable $x8, 1 :: (load unknown-size from %ir.6, align 1)
    ; CHECK-NEXT: $w0 = ADDWrs killed renamable $w8, killed renamable $w9, 0
    ; CHECK-NEXT: RET undef $lr, implicit $w0
    ;
    ; CHECK-DEFAULT-LABEL: name: ldp_no_size_info
    ; CHECK-DEFAULT: liveins: $x0
    ; CHECK-DEFAULT-NEXT: {{  $}}
    ; CHECK-DEFAULT-NEXT: renamable $x8 = ANDXri killed renamable $x0, 7865
    ; CHECK-DEFAULT-NEXT: renamable $w9, renamable $w8 = LDPWi renamable $x8, 0 :: (load unknown-size from %ir.4, align 1), (load unknown-size from %ir.6, align 1)
    ; CHECK-DEFAULT-NEXT: $w0 = ADDWrs killed renamable $w8, killed renamable $w9, 0
    ; CHECK-DEFAULT-NEXT: RET undef $lr, implicit $w0
    renamable $x8 = ANDXri killed renamable $x0, 7865
    renamable $w9 = LDRWui renamable $x8, 0 :: (load unknown-size from %ir.4)
    renamable $w8 = LDRWui killed renamable $x8, 1 :: (load unknown-size from %ir.6)
    $w0 = ADDWrs killed renamable $w8, killed renamable $w9, 0
    RET undef $lr, implicit $w0

...
