# NOTE: Assertions have been autogenerated by utils/update_givaluetracking_test_checks.py UTC_ARGS: --version 5
# RUN: llc -mtriple aarch64 -mattr=+sve -passes="print<gisel-value-tracking>" %s -filetype=null 2>&1 | FileCheck %s

---
name:            ScalarConst
body:             |
  bb.0:
  ; CHECK-LABEL: name: @ScalarConst
  ; CHECK-NEXT: %0:_ KnownBits:00000000000000000000000001111000 SignBits:25
  ; CHECK-NEXT: %1:_ KnownBits:00000000000000000000000001111000 SignBits:25
    %0:_(s32) = G_CONSTANT i32 120
    %1:_(s32) = G_ASSERT_ZEXT %0(s32), 16
...
---
name:            ScalarVar
body:             |
  bb.0:
  ; CHECK-LABEL: name: @ScalarVar
  ; CHECK-NEXT: %0:_ KnownBits:???????????????????????????????? SignBits:1
  ; CHECK-NEXT: %1:_ KnownBits:0000000000000000???????????????? SignBits:16
    %0:_(s32) = COPY $w0
    %1:_(s32) = G_ASSERT_ZEXT %0(s32), 16
...
---
name:            VectorCst
body:             |
  bb.0:
  ; CHECK-LABEL: name: @VectorCst
  ; CHECK-NEXT: %0:_ KnownBits:00000000000000000000000001111000 SignBits:25
  ; CHECK-NEXT: %1:_ KnownBits:00000000000000000000000001111000 SignBits:25
  ; CHECK-NEXT: %2:_ KnownBits:00000000000000000000000001111000 SignBits:25
    %0:_(s32) = G_CONSTANT i32 120
    %1:_(<4 x s32>) = G_BUILD_VECTOR %0, %0, %0, %0
    %2:_(<4 x s32>) = G_ASSERT_ZEXT %1(<4 x s32>), 16
...
---
name:            VectorVar
body:             |
  bb.0:
  ; CHECK-LABEL: name: @VectorVar
  ; CHECK-NEXT: %0:_ KnownBits:???????????????????????????????? SignBits:1
  ; CHECK-NEXT: %1:_ KnownBits:0000000000000000???????????????? SignBits:16
    %0:_(<4 x s32>) = COPY $q0
    %1:_(<4 x s32>) = G_ASSERT_ZEXT %0(<4 x s32>), 16
...
---
name:            ScalableCst
body:             |
  bb.0:
  ; CHECK-LABEL: name: @ScalableCst
  ; CHECK-NEXT: %0:_ KnownBits:00000000000000000000000001111000 SignBits:25
  ; CHECK-NEXT: %1:_ KnownBits:00000000000000000000000001111000 SignBits:25
  ; CHECK-NEXT: %2:_ KnownBits:00000000000000000000000001111000 SignBits:25
    %0:_(s32) = G_CONSTANT i32 120
    %1:_(<vscale x 4 x s32>) = G_SPLAT_VECTOR %0
    %2:_(<vscale x 4 x s32>) = G_ASSERT_ZEXT %1(<vscale x 4 x s32>), 16
...
---
name:            ScalableVar
body:             |
  bb.0:
  ; CHECK-LABEL: name: @ScalableVar
  ; CHECK-NEXT: %0:_ KnownBits:???????????????????????????????? SignBits:1
  ; CHECK-NEXT: %1:_ KnownBits:0000000000000000???????????????? SignBits:16
    %0:_(<vscale x 4 x s32>) = COPY $z0
    %1:_(<vscale x 4 x s32>) = G_ASSERT_ZEXT %0(<vscale x 4 x s32>), 16
...
