# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple aarch64 -run-pass=aarch64-postlegalizer-combiner -verify-machineinstrs %s -o - | FileCheck %s

---
name:            and_undef
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: and_undef
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %undef:_(s32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $w0 = COPY %undef(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %undef:_(s32) = G_IMPLICIT_DEF
    %add:_(s32) = G_ADD %x, %undef
    $w0 = COPY %add
    RET_ReallyLR implicit $w0
...
---
name:            and_const
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: and_const
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %x:_(s32) = COPY $w0
    ; CHECK-NEXT: %add:_(s32) = G_CONSTANT i32 8
    ; CHECK-NEXT: $w0 = COPY %add(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %four:_(s32) = G_CONSTANT i32 4
    %add:_(s32) = G_ADD %four, %four
    $w0 = COPY %add
    RET_ReallyLR implicit $w0
...
---
name:            sub_undef
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: sub_undef
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %undef:_(s32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $w0 = COPY %undef(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %undef:_(s32) = G_IMPLICIT_DEF
    %sub:_(s32) = G_SUB %x, %undef
    $w0 = COPY %sub
    RET_ReallyLR implicit $w0
...
---
name:            mul_undef
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: mul_undef
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %mul:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $w0 = COPY %mul(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %undef:_(s32) = G_IMPLICIT_DEF
    %mul:_(s32) = G_MUL %x, %undef
    $w0 = COPY %mul
    RET_ReallyLR implicit $w0
...
---
name:            mul_0
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: mul_0
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %x:_(s32) = COPY $w0
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:_(s32) = G_SUB %x, %x
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 32
    ; CHECK-NEXT: %mul:_(s32) = G_SHL [[SUB]], [[C]](s64)
    ; CHECK-NEXT: $w0 = COPY %mul(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %zero:_(s32) = G_CONSTANT i32 0
    %mul:_(s32) = G_MUL %x, %zero
    $w0 = COPY %mul
    RET_ReallyLR implicit $w0
...
---
name:            mul_1
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: mul_1
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %x:_(s32) = COPY $w0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL %x, [[C]](s64)
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[SHL]], %x
    ; CHECK-NEXT: $w0 = COPY [[SUB]](s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %one:_(s32) = G_CONSTANT i32 1
    %mul:_(s32) = G_MUL %x, %one
    $w0 = COPY %mul
    RET_ReallyLR implicit $w0
...
---
name:            mul_2
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: mul_2
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %x:_(s32) = COPY $w0
    ; CHECK-NEXT: %two:_(s32) = G_CONSTANT i32 2
    ; CHECK-NEXT: %mul:_(s32) = G_MUL %x, %two
    ; CHECK-NEXT: $w0 = COPY %mul(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %two:_(s32) = G_CONSTANT i32 2
    %mul:_(s32) = G_MUL %x, %two
    $w0 = COPY %mul
    RET_ReallyLR implicit $w0
...
---
name:            mul_const
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: mul_const
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %x:_(s32) = COPY $w0
    ; CHECK-NEXT: %mul:_(s32) = G_CONSTANT i32 4
    ; CHECK-NEXT: $w0 = COPY %mul(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %two:_(s32) = G_CONSTANT i32 2
    %mul:_(s32) = G_MUL %two, %two
    $w0 = COPY %mul
    RET_ReallyLR implicit $w0

...
