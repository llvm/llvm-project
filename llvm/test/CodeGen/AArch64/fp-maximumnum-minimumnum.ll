; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc --mtriple=aarch64-linux-gnu < %s | FileCheck %s --check-prefix=AARCH64

declare float @llvm.maximumnum.f32(float, float)
declare double @llvm.maximumnum.f64(double, double)
declare float @llvm.minimumnum.f32(float, float)
declare double @llvm.minimumnum.f64(double, double)

define float @maximumnum_float(float %x, float %y) {
; AARCH64-LABEL: maximumnum_float:
; AARCH64:       // %bb.0:
; AARCH64-NEXT:    fmin s1, s1, s1
; AARCH64-NEXT:    fmin s0, s0, s0
; AARCH64-NEXT:    fmaxnm s0, s0, s1
; AARCH64-NEXT:    ret
  %z = tail call float @llvm.maximumnum.f32(float %x, float %y)
  ret float %z
}

define double @maximumnum_double(double %x, double %y) {
; AARCH64-LABEL: maximumnum_double:
; AARCH64:       // %bb.0:
; AARCH64-NEXT:    fmin d1, d1, d1
; AARCH64-NEXT:    fmin d0, d0, d0
; AARCH64-NEXT:    fmaxnm d0, d0, d1
; AARCH64-NEXT:    ret
  %z = call double @llvm.maximumnum.f64(double %x, double %y)
  ret double %z
}

define float @minimumnum_float(float %x, float %y) {
; AARCH64-LABEL: minimumnum_float:
; AARCH64:       // %bb.0:
; AARCH64-NEXT:    fmin s1, s1, s1
; AARCH64-NEXT:    fmin s0, s0, s0
; AARCH64-NEXT:    fminnm s0, s0, s1
; AARCH64-NEXT:    ret
  %z = call float @llvm.minimumnum.f32(float %x, float %y)
  ret float %z
}

define double @minimumnum_double(double %x, double %y) {
; AARCH64-LABEL: minimumnum_double:
; AARCH64:       // %bb.0:
; AARCH64-NEXT:    fmin d1, d1, d1
; AARCH64-NEXT:    fmin d0, d0, d0
; AARCH64-NEXT:    fminnm d0, d0, d1
; AARCH64-NEXT:    ret
  %z = call double @llvm.minimumnum.f64(double %x, double %y)
  ret double %z
}
