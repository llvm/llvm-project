# RUN: llc -o /dev/null %s -mtriple=aarch64-apple-ios -run-pass=aarch64-collect-loh -debug-only=aarch64-collect-loh 2>&1 | FileCheck %s --implicit-check-not=MCLOH_
# REQUIRES: asserts

# Check that we don't emit LOHs when there is a clobbering def of x8.
--- |
  @sym2 = local_unnamed_addr global [10000000 x i32] zeroinitializer, align 8
  @sym = local_unnamed_addr global i32 zeroinitializer, align 8

  define i32 @adrp_add_ldr() { ret i32 0 }
  define i32 @adrp_add_str() { ret i32 0 }
...

---
name:            adrp_add_ldr
alignment:       4
tracksRegLiveness: true
liveins:
  - { reg: '$x21', virtual-reg: '' }
body:             |
  bb.0:
    liveins: $x21
    renamable $x8 = ADRP target-flags(aarch64-page) @sym
    renamable $x9 = ADDXri killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @sym, 0
    renamable $x8 = ADDXri killed renamable $x21, 1, 0
    $x9 = LDRXui $x9, 0

    RET undef $lr
...

---
name:            adrp_add_str
alignment:       4
tracksRegLiveness: true
liveins:
  - { reg: '$x22', virtual-reg: '' }
  - { reg: '$x21', virtual-reg: '' }
body:             |
  bb.0:
    liveins: $x21, $x22
    renamable $x8 = ADRP target-flags(aarch64-page) @sym
    renamable $x9 = ADDXri killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @sym, 0
    renamable $x8 = ADDXri killed renamable $x21, 1, 0
    STRXui $x22, $x9, 0

    RET undef $lr
...
