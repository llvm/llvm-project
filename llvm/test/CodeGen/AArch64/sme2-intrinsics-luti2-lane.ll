; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc -mtriple=aarch64-linux-gnu -mattr=+sme2 < %s | FileCheck %s

; lookup table expand one register

define <vscale x 16 x i8> @luti2_i8(<vscale x 16 x i8> %x) {
; CHECK-LABEL: luti2_i8:
; CHECK:       // %bb.0:
; CHECK-NEXT:    luti2 z0.b, zt0, z0[15]
; CHECK-NEXT:    ret
    %res = call <vscale x 16 x i8> @llvm.aarch64.sme.luti2.lane.zt.nxv16i8(i32 0, <vscale x 16 x i8> %x, i32 15)
    ret <vscale x 16 x i8> %res
}

define <vscale x 8 x i16> @luti2_i16(<vscale x 16 x i8> %x) {
; CHECK-LABEL: luti2_i16:
; CHECK:       // %bb.0:
; CHECK-NEXT:    luti2 z0.h, zt0, z0[15]
; CHECK-NEXT:    ret
    %res = call <vscale x 8 x i16> @llvm.aarch64.sme.luti2.lane.zt.nxv8i16(i32 0, <vscale x 16 x i8> %x, i32 15)
    ret <vscale x 8 x i16> %res
}

define <vscale x 4 x i32> @luti2_i32(<vscale x 16 x i8> %x) {
; CHECK-LABEL: luti2_i32:
; CHECK:       // %bb.0:
; CHECK-NEXT:    luti2 z0.s, zt0, z0[15]
; CHECK-NEXT:    ret
    %res = call <vscale x 4 x i32> @llvm.aarch64.sme.luti2.lane.zt.nxv4i32(i32 0, <vscale x 16 x i8> %x, i32 15)
    ret <vscale x 4 x i32> %res
}

define <vscale x 8 x half> @luti2_f16(<vscale x 16 x i8> %x) {
; CHECK-LABEL: luti2_f16:
; CHECK:       // %bb.0:
; CHECK-NEXT:    luti2 z0.h, zt0, z0[15]
; CHECK-NEXT:    ret
    %res = call <vscale x 8 x half> @llvm.aarch64.sme.luti2.lane.zt.nxv8f16(i32 0, <vscale x 16 x i8> %x, i32 15)
    ret <vscale x 8 x half> %res
}

define <vscale x 8 x bfloat> @luti2_bf16(<vscale x 16 x i8> %x) {
; CHECK-LABEL: luti2_bf16:
; CHECK:       // %bb.0:
; CHECK-NEXT:    luti2 z0.h, zt0, z0[15]
; CHECK-NEXT:    ret
    %res = call <vscale x 8 x bfloat> @llvm.aarch64.sme.luti2.lane.zt.nxv8bf16(i32 0, <vscale x 16 x i8> %x, i32 15)
    ret <vscale x 8 x bfloat> %res
}

define <vscale x 4 x float> @luti2_f32(<vscale x 16 x i8> %x) {
; CHECK-LABEL: luti2_f32:
; CHECK:       // %bb.0:
; CHECK-NEXT:    luti2 z0.s, zt0, z0[15]
; CHECK-NEXT:    ret
    %res = call <vscale x 4 x float> @llvm.aarch64.sme.luti2.lane.zt.nxv4f32(i32 0, <vscale x 16 x i8> %x, i32 15)
    ret <vscale x 4 x float> %res
}

declare <vscale x 16 x i8> @llvm.aarch64.sme.luti2.lane.zt.nxv16i8(i32, <vscale x 16 x i8>, i32)
declare <vscale x 8 x i16> @llvm.aarch64.sme.luti2.lane.zt.nxv8i16(i32, <vscale x 16 x i8>, i32)
declare <vscale x 4 x i32> @llvm.aarch64.sme.luti2.lane.zt.nxv4i32(i32, <vscale x 16 x i8>, i32)
declare <vscale x 8 x half> @llvm.aarch64.sme.luti2.lane.zt.nxv8f16(i32, <vscale x 16 x i8>, i32)
declare <vscale x 8 x bfloat> @llvm.aarch64.sme.luti2.lane.zt.nxv8bf16(i32, <vscale x 16 x i8>, i32)
declare <vscale x 4 x float> @llvm.aarch64.sme.luti2.lane.zt.nxv4f32(i32, <vscale x 16 x i8>, i32)
