# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -o - %s -mtriple arm64e-apple-darwin             -verify-machineinstrs \
# RUN:     -stop-after=finalize-isel -start-before=finalize-isel | FileCheck %s
# RUN: llc -o - %s -mtriple aarch64-linux-gnu -mattr=+pauth -verify-machineinstrs \
# RUN:     -stop-after=finalize-isel -start-before=finalize-isel | FileCheck %s

# This MIR-based test contains several test cases that are hard to implement
# via an LLVM IR input. Most other test cases are in ptrauth-isel.ll file.

--- |
  @globalvar = dso_local global i64 0

  define i64 @movk_correct_blend(i64 %a, i64 %b) {
  entry:
    ret i64 0
  }

  define i64 @movk_wrong_shift_amount(i64 %a, i64 %b) {
  entry:
    ret i64 0
  }

  define i64 @movk_non_immediate_operand(i64 %a, i64 %b) {
  entry:
    ret i64 0
  }

  define i64 @movi64imm_immediate_operand(i64 %a) {
  entry:
    ret i64 0
  }

  define i64 @movi64imm_non_immediate_operand(i64 %a) {
  entry:
    ret i64 0
  }

  define i64 @movi32imm_immediate_operand(i64 %a) {
  entry:
    ret i64 0
  }

  define i64 @movi32imm_non_immediate_operand(i64 %a) {
  entry:
    ret i64 0
  }
...
---
name:            movk_correct_blend
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x0, $x1

    ; CHECK-LABEL: name: movk_correct_blend
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr64 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64 = COPY $x1
    ; CHECK-NEXT: [[MOVKXi:%[0-9]+]]:gpr64noip = MOVKXi [[COPY1]], 42, 48
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr64noip = COPY [[COPY1]]
    ; CHECK-NEXT: [[PAC:%[0-9]+]]:gpr64 = PAC [[COPY]], 2, 42, killed [[COPY2]], implicit-def dead $x16, implicit-def dead $x17
    ; CHECK-NEXT: $x0 = COPY [[PAC]]
    ; CHECK-NEXT: RET_ReallyLR implicit $x0
    %0:gpr64 = COPY $x0
    %1:gpr64 = COPY $x1
    %2:gpr64noip = MOVKXi %1, 42, 48
    %3:gpr64 = PAC %0, 2, 0, killed %2, implicit-def dead $x16, implicit-def dead $x17
    $x0 = COPY %3
    RET_ReallyLR implicit $x0
...
---
name:            movk_wrong_shift_amount
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x0, $x1

    ; CHECK-LABEL: name: movk_wrong_shift_amount
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr64 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64 = COPY $x1
    ; CHECK-NEXT: [[MOVKXi:%[0-9]+]]:gpr64noip = MOVKXi [[COPY1]], 42, 0
    ; CHECK-NEXT: [[PAC:%[0-9]+]]:gpr64 = PAC [[COPY]], 2, 0, killed [[MOVKXi]], implicit-def dead $x16, implicit-def dead $x17
    ; CHECK-NEXT: $x0 = COPY [[PAC]]
    ; CHECK-NEXT: RET_ReallyLR implicit $x0
    %0:gpr64 = COPY $x0
    %1:gpr64 = COPY $x1
    %2:gpr64noip = MOVKXi %1, 42, 0
    %3:gpr64 = PAC %0, 2, 0, killed %2, implicit-def dead $x16, implicit-def dead $x17
    $x0 = COPY %3
    RET_ReallyLR implicit $x0
...
---
name:            movk_non_immediate_operand
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x0, $x1

    ; CHECK-LABEL: name: movk_non_immediate_operand
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr64 = COPY $x0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr64 = COPY $x1
    ; CHECK-NEXT: [[MOVKXi:%[0-9]+]]:gpr64noip = MOVKXi [[COPY1]], target-flags(aarch64-pageoff, aarch64-nc) @globalvar, 48
    ; CHECK-NEXT: [[PAC:%[0-9]+]]:gpr64 = PAC [[COPY]], 2, 0, killed [[MOVKXi]], implicit-def dead $x16, implicit-def dead $x17
    ; CHECK-NEXT: $x0 = COPY [[PAC]]
    ; CHECK-NEXT: RET_ReallyLR implicit $x0
    %0:gpr64 = COPY $x0
    %1:gpr64 = COPY $x1
    %2:gpr64noip = MOVKXi %1, target-flags(aarch64-pageoff, aarch64-nc) @globalvar, 48
    %3:gpr64 = PAC %0, 2, 0, killed %2, implicit-def dead $x16, implicit-def dead $x17
    $x0 = COPY %3
    RET_ReallyLR implicit $x0
...
---
name:            movi64imm_immediate_operand
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x0, $x1

    ; CHECK-LABEL: name: movi64imm_immediate_operand
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr64 = COPY $x0
    ; CHECK-NEXT: [[MOVi64imm:%[0-9]+]]:gpr64noip = MOVi64imm 42
    ; CHECK-NEXT: [[PAC:%[0-9]+]]:gpr64 = PAC [[COPY]], 2, 42, killed $noreg, implicit-def dead $x16, implicit-def dead $x17
    ; CHECK-NEXT: $x0 = COPY [[PAC]]
    ; CHECK-NEXT: RET_ReallyLR implicit $x0
    %0:gpr64 = COPY $x0
    %1:gpr64noip = MOVi64imm 42
    %2:gpr64 = PAC %0, 2, 0, killed %1, implicit-def dead $x16, implicit-def dead $x17
    $x0 = COPY %2
    RET_ReallyLR implicit $x0
...
---
name:            movi64imm_non_immediate_operand
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x0, $x1

    ; CHECK-LABEL: name: movi64imm_non_immediate_operand
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr64 = COPY $x0
    ; CHECK-NEXT: [[MOVi64imm:%[0-9]+]]:gpr64noip = MOVi64imm target-flags(aarch64-pageoff, aarch64-nc) @globalvar
    ; CHECK-NEXT: [[PAC:%[0-9]+]]:gpr64 = PAC [[COPY]], 2, 0, killed [[MOVi64imm]], implicit-def dead $x16, implicit-def dead $x17
    ; CHECK-NEXT: $x0 = COPY [[PAC]]
    ; CHECK-NEXT: RET_ReallyLR implicit $x0
    %0:gpr64 = COPY $x0
    %1:gpr64noip = MOVi64imm target-flags(aarch64-pageoff, aarch64-nc) @globalvar
    %2:gpr64 = PAC %0, 2, 0, killed %1, implicit-def dead $x16, implicit-def dead $x17
    $x0 = COPY %2
    RET_ReallyLR implicit $x0
...
---
name:            movi32imm_immediate_operand
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x0, $x1

    ; CHECK-LABEL: name: movi32imm_immediate_operand
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr64 = COPY $x0
    ; CHECK-NEXT: [[MOVi32imm:%[0-9]+]]:gpr32 = MOVi32imm 42
    ; CHECK-NEXT: [[SUBREG_TO_REG:%[0-9]+]]:gpr64noip = SUBREG_TO_REG 0, killed [[MOVi32imm]], %subreg.sub_32
    ; CHECK-NEXT: [[PAC:%[0-9]+]]:gpr64 = PAC [[COPY]], 2, 42, killed $noreg, implicit-def dead $x16, implicit-def dead $x17
    ; CHECK-NEXT: $x0 = COPY [[PAC]]
    ; CHECK-NEXT: RET_ReallyLR implicit $x0
    %0:gpr64 = COPY $x0
    %1:gpr32 = MOVi32imm 42
    %2:gpr64noip = SUBREG_TO_REG 0, killed %1, %subreg.sub_32
    %3:gpr64 = PAC %0, 2, 0, killed %2, implicit-def dead $x16, implicit-def dead $x17
    $x0 = COPY %3
    RET_ReallyLR implicit $x0
...
---
name:            movi32imm_non_immediate_operand
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x0, $x1

    ; CHECK-LABEL: name: movi32imm_non_immediate_operand
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr64 = COPY $x0
    ; CHECK-NEXT: [[MOVi32imm:%[0-9]+]]:gpr32 = MOVi32imm target-flags(aarch64-pageoff, aarch64-nc) @globalvar
    ; CHECK-NEXT: [[SUBREG_TO_REG:%[0-9]+]]:gpr64noip = SUBREG_TO_REG 0, killed [[MOVi32imm]], %subreg.sub_32
    ; CHECK-NEXT: [[PAC:%[0-9]+]]:gpr64 = PAC [[COPY]], 2, 0, killed [[SUBREG_TO_REG]], implicit-def dead $x16, implicit-def dead $x17
    ; CHECK-NEXT: $x0 = COPY [[PAC]]
    ; CHECK-NEXT: RET_ReallyLR implicit $x0
    %0:gpr64 = COPY $x0
    %1:gpr32 = MOVi32imm target-flags(aarch64-pageoff, aarch64-nc) @globalvar
    %2:gpr64noip = SUBREG_TO_REG 0, killed %1, %subreg.sub_32
    %3:gpr64 = PAC %0, 2, 0, killed %2, implicit-def dead $x16, implicit-def dead $x17
    $x0 = COPY %3
    RET_ReallyLR implicit $x0
...
