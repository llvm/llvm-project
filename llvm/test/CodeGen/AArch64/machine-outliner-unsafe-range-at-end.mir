# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc %s -mtriple aarch64 -run-pass=machine-outliner -o - | FileCheck %s

...
---
name:           unsafe_range_at_end
tracksRegLiveness: true
machineFunctionInfo:
  hasRedZone:      false
body:             |
  bb.0:
    liveins: $x0, $x9
    ; Begin safe range of 3 instructions

    ; Outline
    ; CHECK-LABEL: name: unsafe_range_at_end
    ; CHECK: liveins: $x0, $x9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: BL @OUTLINED_FUNCTION_0, implicit-def $lr, implicit $sp, implicit-def $lr, implicit-def $x0, implicit-def $x1, implicit-def $x2, implicit-def $x3, implicit $x0, implicit $sp
    ; CHECK-NEXT: $x8 = ADDXri $x3, 3, 0
    ; CHECK-NEXT: BL @OUTLINED_FUNCTION_0, implicit-def $lr, implicit $sp, implicit-def $lr, implicit-def $x0, implicit-def $x1, implicit-def $x2, implicit-def $x3, implicit $x0, implicit $sp
    ; CHECK-NEXT: $x16 = ADDXri $x0, 16, 0
    ; CHECK-NEXT: $x9 = ADDXri $x9, 16, 0
    ; CHECK-NEXT: $x9 = ADDXri $x9, 16, 0
    ; CHECK-NEXT: $x9 = ADDXri $x9, 16, 0
    ; CHECK-NEXT: $x9 = ADDXri $x9, 16, 0
    ; CHECK-NEXT: $x9 = ADDXri $x9, 16, 0
    ; CHECK-NEXT: $x9 = ADDXri $x9, 16, 0
    ; CHECK-NEXT: $x16 = ADDXri killed $x16, 16, 0
    ; CHECK-NEXT: RET undef $x9
    $x0 = ADDXri $x0, 0, 0
    $x1 = ADDXri $x0, 1, 0
    $x2 = ADDXri $x0, 2, 0
    $x3 = ADDXri $x0, 3, 0

    ; Split here
    $x8 = ADDXri $x3, 3, 0

    ; Outline
    $x0 = ADDXri $x0, 0, 0
    $x1 = ADDXri $x0, 1, 0
    $x2 = ADDXri $x0, 2, 0
    $x3 = ADDXri $x0, 3, 0

    ; Don't outline any of this
    $x16 = ADDXri $x0, 16, 0
    $x9 = ADDXri $x9, 16, 0
    $x9 = ADDXri $x9, 16, 0
    $x9 = ADDXri $x9, 16, 0
    $x9 = ADDXri $x9, 16, 0
    $x9 = ADDXri $x9, 16, 0
    $x9 = ADDXri $x9, 16, 0
    $x16 = ADDXri killed $x16, 16, 0
    RET undef $x9
