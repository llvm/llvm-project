; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 6
; RUN: llc < %s -mtriple=s390x-linux-gnu | FileCheck %s

define i32 @test_global_stack_guard() #0 {
; CHECK-LABEL: test_global_stack_guard:
; CHECK:         .section        __stack_protector_loc,"a",@progbits
; CHECK-NEXT:    .quad   .Ltmp0
; CHECK-NEXT:    .text
; CHECK-NEXT:.Ltmp0:
; CHECK-NEXT:    larl %r13, __stack_chk_guard
; CHECK-NEXT:    mvc 1184(8,%r15), 0(%r13)
; CHECK:         la %r2, 160(%r15)
; CHECK-NEXT:    brasl %r14, foo3@PLT
; CHECK-NEXT:    clc 1184(8,%r15), 0(%r13)
; CHECK-NEXT:    jlh .LBB0_2
; CHECK-NEXT:  # %bb.1: # %entry
; CHECK-NEXT:    lhi %r2, 0
; CHECK-NEXT:    lmg %r13, %r15, 1296(%r15)
; CHECK-NEXT:    br %r14
; CHECK-NEXT:  .LBB0_2: # %entry
; CHECK-NEXT:    brasl %r14, __stack_chk_fail@PLT
entry:
  %a1 = alloca [256 x i32], align 4
  call void @foo3(ptr %a1)
  ret i32 0
}

declare void @foo3(ptr)

attributes #0 = { sspstrong "mstackprotector-guard-record" }


!llvm.module.flags = !{!0}
!0 = !{i32 1, !"stack-protector-guard", !"global"}
