; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=amdgcn--amdhsa -mcpu=gfx1100 -verify-machineinstrs -o - < %s | FileCheck -check-prefix=CHECK-SDAG -enable-var-scope %s
; RUN: llc -mtriple=amdgcn--amdhsa -mcpu=gfx1100 -verify-machineinstrs -global-isel -o - < %s | FileCheck -check-prefix=CHECK-GISEL -enable-var-scope %s

define void @test_readanylane_i1(ptr addrspace(1) %out, i1 %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_i1:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v2
; CHECK-SDAG-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)
; CHECK-SDAG-NEXT:    s_and_b32 s0, s0, 1
; CHECK-SDAG-NEXT:    v_mov_b32_e32 v2, s0
; CHECK-SDAG-NEXT:    global_store_b8 v[0:1], v2, off
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_i1:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s0, v2
; CHECK-GISEL-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)
; CHECK-GISEL-NEXT:    s_and_b32 s0, s0, 1
; CHECK-GISEL-NEXT:    v_mov_b32_e32 v2, s0
; CHECK-GISEL-NEXT:    global_store_b8 v[0:1], v2, off
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call i1 @llvm.amdgcn.readanylane.i1(i1 %src)
  store i1 %readanylane, ptr addrspace(1) %out, align 4
  ret void
}

define void @test_readanylane_i1_inreg(ptr addrspace(1) %out, i1 inreg %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_i1_inreg:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    s_and_b32 s0, s0, 1
; CHECK-SDAG-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; CHECK-SDAG-NEXT:    v_mov_b32_e32 v2, s0
; CHECK-SDAG-NEXT:    global_store_b8 v[0:1], v2, off
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_i1_inreg:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    s_and_b32 s0, s0, 1
; CHECK-GISEL-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; CHECK-GISEL-NEXT:    v_mov_b32_e32 v2, s0
; CHECK-GISEL-NEXT:    global_store_b8 v[0:1], v2, off
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call i1 @llvm.amdgcn.readanylane.i1(i1 %src)
  store i1 %readanylane, ptr addrspace(1) %out, align 4
  ret void
}

define void @test_readanylane_i1_select(ptr addrspace(1) %out, i32 %src, i32 %src1) #1 {
; CHECK-SDAG-LABEL: test_readanylane_i1_select:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_cmp_eq_u32_e32 vcc_lo, 42, v2
; CHECK-SDAG-NEXT:    v_cndmask_b32_e64 v4, 0, 1, vcc_lo
; CHECK-SDAG-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v4
; CHECK-SDAG-NEXT:    s_bitcmp1_b32 s0, 0
; CHECK-SDAG-NEXT:    s_cselect_b32 vcc_lo, -1, 0
; CHECK-SDAG-NEXT:    v_cndmask_b32_e32 v2, v3, v2, vcc_lo
; CHECK-SDAG-NEXT:    global_store_b32 v[0:1], v2, off
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_i1_select:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_cmp_eq_u32_e32 vcc_lo, 42, v2
; CHECK-GISEL-NEXT:    v_cndmask_b32_e64 v4, 0, 1, vcc_lo
; CHECK-GISEL-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s0, v4
; CHECK-GISEL-NEXT:    s_and_b32 s0, 1, s0
; CHECK-GISEL-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; CHECK-GISEL-NEXT:    v_cmp_ne_u32_e64 vcc_lo, 0, s0
; CHECK-GISEL-NEXT:    v_cndmask_b32_e32 v2, v3, v2, vcc_lo
; CHECK-GISEL-NEXT:    global_store_b32 v[0:1], v2, off
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %src, 42
  %readanylane = call i1 @llvm.amdgcn.readanylane.i1(i1 %cmp)
  %sel = select i1 %readanylane, i32 %src, i32 %src1
  store i32 %sel, ptr addrspace(1) %out, align 4
  ret void
}

define void @test_readanylane_i16(i16 %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_i16:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-SDAG-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; CHECK-SDAG-NEXT:    s_and_b32 s0, s0, 0xffff
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s0
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_i16:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s0
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call i16 @llvm.amdgcn.readanylane.i16(i16 %src)
  call void asm sideeffect "; use $0", "s"(i16 %readanylane)
  ret void
}

define void @test_readanylane_half(half %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_half:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s0
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_half:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s0
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call half @llvm.amdgcn.readanylane.f16(half %src)
  call void asm sideeffect "; use $0", "s"(half %readanylane)
  ret void
}

define void @test_readanylane_float(float %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_float:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s0
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_float:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s0
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call float @llvm.amdgcn.readanylane.f32(float %src)
  call void asm sideeffect "; use $0", "s"(float %readanylane)
  ret void
}

define void @test_readanylane_i32_immed() #1 {
; CHECK-SDAG-LABEL: test_readanylane_i32_immed:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    s_mov_b32 s0, 42
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s0
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_i32_immed:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    s_mov_b32 s0, 42
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s0
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call i32 @llvm.amdgcn.readanylane.i32(i32 42)
  call void asm sideeffect "; use $0", "s"(i32 %readanylane)
  ret void
}

define void @test_readanylane_i32_inreg(i32 inreg %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_i32_inreg:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s0
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_i32_inreg:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s0
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call i32 @llvm.amdgcn.readanylane.i32(i32 %src)
  call void asm sideeffect "; use $0", "s"(i32 %readanylane)
  ret void
}

define void @test_readanylane_i64(i64 %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_i64:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s1, v1
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s[0:1]
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_i64:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s1, v1
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s[0:1]
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call i64 @llvm.amdgcn.readanylane.i64(i64 %src)
  call void asm sideeffect "; use $0", "s"(i64 %readanylane)
  ret void
}

define void @test_readanylane_f64_immed() #1 {
; CHECK-SDAG-LABEL: test_readanylane_f64_immed:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    s_mov_b64 s[0:1], 1.0
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s[0:1]
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_f64_immed:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    s_mov_b64 s[0:1], 1.0
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s[0:1]
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call double @llvm.amdgcn.readanylane.f64(double 1.0)
  call void asm sideeffect "; use $0", "s"(double %readanylane)
  ret void
}

define void @test_readanylane_m0() #1 {
; CHECK-SDAG-LABEL: test_readanylane_m0:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    s_mov_b32 m0, -1
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use m0
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_m0:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    s_mov_b32 m0, -1
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use m0
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %m0 = call i32 asm "s_mov_b32 m0, -1", "={m0}"()
  %readanylane = call i32 @llvm.amdgcn.readanylane.i32(i32 %m0)
  call void asm sideeffect "; use $0", "s"(i32 %readanylane)
  ret void
}

define void @test_readanylane_v7i32(<7 x i32> %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_v7i32:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s6, v6
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s5, v5
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s4, v4
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s3, v3
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s2, v2
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s1, v1
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s[0:6]
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_v7i32:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s1, v1
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s2, v2
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s3, v3
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s4, v4
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s5, v5
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s6, v6
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s[0:6]
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call <7 x i32> @llvm.amdgcn.readanylane.v7i32(<7 x i32> %src)
  call void asm sideeffect "; use $0", "s"(<7 x i32> %readanylane)
  ret void
}

define void @test_readanylane_v8f16(<8 x half> %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_v8f16:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s3, v3
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s2, v2
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s1, v1
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s[0:3]
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_v8f16:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s1, v1
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s2, v2
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s3, v3
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s[0:3]
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %readanylane = call <8 x half> @llvm.amdgcn.readanylane.v8f16(<8 x half> %src)
  call void asm sideeffect "; use $0", "s"(<8 x half> %readanylane)
  ret void
}

define amdgpu_kernel void @test_readanylane_alloc() #1 {
; CHECK-SDAG-LABEL: test_readanylane_alloc:
; CHECK-SDAG:       ; %bb.0:
; CHECK-SDAG-NEXT:    s_mov_b32 s0, 0
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use s0
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_endpgm
;
; CHECK-GISEL-LABEL: test_readanylane_alloc:
; CHECK-GISEL:       ; %bb.0:
; CHECK-GISEL-NEXT:    s_mov_b32 s0, 0
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s0
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_endpgm
  %alloca = alloca i32, addrspace(5)
  %intptr = ptrtoint ptr addrspace(5) %alloca to i32
  %readanylane = call i32 @llvm.amdgcn.readanylane.i32(i32 %intptr)
  call void asm sideeffect "; use $0", "s"(i32 %readanylane)
  ret void
}

define void @test_readanylane_suck(i1 %cond, i32 %src) #1 {
; CHECK-SDAG-LABEL: test_readanylane_suck:
; CHECK-SDAG:       ; %bb.0: ; %.entry
; CHECK-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-SDAG-NEXT:    v_and_b32_e32 v0, 1, v0
; CHECK-SDAG-NEXT:    v_readfirstlane_b32 s0, v1
; CHECK-SDAG-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)
; CHECK-SDAG-NEXT:    v_cmp_eq_u32_e32 vcc_lo, 1, v0
; CHECK-SDAG-NEXT:    v_mov_b32_e32 v0, 0
; CHECK-SDAG-NEXT:    s_xor_b32 s2, vcc_lo, -1
; CHECK-SDAG-NEXT:    s_and_saveexec_b32 s1, s2
; CHECK-SDAG-NEXT:  ; %bb.1: ; %.else
; CHECK-SDAG-NEXT:    s_add_i32 s0, s0, 42
; CHECK-SDAG-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; CHECK-SDAG-NEXT:    v_mov_b32_e32 v0, s0
; CHECK-SDAG-NEXT:  ; %bb.2: ; %.endif
; CHECK-SDAG-NEXT:    s_or_b32 exec_lo, exec_lo, s1
; CHECK-SDAG-NEXT:    ;;#ASMSTART
; CHECK-SDAG-NEXT:    ; use v0
; CHECK-SDAG-NEXT:    ;;#ASMEND
; CHECK-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; CHECK-GISEL-LABEL: test_readanylane_suck:
; CHECK-GISEL:       ; %bb.0: ; %.entry
; CHECK-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-GISEL-NEXT:    v_and_b32_e32 v0, 1, v0
; CHECK-GISEL-NEXT:    v_readfirstlane_b32 s1, v1
; CHECK-GISEL-NEXT:    s_mov_b32 s0, 0
; CHECK-GISEL-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)
; CHECK-GISEL-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; CHECK-GISEL-NEXT:    s_xor_b32 s3, vcc_lo, -1
; CHECK-GISEL-NEXT:    s_and_saveexec_b32 s2, s3
; CHECK-GISEL-NEXT:  ; %bb.1: ; %.else
; CHECK-GISEL-NEXT:    s_add_i32 s0, s1, 42
; CHECK-GISEL-NEXT:  ; %bb.2: ; %.endif
; CHECK-GISEL-NEXT:    s_or_b32 exec_lo, exec_lo, s2
; CHECK-GISEL-NEXT:    ;;#ASMSTART
; CHECK-GISEL-NEXT:    ; use s0
; CHECK-GISEL-NEXT:    ;;#ASMEND
; CHECK-GISEL-NEXT:    s_setpc_b64 s[30:31]
.entry:
  %uni = call i32 @llvm.amdgcn.readanylane.i32(i32 %src)
  br i1 %cond, label %.endif, label %.else
.else:
  %uni.else = add nuw nsw i32 %uni, 42
  br label %.endif
.endif:
  %readanylane = phi i32 [ 0, %.entry ], [ %uni.else, %.else ]
  call void asm sideeffect "; use $0", "s"(i32 %readanylane)
  ret void
}

attributes #1 = { nounwind }
