# NOTE: Sub-register next-use distance calculation test
# RUN: llc -mtriple=amdgcn -mcpu=gfx900 -run-pass=amdgpu-next-use -debug-only=amdgpu-next-use %s -o /dev/null 2>&1 | FileCheck %s

---
name:            subreg_distances
alignment:       1
tracksRegLiveness: true
registers:
  - { id: 0, class: vreg_64 }
  - { id: 1, class: vgpr_32 }
  - { id: 2, class: vgpr_32 }
body: |
  bb.0:
    ; Test sub-register usage patterns
    ; %0 is a 64-bit register, we use different sub-registers
    %0:vreg_64 = REG_SEQUENCE %1, %subreg.sub0, %2, %subreg.sub1
    %1:vgpr_32 = V_MOV_B32_e32 42, implicit $exec
    %2:vgpr_32 = COPY %0.sub0
    S_ENDPGM 0

# CHECK: === NextUseAnalysis Results for subreg_distances ===
# CHECK: --- MBB_0 ---

# The test checks that sub-register analysis works correctly
# CHECK: Instr: %0:vreg_64 = REG_SEQUENCE %1, %subreg.sub0, %2, %subreg.sub1
# CHECK: Instr: %1:vgpr_32 = V_MOV_B32_e32 42, implicit $exec
# CHECK: Instr: %2:vgpr_32 = COPY %0.sub0
# CHECK: === End NextUseAnalysis Results ===
...
