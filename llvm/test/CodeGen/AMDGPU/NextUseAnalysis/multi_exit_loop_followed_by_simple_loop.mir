# RUN: llc -mtriple=amdgcn -mcpu=gfx1200 -run-pass=amdgpu-next-use -debug-only=amdgpu-next-use %s -o /dev/null 2>&1 | FileCheck %s
# 
# MIR CFG:
#
#           bb.0.entry
#               |
#       bb.1.loop1.header<---+
#          /        |        |
#bb.4.loop1.latch2  |        |
#          \        |        |
#           bb.2.Flow        |
#           /       |        |
#bb.3.loop1.latch1  |        |
#           \       |        |
#           bb.5.Flow1-------+
#               |
#            bb.6.bb
#               |
#           bb.7.loop2<------+
#               |            |
#               +------------+
#               |
#           bb.8.exit
#


# CHECK-LABEL: === NextUseAnalysis Results for test7 ===
# CHECK: --- MBB_0 ---
# CHECK: Instr: %0:vgpr_32 = COPY killed $vgpr9
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 37 ]
# CHECK: Vreg: %45[ 27 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %52[ 29 ]
# CHECK: Vreg: %66[ 37 ]
# CHECK: Vreg: %47[ 27 ]
# CHECK: Vreg: %28[ 24 ]
# CHECK: Vreg: %54[ 29 ]
# CHECK: Vreg: %49[ 27 ]
# CHECK: Vreg: %30[ 24 ]
# CHECK: Vreg: %51[ 29 ]
# CHECK: Vreg: %32[ 24 ]
# CHECK: Vreg: %39[ 27 ]
# CHECK: Vreg: %41[ 27 ]
# CHECK: Vreg: %36[ 27 ]
# CHECK: Vreg: %43[ 27 ]
# CHECK: Vreg: %57[ 29 ]
# CHECK: Vreg: %38[ 27 ]
# CHECK: Instr: %1:vgpr_32 = COPY killed $vgpr8
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 36 ]
# CHECK: Vreg: %0[ 38 ]
# CHECK: Vreg: %45[ 26 ]
# CHECK: Vreg: %26[ 23 ]
# CHECK: Vreg: %52[ 28 ]
# CHECK: Vreg: %66[ 36 ]
# CHECK: Vreg: %47[ 26 ]
# CHECK: Vreg: %28[ 23 ]
# CHECK: Vreg: %54[ 28 ]
# CHECK: Vreg: %49[ 26 ]
# CHECK: Vreg: %30[ 23 ]
# CHECK: Vreg: %51[ 28 ]
# CHECK: Vreg: %32[ 23 ]
# CHECK: Vreg: %39[ 26 ]
# CHECK: Vreg: %41[ 26 ]
# CHECK: Vreg: %36[ 26 ]
# CHECK: Vreg: %43[ 26 ]
# CHECK: Vreg: %57[ 28 ]
# CHECK: Vreg: %38[ 26 ]
# CHECK: Instr: %2:vgpr_32 = COPY killed $vgpr7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 35 ]
# CHECK: Vreg: %0[ 37 ]
# CHECK: Vreg: %45[ 25 ]
# CHECK: Vreg: %26[ 22 ]
# CHECK: Vreg: %52[ 27 ]
# CHECK: Vreg: %66[ 35 ]
# CHECK: Vreg: %47[ 25 ]
# CHECK: Vreg: %28[ 22 ]
# CHECK: Vreg: %54[ 27 ]
# CHECK: Vreg: %49[ 25 ]
# CHECK: Vreg: %30[ 22 ]
# CHECK: Vreg: %51[ 27 ]
# CHECK: Vreg: %32[ 22 ]
# CHECK: Vreg: %39[ 25 ]
# CHECK: Vreg: %1[ 29 ]
# CHECK: Vreg: %41[ 25 ]
# CHECK: Vreg: %36[ 25 ]
# CHECK: Vreg: %43[ 25 ]
# CHECK: Vreg: %57[ 27 ]
# CHECK: Vreg: %38[ 25 ]
# CHECK: Instr: %3:vgpr_32 = COPY killed $vgpr6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 34 ]
# CHECK: Vreg: %0[ 36 ]
# CHECK: Vreg: %45[ 24 ]
# CHECK: Vreg: %26[ 21 ]
# CHECK: Vreg: %52[ 26 ]
# CHECK: Vreg: %66[ 34 ]
# CHECK: Vreg: %2[ 29 ]
# CHECK: Vreg: %47[ 24 ]
# CHECK: Vreg: %28[ 21 ]
# CHECK: Vreg: %54[ 26 ]
# CHECK: Vreg: %49[ 24 ]
# CHECK: Vreg: %30[ 21 ]
# CHECK: Vreg: %51[ 26 ]
# CHECK: Vreg: %32[ 21 ]
# CHECK: Vreg: %39[ 24 ]
# CHECK: Vreg: %1[ 28 ]
# CHECK: Vreg: %41[ 24 ]
# CHECK: Vreg: %36[ 24 ]
# CHECK: Vreg: %43[ 24 ]
# CHECK: Vreg: %57[ 26 ]
# CHECK: Vreg: %38[ 24 ]
# CHECK: Instr: %4:vgpr_32 = COPY killed $vgpr5
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 33 ]
# CHECK: Vreg: %0[ 35 ]
# CHECK: Vreg: %45[ 23 ]
# CHECK: Vreg: %26[ 20 ]
# CHECK: Vreg: %52[ 25 ]
# CHECK: Vreg: %66[ 33 ]
# CHECK: Vreg: %2[ 28 ]
# CHECK: Vreg: %47[ 23 ]
# CHECK: Vreg: %28[ 20 ]
# CHECK: Vreg: %54[ 25 ]
# CHECK: Vreg: %49[ 23 ]
# CHECK: Vreg: %30[ 20 ]
# CHECK: Vreg: %51[ 25 ]
# CHECK: Vreg: %32[ 20 ]
# CHECK: Vreg: %39[ 23 ]
# CHECK: Vreg: %1[ 27 ]
# CHECK: Vreg: %41[ 23 ]
# CHECK: Vreg: %3[ 9 ]
# CHECK: Vreg: %36[ 23 ]
# CHECK: Vreg: %43[ 23 ]
# CHECK: Vreg: %57[ 25 ]
# CHECK: Vreg: %38[ 23 ]
# CHECK: Instr: %5:vgpr_32 = COPY killed $vgpr4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 32 ]
# CHECK: Vreg: %0[ 34 ]
# CHECK: Vreg: %45[ 22 ]
# CHECK: Vreg: %26[ 19 ]
# CHECK: Vreg: %52[ 24 ]
# CHECK: Vreg: %66[ 32 ]
# CHECK: Vreg: %2[ 27 ]
# CHECK: Vreg: %47[ 22 ]
# CHECK: Vreg: %28[ 19 ]
# CHECK: Vreg: %54[ 24 ]
# CHECK: Vreg: %4[ 5 ]
# CHECK: Vreg: %49[ 22 ]
# CHECK: Vreg: %30[ 19 ]
# CHECK: Vreg: %51[ 24 ]
# CHECK: Vreg: %32[ 19 ]
# CHECK: Vreg: %39[ 22 ]
# CHECK: Vreg: %1[ 26 ]
# CHECK: Vreg: %41[ 22 ]
# CHECK: Vreg: %3[ 8 ]
# CHECK: Vreg: %36[ 22 ]
# CHECK: Vreg: %43[ 22 ]
# CHECK: Vreg: %57[ 24 ]
# CHECK: Vreg: %38[ 22 ]
# CHECK: Instr: %6:vgpr_32 = COPY killed $vgpr3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 31 ]
# CHECK: Vreg: %0[ 33 ]
# CHECK: Vreg: %45[ 21 ]
# CHECK: Vreg: %26[ 18 ]
# CHECK: Vreg: %52[ 23 ]
# CHECK: Vreg: %66[ 31 ]
# CHECK: Vreg: %2[ 26 ]
# CHECK: Vreg: %47[ 21 ]
# CHECK: Vreg: %28[ 18 ]
# CHECK: Vreg: %54[ 23 ]
# CHECK: Vreg: %4[ 4 ]
# CHECK: Vreg: %49[ 21 ]
# CHECK: Vreg: %30[ 18 ]
# CHECK: Vreg: %51[ 23 ]
# CHECK: Vreg: %32[ 18 ]
# CHECK: Vreg: %39[ 21 ]
# CHECK: Vreg: %1[ 25 ]
# CHECK: Vreg: %41[ 21 ]
# CHECK: Vreg: %3[ 7 ]
# CHECK: Vreg: %36[ 21 ]
# CHECK: Vreg: %43[ 21 ]
# CHECK: Vreg: %5[ 4 ]
# CHECK: Vreg: %57[ 23 ]
# CHECK: Vreg: %38[ 21 ]
# CHECK: Instr: %7:vgpr_32 = COPY killed $vgpr2
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 30 ]
# CHECK: Vreg: %0[ 32 ]
# CHECK: Vreg: %45[ 20 ]
# CHECK: Vreg: %26[ 17 ]
# CHECK: Vreg: %52[ 22 ]
# CHECK: Vreg: %66[ 30 ]
# CHECK: Vreg: %2[ 25 ]
# CHECK: Vreg: %47[ 20 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %54[ 22 ]
# CHECK: Vreg: %4[ 3 ]
# CHECK: Vreg: %49[ 20 ]
# CHECK: Vreg: %30[ 17 ]
# CHECK: Vreg: %6[ 4 ]
# CHECK: Vreg: %51[ 22 ]
# CHECK: Vreg: %32[ 17 ]
# CHECK: Vreg: %39[ 20 ]
# CHECK: Vreg: %1[ 24 ]
# CHECK: Vreg: %41[ 20 ]
# CHECK: Vreg: %3[ 6 ]
# CHECK: Vreg: %36[ 20 ]
# CHECK: Vreg: %43[ 20 ]
# CHECK: Vreg: %5[ 3 ]
# CHECK: Vreg: %57[ 22 ]
# CHECK: Vreg: %38[ 20 ]
# CHECK: Instr: %8:vgpr_32 = COPY killed $vgpr1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 29 ]
# CHECK: Vreg: %0[ 31 ]
# CHECK: Vreg: %45[ 19 ]
# CHECK: Vreg: %26[ 16 ]
# CHECK: Vreg: %52[ 21 ]
# CHECK: Vreg: %7[ 3 ]
# CHECK: Vreg: %66[ 29 ]
# CHECK: Vreg: %2[ 24 ]
# CHECK: Vreg: %47[ 19 ]
# CHECK: Vreg: %28[ 16 ]
# CHECK: Vreg: %54[ 21 ]
# CHECK: Vreg: %4[ 2 ]
# CHECK: Vreg: %49[ 19 ]
# CHECK: Vreg: %30[ 16 ]
# CHECK: Vreg: %6[ 3 ]
# CHECK: Vreg: %51[ 21 ]
# CHECK: Vreg: %32[ 16 ]
# CHECK: Vreg: %39[ 19 ]
# CHECK: Vreg: %1[ 23 ]
# CHECK: Vreg: %41[ 19 ]
# CHECK: Vreg: %3[ 5 ]
# CHECK: Vreg: %36[ 19 ]
# CHECK: Vreg: %43[ 19 ]
# CHECK: Vreg: %5[ 2 ]
# CHECK: Vreg: %57[ 21 ]
# CHECK: Vreg: %38[ 19 ]
# CHECK: Instr: %9:vgpr_32 = COPY killed $vgpr0
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 28 ]
# CHECK: Vreg: %0[ 30 ]
# CHECK: Vreg: %45[ 18 ]
# CHECK: Vreg: %26[ 15 ]
# CHECK: Vreg: %52[ 20 ]
# CHECK: Vreg: %7[ 2 ]
# CHECK: Vreg: %66[ 28 ]
# CHECK: Vreg: %2[ 23 ]
# CHECK: Vreg: %47[ 18 ]
# CHECK: Vreg: %28[ 15 ]
# CHECK: Vreg: %54[ 20 ]
# CHECK: Vreg: %4[ 1 ]
# CHECK: Vreg: %49[ 18 ]
# CHECK: Vreg: %30[ 15 ]
# CHECK: Vreg: %6[ 2 ]
# CHECK: Vreg: %51[ 20 ]
# CHECK: Vreg: %32[ 15 ]
# CHECK: Vreg: %39[ 18 ]
# CHECK: Vreg: %1[ 22 ]
# CHECK: Vreg: %8[ 3 ]
# CHECK: Vreg: %41[ 18 ]
# CHECK: Vreg: %3[ 4 ]
# CHECK: Vreg: %36[ 18 ]
# CHECK: Vreg: %43[ 18 ]
# CHECK: Vreg: %5[ 1 ]
# CHECK: Vreg: %57[ 20 ]
# CHECK: Vreg: %38[ 18 ]
# CHECK: Instr: %10:vreg_64 = REG_SEQUENCE killed %5, %subreg.sub0, killed %4, %subreg.sub1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 27 ]
# CHECK: Vreg: %0[ 29 ]
# CHECK: Vreg: %45[ 17 ]
# CHECK: Vreg: %26[ 14 ]
# CHECK: Vreg: %52[ 19 ]
# CHECK: Vreg: %7[ 1 ]
# CHECK: Vreg: %66[ 27 ]
# CHECK: Vreg: %2[ 22 ]
# CHECK: Vreg: %47[ 17 ]
# CHECK: Vreg: %28[ 14 ]
# CHECK: Vreg: %54[ 19 ]
# CHECK: Vreg: %9[ 2 ]
# CHECK: Vreg: %4[ 0 ]
# CHECK: Vreg: %49[ 17 ]
# CHECK: Vreg: %30[ 14 ]
# CHECK: Vreg: %6[ 1 ]
# CHECK: Vreg: %51[ 19 ]
# CHECK: Vreg: %32[ 14 ]
# CHECK: Vreg: %39[ 17 ]
# CHECK: Vreg: %1[ 21 ]
# CHECK: Vreg: %8[ 2 ]
# CHECK: Vreg: %41[ 17 ]
# CHECK: Vreg: %3[ 3 ]
# CHECK: Vreg: %36[ 17 ]
# CHECK: Vreg: %43[ 17 ]
# CHECK: Vreg: %5[ 0 ]
# CHECK: Vreg: %57[ 19 ]
# CHECK: Vreg: %38[ 17 ]
# CHECK: Instr: %11:vreg_64 = REG_SEQUENCE killed %7, %subreg.sub0, killed %6, %subreg.sub1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 26 ]
# CHECK: Vreg: %0[ 28 ]
# CHECK: Vreg: %45[ 16 ]
# CHECK: Vreg: %26[ 13 ]
# CHECK: Vreg: %52[ 18 ]
# CHECK: Vreg: %7[ 0 ]
# CHECK: Vreg: %66[ 26 ]
# CHECK: Vreg: %2[ 21 ]
# CHECK: Vreg: %47[ 16 ]
# CHECK: Vreg: %28[ 13 ]
# CHECK: Vreg: %54[ 18 ]
# CHECK: Vreg: %9[ 1 ]
# CHECK: Vreg: %49[ 16 ]
# CHECK: Vreg: %30[ 13 ]
# CHECK: Vreg: %6[ 0 ]
# CHECK: Vreg: %51[ 18 ]
# CHECK: Vreg: %32[ 13 ]
# CHECK: Vreg: %39[ 16 ]
# CHECK: Vreg: %1[ 20 ]
# CHECK: Vreg: %8[ 1 ]
# CHECK: Vreg: %41[ 16 ]
# CHECK: Vreg: %3[ 2 ]
# CHECK: Vreg: %10[ 25 ]
# CHECK: Vreg: %36[ 16 ]
# CHECK: Vreg: %43[ 16 ]
# CHECK: Vreg: %57[ 18 ]
# CHECK: Vreg: %38[ 16 ]
# CHECK: Instr: %12:vreg_64 = REG_SEQUENCE killed %9, %subreg.sub0, killed %8, %subreg.sub1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 25 ]
# CHECK: Vreg: %0[ 27 ]
# CHECK: Vreg: %45[ 15 ]
# CHECK: Vreg: %26[ 12 ]
# CHECK: Vreg: %52[ 17 ]
# CHECK: Vreg: %66[ 25 ]
# CHECK: Vreg: %2[ 20 ]
# CHECK: Vreg: %47[ 15 ]
# CHECK: Vreg: %28[ 12 ]
# CHECK: Vreg: %54[ 17 ]
# CHECK: Vreg: %9[ 0 ]
# CHECK: Vreg: %49[ 15 ]
# CHECK: Vreg: %30[ 12 ]
# CHECK: Vreg: %11[ 16 ]
# CHECK: Vreg: %51[ 17 ]
# CHECK: Vreg: %32[ 12 ]
# CHECK: Vreg: %39[ 15 ]
# CHECK: Vreg: %1[ 19 ]
# CHECK: Vreg: %8[ 0 ]
# CHECK: Vreg: %41[ 15 ]
# CHECK: Vreg: %3[ 1 ]
# CHECK: Vreg: %10[ 24 ]
# CHECK: Vreg: %36[ 15 ]
# CHECK: Vreg: %43[ 15 ]
# CHECK: Vreg: %57[ 17 ]
# CHECK: Vreg: %38[ 15 ]
# CHECK: Instr: %13:vgpr_32 = V_AND_B32_e64 1, killed %3, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 24 ]
# CHECK: Vreg: %0[ 26 ]
# CHECK: Vreg: %45[ 14 ]
# CHECK: Vreg: %26[ 11 ]
# CHECK: Vreg: %52[ 16 ]
# CHECK: Vreg: %66[ 24 ]
# CHECK: Vreg: %2[ 19 ]
# CHECK: Vreg: %47[ 14 ]
# CHECK: Vreg: %28[ 11 ]
# CHECK: Vreg: %54[ 16 ]
# CHECK: Vreg: %49[ 14 ]
# CHECK: Vreg: %30[ 11 ]
# CHECK: Vreg: %11[ 15 ]
# CHECK: Vreg: %51[ 16 ]
# CHECK: Vreg: %32[ 11 ]
# CHECK: Vreg: %39[ 14 ]
# CHECK: Vreg: %1[ 18 ]
# CHECK: Vreg: %41[ 14 ]
# CHECK: Vreg: %3[ 0 ]
# CHECK: Vreg: %10[ 23 ]
# CHECK: Vreg: %36[ 14 ]
# CHECK: Vreg: %43[ 14 ]
# CHECK: Vreg: %12[ 2 ]
# CHECK: Vreg: %57[ 16 ]
# CHECK: Vreg: %38[ 14 ]
# CHECK: Instr: %14:sreg_32 = V_CMP_NE_U32_e64 1, killed %13, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 23 ]
# CHECK: Vreg: %0[ 25 ]
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %26[ 10 ]
# CHECK: Vreg: %52[ 15 ]
# CHECK: Vreg: %66[ 23 ]
# CHECK: Vreg: %2[ 18 ]
# CHECK: Vreg: %47[ 13 ]
# CHECK: Vreg: %28[ 10 ]
# CHECK: Vreg: %54[ 15 ]
# CHECK: Vreg: %49[ 13 ]
# CHECK: Vreg: %30[ 10 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %51[ 15 ]
# CHECK: Vreg: %32[ 10 ]
# CHECK: Vreg: %13[ 0 ]
# CHECK: Vreg: %39[ 13 ]
# CHECK: Vreg: %1[ 17 ]
# CHECK: Vreg: %41[ 13 ]
# CHECK: Vreg: %10[ 22 ]
# CHECK: Vreg: %36[ 13 ]
# CHECK: Vreg: %43[ 13 ]
# CHECK: Vreg: %12[ 1 ]
# CHECK: Vreg: %57[ 15 ]
# CHECK: Vreg: %38[ 13 ]
# CHECK: Instr: %15:vgpr_32 = GLOBAL_LOAD_UBYTE %12, 0, 0, implicit $exec :: (load (s8) from %ir.p1, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 22 ]
# CHECK: Vreg: %0[ 24 ]
# CHECK: Vreg: %45[ 12 ]
# CHECK: Vreg: %26[ 9 ]
# CHECK: Vreg: %52[ 14 ]
# CHECK: Vreg: %14[ 11 ]
# CHECK: Vreg: %66[ 22 ]
# CHECK: Vreg: %2[ 17 ]
# CHECK: Vreg: %47[ 12 ]
# CHECK: Vreg: %28[ 9 ]
# CHECK: Vreg: %54[ 14 ]
# CHECK: Vreg: %49[ 12 ]
# CHECK: Vreg: %30[ 9 ]
# CHECK: Vreg: %11[ 13 ]
# CHECK: Vreg: %51[ 14 ]
# CHECK: Vreg: %32[ 9 ]
# CHECK: Vreg: %39[ 12 ]
# CHECK: Vreg: %1[ 16 ]
# CHECK: Vreg: %41[ 12 ]
# CHECK: Vreg: %10[ 21 ]
# CHECK: Vreg: %36[ 12 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %12[ 0 ]
# CHECK: Vreg: %57[ 14 ]
# CHECK: Vreg: %38[ 12 ]
# CHECK: Instr: %16:vgpr_32 = GLOBAL_LOAD_UBYTE %12, 1, 0, implicit $exec :: (load (s8) from %ir.p1 + 1, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 21 ]
# CHECK: Vreg: %0[ 23 ]
# CHECK: Vreg: %45[ 11 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %52[ 13 ]
# CHECK: Vreg: %14[ 10 ]
# CHECK: Vreg: %66[ 21 ]
# CHECK: Vreg: %2[ 16 ]
# CHECK: Vreg: %47[ 11 ]
# CHECK: Vreg: %28[ 8 ]
# CHECK: Vreg: %54[ 13 ]
# CHECK: Vreg: %49[ 11 ]
# CHECK: Vreg: %30[ 8 ]
# CHECK: Vreg: %11[ 12 ]
# CHECK: Vreg: %51[ 13 ]
# CHECK: Vreg: %32[ 8 ]
# CHECK: Vreg: %39[ 11 ]
# CHECK: Vreg: %1[ 15 ]
# CHECK: Vreg: %15[ 1 ]
# CHECK: Vreg: %41[ 11 ]
# CHECK: Vreg: %10[ 20 ]
# CHECK: Vreg: %36[ 11 ]
# CHECK: Vreg: %43[ 11 ]
# CHECK: Vreg: %12[ 0 ]
# CHECK: Vreg: %57[ 13 ]
# CHECK: Vreg: %38[ 11 ]
# CHECK: Instr: %17:vgpr_32 = V_LSHL_OR_B32_e64 killed %16, 8, killed %15, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 20 ]
# CHECK: Vreg: %0[ 22 ]
# CHECK: Vreg: %45[ 10 ]
# CHECK: Vreg: %26[ 7 ]
# CHECK: Vreg: %52[ 12 ]
# CHECK: Vreg: %14[ 9 ]
# CHECK: Vreg: %66[ 20 ]
# CHECK: Vreg: %2[ 15 ]
# CHECK: Vreg: %47[ 10 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %54[ 12 ]
# CHECK: Vreg: %16[ 0 ]
# CHECK: Vreg: %49[ 10 ]
# CHECK: Vreg: %30[ 7 ]
# CHECK: Vreg: %11[ 11 ]
# CHECK: Vreg: %51[ 12 ]
# CHECK: Vreg: %32[ 7 ]
# CHECK: Vreg: %39[ 10 ]
# CHECK: Vreg: %1[ 14 ]
# CHECK: Vreg: %15[ 0 ]
# CHECK: Vreg: %41[ 10 ]
# CHECK: Vreg: %10[ 19 ]
# CHECK: Vreg: %36[ 10 ]
# CHECK: Vreg: %43[ 10 ]
# CHECK: Vreg: %12[ 1 ]
# CHECK: Vreg: %57[ 12 ]
# CHECK: Vreg: %38[ 10 ]
# CHECK: Instr: %18:vgpr_32 = GLOBAL_LOAD_UBYTE %12, 2, 0, implicit $exec :: (load (s8) from %ir.p1 + 2, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 19 ]
# CHECK: Vreg: %0[ 21 ]
# CHECK: Vreg: %45[ 9 ]
# CHECK: Vreg: %26[ 6 ]
# CHECK: Vreg: %52[ 11 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %66[ 19 ]
# CHECK: Vreg: %2[ 14 ]
# CHECK: Vreg: %47[ 9 ]
# CHECK: Vreg: %28[ 6 ]
# CHECK: Vreg: %54[ 11 ]
# CHECK: Vreg: %49[ 9 ]
# CHECK: Vreg: %30[ 6 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %51[ 11 ]
# CHECK: Vreg: %32[ 6 ]
# CHECK: Vreg: %39[ 9 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %41[ 9 ]
# CHECK: Vreg: %10[ 18 ]
# CHECK: Vreg: %36[ 9 ]
# CHECK: Vreg: %17[ 3 ]
# CHECK: Vreg: %43[ 9 ]
# CHECK: Vreg: %12[ 0 ]
# CHECK: Vreg: %57[ 11 ]
# CHECK: Vreg: %38[ 9 ]
# CHECK: Instr: %19:vgpr_32 = GLOBAL_LOAD_UBYTE killed %12, 3, 0, implicit $exec :: (load (s8) from %ir.p1 + 3, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 18 ]
# CHECK: Vreg: %0[ 20 ]
# CHECK: Vreg: %45[ 8 ]
# CHECK: Vreg: %26[ 5 ]
# CHECK: Vreg: %52[ 10 ]
# CHECK: Vreg: %14[ 7 ]
# CHECK: Vreg: %66[ 18 ]
# CHECK: Vreg: %2[ 13 ]
# CHECK: Vreg: %47[ 8 ]
# CHECK: Vreg: %28[ 5 ]
# CHECK: Vreg: %54[ 10 ]
# CHECK: Vreg: %49[ 8 ]
# CHECK: Vreg: %30[ 5 ]
# CHECK: Vreg: %11[ 9 ]
# CHECK: Vreg: %18[ 1 ]
# CHECK: Vreg: %51[ 10 ]
# CHECK: Vreg: %32[ 5 ]
# CHECK: Vreg: %39[ 8 ]
# CHECK: Vreg: %1[ 12 ]
# CHECK: Vreg: %41[ 8 ]
# CHECK: Vreg: %10[ 17 ]
# CHECK: Vreg: %36[ 8 ]
# CHECK: Vreg: %17[ 2 ]
# CHECK: Vreg: %43[ 8 ]
# CHECK: Vreg: %12[ 0 ]
# CHECK: Vreg: %57[ 10 ]
# CHECK: Vreg: %38[ 8 ]
# CHECK: Instr: %20:vgpr_32 = V_LSHL_OR_B32_e64 killed %19, 8, killed %18, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 17 ]
# CHECK: Vreg: %0[ 19 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %26[ 4 ]
# CHECK: Vreg: %52[ 9 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %66[ 17 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %28[ 4 ]
# CHECK: Vreg: %54[ 9 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %30[ 4 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %18[ 0 ]
# CHECK: Vreg: %51[ 9 ]
# CHECK: Vreg: %32[ 4 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %10[ 16 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %17[ 1 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %57[ 9 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: Vreg: %19[ 0 ]
# CHECK: Instr: %21:vgpr_32 = V_LSHL_OR_B32_e64 killed %20, 16, killed %17, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 16 ]
# CHECK: Vreg: %0[ 18 ]
# CHECK: Vreg: %45[ 6 ]
# CHECK: Vreg: %26[ 3 ]
# CHECK: Vreg: %52[ 8 ]
# CHECK: Vreg: %14[ 5 ]
# CHECK: Vreg: %66[ 16 ]
# CHECK: Vreg: %2[ 11 ]
# CHECK: Vreg: %47[ 6 ]
# CHECK: Vreg: %28[ 3 ]
# CHECK: Vreg: %54[ 8 ]
# CHECK: Vreg: %49[ 6 ]
# CHECK: Vreg: %30[ 3 ]
# CHECK: Vreg: %11[ 7 ]
# CHECK: Vreg: %51[ 8 ]
# CHECK: Vreg: %32[ 3 ]
# CHECK: Vreg: %39[ 6 ]
# CHECK: Vreg: %20[ 0 ]
# CHECK: Vreg: %1[ 10 ]
# CHECK: Vreg: %41[ 6 ]
# CHECK: Vreg: %10[ 15 ]
# CHECK: Vreg: %36[ 6 ]
# CHECK: Vreg: %17[ 0 ]
# CHECK: Vreg: %43[ 6 ]
# CHECK: Vreg: %57[ 8 ]
# CHECK: Vreg: %38[ 6 ]
# CHECK: Instr: %22:vgpr_32 = V_MOV_B32_e32 10, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 15 ]
# CHECK: Vreg: %0[ 17 ]
# CHECK: Vreg: %45[ 5 ]
# CHECK: Vreg: %26[ 2 ]
# CHECK: Vreg: %52[ 7 ]
# CHECK: Vreg: %14[ 4 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ 15 ]
# CHECK: Vreg: %2[ 10 ]
# CHECK: Vreg: %47[ 5 ]
# CHECK: Vreg: %28[ 2 ]
# CHECK: Vreg: %54[ 7 ]
# CHECK: Vreg: %49[ 5 ]
# CHECK: Vreg: %30[ 2 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %51[ 7 ]
# CHECK: Vreg: %32[ 2 ]
# CHECK: Vreg: %39[ 5 ]
# CHECK: Vreg: %1[ 9 ]
# CHECK: Vreg: %41[ 5 ]
# CHECK: Vreg: %10[ 14 ]
# CHECK: Vreg: %36[ 5 ]
# CHECK: Vreg: %43[ 5 ]
# CHECK: Vreg: %57[ 7 ]
# CHECK: Vreg: %38[ 5 ]
# CHECK: Instr: %23:sreg_32 = S_MOV_B32 0
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 14 ]
# CHECK: Vreg: %0[ 16 ]
# CHECK: Vreg: %45[ 4 ]
# CHECK: Vreg: %26[ 1 ]
# CHECK: Vreg: %52[ 6 ]
# CHECK: Vreg: %14[ 3 ]
# CHECK: Vreg: %21[ 1 ]
# CHECK: Vreg: %66[ 14 ]
# CHECK: Vreg: %2[ 9 ]
# CHECK: Vreg: %47[ 4 ]
# CHECK: Vreg: %28[ 1 ]
# CHECK: Vreg: %54[ 6 ]
# CHECK: Vreg: %49[ 4 ]
# CHECK: Vreg: %30[ 1 ]
# CHECK: Vreg: %11[ 5 ]
# CHECK: Vreg: %51[ 6 ]
# CHECK: Vreg: %32[ 1 ]
# CHECK: Vreg: %39[ 4 ]
# CHECK: Vreg: %1[ 8 ]
# CHECK: Vreg: %41[ 4 ]
# CHECK: Vreg: %22[ 1 ]
# CHECK: Vreg: %10[ 13 ]
# CHECK: Vreg: %36[ 4 ]
# CHECK: Vreg: %43[ 4 ]
# CHECK: Vreg: %57[ 6 ]
# CHECK: Vreg: %38[ 4 ]
# CHECK: Instr: %24:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 13 ]
# CHECK: Vreg: %0[ 15 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 0 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %14[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ 13 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %28[ 0 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 0 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %41[ 3 ]
# CHECK: Vreg: %22[ 0 ]
# CHECK: Vreg: %10[ 12 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ 13 ]
# CHECK: Vreg: %0[ 15 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 0 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %14[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ 13 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %28[ 0 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 0 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %41[ 3 ]
# CHECK: Vreg: %22[ 0 ]
# CHECK: Vreg: %10[ 12 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ 0 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: --- MBB_1 ---
# CHECK: Instr: %25:sreg_32 = PHI %23, %bb.0, %26, %bb.5
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+13 ]
# CHECK: Vreg: %0[ LoopTag+15 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 0 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %14[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+13 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %28[ 0 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 0 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %41[ 3 ]
# CHECK: Vreg: %22[ 0 ]
# CHECK: Vreg: %10[ LoopTag+12 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ 0 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: Instr: %27:vgpr_32 = PHI %24, %bb.0, %28, %bb.5
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+13 ]
# CHECK: Vreg: %0[ LoopTag+15 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %14[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+13 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %28[ 0 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 9 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %25[ 7 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %41[ 3 ]
# CHECK: Vreg: %22[ 0 ]
# CHECK: Vreg: %10[ LoopTag+12 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ 0 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: Instr: %29:vgpr_32 = PHI %22, %bb.0, %30, %bb.5
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+13 ]
# CHECK: Vreg: %0[ LoopTag+15 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %14[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+13 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 9 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %25[ 7 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %27[ 3 ]
# CHECK: Vreg: %41[ 3 ]
# CHECK: Vreg: %22[ 0 ]
# CHECK: Vreg: %10[ LoopTag+12 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ 9 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: Instr: %31:vgpr_32 = PHI %21, %bb.0, %32, %bb.5
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+13 ]
# CHECK: Vreg: %0[ LoopTag+15 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %14[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+13 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 9 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %25[ 7 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %27[ 3 ]
# CHECK: Vreg: %41[ 3 ]
# CHECK: Vreg: %22[ 9 ]
# CHECK: Vreg: %29[ 3 ]
# CHECK: Vreg: %10[ LoopTag+12 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ 9 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: Instr: %33:sreg_32 = S_MOV_B32 -1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+12 ]
# CHECK: Vreg: %0[ LoopTag+14 ]
# CHECK: Vreg: %45[ 2 ]
# CHECK: Vreg: %52[ 4 ]
# CHECK: Vreg: %14[ 1 ]
# CHECK: Vreg: %21[ 4 ]
# CHECK: Vreg: %66[ LoopTag+12 ]
# CHECK: Vreg: %2[ 7 ]
# CHECK: Vreg: %47[ 2 ]
# CHECK: Vreg: %54[ 4 ]
# CHECK: Vreg: %23[ 8 ]
# CHECK: Vreg: %49[ 2 ]
# CHECK: Vreg: %11[ 3 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %51[ 4 ]
# CHECK: Vreg: %39[ 2 ]
# CHECK: Vreg: %1[ 6 ]
# CHECK: Vreg: %27[ 2 ]
# CHECK: Vreg: %41[ 2 ]
# CHECK: Vreg: %22[ 8 ]
# CHECK: Vreg: %29[ 2 ]
# CHECK: Vreg: %10[ LoopTag+11 ]
# CHECK: Vreg: %36[ 2 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ 8 ]
# CHECK: Vreg: %31[ LoopTag+10 ]
# CHECK: Vreg: %57[ 4 ]
# CHECK: Vreg: %38[ 2 ]
# CHECK: Instr: %34:sreg_32 = SI_IF %14, %bb.2, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+11 ]
# CHECK: Vreg: %0[ LoopTag+13 ]
# CHECK: Vreg: %45[ 1 ]
# CHECK: Vreg: %52[ 3 ]
# CHECK: Vreg: %33[ 1 ]
# CHECK: Vreg: %14[ 0 ]
# CHECK: Vreg: %21[ 3 ]
# CHECK: Vreg: %66[ LoopTag+11 ]
# CHECK: Vreg: %2[ 6 ]
# CHECK: Vreg: %47[ 1 ]
# CHECK: Vreg: %54[ 3 ]
# CHECK: Vreg: %23[ 7 ]
# CHECK: Vreg: %49[ 1 ]
# CHECK: Vreg: %11[ 2 ]
# CHECK: Vreg: %25[ 5 ]
# CHECK: Vreg: %51[ 3 ]
# CHECK: Vreg: %39[ 1 ]
# CHECK: Vreg: %1[ 5 ]
# CHECK: Vreg: %27[ 1 ]
# CHECK: Vreg: %41[ 1 ]
# CHECK: Vreg: %22[ 7 ]
# CHECK: Vreg: %29[ 1 ]
# CHECK: Vreg: %10[ LoopTag+10 ]
# CHECK: Vreg: %36[ 1 ]
# CHECK: Vreg: %43[ 1 ]
# CHECK: Vreg: %24[ 7 ]
# CHECK: Vreg: %31[ LoopTag+9 ]
# CHECK: Vreg: %57[ 3 ]
# CHECK: Vreg: %38[ 1 ]
# CHECK: Instr: S_BRANCH %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 1 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %1[ 4 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 0 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 1 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %1[ 4 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 0 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: --- MBB_2 ---
# CHECK: Instr: %35:sreg_32 = PHI %33, %bb.1, %36, %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 0 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: Instr: %37:vgpr_32 = PHI undef %38:vgpr_32, %bb.1, %39, %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %35[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 0 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 9 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: Instr: %40:vgpr_32 = PHI undef %38:vgpr_32, %bb.1, %41, %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %35[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %37[ 2 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 9 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 0 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 9 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: Instr: %42:vgpr_32 = PHI undef %38:vgpr_32, %bb.1, %43, %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %40[ 2 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %35[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %37[ 2 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 9 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 9 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 9 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: Instr: %44:vgpr_32 = PHI undef %38:vgpr_32, %bb.1, %45, %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %40[ 2 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %35[ 2 ]
# CHECK: Vreg: %42[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %37[ 2 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 9 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 9 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 9 ]
# CHECK: Vreg: %43[ 9 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: Instr: %46:vgpr_32 = PHI %29, %bb.1, undef %47:vgpr_32, %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 9 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %40[ 2 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %35[ 2 ]
# CHECK: Vreg: %42[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %37[ 2 ]
# CHECK: Vreg: %44[ 2 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 9 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 9 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 9 ]
# CHECK: Vreg: %43[ 9 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 9 ]
# CHECK: Instr: %48:vgpr_32 = PHI %27, %bb.1, undef %49:vgpr_32, %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 9 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %40[ 2 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 9 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %35[ 2 ]
# CHECK: Vreg: %42[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %37[ 2 ]
# CHECK: Vreg: %44[ 2 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 9 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %46[ 3 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 9 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 9 ]
# CHECK: Vreg: %43[ 9 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 9 ]
# CHECK: Instr: %50:sreg_32 = SI_ELSE killed %34, %bb.5, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+9 ]
# CHECK: Vreg: %0[ LoopTag+11 ]
# CHECK: Vreg: %45[ 8 ]
# CHECK: Vreg: %52[ 1 ]
# CHECK: Vreg: %14[ 7 ]
# CHECK: Vreg: %40[ 1 ]
# CHECK: Vreg: %21[ 1 ]
# CHECK: Vreg: %66[ LoopTag+9 ]
# CHECK: Vreg: %2[ 4 ]
# CHECK: Vreg: %47[ 8 ]
# CHECK: Vreg: %54[ 1 ]
# CHECK: Vreg: %35[ 1 ]
# CHECK: Vreg: %42[ 1 ]
# CHECK: Vreg: %23[ 5 ]
# CHECK: Vreg: %49[ 8 ]
# CHECK: Vreg: %11[ 9 ]
# CHECK: Vreg: %37[ 1 ]
# CHECK: Vreg: %44[ 1 ]
# CHECK: Vreg: %25[ 3 ]
# CHECK: Vreg: %51[ 1 ]
# CHECK: Vreg: %39[ 8 ]
# CHECK: Vreg: %1[ 12 ]
# CHECK: Vreg: %46[ 2 ]
# CHECK: Vreg: %34[ 0 ]
# CHECK: Vreg: %41[ 8 ]
# CHECK: Vreg: %22[ 5 ]
# CHECK: Vreg: %48[ 3 ]
# CHECK: Vreg: %10[ LoopTag+8 ]
# CHECK: Vreg: %36[ 8 ]
# CHECK: Vreg: %43[ 8 ]
# CHECK: Vreg: %24[ 5 ]
# CHECK: Vreg: %31[ LoopTag+7 ]
# CHECK: Vreg: %57[ 1 ]
# CHECK: Vreg: %38[ 8 ]
# CHECK: Instr: S_BRANCH %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %40[ 0 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 3 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %54[ 0 ]
# CHECK: Vreg: %35[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %37[ 0 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %46[ 1 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %48[ 2 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 0 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %40[ 0 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 3 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %54[ 0 ]
# CHECK: Vreg: %35[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %37[ 0 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %46[ 1 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %48[ 2 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 0 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: --- MBB_3 ---
# CHECK: Instr: %51:vgpr_32 = V_SUB_U32_e64 %21, killed %46, 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+15 ]
# CHECK: Vreg: %0[ LoopTag+17 ]
# CHECK: Vreg: %45[ 14 ]
# CHECK: Vreg: %14[ 13 ]
# CHECK: Vreg: %40[ 7 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+15 ]
# CHECK: Vreg: %2[ 2 ]
# CHECK: Vreg: %47[ 14 ]
# CHECK: Vreg: %35[ 4 ]
# CHECK: Vreg: %42[ 7 ]
# CHECK: Vreg: %23[ 11 ]
# CHECK: Vreg: %49[ 14 ]
# CHECK: Vreg: %11[ 15 ]
# CHECK: Vreg: %37[ 7 ]
# CHECK: Vreg: %44[ 7 ]
# CHECK: Vreg: %25[ 9 ]
# CHECK: Vreg: %39[ 14 ]
# CHECK: Vreg: %1[ 18 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %41[ 14 ]
# CHECK: Vreg: %22[ 11 ]
# CHECK: Vreg: %48[ 1 ]
# CHECK: Vreg: %10[ LoopTag+14 ]
# CHECK: Vreg: %36[ 14 ]
# CHECK: Vreg: %43[ 14 ]
# CHECK: Vreg: %24[ 11 ]
# CHECK: Vreg: %50[ 8 ]
# CHECK: Vreg: %31[ LoopTag+13 ]
# CHECK: Vreg: %38[ 14 ]
# CHECK: Instr: %52:vgpr_32 = V_ADD_U32_e64 1, killed %48, 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+14 ]
# CHECK: Vreg: %0[ LoopTag+16 ]
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %14[ 12 ]
# CHECK: Vreg: %40[ 6 ]
# CHECK: Vreg: %21[ 6 ]
# CHECK: Vreg: %66[ LoopTag+14 ]
# CHECK: Vreg: %2[ 1 ]
# CHECK: Vreg: %47[ 13 ]
# CHECK: Vreg: %35[ 3 ]
# CHECK: Vreg: %42[ 6 ]
# CHECK: Vreg: %23[ 10 ]
# CHECK: Vreg: %49[ 13 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %37[ 6 ]
# CHECK: Vreg: %44[ 6 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %51[ 6 ]
# CHECK: Vreg: %39[ 13 ]
# CHECK: Vreg: %1[ 17 ]
# CHECK: Vreg: %41[ 13 ]
# CHECK: Vreg: %22[ 10 ]
# CHECK: Vreg: %48[ 0 ]
# CHECK: Vreg: %10[ LoopTag+13 ]
# CHECK: Vreg: %36[ 13 ]
# CHECK: Vreg: %43[ 13 ]
# CHECK: Vreg: %24[ 10 ]
# CHECK: Vreg: %50[ 7 ]
# CHECK: Vreg: %31[ LoopTag+12 ]
# CHECK: Vreg: %38[ 13 ]
# CHECK: Instr: %53:sreg_32 = V_CMP_GE_U32_e64 %52, %2, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+13 ]
# CHECK: Vreg: %0[ LoopTag+15 ]
# CHECK: Vreg: %45[ 12 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %14[ 11 ]
# CHECK: Vreg: %40[ 5 ]
# CHECK: Vreg: %21[ 5 ]
# CHECK: Vreg: %66[ LoopTag+13 ]
# CHECK: Vreg: %2[ 0 ]
# CHECK: Vreg: %47[ 12 ]
# CHECK: Vreg: %35[ 2 ]
# CHECK: Vreg: %42[ 5 ]
# CHECK: Vreg: %23[ 9 ]
# CHECK: Vreg: %49[ 12 ]
# CHECK: Vreg: %11[ 13 ]
# CHECK: Vreg: %37[ 5 ]
# CHECK: Vreg: %44[ 5 ]
# CHECK: Vreg: %25[ 7 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %39[ 12 ]
# CHECK: Vreg: %1[ 16 ]
# CHECK: Vreg: %41[ 12 ]
# CHECK: Vreg: %22[ 9 ]
# CHECK: Vreg: %10[ LoopTag+12 ]
# CHECK: Vreg: %36[ 12 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ 9 ]
# CHECK: Vreg: %50[ 6 ]
# CHECK: Vreg: %31[ LoopTag+11 ]
# CHECK: Vreg: %38[ 12 ]
# CHECK: Instr: %54:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+12 ]
# CHECK: Vreg: %0[ LoopTag+14 ]
# CHECK: Vreg: %45[ 11 ]
# CHECK: Vreg: %52[ 4 ]
# CHECK: Vreg: %14[ 10 ]
# CHECK: Vreg: %40[ 4 ]
# CHECK: Vreg: %21[ 4 ]
# CHECK: Vreg: %66[ LoopTag+12 ]
# CHECK: Vreg: %2[ 16 ]
# CHECK: Vreg: %47[ 11 ]
# CHECK: Vreg: %35[ 1 ]
# CHECK: Vreg: %42[ 4 ]
# CHECK: Vreg: %23[ 8 ]
# CHECK: Vreg: %49[ 11 ]
# CHECK: Vreg: %11[ 12 ]
# CHECK: Vreg: %37[ 4 ]
# CHECK: Vreg: %44[ 4 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %51[ 4 ]
# CHECK: Vreg: %39[ 11 ]
# CHECK: Vreg: %1[ 15 ]
# CHECK: Vreg: %53[ 2 ]
# CHECK: Vreg: %41[ 11 ]
# CHECK: Vreg: %22[ 8 ]
# CHECK: Vreg: %10[ LoopTag+11 ]
# CHECK: Vreg: %36[ 11 ]
# CHECK: Vreg: %43[ 11 ]
# CHECK: Vreg: %24[ 8 ]
# CHECK: Vreg: %50[ 5 ]
# CHECK: Vreg: %31[ LoopTag+10 ]
# CHECK: Vreg: %38[ 11 ]
# CHECK: Instr: %55:sreg_32 = S_ANDN2_B32 killed %35, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+11 ]
# CHECK: Vreg: %0[ LoopTag+13 ]
# CHECK: Vreg: %45[ 10 ]
# CHECK: Vreg: %52[ 3 ]
# CHECK: Vreg: %14[ 9 ]
# CHECK: Vreg: %40[ 3 ]
# CHECK: Vreg: %21[ 3 ]
# CHECK: Vreg: %66[ LoopTag+11 ]
# CHECK: Vreg: %2[ 15 ]
# CHECK: Vreg: %47[ 10 ]
# CHECK: Vreg: %54[ 3 ]
# CHECK: Vreg: %35[ 0 ]
# CHECK: Vreg: %42[ 3 ]
# CHECK: Vreg: %23[ 7 ]
# CHECK: Vreg: %49[ 10 ]
# CHECK: Vreg: %11[ 11 ]
# CHECK: Vreg: %37[ 3 ]
# CHECK: Vreg: %44[ 3 ]
# CHECK: Vreg: %25[ 5 ]
# CHECK: Vreg: %51[ 3 ]
# CHECK: Vreg: %39[ 10 ]
# CHECK: Vreg: %1[ 14 ]
# CHECK: Vreg: %53[ 1 ]
# CHECK: Vreg: %41[ 10 ]
# CHECK: Vreg: %22[ 7 ]
# CHECK: Vreg: %10[ LoopTag+10 ]
# CHECK: Vreg: %36[ 10 ]
# CHECK: Vreg: %43[ 10 ]
# CHECK: Vreg: %24[ 7 ]
# CHECK: Vreg: %50[ 4 ]
# CHECK: Vreg: %31[ LoopTag+9 ]
# CHECK: Vreg: %38[ 10 ]
# CHECK: Instr: %56:sreg_32 = S_AND_B32 killed %53, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 9 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %40[ 2 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 14 ]
# CHECK: Vreg: %47[ 9 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %35[ 2 ]
# CHECK: Vreg: %42[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 9 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %37[ 2 ]
# CHECK: Vreg: %44[ 2 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 9 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %53[ 0 ]
# CHECK: Vreg: %41[ 9 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %55[ 1 ]
# CHECK: Vreg: %36[ 9 ]
# CHECK: Vreg: %43[ 9 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %50[ 3 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %38[ 9 ]
# CHECK: Instr: %57:sreg_32 = S_OR_B32 killed %55, killed %56, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+9 ]
# CHECK: Vreg: %0[ LoopTag+11 ]
# CHECK: Vreg: %45[ 8 ]
# CHECK: Vreg: %52[ 1 ]
# CHECK: Vreg: %14[ 7 ]
# CHECK: Vreg: %40[ 1 ]
# CHECK: Vreg: %21[ 1 ]
# CHECK: Vreg: %66[ LoopTag+9 ]
# CHECK: Vreg: %2[ 13 ]
# CHECK: Vreg: %47[ 8 ]
# CHECK: Vreg: %54[ 1 ]
# CHECK: Vreg: %35[ 1 ]
# CHECK: Vreg: %42[ 1 ]
# CHECK: Vreg: %23[ 5 ]
# CHECK: Vreg: %49[ 8 ]
# CHECK: Vreg: %11[ 9 ]
# CHECK: Vreg: %56[ 0 ]
# CHECK: Vreg: %37[ 1 ]
# CHECK: Vreg: %44[ 1 ]
# CHECK: Vreg: %25[ 3 ]
# CHECK: Vreg: %51[ 1 ]
# CHECK: Vreg: %39[ 8 ]
# CHECK: Vreg: %1[ 12 ]
# CHECK: Vreg: %41[ 8 ]
# CHECK: Vreg: %22[ 5 ]
# CHECK: Vreg: %10[ LoopTag+8 ]
# CHECK: Vreg: %55[ 0 ]
# CHECK: Vreg: %36[ 8 ]
# CHECK: Vreg: %43[ 8 ]
# CHECK: Vreg: %24[ 5 ]
# CHECK: Vreg: %50[ 2 ]
# CHECK: Vreg: %31[ LoopTag+7 ]
# CHECK: Vreg: %38[ 8 ]
# CHECK: Instr: S_BRANCH %bb.5
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %40[ 0 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %54[ 0 ]
# CHECK: Vreg: %35[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %37[ 0 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 0 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %40[ 0 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %54[ 0 ]
# CHECK: Vreg: %35[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %37[ 0 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 0 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: --- MBB_4 ---
# CHECK: Instr: %43:vgpr_32 = GLOBAL_LOAD_DWORD %11, 0, 0, implicit $exec :: (load (s32) from %ir.p2, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+16 ]
# CHECK: Vreg: %0[ LoopTag+18 ]
# CHECK: Vreg: %52[ 8 ]
# CHECK: Vreg: %33[ 6 ]
# CHECK: Vreg: %14[ 14 ]
# CHECK: Vreg: %21[ 8 ]
# CHECK: Vreg: %66[ LoopTag+16 ]
# CHECK: Vreg: %2[ 11 ]
# CHECK: Vreg: %47[ 6 ]
# CHECK: Vreg: %54[ 8 ]
# CHECK: Vreg: %23[ 12 ]
# CHECK: Vreg: %49[ 6 ]
# CHECK: Vreg: %11[ 0 ]
# CHECK: Vreg: %25[ 10 ]
# CHECK: Vreg: %51[ 8 ]
# CHECK: Vreg: %1[ 3 ]
# CHECK: Vreg: %27[ 6 ]
# CHECK: Vreg: %34[ 7 ]
# CHECK: Vreg: %22[ 12 ]
# CHECK: Vreg: %29[ 1 ]
# CHECK: Vreg: %10[ LoopTag+15 ]
# CHECK: Vreg: %24[ 12 ]
# CHECK: Vreg: %31[ LoopTag+14 ]
# CHECK: Vreg: %57[ 8 ]
# CHECK: Vreg: %38[ 6 ]
# CHECK: Instr: %39:vgpr_32 = V_ADD_U32_e64 1, killed %29, 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+15 ]
# CHECK: Vreg: %0[ LoopTag+17 ]
# CHECK: Vreg: %52[ 7 ]
# CHECK: Vreg: %33[ 5 ]
# CHECK: Vreg: %14[ 13 ]
# CHECK: Vreg: %21[ 7 ]
# CHECK: Vreg: %66[ LoopTag+15 ]
# CHECK: Vreg: %2[ 10 ]
# CHECK: Vreg: %47[ 5 ]
# CHECK: Vreg: %54[ 7 ]
# CHECK: Vreg: %23[ 11 ]
# CHECK: Vreg: %49[ 5 ]
# CHECK: Vreg: %11[ 15 ]
# CHECK: Vreg: %25[ 9 ]
# CHECK: Vreg: %51[ 7 ]
# CHECK: Vreg: %1[ 2 ]
# CHECK: Vreg: %27[ 5 ]
# CHECK: Vreg: %34[ 6 ]
# CHECK: Vreg: %22[ 11 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+14 ]
# CHECK: Vreg: %43[ 1 ]
# CHECK: Vreg: %24[ 11 ]
# CHECK: Vreg: %31[ LoopTag+13 ]
# CHECK: Vreg: %57[ 7 ]
# CHECK: Vreg: %38[ 5 ]
# CHECK: Instr: %45:vgpr_32 = V_ADD_U32_e64 %43, %39, 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+14 ]
# CHECK: Vreg: %0[ LoopTag+16 ]
# CHECK: Vreg: %52[ 6 ]
# CHECK: Vreg: %33[ 4 ]
# CHECK: Vreg: %14[ 12 ]
# CHECK: Vreg: %21[ 6 ]
# CHECK: Vreg: %66[ LoopTag+14 ]
# CHECK: Vreg: %2[ 9 ]
# CHECK: Vreg: %47[ 4 ]
# CHECK: Vreg: %54[ 6 ]
# CHECK: Vreg: %23[ 10 ]
# CHECK: Vreg: %49[ 4 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %51[ 6 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %1[ 1 ]
# CHECK: Vreg: %27[ 4 ]
# CHECK: Vreg: %34[ 5 ]
# CHECK: Vreg: %22[ 10 ]
# CHECK: Vreg: %29[ 4 ]
# CHECK: Vreg: %10[ LoopTag+13 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 10 ]
# CHECK: Vreg: %31[ LoopTag+12 ]
# CHECK: Vreg: %57[ 6 ]
# CHECK: Vreg: %38[ 4 ]
# CHECK: Instr: %58:sreg_32 = V_CMP_GE_U32_e64 %39, %1, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+13 ]
# CHECK: Vreg: %0[ LoopTag+15 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %33[ 3 ]
# CHECK: Vreg: %14[ 11 ]
# CHECK: Vreg: %21[ 5 ]
# CHECK: Vreg: %66[ LoopTag+13 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 9 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %11[ 13 ]
# CHECK: Vreg: %25[ 7 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %1[ 0 ]
# CHECK: Vreg: %27[ 3 ]
# CHECK: Vreg: %34[ 4 ]
# CHECK: Vreg: %22[ 9 ]
# CHECK: Vreg: %29[ 3 ]
# CHECK: Vreg: %10[ LoopTag+12 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ 9 ]
# CHECK: Vreg: %31[ LoopTag+11 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: Instr: %41:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+12 ]
# CHECK: Vreg: %0[ LoopTag+14 ]
# CHECK: Vreg: %45[ 2 ]
# CHECK: Vreg: %52[ 4 ]
# CHECK: Vreg: %33[ 2 ]
# CHECK: Vreg: %14[ 10 ]
# CHECK: Vreg: %21[ 4 ]
# CHECK: Vreg: %66[ LoopTag+12 ]
# CHECK: Vreg: %2[ 7 ]
# CHECK: Vreg: %47[ 2 ]
# CHECK: Vreg: %54[ 4 ]
# CHECK: Vreg: %23[ 8 ]
# CHECK: Vreg: %49[ 2 ]
# CHECK: Vreg: %11[ 12 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %51[ 4 ]
# CHECK: Vreg: %58[ 1 ]
# CHECK: Vreg: %39[ 2 ]
# CHECK: Vreg: %1[ 15 ]
# CHECK: Vreg: %27[ 2 ]
# CHECK: Vreg: %34[ 3 ]
# CHECK: Vreg: %22[ 8 ]
# CHECK: Vreg: %29[ 2 ]
# CHECK: Vreg: %10[ LoopTag+11 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ 8 ]
# CHECK: Vreg: %31[ LoopTag+10 ]
# CHECK: Vreg: %57[ 4 ]
# CHECK: Vreg: %38[ 2 ]
# CHECK: Instr: %36:sreg_32 = S_ORN2_B32 killed %58, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+11 ]
# CHECK: Vreg: %0[ LoopTag+13 ]
# CHECK: Vreg: %45[ 1 ]
# CHECK: Vreg: %52[ 3 ]
# CHECK: Vreg: %33[ 1 ]
# CHECK: Vreg: %14[ 9 ]
# CHECK: Vreg: %21[ 3 ]
# CHECK: Vreg: %66[ LoopTag+11 ]
# CHECK: Vreg: %2[ 6 ]
# CHECK: Vreg: %47[ 1 ]
# CHECK: Vreg: %54[ 3 ]
# CHECK: Vreg: %23[ 7 ]
# CHECK: Vreg: %49[ 1 ]
# CHECK: Vreg: %11[ 11 ]
# CHECK: Vreg: %25[ 5 ]
# CHECK: Vreg: %51[ 3 ]
# CHECK: Vreg: %58[ 0 ]
# CHECK: Vreg: %39[ 1 ]
# CHECK: Vreg: %1[ 14 ]
# CHECK: Vreg: %27[ 1 ]
# CHECK: Vreg: %34[ 2 ]
# CHECK: Vreg: %41[ 1 ]
# CHECK: Vreg: %22[ 7 ]
# CHECK: Vreg: %29[ 1 ]
# CHECK: Vreg: %10[ LoopTag+10 ]
# CHECK: Vreg: %43[ 1 ]
# CHECK: Vreg: %24[ 7 ]
# CHECK: Vreg: %31[ LoopTag+9 ]
# CHECK: Vreg: %57[ 3 ]
# CHECK: Vreg: %38[ 1 ]
# CHECK: Instr: S_BRANCH %bb.2
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 0 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+10 ]
# CHECK: Vreg: %0[ LoopTag+12 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %52[ 2 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %14[ 8 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+10 ]
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %54[ 2 ]
# CHECK: Vreg: %23[ 6 ]
# CHECK: Vreg: %49[ 0 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %51[ 2 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %41[ 0 ]
# CHECK: Vreg: %22[ 6 ]
# CHECK: Vreg: %29[ 0 ]
# CHECK: Vreg: %10[ LoopTag+9 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Vreg: %31[ LoopTag+8 ]
# CHECK: Vreg: %57[ 2 ]
# CHECK: Vreg: %38[ 0 ]
# CHECK: --- MBB_5 ---
# CHECK: Instr: %59:sreg_32 = PHI %35, %bb.2, %57, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %40[ 0 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %54[ 0 ]
# CHECK: Vreg: %35[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %37[ 0 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 0 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: Instr: %30:vgpr_32 = PHI %37, %bb.2, %54, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %59[ 2 ]
# CHECK: Vreg: %40[ 0 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %54[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %37[ 0 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 9 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: Instr: %28:vgpr_32 = PHI %40, %bb.2, %52, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %59[ 2 ]
# CHECK: Vreg: %40[ 0 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %54[ 9 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %30[ 4 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 9 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: Instr: %60:vgpr_32 = PHI %42, %bb.2, %21, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 9 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %59[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %28[ 4 ]
# CHECK: Vreg: %54[ 9 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %30[ 4 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 9 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: Instr: %32:vgpr_32 = PHI %44, %bb.2, %51, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+8 ]
# CHECK: Vreg: %0[ LoopTag+10 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %52[ 9 ]
# CHECK: Vreg: %14[ 6 ]
# CHECK: Vreg: %59[ 2 ]
# CHECK: Vreg: %21[ 4 ]
# CHECK: Vreg: %66[ LoopTag+8 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %47[ 7 ]
# CHECK: Vreg: %28[ 4 ]
# CHECK: Vreg: %54[ 9 ]
# CHECK: Vreg: %23[ 4 ]
# CHECK: Vreg: %49[ 7 ]
# CHECK: Vreg: %30[ 4 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %60[ LoopTag+17 ]
# CHECK: Vreg: %41[ 7 ]
# CHECK: Vreg: %22[ 4 ]
# CHECK: Vreg: %10[ LoopTag+7 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ LoopTag+6 ]
# CHECK: Vreg: %57[ 9 ]
# CHECK: Vreg: %38[ 7 ]
# CHECK: Instr: SI_END_CF killed %50, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+7 ]
# CHECK: Vreg: %0[ LoopTag+9 ]
# CHECK: Vreg: %45[ 6 ]
# CHECK: Vreg: %52[ 8 ]
# CHECK: Vreg: %14[ 5 ]
# CHECK: Vreg: %59[ 1 ]
# CHECK: Vreg: %21[ 3 ]
# CHECK: Vreg: %66[ LoopTag+7 ]
# CHECK: Vreg: %2[ 11 ]
# CHECK: Vreg: %47[ 6 ]
# CHECK: Vreg: %28[ 3 ]
# CHECK: Vreg: %54[ 8 ]
# CHECK: Vreg: %23[ 3 ]
# CHECK: Vreg: %49[ 6 ]
# CHECK: Vreg: %30[ 3 ]
# CHECK: Vreg: %11[ 7 ]
# CHECK: Vreg: %25[ 1 ]
# CHECK: Vreg: %51[ 8 ]
# CHECK: Vreg: %32[ 3 ]
# CHECK: Vreg: %39[ 6 ]
# CHECK: Vreg: %1[ 10 ]
# CHECK: Vreg: %60[ LoopTag+16 ]
# CHECK: Vreg: %41[ 6 ]
# CHECK: Vreg: %22[ 3 ]
# CHECK: Vreg: %10[ LoopTag+6 ]
# CHECK: Vreg: %36[ 6 ]
# CHECK: Vreg: %43[ 6 ]
# CHECK: Vreg: %24[ 3 ]
# CHECK: Vreg: %50[ 0 ]
# CHECK: Vreg: %31[ LoopTag+5 ]
# CHECK: Vreg: %57[ 8 ]
# CHECK: Vreg: %38[ 6 ]
# CHECK: Instr: %26:sreg_32 = SI_IF_BREAK killed %59, killed %25, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+6 ]
# CHECK: Vreg: %0[ LoopTag+8 ]
# CHECK: Vreg: %45[ 5 ]
# CHECK: Vreg: %52[ 7 ]
# CHECK: Vreg: %14[ 4 ]
# CHECK: Vreg: %59[ 0 ]
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %66[ LoopTag+6 ]
# CHECK: Vreg: %2[ 10 ]
# CHECK: Vreg: %47[ 5 ]
# CHECK: Vreg: %28[ 2 ]
# CHECK: Vreg: %54[ 7 ]
# CHECK: Vreg: %23[ 2 ]
# CHECK: Vreg: %49[ 5 ]
# CHECK: Vreg: %30[ 2 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %51[ 7 ]
# CHECK: Vreg: %32[ 2 ]
# CHECK: Vreg: %39[ 5 ]
# CHECK: Vreg: %1[ 9 ]
# CHECK: Vreg: %60[ LoopTag+15 ]
# CHECK: Vreg: %41[ 5 ]
# CHECK: Vreg: %22[ 2 ]
# CHECK: Vreg: %10[ LoopTag+5 ]
# CHECK: Vreg: %36[ 5 ]
# CHECK: Vreg: %43[ 5 ]
# CHECK: Vreg: %24[ 2 ]
# CHECK: Vreg: %31[ LoopTag+4 ]
# CHECK: Vreg: %57[ 7 ]
# CHECK: Vreg: %38[ 5 ]
# CHECK: Instr: SI_LOOP %26, %bb.1, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+5 ]
# CHECK: Vreg: %0[ LoopTag+7 ]
# CHECK: Vreg: %26[ 0 ]
# CHECK: Vreg: %45[ 4 ]
# CHECK: Vreg: %52[ 6 ]
# CHECK: Vreg: %14[ 3 ]
# CHECK: Vreg: %21[ 1 ]
# CHECK: Vreg: %66[ LoopTag+5 ]
# CHECK: Vreg: %2[ 9 ]
# CHECK: Vreg: %47[ 4 ]
# CHECK: Vreg: %28[ 1 ]
# CHECK: Vreg: %54[ 6 ]
# CHECK: Vreg: %23[ 1 ]
# CHECK: Vreg: %49[ 4 ]
# CHECK: Vreg: %30[ 1 ]
# CHECK: Vreg: %11[ 5 ]
# CHECK: Vreg: %51[ 6 ]
# CHECK: Vreg: %32[ 1 ]
# CHECK: Vreg: %39[ 4 ]
# CHECK: Vreg: %1[ 8 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %41[ 4 ]
# CHECK: Vreg: %22[ 1 ]
# CHECK: Vreg: %10[ LoopTag+4 ]
# CHECK: Vreg: %36[ 4 ]
# CHECK: Vreg: %43[ 4 ]
# CHECK: Vreg: %24[ 1 ]
# CHECK: Vreg: %31[ LoopTag+3 ]
# CHECK: Vreg: %57[ 6 ]
# CHECK: Vreg: %38[ 4 ]
# CHECK: Instr: S_BRANCH %bb.6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+4 ]
# CHECK: Vreg: %0[ LoopTag+6 ]
# CHECK: Vreg: %26[ 0 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %14[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+4 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %28[ 0 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 0 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %60[ LoopTag+13 ]
# CHECK: Vreg: %41[ 3 ]
# CHECK: Vreg: %22[ 0 ]
# CHECK: Vreg: %10[ LoopTag+3 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ 0 ]
# CHECK: Vreg: %31[ LoopTag+2 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+4 ]
# CHECK: Vreg: %0[ LoopTag+6 ]
# CHECK: Vreg: %26[ 0 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %52[ 5 ]
# CHECK: Vreg: %14[ 2 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %66[ LoopTag+4 ]
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %47[ 3 ]
# CHECK: Vreg: %28[ 0 ]
# CHECK: Vreg: %54[ 5 ]
# CHECK: Vreg: %23[ 0 ]
# CHECK: Vreg: %49[ 3 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %51[ 5 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %60[ LoopTag+13 ]
# CHECK: Vreg: %41[ 3 ]
# CHECK: Vreg: %22[ 0 ]
# CHECK: Vreg: %10[ LoopTag+3 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ 0 ]
# CHECK: Vreg: %31[ LoopTag+2 ]
# CHECK: Vreg: %57[ 5 ]
# CHECK: Vreg: %38[ 3 ]
# CHECK: --- MBB_6 ---
# CHECK: Instr: SI_END_CF killed %26, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 3 ]
# CHECK: Vreg: %0[ 5 ]
# CHECK: Vreg: %26[ 0 ]
# CHECK: Vreg: %21[ 13 ]
# CHECK: Vreg: %66[ 3 ]
# CHECK: Vreg: %32[ 1 ]
# CHECK: Vreg: %60[ 12 ]
# CHECK: Vreg: %10[ 2 ]
# CHECK: Vreg: %31[ 1 ]
# CHECK: Instr: %61:vgpr_32 = V_MUL_LO_U32_e64 %32, %31, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 2 ]
# CHECK: Vreg: %0[ 4 ]
# CHECK: Vreg: %21[ 12 ]
# CHECK: Vreg: %66[ 2 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %60[ 11 ]
# CHECK: Vreg: %10[ 1 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: Instr: GLOBAL_STORE_DWORD killed %10, %61, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 1 ]
# CHECK: Vreg: %0[ 3 ]
# CHECK: Vreg: %21[ 11 ]
# CHECK: Vreg: %66[ 1 ]
# CHECK: Vreg: %61[ 0 ]
# CHECK: Vreg: %32[ 1 ]
# CHECK: Vreg: %60[ 10 ]
# CHECK: Vreg: %10[ 0 ]
# CHECK: Vreg: %31[ 1 ]
# CHECK: Instr: %62:sreg_32 = S_MOV_B32 0
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %0[ 2 ]
# CHECK: Vreg: %21[ 10 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %61[ 9 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %60[ 9 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %0[ 2 ]
# CHECK: Vreg: %21[ 10 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %61[ 9 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %60[ 9 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: --- MBB_7 ---
# CHECK: Instr: %63:sreg_32 = PHI %62, %bb.6, %64, %bb.7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %0[ 2 ]
# CHECK: Vreg: %21[ LoopTag+10 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %61[ LoopTag+9 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %60[ LoopTag+9 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: Instr: %65:sreg_32 = PHI %62, %bb.6, %66, %bb.7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 2 ]
# CHECK: Vreg: %21[ LoopTag+10 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %61[ LoopTag+9 ]
# CHECK: Vreg: %63[ 3 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %60[ LoopTag+9 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: Instr: %67:vgpr_32 = PHI %32, %bb.6, %31, %bb.7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 2 ]
# CHECK: Vreg: %21[ LoopTag+10 ]
# CHECK: Vreg: %61[ LoopTag+9 ]
# CHECK: Vreg: %63[ 3 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %60[ LoopTag+9 ]
# CHECK: Vreg: %62[ 6 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: Instr: %66:sreg_32 = S_ADD_I32 killed %65, 2, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 1 ]
# CHECK: Vreg: %21[ LoopTag+9 ]
# CHECK: Vreg: %61[ LoopTag+8 ]
# CHECK: Vreg: %63[ 2 ]
# CHECK: Vreg: %32[ 5 ]
# CHECK: Vreg: %65[ 0 ]
# CHECK: Vreg: %60[ LoopTag+8 ]
# CHECK: Vreg: %67[ LoopTag+7 ]
# CHECK: Vreg: %62[ 5 ]
# CHECK: Vreg: %31[ 5 ]
# CHECK: Instr: %68:sreg_32 = V_CMP_GE_U32_e64 %66, %0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 0 ]
# CHECK: Vreg: %21[ LoopTag+8 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %61[ LoopTag+7 ]
# CHECK: Vreg: %63[ 1 ]
# CHECK: Vreg: %32[ 4 ]
# CHECK: Vreg: %60[ LoopTag+7 ]
# CHECK: Vreg: %67[ LoopTag+6 ]
# CHECK: Vreg: %62[ 4 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Instr: %64:sreg_32 = SI_IF_BREAK killed %68, killed %63, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 5 ]
# CHECK: Vreg: %21[ LoopTag+7 ]
# CHECK: Vreg: %66[ 1 ]
# CHECK: Vreg: %61[ LoopTag+6 ]
# CHECK: Vreg: %68[ 0 ]
# CHECK: Vreg: %63[ 0 ]
# CHECK: Vreg: %32[ 3 ]
# CHECK: Vreg: %60[ LoopTag+6 ]
# CHECK: Vreg: %67[ LoopTag+5 ]
# CHECK: Vreg: %62[ 3 ]
# CHECK: Vreg: %31[ 3 ]
# CHECK: Instr: %69:vgpr_32 = COPY %66, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 1 ]
# CHECK: Vreg: %0[ 4 ]
# CHECK: Vreg: %21[ LoopTag+6 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %61[ LoopTag+5 ]
# CHECK: Vreg: %32[ 2 ]
# CHECK: Vreg: %60[ LoopTag+5 ]
# CHECK: Vreg: %67[ LoopTag+4 ]
# CHECK: Vreg: %62[ 2 ]
# CHECK: Vreg: %31[ 2 ]
# CHECK: Instr: SI_LOOP %64, %bb.7, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %0[ 3 ]
# CHECK: Vreg: %21[ LoopTag+5 ]
# CHECK: Vreg: %66[ 1 ]
# CHECK: Vreg: %61[ LoopTag+4 ]
# CHECK: Vreg: %32[ 1 ]
# CHECK: Vreg: %60[ LoopTag+4 ]
# CHECK: Vreg: %67[ LoopTag+3 ]
# CHECK: Vreg: %62[ 1 ]
# CHECK: Vreg: %69[ LoopTag+3 ]
# CHECK: Vreg: %31[ 1 ]
# CHECK: Instr: S_BRANCH %bb.8
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %0[ 2 ]
# CHECK: Vreg: %21[ LoopTag+4 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %61[ LoopTag+3 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %60[ LoopTag+3 ]
# CHECK: Vreg: %67[ LoopTag+2 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %69[ LoopTag+2 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %0[ 2 ]
# CHECK: Vreg: %21[ LoopTag+4 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %61[ LoopTag+3 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %60[ LoopTag+3 ]
# CHECK: Vreg: %67[ LoopTag+2 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %69[ LoopTag+2 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: --- MBB_8 ---
# CHECK: Instr: SI_END_CF killed %64, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %21[ 3 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %32[ 1 ]
# CHECK: Vreg: %60[ 2 ]
# CHECK: Vreg: %67[ 1 ]
# CHECK: Vreg: %69[ 1 ]
# CHECK: Instr: %70:vgpr_32 = V_ADD3_U32_e64 killed %67, killed %69, killed %32, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %21[ 2 ]
# CHECK: Vreg: %61[ 1 ]
# CHECK: Vreg: %32[ 0 ]
# CHECK: Vreg: %60[ 1 ]
# CHECK: Vreg: %67[ 0 ]
# CHECK: Vreg: %69[ 0 ]
# CHECK: Instr: %71:vgpr_32 = V_ADD3_U32_e64 killed %70, killed %61, killed %60, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %21[ 1 ]
# CHECK: Vreg: %61[ 0 ]
# CHECK: Vreg: %70[ 0 ]
# CHECK: Vreg: %60[ 0 ]
# CHECK: Instr: %72:vgpr_32 = V_ADD3_U32_e64 killed %21, killed %71, 100, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %71[ 0 ]
# CHECK: Vreg: %21[ 0 ]
# CHECK: Instr: %73:sreg_32_xm0 = V_READFIRSTLANE_B32 killed %72, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %72[ 0 ]
# CHECK: Instr: $sgpr0 = COPY killed %73
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %73[ 0 ]
# CHECK: Instr: SI_RETURN_TO_EPILOG killed $sgpr0
# CHECK-NEXT: Next-use distances:
# CHECK: (no register uses)
# CHECK: Block End Distances:
# CHECK: (no registers live at block end)
# CHECK: === End NextUseAnalysis Results ===

--- |
  define amdgpu_ps i32 @test7(ptr addrspace(1) %p1, ptr addrspace(1) %p2, ptr addrspace(1) %p3, i1 %cond, i32 %TC1, i32 %TC2, i32 %TC3) {
  0:
  %ld1 = load i32, ptr addrspace(1) %p1, align 1
  %add1 = add i32 %ld1, 100
  br label %1
  1:
  %phi.inc1 = phi i32 [ 0, %0 ], [ %inc1, %2 ], [ 0, %3 ]
  %phi.inc2 = phi i32 [ 10, %0 ], [ 0, %2 ], [ %inc2, %3 ]
  %phi1 = phi i32 [ %ld1, %0 ], [ %sub, %2 ], [ %add2, %3 ]
  br i1 %cond, label %2, label %3
  2:
  %sub = sub i32 %ld1, %phi.inc2
  %inc1 = add i32 %phi.inc1, 1
  %cond1 = icmp ult i32 %inc1, %TC1
  br i1 %cond1, label %1, label %4
  3:
  %ld2 = load i32, ptr addrspace(1) %p2, align 4
  %inc2 = add i32 %phi.inc2, 1
  %add2 = add i32 %ld2, %inc2
  %cond2 = icmp ult i32 %inc2, %TC2
  br i1 %cond2, label %1, label %4
  4:
  %phi2 = phi i32 [ %sub, %2 ], [ %add2, %3 ]
  %ld3 = phi i32 [ %ld1, %2 ], [ %ld2, %3 ]
  %mul = mul i32 %phi2, %phi1
  store i32 %mul, ptr addrspace(1) %p3
  br label %5
  5:
  %phi.inc3 = phi i32 [ 0, %4 ], [ %inc3, %5 ]
  %phi3 = phi i32 [ %phi2, %4 ], [ %phi1, %5 ]
  %inc3 = add i32 %phi.inc3, 2
  %add3 = add i32 %phi3, %inc3
  %cond3 = icmp ult i32 %inc3, %TC3
  br i1 %cond3, label %5, label %6
  6:
  %add4 = add i32 %add3, %phi2
  %add5 = add i32 %add4, %mul
  %add6 = add i32 %add5, %ld3
  %add7 = add i32 %add6, %add1
  ret i32 %add7
  }
...

---
name:            test7
alignment:       1
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
noPhis:          false
isSSA:           true
machineFunctionInfo: {}
body:             |
  bb.0:
    successors: %bb.1(0x80000000)
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9
  
    %48:vgpr_32 = COPY killed $vgpr9
    %47:vgpr_32 = COPY killed $vgpr8
    %46:vgpr_32 = COPY killed $vgpr7
    %45:vgpr_32 = COPY killed $vgpr6
    %44:vgpr_32 = COPY killed $vgpr5
    %43:vgpr_32 = COPY killed $vgpr4
    %42:vgpr_32 = COPY killed $vgpr3
    %41:vgpr_32 = COPY killed $vgpr2
    %40:vgpr_32 = COPY killed $vgpr1
    %39:vgpr_32 = COPY killed $vgpr0
    %100:vreg_64 = REG_SEQUENCE killed %43, %subreg.sub0, killed %44, %subreg.sub1
    %99:vreg_64 = REG_SEQUENCE killed %41, %subreg.sub0, killed %42, %subreg.sub1
    %98:vreg_64 = REG_SEQUENCE killed %39, %subreg.sub0, killed %40, %subreg.sub1
    %56:vgpr_32 = V_AND_B32_e64 1, killed %45, implicit $exec
    %57:sreg_32 = V_CMP_NE_U32_e64 1, killed %56, implicit $exec
    %58:vgpr_32 = GLOBAL_LOAD_UBYTE %98, 0, 0, implicit $exec :: (load (s8) from %ir.p1, addrspace 1)
    %60:vgpr_32 = GLOBAL_LOAD_UBYTE %98, 1, 0, implicit $exec :: (load (s8) from %ir.p1 + 1, addrspace 1)
    %63:vgpr_32 = V_LSHL_OR_B32_e64 killed %60, 8, killed %58, implicit $exec
    %64:vgpr_32 = GLOBAL_LOAD_UBYTE %98, 2, 0, implicit $exec :: (load (s8) from %ir.p1 + 2, addrspace 1)
    %66:vgpr_32 = GLOBAL_LOAD_UBYTE killed %98, 3, 0, implicit $exec :: (load (s8) from %ir.p1 + 3, addrspace 1)
    %68:vgpr_32 = V_LSHL_OR_B32_e64 killed %66, 8, killed %64, implicit $exec
    %1:vgpr_32 = V_LSHL_OR_B32_e64 killed %68, 16, killed %63, implicit $exec
    %52:vgpr_32 = V_MOV_B32_e32 10, implicit $exec
    %51:sreg_32 = S_MOV_B32 0
    %101:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
  
  bb.1:
    successors: %bb.4(0x40000000), %bb.2(0x40000000)
  
    %2:sreg_32 = PHI %51, %bb.0, %25, %bb.5
    %3:vgpr_32 = PHI %101, %bb.0, %21, %bb.5
    %4:vgpr_32 = PHI %52, %bb.0, %20, %bb.5
    %5:vgpr_32 = PHI %1, %bb.0, %23, %bb.5
    %72:sreg_32 = S_MOV_B32 -1
    %6:sreg_32 = SI_IF %57, %bb.2, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.4
  
  bb.2:
    successors: %bb.3(0x40000000), %bb.5(0x40000000)
  
    %11:sreg_32 = PHI %72, %bb.1, %103, %bb.4
    %7:vgpr_32 = PHI undef %70:vgpr_32, %bb.1, %17, %bb.4
    %96:vgpr_32 = PHI undef %70:vgpr_32, %bb.1, %97, %bb.4
    %9:vgpr_32 = PHI undef %70:vgpr_32, %bb.1, %16, %bb.4
    %10:vgpr_32 = PHI undef %70:vgpr_32, %bb.1, %18, %bb.4
    %109:vgpr_32 = PHI %4, %bb.1, undef %110:vgpr_32, %bb.4
    %111:vgpr_32 = PHI %3, %bb.1, undef %112:vgpr_32, %bb.4
    %12:sreg_32 = SI_ELSE killed %6, %bb.5, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.3
  
  bb.3:
    successors: %bb.5(0x80000000)
  
    %13:vgpr_32 = V_SUB_U32_e64 %1, killed %109, 0, implicit $exec
    %14:vgpr_32 = V_ADD_U32_e64 1, killed %111, 0, implicit $exec
    %79:sreg_32 = V_CMP_GE_U32_e64 %14, %46, implicit $exec
    %77:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
    %106:sreg_32 = S_ANDN2_B32 killed %11, $exec_lo, implicit-def dead $scc
    %107:sreg_32 = S_AND_B32 killed %79, $exec_lo, implicit-def dead $scc
    %105:sreg_32 = S_OR_B32 killed %106, killed %107, implicit-def dead $scc
    S_BRANCH %bb.5
  
  bb.4:
    successors: %bb.2(0x80000000)
  
    %16:vgpr_32 = GLOBAL_LOAD_DWORD %99, 0, 0, implicit $exec :: (load (s32) from %ir.p2, addrspace 1)
    %17:vgpr_32 = V_ADD_U32_e64 1, killed %4, 0, implicit $exec
    %18:vgpr_32 = V_ADD_U32_e64 %16, %17, 0, implicit $exec
    %76:sreg_32 = V_CMP_GE_U32_e64 %17, %47, implicit $exec
    %97:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
    %103:sreg_32 = S_ORN2_B32 killed %76, $exec_lo, implicit-def dead $scc
    S_BRANCH %bb.2
  
  bb.5:
    successors: %bb.6(0x04000000), %bb.1(0x7c000000)
  
    %24:sreg_32 = PHI %11, %bb.2, %105, %bb.3
    %20:vgpr_32 = PHI %7, %bb.2, %77, %bb.3
    %21:vgpr_32 = PHI %96, %bb.2, %14, %bb.3
    %22:vgpr_32 = PHI %9, %bb.2, %1, %bb.3
    %23:vgpr_32 = PHI %10, %bb.2, %13, %bb.3
    SI_END_CF killed %12, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %25:sreg_32 = SI_IF_BREAK killed %24, killed %2, implicit-def dead $scc
    SI_LOOP %25, %bb.1, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.6
  
  bb.6:
    successors: %bb.7(0x80000000)
  
    SI_END_CF killed %25, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %30:vgpr_32 = V_MUL_LO_U32_e64 %23, %5, implicit $exec
    GLOBAL_STORE_DWORD killed %100, %30, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
    %81:sreg_32 = S_MOV_B32 0
  
  bb.7:
    successors: %bb.8(0x04000000), %bb.7(0x7c000000)
  
    %31:sreg_32 = PHI %81, %bb.6, %35, %bb.7
    %32:sreg_32 = PHI %81, %bb.6, %34, %bb.7
    %33:vgpr_32 = PHI %23, %bb.6, %5, %bb.7
    %34:sreg_32 = S_ADD_I32 killed %32, 2, implicit-def dead $scc
    %83:sreg_32 = V_CMP_GE_U32_e64 %34, %48, implicit $exec
    %35:sreg_32 = SI_IF_BREAK killed %83, killed %31, implicit-def dead $scc
    %102:vgpr_32 = COPY %34, implicit $exec
    SI_LOOP %35, %bb.7, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.8
  
  bb.8:
    SI_END_CF killed %35, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %84:vgpr_32 = V_ADD3_U32_e64 killed %33, killed %102, killed %23, implicit $exec
    %85:vgpr_32 = V_ADD3_U32_e64 killed %84, killed %30, killed %22, implicit $exec
    %87:vgpr_32 = V_ADD3_U32_e64 killed %1, killed %85, 100, implicit $exec
    %88:sreg_32_xm0 = V_READFIRSTLANE_B32 killed %87, implicit $exec
    $sgpr0 = COPY killed %88
    SI_RETURN_TO_EPILOG killed $sgpr0
...
---
