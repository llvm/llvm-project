# RUN: llc -mtriple=amdgcn -mcpu=gfx1200 -run-pass=amdgpu-next-use -debug-only=amdgpu-next-use %s -o /dev/null 2>&1 | FileCheck %s
# 
# MIR CFG:
#
#              bb.0.entry
#                  |
#          bb.1.loop1.header<-+
#            /           |    |
# bb.2.loop2.preheader   |    |
#           |            |    |
#    bb.4.loop2.header   |    |
#       |          |     |    |
# +---->bb.5.bb1   |     |    |
# |     |      |   |     |    |
# | bb.7.loop2 |   |     |    |
# |   .latch   |   |     |    |
# |      \     |   |     |    |
# |  bb.17.Flow11  |     |    |
# |         \      |     |    |
# +--------bb.6.Flow10   |    |
#              |         |    |
#        bb.18.loop.exit |    |
#           .guard8  |   |    |
#             /      |   |    |
# bb.8.loop1.latch   |   |    |
#             \      |   |    |
#          bb.14.Flow13  |    |
#               \        |    |
#               bb.3.Flow12---+
#                    |
#         bb.15.loop.exit.guard
#                    |      |
#bb.16.loop.exit.guard7     |
#          |        |       |
# bb.11.side.exit   |       |
#            \      |       |
#            bb.12.Flow     |
#                     \     |
#                   bb.9.Flow9
#                    /   |
#      bb.10.side.exit1  |
#                    \   |
#                 bb.13.exit
#




# CHECK-LABEL: === NextUseAnalysis Results for test12 ===
# CHECK: --- MBB_0 ---
# CHECK: Instr: %0:vgpr_32 = COPY killed $vgpr10
# CHECK-NEXT: Next-use distances:
# CHECK: (no register uses)
# CHECK: Instr: %1:vgpr_32 = COPY killed $vgpr9
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 13 ]
# CHECK: Instr: %2:vgpr_32 = COPY killed $vgpr8
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 12 ]
# CHECK: Vreg: %1[ 14 ]
# CHECK: Instr: %3:vgpr_32 = COPY killed $vgpr7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 11 ]
# CHECK: Vreg: %2[ 23 ]
# CHECK: Vreg: %1[ 13 ]
# CHECK: Instr: %4:vgpr_32 = COPY killed $vgpr6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 10 ]
# CHECK: Vreg: %2[ 22 ]
# CHECK: Vreg: %1[ 12 ]
# CHECK: Vreg: %3[ 65 ]
# CHECK: Instr: %5:vgpr_32 = COPY killed $vgpr5
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 9 ]
# CHECK: Vreg: %2[ 21 ]
# CHECK: Vreg: %4[ 54 ]
# CHECK: Vreg: %1[ 11 ]
# CHECK: Vreg: %3[ 64 ]
# CHECK: Instr: %6:vgpr_32 = COPY killed $vgpr4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 8 ]
# CHECK: Vreg: %2[ 20 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %1[ 10 ]
# CHECK: Vreg: %3[ 63 ]
# CHECK: Vreg: %5[ 5 ]
# CHECK: Instr: %7:vgpr_32 = COPY killed $vgpr3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 7 ]
# CHECK: Vreg: %2[ 19 ]
# CHECK: Vreg: %4[ 52 ]
# CHECK: Vreg: %6[ 4 ]
# CHECK: Vreg: %1[ 9 ]
# CHECK: Vreg: %3[ 62 ]
# CHECK: Vreg: %5[ 4 ]
# CHECK: Instr: %8:vgpr_32 = COPY killed $vgpr2
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 6 ]
# CHECK: Vreg: %7[ 4 ]
# CHECK: Vreg: %2[ 18 ]
# CHECK: Vreg: %4[ 51 ]
# CHECK: Vreg: %6[ 3 ]
# CHECK: Vreg: %1[ 8 ]
# CHECK: Vreg: %3[ 61 ]
# CHECK: Vreg: %5[ 3 ]
# CHECK: Instr: %9:vgpr_32 = COPY killed $vgpr1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 5 ]
# CHECK: Vreg: %7[ 3 ]
# CHECK: Vreg: %2[ 17 ]
# CHECK: Vreg: %4[ 50 ]
# CHECK: Vreg: %6[ 2 ]
# CHECK: Vreg: %1[ 7 ]
# CHECK: Vreg: %8[ 3 ]
# CHECK: Vreg: %3[ 60 ]
# CHECK: Vreg: %5[ 2 ]
# CHECK: Instr: %10:vgpr_32 = COPY killed $vgpr0
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 4 ]
# CHECK: Vreg: %7[ 2 ]
# CHECK: Vreg: %2[ 16 ]
# CHECK: Vreg: %9[ 3 ]
# CHECK: Vreg: %4[ 49 ]
# CHECK: Vreg: %6[ 1 ]
# CHECK: Vreg: %1[ 6 ]
# CHECK: Vreg: %8[ 2 ]
# CHECK: Vreg: %3[ 59 ]
# CHECK: Vreg: %5[ 1 ]
# CHECK: Instr: %11:vreg_64 = REG_SEQUENCE killed %6, %subreg.sub0, killed %5, %subreg.sub1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 3 ]
# CHECK: Vreg: %7[ 1 ]
# CHECK: Vreg: %2[ 15 ]
# CHECK: Vreg: %9[ 2 ]
# CHECK: Vreg: %4[ 48 ]
# CHECK: Vreg: %6[ 0 ]
# CHECK: Vreg: %1[ 5 ]
# CHECK: Vreg: %8[ 1 ]
# CHECK: Vreg: %3[ 58 ]
# CHECK: Vreg: %10[ 2 ]
# CHECK: Vreg: %5[ 0 ]
# CHECK: Instr: %12:vreg_64 = REG_SEQUENCE killed %8, %subreg.sub0, killed %7, %subreg.sub1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 2 ]
# CHECK: Vreg: %7[ 0 ]
# CHECK: Vreg: %2[ 14 ]
# CHECK: Vreg: %9[ 1 ]
# CHECK: Vreg: %4[ 47 ]
# CHECK: Vreg: %11[ 42 ]
# CHECK: Vreg: %1[ 4 ]
# CHECK: Vreg: %8[ 0 ]
# CHECK: Vreg: %3[ 57 ]
# CHECK: Vreg: %10[ 1 ]
# CHECK: Instr: %13:vreg_64 = REG_SEQUENCE killed %10, %subreg.sub0, killed %9, %subreg.sub1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 1 ]
# CHECK: Vreg: %2[ 13 ]
# CHECK: Vreg: %9[ 0 ]
# CHECK: Vreg: %4[ 46 ]
# CHECK: Vreg: %11[ 41 ]
# CHECK: Vreg: %1[ 3 ]
# CHECK: Vreg: %3[ 56 ]
# CHECK: Vreg: %10[ 0 ]
# CHECK: Vreg: %12:sub0[ 18 ]
# CHECK: Vreg: %12:sub1[ 19 ]
# CHECK: Instr: %14:vgpr_32 = V_AND_B32_e64 1, killed %0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %0[ 0 ]
# CHECK: Vreg: %2[ 12 ]
# CHECK: Vreg: %4[ 45 ]
# CHECK: Vreg: %11[ 40 ]
# CHECK: Vreg: %13[ 4 ]
# CHECK: Vreg: %1[ 2 ]
# CHECK: Vreg: %3[ 55 ]
# CHECK: Vreg: %12:sub0[ 17 ]
# CHECK: Vreg: %12:sub1[ 18 ]
# CHECK: Instr: %15:sreg_32 = V_CMP_EQ_U32_e64 1, killed %14, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %14[ 0 ]
# CHECK: Vreg: %2[ 11 ]
# CHECK: Vreg: %4[ 44 ]
# CHECK: Vreg: %11[ 39 ]
# CHECK: Vreg: %13[ 3 ]
# CHECK: Vreg: %1[ 1 ]
# CHECK: Vreg: %3[ 54 ]
# CHECK: Vreg: %12:sub0[ 16 ]
# CHECK: Vreg: %12:sub1[ 17 ]
# CHECK: Instr: %16:vgpr_32 = V_AND_B32_e64 1, killed %1, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 10 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %13[ 2 ]
# CHECK: Vreg: %1[ 0 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Instr: %17:sreg_32 = V_CMP_EQ_U32_e64 1, killed %16, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 9 ]
# CHECK: Vreg: %16[ 0 ]
# CHECK: Vreg: %4[ 42 ]
# CHECK: Vreg: %11[ 37 ]
# CHECK: Vreg: %13[ 1 ]
# CHECK: Vreg: %15[ 35 ]
# CHECK: Vreg: %3[ 52 ]
# CHECK: Vreg: %12:sub0[ 14 ]
# CHECK: Vreg: %12:sub1[ 15 ]
# CHECK: Instr: %18:vgpr_32 = GLOBAL_LOAD_UBYTE %13, 0, 0, implicit $exec :: (load (s8) from %ir.p1, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 8 ]
# CHECK: Vreg: %4[ 41 ]
# CHECK: Vreg: %11[ 36 ]
# CHECK: Vreg: %13[ 0 ]
# CHECK: Vreg: %15[ 34 ]
# CHECK: Vreg: %3[ 51 ]
# CHECK: Vreg: %17[ 27 ]
# CHECK: Vreg: %12:sub0[ 13 ]
# CHECK: Vreg: %12:sub1[ 14 ]
# CHECK: Instr: %19:vgpr_32 = GLOBAL_LOAD_UBYTE %13, 1, 0, implicit $exec :: (load (s8) from %ir.p1 + 1, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 7 ]
# CHECK: Vreg: %4[ 40 ]
# CHECK: Vreg: %11[ 35 ]
# CHECK: Vreg: %18[ 1 ]
# CHECK: Vreg: %13[ 0 ]
# CHECK: Vreg: %15[ 33 ]
# CHECK: Vreg: %3[ 50 ]
# CHECK: Vreg: %17[ 26 ]
# CHECK: Vreg: %12:sub0[ 12 ]
# CHECK: Vreg: %12:sub1[ 13 ]
# CHECK: Instr: %20:vgpr_32 = V_LSHL_OR_B32_e64 killed %19, 8, killed %18, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 6 ]
# CHECK: Vreg: %4[ 39 ]
# CHECK: Vreg: %11[ 34 ]
# CHECK: Vreg: %18[ 0 ]
# CHECK: Vreg: %13[ 1 ]
# CHECK: Vreg: %15[ 32 ]
# CHECK: Vreg: %3[ 49 ]
# CHECK: Vreg: %17[ 25 ]
# CHECK: Vreg: %12:sub0[ 11 ]
# CHECK: Vreg: %12:sub1[ 12 ]
# CHECK: Vreg: %19[ 0 ]
# CHECK: Instr: %21:vgpr_32 = GLOBAL_LOAD_UBYTE %13, 2, 0, implicit $exec :: (load (s8) from %ir.p1 + 2, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 5 ]
# CHECK: Vreg: %4[ 38 ]
# CHECK: Vreg: %11[ 33 ]
# CHECK: Vreg: %13[ 0 ]
# CHECK: Vreg: %20[ 3 ]
# CHECK: Vreg: %15[ 31 ]
# CHECK: Vreg: %3[ 48 ]
# CHECK: Vreg: %17[ 24 ]
# CHECK: Vreg: %12:sub0[ 10 ]
# CHECK: Vreg: %12:sub1[ 11 ]
# CHECK: Instr: %22:vgpr_32 = GLOBAL_LOAD_UBYTE killed %13, 3, 0, implicit $exec :: (load (s8) from %ir.p1 + 3, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %21[ 1 ]
# CHECK: Vreg: %2[ 4 ]
# CHECK: Vreg: %4[ 37 ]
# CHECK: Vreg: %11[ 32 ]
# CHECK: Vreg: %13[ 0 ]
# CHECK: Vreg: %20[ 2 ]
# CHECK: Vreg: %15[ 30 ]
# CHECK: Vreg: %3[ 47 ]
# CHECK: Vreg: %17[ 23 ]
# CHECK: Vreg: %12:sub0[ 9 ]
# CHECK: Vreg: %12:sub1[ 10 ]
# CHECK: Instr: %23:vgpr_32 = V_LSHL_OR_B32_e64 killed %22, 8, killed %21, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %21[ 0 ]
# CHECK: Vreg: %2[ 3 ]
# CHECK: Vreg: %4[ 36 ]
# CHECK: Vreg: %11[ 31 ]
# CHECK: Vreg: %20[ 1 ]
# CHECK: Vreg: %15[ 29 ]
# CHECK: Vreg: %22[ 0 ]
# CHECK: Vreg: %3[ 46 ]
# CHECK: Vreg: %17[ 22 ]
# CHECK: Vreg: %12:sub0[ 8 ]
# CHECK: Vreg: %12:sub1[ 9 ]
# CHECK: Instr: %24:vgpr_32 = V_LSHL_OR_B32_e64 killed %23, 16, killed %20, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 2 ]
# CHECK: Vreg: %23[ 0 ]
# CHECK: Vreg: %4[ 35 ]
# CHECK: Vreg: %11[ 30 ]
# CHECK: Vreg: %20[ 0 ]
# CHECK: Vreg: %15[ 28 ]
# CHECK: Vreg: %3[ 45 ]
# CHECK: Vreg: %17[ 21 ]
# CHECK: Vreg: %12:sub0[ 7 ]
# CHECK: Vreg: %12:sub1[ 8 ]
# CHECK: Instr: %25:vgpr_32 = V_MUL_LO_U32_e64 100, %24, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 1 ]
# CHECK: Vreg: %4[ 34 ]
# CHECK: Vreg: %11[ 29 ]
# CHECK: Vreg: %15[ 27 ]
# CHECK: Vreg: %3[ 44 ]
# CHECK: Vreg: %17[ 20 ]
# CHECK: Vreg: %24[ 0 ]
# CHECK: Vreg: %12:sub0[ 6 ]
# CHECK: Vreg: %12:sub1[ 7 ]
# CHECK: Instr: %26:sreg_32 = V_CMP_LT_U32_e64 %25, killed %2, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %2[ 0 ]
# CHECK: Vreg: %4[ 33 ]
# CHECK: Vreg: %11[ 28 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %15[ 26 ]
# CHECK: Vreg: %3[ 43 ]
# CHECK: Vreg: %17[ 19 ]
# CHECK: Vreg: %24[ 39 ]
# CHECK: Vreg: %12:sub0[ 5 ]
# CHECK: Vreg: %12:sub1[ 6 ]
# CHECK: Instr: %27:sreg_32 = S_MOV_B32 0
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ 38 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ 38 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: --- MBB_1 ---
# CHECK: Instr: %28:sreg_32 = PHI undef %29:sreg_32, %bb.0, %30, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ LoopTag+38 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Instr: %31:sreg_32 = PHI undef %32:sreg_32, %bb.0, %33, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %28[ 26 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ LoopTag+38 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Instr: %34:sreg_32 = PHI undef %35:sreg_32, %bb.0, %36, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %28[ 26 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ LoopTag+38 ]
# CHECK: Vreg: %31[ 23 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Instr: %37:sreg_32 = PHI undef %38:sreg_32, %bb.0, %39, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %28[ 26 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 17 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ LoopTag+38 ]
# CHECK: Vreg: %31[ 23 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Instr: %40:sreg_32 = PHI undef %41:sreg_32, %bb.0, %42, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %28[ 26 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %37[ 16 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 17 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ LoopTag+38 ]
# CHECK: Vreg: %31[ 23 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Instr: %43:sreg_32 = PHI %27, %bb.0, %44, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %40[ 14 ]
# CHECK: Vreg: %28[ 26 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %37[ 16 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 17 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ LoopTag+38 ]
# CHECK: Vreg: %31[ 23 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Instr: %45:sreg_32 = PHI %27, %bb.0, %46, %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %40[ 14 ]
# CHECK: Vreg: %28[ 26 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %37[ 16 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %27[ 0 ]
# CHECK: Vreg: %34[ 17 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %43[ 21 ]
# CHECK: Vreg: %24[ LoopTag+38 ]
# CHECK: Vreg: %31[ 23 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Instr: %47:sreg_32_xm0 = S_ASHR_I32 %45, 31, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %26[ 28 ]
# CHECK: Vreg: %40[ 13 ]
# CHECK: Vreg: %28[ 25 ]
# CHECK: Vreg: %4[ 31 ]
# CHECK: Vreg: %11[ 26 ]
# CHECK: Vreg: %37[ 15 ]
# CHECK: Vreg: %25[ 26 ]
# CHECK: Vreg: %34[ 16 ]
# CHECK: Vreg: %15[ 24 ]
# CHECK: Vreg: %3[ 41 ]
# CHECK: Vreg: %17[ 17 ]
# CHECK: Vreg: %43[ 20 ]
# CHECK: Vreg: %24[ LoopTag+37 ]
# CHECK: Vreg: %31[ 22 ]
# CHECK: Vreg: %12:sub0[ 3 ]
# CHECK: Vreg: %12:sub1[ 4 ]
# CHECK: Instr: %48:sreg_64 = REG_SEQUENCE %45, %subreg.sub0, killed %47, %subreg.sub1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %26[ 27 ]
# CHECK: Vreg: %40[ 12 ]
# CHECK: Vreg: %47[ 0 ]
# CHECK: Vreg: %28[ 24 ]
# CHECK: Vreg: %4[ 30 ]
# CHECK: Vreg: %11[ 25 ]
# CHECK: Vreg: %37[ 14 ]
# CHECK: Vreg: %25[ 25 ]
# CHECK: Vreg: %34[ 15 ]
# CHECK: Vreg: %15[ 23 ]
# CHECK: Vreg: %3[ 40 ]
# CHECK: Vreg: %17[ 16 ]
# CHECK: Vreg: %43[ 19 ]
# CHECK: Vreg: %24[ LoopTag+36 ]
# CHECK: Vreg: %31[ 21 ]
# CHECK: Vreg: %12:sub0[ 2 ]
# CHECK: Vreg: %12:sub1[ 3 ]
# CHECK: Instr: %49:sreg_64 = nsw S_LSHL_B64 killed %48, 3, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 19 ]
# CHECK: Vreg: %26[ 26 ]
# CHECK: Vreg: %40[ 11 ]
# CHECK: Vreg: %28[ 23 ]
# CHECK: Vreg: %4[ 29 ]
# CHECK: Vreg: %11[ 24 ]
# CHECK: Vreg: %37[ 13 ]
# CHECK: Vreg: %25[ 24 ]
# CHECK: Vreg: %34[ 14 ]
# CHECK: Vreg: %15[ 22 ]
# CHECK: Vreg: %3[ 39 ]
# CHECK: Vreg: %48[ 0 ]
# CHECK: Vreg: %17[ 15 ]
# CHECK: Vreg: %43[ 18 ]
# CHECK: Vreg: %24[ LoopTag+35 ]
# CHECK: Vreg: %31[ 20 ]
# CHECK: Vreg: %12:sub0[ 1 ]
# CHECK: Vreg: %12:sub1[ 2 ]
# CHECK: Instr: %50:vgpr_32, %51:sreg_32_xm0_xexec = V_ADD_CO_U32_e64 %12.sub0, %49.sub0, 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 18 ]
# CHECK: Vreg: %26[ 25 ]
# CHECK: Vreg: %40[ 10 ]
# CHECK: Vreg: %28[ 22 ]
# CHECK: Vreg: %4[ 28 ]
# CHECK: Vreg: %49:sub0[ 0 ]
# CHECK: Vreg: %49:sub1[ 1 ]
# CHECK: Vreg: %11[ 23 ]
# CHECK: Vreg: %37[ 12 ]
# CHECK: Vreg: %25[ 23 ]
# CHECK: Vreg: %34[ 13 ]
# CHECK: Vreg: %15[ 21 ]
# CHECK: Vreg: %3[ 38 ]
# CHECK: Vreg: %17[ 14 ]
# CHECK: Vreg: %43[ 17 ]
# CHECK: Vreg: %24[ LoopTag+34 ]
# CHECK: Vreg: %31[ 19 ]
# CHECK: Vreg: %12:sub0[ 0 ]
# CHECK: Vreg: %12:sub1[ 1 ]
# CHECK: Instr: %52:vgpr_32, dead $sgpr_null = V_ADDC_U32_e64 killed %49.sub1, %12.sub1, killed %51, 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 17 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %40[ 9 ]
# CHECK: Vreg: %28[ 21 ]
# CHECK: Vreg: %4[ 27 ]
# CHECK: Vreg: %49:sub1[ 0 ]
# CHECK: Vreg: %11[ 22 ]
# CHECK: Vreg: %37[ 11 ]
# CHECK: Vreg: %25[ 22 ]
# CHECK: Vreg: %51[ 0 ]
# CHECK: Vreg: %34[ 12 ]
# CHECK: Vreg: %15[ 20 ]
# CHECK: Vreg: %3[ 37 ]
# CHECK: Vreg: %17[ 13 ]
# CHECK: Vreg: %43[ 16 ]
# CHECK: Vreg: %24[ LoopTag+33 ]
# CHECK: Vreg: %50[ 1 ]
# CHECK: Vreg: %31[ 18 ]
# CHECK: Vreg: %12:sub1[ 0 ]
# CHECK: Vreg: %12:sub0[ 29 ]
# CHECK: Instr: %53:vreg_64 = REG_SEQUENCE killed %50, %subreg.sub0, killed %52, %subreg.sub1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 16 ]
# CHECK: Vreg: %26[ 23 ]
# CHECK: Vreg: %52[ 0 ]
# CHECK: Vreg: %40[ 8 ]
# CHECK: Vreg: %28[ 20 ]
# CHECK: Vreg: %4[ 26 ]
# CHECK: Vreg: %11[ 21 ]
# CHECK: Vreg: %37[ 10 ]
# CHECK: Vreg: %25[ 21 ]
# CHECK: Vreg: %34[ 11 ]
# CHECK: Vreg: %15[ 19 ]
# CHECK: Vreg: %3[ 36 ]
# CHECK: Vreg: %17[ 12 ]
# CHECK: Vreg: %43[ 15 ]
# CHECK: Vreg: %24[ LoopTag+32 ]
# CHECK: Vreg: %50[ 0 ]
# CHECK: Vreg: %31[ 17 ]
# CHECK: Vreg: %12:sub0[ 28 ]
# CHECK: Vreg: %12:sub1[ 29 ]
# CHECK: Instr: %54:vgpr_32 = GLOBAL_LOAD_UBYTE %53, 0, 0, implicit $exec :: (load (s8) from %ir.gep1, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 15 ]
# CHECK: Vreg: %26[ 22 ]
# CHECK: Vreg: %40[ 7 ]
# CHECK: Vreg: %28[ 19 ]
# CHECK: Vreg: %4[ 25 ]
# CHECK: Vreg: %11[ 20 ]
# CHECK: Vreg: %37[ 9 ]
# CHECK: Vreg: %25[ 20 ]
# CHECK: Vreg: %53[ 0 ]
# CHECK: Vreg: %34[ 10 ]
# CHECK: Vreg: %15[ 18 ]
# CHECK: Vreg: %3[ 35 ]
# CHECK: Vreg: %17[ 11 ]
# CHECK: Vreg: %43[ 14 ]
# CHECK: Vreg: %24[ LoopTag+31 ]
# CHECK: Vreg: %31[ 16 ]
# CHECK: Vreg: %12:sub0[ 27 ]
# CHECK: Vreg: %12:sub1[ 28 ]
# CHECK: Instr: %55:vgpr_32 = GLOBAL_LOAD_UBYTE %53, 1, 0, implicit $exec :: (load (s8) from %ir.gep1 + 1, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 14 ]
# CHECK: Vreg: %26[ 21 ]
# CHECK: Vreg: %40[ 6 ]
# CHECK: Vreg: %28[ 18 ]
# CHECK: Vreg: %54[ 1 ]
# CHECK: Vreg: %4[ 24 ]
# CHECK: Vreg: %11[ 19 ]
# CHECK: Vreg: %37[ 8 ]
# CHECK: Vreg: %25[ 19 ]
# CHECK: Vreg: %53[ 0 ]
# CHECK: Vreg: %34[ 9 ]
# CHECK: Vreg: %15[ 17 ]
# CHECK: Vreg: %3[ 34 ]
# CHECK: Vreg: %17[ 10 ]
# CHECK: Vreg: %43[ 13 ]
# CHECK: Vreg: %24[ LoopTag+30 ]
# CHECK: Vreg: %31[ 15 ]
# CHECK: Vreg: %12:sub0[ 26 ]
# CHECK: Vreg: %12:sub1[ 27 ]
# CHECK: Instr: %56:vgpr_32 = V_LSHL_OR_B32_e64 killed %55, 8, killed %54, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %26[ 20 ]
# CHECK: Vreg: %40[ 5 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %54[ 0 ]
# CHECK: Vreg: %4[ 23 ]
# CHECK: Vreg: %11[ 18 ]
# CHECK: Vreg: %37[ 7 ]
# CHECK: Vreg: %25[ 18 ]
# CHECK: Vreg: %53[ 1 ]
# CHECK: Vreg: %34[ 8 ]
# CHECK: Vreg: %15[ 16 ]
# CHECK: Vreg: %3[ 33 ]
# CHECK: Vreg: %55[ 0 ]
# CHECK: Vreg: %17[ 9 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: Instr: %57:vgpr_32 = GLOBAL_LOAD_UBYTE %53, 2, 0, implicit $exec :: (load (s8) from %ir.gep1 + 2, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 12 ]
# CHECK: Vreg: %26[ 19 ]
# CHECK: Vreg: %40[ 4 ]
# CHECK: Vreg: %28[ 16 ]
# CHECK: Vreg: %4[ 22 ]
# CHECK: Vreg: %11[ 17 ]
# CHECK: Vreg: %56[ 3 ]
# CHECK: Vreg: %37[ 6 ]
# CHECK: Vreg: %25[ 17 ]
# CHECK: Vreg: %53[ 0 ]
# CHECK: Vreg: %34[ 7 ]
# CHECK: Vreg: %15[ 15 ]
# CHECK: Vreg: %3[ 32 ]
# CHECK: Vreg: %17[ 8 ]
# CHECK: Vreg: %43[ 11 ]
# CHECK: Vreg: %24[ LoopTag+28 ]
# CHECK: Vreg: %31[ 13 ]
# CHECK: Vreg: %12:sub0[ 24 ]
# CHECK: Vreg: %12:sub1[ 25 ]
# CHECK: Instr: %58:vgpr_32 = GLOBAL_LOAD_UBYTE killed %53, 3, 0, implicit $exec :: (load (s8) from %ir.gep1 + 3, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 11 ]
# CHECK: Vreg: %26[ 18 ]
# CHECK: Vreg: %40[ 3 ]
# CHECK: Vreg: %28[ 15 ]
# CHECK: Vreg: %4[ 21 ]
# CHECK: Vreg: %11[ 16 ]
# CHECK: Vreg: %56[ 2 ]
# CHECK: Vreg: %37[ 5 ]
# CHECK: Vreg: %25[ 16 ]
# CHECK: Vreg: %53[ 0 ]
# CHECK: Vreg: %34[ 6 ]
# CHECK: Vreg: %15[ 14 ]
# CHECK: Vreg: %3[ 31 ]
# CHECK: Vreg: %17[ 7 ]
# CHECK: Vreg: %43[ 10 ]
# CHECK: Vreg: %24[ LoopTag+27 ]
# CHECK: Vreg: %31[ 12 ]
# CHECK: Vreg: %12:sub0[ 23 ]
# CHECK: Vreg: %12:sub1[ 24 ]
# CHECK: Vreg: %57[ 1 ]
# CHECK: Instr: %59:vgpr_32 = V_LSHL_OR_B32_e64 killed %58, 8, killed %57, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 10 ]
# CHECK: Vreg: %26[ 17 ]
# CHECK: Vreg: %40[ 2 ]
# CHECK: Vreg: %28[ 14 ]
# CHECK: Vreg: %4[ 20 ]
# CHECK: Vreg: %11[ 15 ]
# CHECK: Vreg: %56[ 1 ]
# CHECK: Vreg: %37[ 4 ]
# CHECK: Vreg: %25[ 15 ]
# CHECK: Vreg: %58[ 0 ]
# CHECK: Vreg: %34[ 5 ]
# CHECK: Vreg: %15[ 13 ]
# CHECK: Vreg: %3[ 30 ]
# CHECK: Vreg: %17[ 6 ]
# CHECK: Vreg: %43[ 9 ]
# CHECK: Vreg: %24[ LoopTag+26 ]
# CHECK: Vreg: %31[ 11 ]
# CHECK: Vreg: %12:sub0[ 22 ]
# CHECK: Vreg: %12:sub1[ 23 ]
# CHECK: Vreg: %57[ 0 ]
# CHECK: Instr: %60:vgpr_32 = V_LSHL_OR_B32_e64 killed %59, 16, killed %56, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 9 ]
# CHECK: Vreg: %26[ 16 ]
# CHECK: Vreg: %59[ 0 ]
# CHECK: Vreg: %40[ 1 ]
# CHECK: Vreg: %28[ 13 ]
# CHECK: Vreg: %4[ 19 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %56[ 0 ]
# CHECK: Vreg: %37[ 3 ]
# CHECK: Vreg: %25[ 14 ]
# CHECK: Vreg: %34[ 4 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %3[ 29 ]
# CHECK: Vreg: %17[ 5 ]
# CHECK: Vreg: %43[ 8 ]
# CHECK: Vreg: %24[ LoopTag+25 ]
# CHECK: Vreg: %31[ 10 ]
# CHECK: Vreg: %12:sub0[ 21 ]
# CHECK: Vreg: %12:sub1[ 22 ]
# CHECK: Instr: %61:sreg_32 = S_ANDN2_B32 killed %40, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 8 ]
# CHECK: Vreg: %26[ 15 ]
# CHECK: Vreg: %40[ 0 ]
# CHECK: Vreg: %28[ 12 ]
# CHECK: Vreg: %4[ 18 ]
# CHECK: Vreg: %11[ 13 ]
# CHECK: Vreg: %37[ 2 ]
# CHECK: Vreg: %25[ 13 ]
# CHECK: Vreg: %34[ 3 ]
# CHECK: Vreg: %15[ 11 ]
# CHECK: Vreg: %60[ 26 ]
# CHECK: Vreg: %3[ 28 ]
# CHECK: Vreg: %17[ 4 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ LoopTag+24 ]
# CHECK: Vreg: %31[ 9 ]
# CHECK: Vreg: %12:sub0[ 20 ]
# CHECK: Vreg: %12:sub1[ 21 ]
# CHECK: Instr: %62:sreg_32 = COPY %61
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %26[ 14 ]
# CHECK: Vreg: %28[ 11 ]
# CHECK: Vreg: %61[ 0 ]
# CHECK: Vreg: %4[ 17 ]
# CHECK: Vreg: %11[ 12 ]
# CHECK: Vreg: %37[ 1 ]
# CHECK: Vreg: %25[ 12 ]
# CHECK: Vreg: %34[ 2 ]
# CHECK: Vreg: %15[ 10 ]
# CHECK: Vreg: %60[ 25 ]
# CHECK: Vreg: %3[ 27 ]
# CHECK: Vreg: %17[ 3 ]
# CHECK: Vreg: %43[ 6 ]
# CHECK: Vreg: %24[ LoopTag+23 ]
# CHECK: Vreg: %31[ 8 ]
# CHECK: Vreg: %12:sub0[ 19 ]
# CHECK: Vreg: %12:sub1[ 20 ]
# CHECK: Instr: %63:sreg_32 = S_OR_B32 killed %37, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 6 ]
# CHECK: Vreg: %26[ 13 ]
# CHECK: Vreg: %28[ 10 ]
# CHECK: Vreg: %61[ 24 ]
# CHECK: Vreg: %4[ 16 ]
# CHECK: Vreg: %11[ 11 ]
# CHECK: Vreg: %37[ 0 ]
# CHECK: Vreg: %25[ 11 ]
# CHECK: Vreg: %34[ 1 ]
# CHECK: Vreg: %15[ 9 ]
# CHECK: Vreg: %60[ 24 ]
# CHECK: Vreg: %3[ 26 ]
# CHECK: Vreg: %17[ 2 ]
# CHECK: Vreg: %62[ 3 ]
# CHECK: Vreg: %43[ 5 ]
# CHECK: Vreg: %24[ LoopTag+22 ]
# CHECK: Vreg: %31[ 7 ]
# CHECK: Vreg: %12:sub0[ 18 ]
# CHECK: Vreg: %12:sub1[ 19 ]
# CHECK: Instr: %64:sreg_32 = S_OR_B32 killed %34, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 5 ]
# CHECK: Vreg: %26[ 12 ]
# CHECK: Vreg: %28[ 9 ]
# CHECK: Vreg: %61[ 23 ]
# CHECK: Vreg: %4[ 15 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %63[ 2 ]
# CHECK: Vreg: %25[ 10 ]
# CHECK: Vreg: %34[ 0 ]
# CHECK: Vreg: %15[ 8 ]
# CHECK: Vreg: %60[ 23 ]
# CHECK: Vreg: %3[ 25 ]
# CHECK: Vreg: %17[ 1 ]
# CHECK: Vreg: %62[ 2 ]
# CHECK: Vreg: %43[ 4 ]
# CHECK: Vreg: %24[ LoopTag+21 ]
# CHECK: Vreg: %31[ 6 ]
# CHECK: Vreg: %12:sub0[ 17 ]
# CHECK: Vreg: %12:sub1[ 18 ]
# CHECK: Instr: %65:sreg_32 = SI_IF %17, %bb.3, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 1 ]
# CHECK: Vreg: %45[ 4 ]
# CHECK: Vreg: %26[ 11 ]
# CHECK: Vreg: %28[ 8 ]
# CHECK: Vreg: %61[ 22 ]
# CHECK: Vreg: %4[ 14 ]
# CHECK: Vreg: %11[ 9 ]
# CHECK: Vreg: %63[ 1 ]
# CHECK: Vreg: %25[ 9 ]
# CHECK: Vreg: %15[ 7 ]
# CHECK: Vreg: %60[ 22 ]
# CHECK: Vreg: %3[ 24 ]
# CHECK: Vreg: %17[ 0 ]
# CHECK: Vreg: %62[ 1 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ LoopTag+20 ]
# CHECK: Vreg: %31[ 5 ]
# CHECK: Vreg: %12:sub0[ 16 ]
# CHECK: Vreg: %12:sub1[ 17 ]
# CHECK: Instr: S_BRANCH %bb.2
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 10 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %61[ 21 ]
# CHECK: Vreg: %4[ 13 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %63[ 0 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %15[ 6 ]
# CHECK: Vreg: %60[ 21 ]
# CHECK: Vreg: %3[ 23 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 10 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %61[ 21 ]
# CHECK: Vreg: %4[ 13 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %63[ 0 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %15[ 6 ]
# CHECK: Vreg: %60[ 21 ]
# CHECK: Vreg: %3[ 23 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: --- MBB_2 ---
# CHECK: Instr: %66:sreg_32 = S_MOV_B32 0
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 25 ]
# CHECK: Vreg: %45[ 19 ]
# CHECK: Vreg: %26[ 9 ]
# CHECK: Vreg: %28[ 35 ]
# CHECK: Vreg: %61[ 20 ]
# CHECK: Vreg: %4[ 12 ]
# CHECK: Vreg: %11[ 7 ]
# CHECK: Vreg: %63[ 23 ]
# CHECK: Vreg: %25[ 7 ]
# CHECK: Vreg: %65[ 29 ]
# CHECK: Vreg: %15[ 5 ]
# CHECK: Vreg: %60[ 20 ]
# CHECK: Vreg: %3[ 22 ]
# CHECK: Vreg: %17[ 57 ]
# CHECK: Vreg: %43[ 30 ]
# CHECK: Vreg: %24[ LoopTag+47 ]
# CHECK: Vreg: %31[ 32 ]
# CHECK: Vreg: %12:sub0[ 43 ]
# CHECK: Vreg: %12:sub1[ 44 ]
# CHECK: Instr: S_BRANCH %bb.4
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 24 ]
# CHECK: Vreg: %45[ 18 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %28[ 34 ]
# CHECK: Vreg: %61[ 19 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %63[ 22 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %65[ 28 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ 19 ]
# CHECK: Vreg: %3[ 21 ]
# CHECK: Vreg: %17[ 56 ]
# CHECK: Vreg: %43[ 29 ]
# CHECK: Vreg: %24[ LoopTag+46 ]
# CHECK: Vreg: %31[ 31 ]
# CHECK: Vreg: %12:sub0[ 42 ]
# CHECK: Vreg: %12:sub1[ 43 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ 24 ]
# CHECK: Vreg: %45[ 18 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %28[ 34 ]
# CHECK: Vreg: %61[ 19 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %63[ 22 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %65[ 28 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ 19 ]
# CHECK: Vreg: %3[ 21 ]
# CHECK: Vreg: %17[ 56 ]
# CHECK: Vreg: %43[ 29 ]
# CHECK: Vreg: %24[ LoopTag+46 ]
# CHECK: Vreg: %31[ 31 ]
# CHECK: Vreg: %12:sub0[ 42 ]
# CHECK: Vreg: %12:sub1[ 43 ]
# CHECK: --- MBB_3 ---
# CHECK: Instr: %36:sreg_32 = PHI %64, %bb.1, %67, %bb.14
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 40 ]
# CHECK: Vreg: %71[ 0 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %68[ 0 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %63[ 0 ]
# CHECK: Vreg: %25[ 38 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %67[ 0 ]
# CHECK: Vreg: %74[ 0 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %69[ 0 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Vreg: %76[ 0 ]
# CHECK: Instr: %39:sreg_32 = PHI %63, %bb.1, %68, %bb.14
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 40 ]
# CHECK: Vreg: %71[ 0 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %68[ 0 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %63[ 0 ]
# CHECK: Vreg: %25[ 38 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %74[ 0 ]
# CHECK: Vreg: %36[ 2 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %69[ 0 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Vreg: %76[ 0 ]
# CHECK: Instr: %42:sreg_32 = PHI %62, %bb.1, %69, %bb.14
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 40 ]
# CHECK: Vreg: %71[ 0 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %25[ 38 ]
# CHECK: Vreg: %39[ 8 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %74[ 0 ]
# CHECK: Vreg: %36[ 2 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %62[ 0 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %69[ 0 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Vreg: %76[ 0 ]
# CHECK: Instr: %46:sreg_32 = PHI undef %70:sreg_32, %bb.1, %71, %bb.14
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 40 ]
# CHECK: Vreg: %71[ 0 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %42[ 5 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %25[ 38 ]
# CHECK: Vreg: %39[ 8 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %74[ 0 ]
# CHECK: Vreg: %36[ 2 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Vreg: %76[ 0 ]
# CHECK: Instr: %72:vgpr_32 = PHI undef %73:vgpr_32, %bb.1, %74, %bb.14
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 40 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %42[ 5 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %25[ 38 ]
# CHECK: Vreg: %39[ 8 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %46[ 11 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %74[ 0 ]
# CHECK: Vreg: %36[ 2 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Vreg: %76[ 0 ]
# CHECK: Instr: %75:vgpr_32 = PHI undef %73:vgpr_32, %bb.1, %76, %bb.14
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 40 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %42[ 5 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %25[ 38 ]
# CHECK: Vreg: %39[ 8 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %46[ 11 ]
# CHECK: Vreg: %72[ LoopTag+18 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %36[ 2 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Vreg: %76[ 0 ]
# CHECK: Instr: SI_END_CF killed %65, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 2 ]
# CHECK: Vreg: %26[ 39 ]
# CHECK: Vreg: %28[ 6 ]
# CHECK: Vreg: %42[ 4 ]
# CHECK: Vreg: %4[ 42 ]
# CHECK: Vreg: %11[ 37 ]
# CHECK: Vreg: %75[ LoopTag+16 ]
# CHECK: Vreg: %25[ 37 ]
# CHECK: Vreg: %39[ 7 ]
# CHECK: Vreg: %65[ 0 ]
# CHECK: Vreg: %46[ 10 ]
# CHECK: Vreg: %72[ LoopTag+17 ]
# CHECK: Vreg: %15[ 35 ]
# CHECK: Vreg: %60[ LoopTag+17 ]
# CHECK: Vreg: %3[ 52 ]
# CHECK: Vreg: %36[ 1 ]
# CHECK: Vreg: %17[ 28 ]
# CHECK: Vreg: %43[ 1 ]
# CHECK: Vreg: %24[ LoopTag+18 ]
# CHECK: Vreg: %31[ 3 ]
# CHECK: Vreg: %12:sub0[ 14 ]
# CHECK: Vreg: %12:sub1[ 15 ]
# CHECK: Instr: %44:sreg_32 = SI_IF_BREAK %36, killed %43, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 1 ]
# CHECK: Vreg: %26[ 38 ]
# CHECK: Vreg: %28[ 5 ]
# CHECK: Vreg: %42[ 3 ]
# CHECK: Vreg: %4[ 41 ]
# CHECK: Vreg: %11[ 36 ]
# CHECK: Vreg: %75[ LoopTag+15 ]
# CHECK: Vreg: %25[ 36 ]
# CHECK: Vreg: %39[ 6 ]
# CHECK: Vreg: %46[ 9 ]
# CHECK: Vreg: %72[ LoopTag+16 ]
# CHECK: Vreg: %15[ 34 ]
# CHECK: Vreg: %60[ LoopTag+16 ]
# CHECK: Vreg: %3[ 51 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %17[ 27 ]
# CHECK: Vreg: %43[ 0 ]
# CHECK: Vreg: %24[ LoopTag+17 ]
# CHECK: Vreg: %31[ 2 ]
# CHECK: Vreg: %12:sub0[ 13 ]
# CHECK: Vreg: %12:sub1[ 14 ]
# CHECK: Instr: %77:vgpr_32 = COPY killed %45, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %26[ 37 ]
# CHECK: Vreg: %28[ 4 ]
# CHECK: Vreg: %42[ 2 ]
# CHECK: Vreg: %4[ 40 ]
# CHECK: Vreg: %11[ 35 ]
# CHECK: Vreg: %75[ LoopTag+14 ]
# CHECK: Vreg: %44[ 7 ]
# CHECK: Vreg: %25[ 35 ]
# CHECK: Vreg: %39[ 5 ]
# CHECK: Vreg: %46[ 8 ]
# CHECK: Vreg: %72[ LoopTag+15 ]
# CHECK: Vreg: %15[ 33 ]
# CHECK: Vreg: %60[ LoopTag+15 ]
# CHECK: Vreg: %3[ 50 ]
# CHECK: Vreg: %36[ 8 ]
# CHECK: Vreg: %17[ 26 ]
# CHECK: Vreg: %24[ LoopTag+16 ]
# CHECK: Vreg: %31[ 1 ]
# CHECK: Vreg: %12:sub0[ 12 ]
# CHECK: Vreg: %12:sub1[ 13 ]
# CHECK: Instr: %78:sreg_32 = S_ANDN2_B32 killed %31, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 36 ]
# CHECK: Vreg: %28[ 3 ]
# CHECK: Vreg: %42[ 1 ]
# CHECK: Vreg: %4[ 39 ]
# CHECK: Vreg: %11[ 34 ]
# CHECK: Vreg: %75[ LoopTag+13 ]
# CHECK: Vreg: %44[ 6 ]
# CHECK: Vreg: %25[ 34 ]
# CHECK: Vreg: %77[ LoopTag+14 ]
# CHECK: Vreg: %39[ 4 ]
# CHECK: Vreg: %46[ 7 ]
# CHECK: Vreg: %72[ LoopTag+14 ]
# CHECK: Vreg: %15[ 32 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ 49 ]
# CHECK: Vreg: %36[ 7 ]
# CHECK: Vreg: %17[ 25 ]
# CHECK: Vreg: %24[ LoopTag+15 ]
# CHECK: Vreg: %31[ 0 ]
# CHECK: Vreg: %12:sub0[ 11 ]
# CHECK: Vreg: %12:sub1[ 12 ]
# CHECK: Instr: %79:sreg_32 = S_AND_B32 %42, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 35 ]
# CHECK: Vreg: %78[ 1 ]
# CHECK: Vreg: %28[ 2 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %4[ 38 ]
# CHECK: Vreg: %11[ 33 ]
# CHECK: Vreg: %75[ LoopTag+12 ]
# CHECK: Vreg: %44[ 5 ]
# CHECK: Vreg: %25[ 33 ]
# CHECK: Vreg: %77[ LoopTag+13 ]
# CHECK: Vreg: %39[ 3 ]
# CHECK: Vreg: %46[ 6 ]
# CHECK: Vreg: %72[ LoopTag+13 ]
# CHECK: Vreg: %15[ 31 ]
# CHECK: Vreg: %60[ LoopTag+13 ]
# CHECK: Vreg: %3[ 48 ]
# CHECK: Vreg: %36[ 6 ]
# CHECK: Vreg: %17[ 24 ]
# CHECK: Vreg: %24[ LoopTag+14 ]
# CHECK: Vreg: %12:sub0[ 10 ]
# CHECK: Vreg: %12:sub1[ 11 ]
# CHECK: Instr: %33:sreg_32 = S_OR_B32 killed %78, killed %79, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 34 ]
# CHECK: Vreg: %78[ 0 ]
# CHECK: Vreg: %28[ 1 ]
# CHECK: Vreg: %42[ 5 ]
# CHECK: Vreg: %4[ 37 ]
# CHECK: Vreg: %11[ 32 ]
# CHECK: Vreg: %75[ LoopTag+11 ]
# CHECK: Vreg: %44[ 4 ]
# CHECK: Vreg: %25[ 32 ]
# CHECK: Vreg: %77[ LoopTag+12 ]
# CHECK: Vreg: %39[ 2 ]
# CHECK: Vreg: %46[ 5 ]
# CHECK: Vreg: %72[ LoopTag+12 ]
# CHECK: Vreg: %15[ 30 ]
# CHECK: Vreg: %60[ LoopTag+12 ]
# CHECK: Vreg: %79[ 0 ]
# CHECK: Vreg: %3[ 47 ]
# CHECK: Vreg: %36[ 5 ]
# CHECK: Vreg: %17[ 23 ]
# CHECK: Vreg: %24[ LoopTag+13 ]
# CHECK: Vreg: %12:sub0[ 9 ]
# CHECK: Vreg: %12:sub1[ 10 ]
# CHECK: Instr: %80:sreg_32 = S_ANDN2_B32 killed %28, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 33 ]
# CHECK: Vreg: %33[ 4 ]
# CHECK: Vreg: %28[ 0 ]
# CHECK: Vreg: %42[ 4 ]
# CHECK: Vreg: %4[ 36 ]
# CHECK: Vreg: %11[ 31 ]
# CHECK: Vreg: %75[ LoopTag+10 ]
# CHECK: Vreg: %44[ 3 ]
# CHECK: Vreg: %25[ 31 ]
# CHECK: Vreg: %77[ LoopTag+11 ]
# CHECK: Vreg: %39[ 1 ]
# CHECK: Vreg: %46[ 4 ]
# CHECK: Vreg: %72[ LoopTag+11 ]
# CHECK: Vreg: %15[ 29 ]
# CHECK: Vreg: %60[ LoopTag+11 ]
# CHECK: Vreg: %3[ 46 ]
# CHECK: Vreg: %36[ 4 ]
# CHECK: Vreg: %17[ 22 ]
# CHECK: Vreg: %24[ LoopTag+12 ]
# CHECK: Vreg: %12:sub0[ 8 ]
# CHECK: Vreg: %12:sub1[ 9 ]
# CHECK: Instr: %81:sreg_32 = S_AND_B32 %39, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 32 ]
# CHECK: Vreg: %33[ 3 ]
# CHECK: Vreg: %80[ 1 ]
# CHECK: Vreg: %42[ 3 ]
# CHECK: Vreg: %4[ 35 ]
# CHECK: Vreg: %11[ 30 ]
# CHECK: Vreg: %75[ LoopTag+9 ]
# CHECK: Vreg: %44[ 2 ]
# CHECK: Vreg: %25[ 30 ]
# CHECK: Vreg: %77[ LoopTag+10 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %46[ 3 ]
# CHECK: Vreg: %72[ LoopTag+10 ]
# CHECK: Vreg: %15[ 28 ]
# CHECK: Vreg: %60[ LoopTag+10 ]
# CHECK: Vreg: %3[ 45 ]
# CHECK: Vreg: %36[ 3 ]
# CHECK: Vreg: %17[ 21 ]
# CHECK: Vreg: %24[ LoopTag+11 ]
# CHECK: Vreg: %12:sub0[ 7 ]
# CHECK: Vreg: %12:sub1[ 8 ]
# CHECK: Instr: %30:sreg_32 = S_OR_B32 killed %80, killed %81, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 31 ]
# CHECK: Vreg: %33[ 2 ]
# CHECK: Vreg: %80[ 0 ]
# CHECK: Vreg: %42[ 2 ]
# CHECK: Vreg: %4[ 34 ]
# CHECK: Vreg: %11[ 29 ]
# CHECK: Vreg: %75[ LoopTag+8 ]
# CHECK: Vreg: %44[ 1 ]
# CHECK: Vreg: %25[ 29 ]
# CHECK: Vreg: %77[ LoopTag+9 ]
# CHECK: Vreg: %39[ 2 ]
# CHECK: Vreg: %46[ 2 ]
# CHECK: Vreg: %72[ LoopTag+9 ]
# CHECK: Vreg: %15[ 27 ]
# CHECK: Vreg: %60[ LoopTag+9 ]
# CHECK: Vreg: %3[ 44 ]
# CHECK: Vreg: %36[ 2 ]
# CHECK: Vreg: %17[ 20 ]
# CHECK: Vreg: %81[ 0 ]
# CHECK: Vreg: %24[ LoopTag+10 ]
# CHECK: Vreg: %12:sub0[ 6 ]
# CHECK: Vreg: %12:sub1[ 7 ]
# CHECK: Instr: SI_LOOP %44, %bb.1, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 30 ]
# CHECK: Vreg: %33[ 1 ]
# CHECK: Vreg: %42[ 1 ]
# CHECK: Vreg: %4[ 33 ]
# CHECK: Vreg: %30[ 1 ]
# CHECK: Vreg: %11[ 28 ]
# CHECK: Vreg: %75[ LoopTag+7 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 28 ]
# CHECK: Vreg: %77[ LoopTag+8 ]
# CHECK: Vreg: %39[ 1 ]
# CHECK: Vreg: %46[ 1 ]
# CHECK: Vreg: %72[ LoopTag+8 ]
# CHECK: Vreg: %15[ 26 ]
# CHECK: Vreg: %60[ LoopTag+8 ]
# CHECK: Vreg: %3[ 43 ]
# CHECK: Vreg: %36[ 1 ]
# CHECK: Vreg: %17[ 19 ]
# CHECK: Vreg: %24[ LoopTag+9 ]
# CHECK: Vreg: %12:sub0[ 5 ]
# CHECK: Vreg: %12:sub1[ 6 ]
# CHECK: Instr: S_BRANCH %bb.15
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %75[ LoopTag+6 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %77[ LoopTag+7 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %72[ LoopTag+7 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %60[ LoopTag+7 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ LoopTag+8 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %26[ 29 ]
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %42[ 0 ]
# CHECK: Vreg: %4[ 32 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 27 ]
# CHECK: Vreg: %75[ LoopTag+6 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %25[ 27 ]
# CHECK: Vreg: %77[ LoopTag+7 ]
# CHECK: Vreg: %39[ 0 ]
# CHECK: Vreg: %46[ 0 ]
# CHECK: Vreg: %72[ LoopTag+7 ]
# CHECK: Vreg: %15[ 25 ]
# CHECK: Vreg: %60[ LoopTag+7 ]
# CHECK: Vreg: %3[ 42 ]
# CHECK: Vreg: %36[ 0 ]
# CHECK: Vreg: %17[ 18 ]
# CHECK: Vreg: %24[ LoopTag+8 ]
# CHECK: Vreg: %12:sub0[ 4 ]
# CHECK: Vreg: %12:sub1[ 5 ]
# CHECK: --- MBB_4 ---
# CHECK: Instr: %82:sreg_32 = PHI undef %83:sreg_32, %bb.2, %84, %bb.6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+24 ]
# CHECK: Vreg: %45[ LoopTag+18 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %90[ 0 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %28[ LoopTag+34 ]
# CHECK: Vreg: %92[ 0 ]
# CHECK: Vreg: %61[ LoopTag+19 ]
# CHECK: Vreg: %87[ 0 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %94[ 0 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %63[ LoopTag+22 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %84[ 0 ]
# CHECK: Vreg: %65[ LoopTag+28 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ LoopTag+19 ]
# CHECK: Vreg: %3[ LoopTag+21 ]
# CHECK: Vreg: %17[ LoopTag+56 ]
# CHECK: Vreg: %43[ LoopTag+29 ]
# CHECK: Vreg: %24[ LoopTag*2+46 ]
# CHECK: Vreg: %31[ LoopTag+31 ]
# CHECK: Vreg: %12:sub0[ LoopTag+42 ]
# CHECK: Vreg: %12:sub1[ LoopTag+43 ]
# CHECK: Instr: %85:sreg_32 = PHI undef %86:sreg_32, %bb.2, %87, %bb.6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+24 ]
# CHECK: Vreg: %45[ LoopTag+18 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %90[ 0 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %28[ LoopTag+34 ]
# CHECK: Vreg: %92[ 0 ]
# CHECK: Vreg: %61[ LoopTag+19 ]
# CHECK: Vreg: %87[ 0 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %94[ 0 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %82[ 9 ]
# CHECK: Vreg: %63[ LoopTag+22 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %65[ LoopTag+28 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ LoopTag+19 ]
# CHECK: Vreg: %3[ LoopTag+21 ]
# CHECK: Vreg: %17[ LoopTag+56 ]
# CHECK: Vreg: %43[ LoopTag+29 ]
# CHECK: Vreg: %24[ LoopTag*2+46 ]
# CHECK: Vreg: %31[ LoopTag+31 ]
# CHECK: Vreg: %12:sub0[ LoopTag+42 ]
# CHECK: Vreg: %12:sub1[ LoopTag+43 ]
# CHECK: Instr: %88:sreg_32 = PHI undef %89:sreg_32, %bb.2, %90, %bb.6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+24 ]
# CHECK: Vreg: %45[ LoopTag+18 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %90[ 0 ]
# CHECK: Vreg: %85[ 3 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %28[ LoopTag+34 ]
# CHECK: Vreg: %92[ 0 ]
# CHECK: Vreg: %61[ LoopTag+19 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %94[ 0 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %82[ 9 ]
# CHECK: Vreg: %63[ LoopTag+22 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %65[ LoopTag+28 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ LoopTag+19 ]
# CHECK: Vreg: %3[ LoopTag+21 ]
# CHECK: Vreg: %17[ LoopTag+56 ]
# CHECK: Vreg: %43[ LoopTag+29 ]
# CHECK: Vreg: %24[ LoopTag*2+46 ]
# CHECK: Vreg: %31[ LoopTag+31 ]
# CHECK: Vreg: %12:sub0[ LoopTag+42 ]
# CHECK: Vreg: %12:sub1[ LoopTag+43 ]
# CHECK: Instr: %91:sreg_32 = PHI %66, %bb.2, %92, %bb.6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+24 ]
# CHECK: Vreg: %45[ LoopTag+18 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %85[ 3 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %28[ LoopTag+34 ]
# CHECK: Vreg: %92[ 0 ]
# CHECK: Vreg: %61[ LoopTag+19 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %94[ 0 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %82[ 9 ]
# CHECK: Vreg: %63[ LoopTag+22 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %65[ LoopTag+28 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ LoopTag+19 ]
# CHECK: Vreg: %3[ LoopTag+21 ]
# CHECK: Vreg: %17[ LoopTag+56 ]
# CHECK: Vreg: %43[ LoopTag+29 ]
# CHECK: Vreg: %24[ LoopTag*2+46 ]
# CHECK: Vreg: %88[ 2 ]
# CHECK: Vreg: %31[ LoopTag+31 ]
# CHECK: Vreg: %12:sub0[ LoopTag+42 ]
# CHECK: Vreg: %12:sub1[ LoopTag+43 ]
# CHECK: Instr: %93:sreg_32 = PHI %66, %bb.2, %94, %bb.6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+24 ]
# CHECK: Vreg: %45[ LoopTag+18 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %85[ 3 ]
# CHECK: Vreg: %66[ 0 ]
# CHECK: Vreg: %28[ LoopTag+34 ]
# CHECK: Vreg: %61[ LoopTag+19 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %94[ 0 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %82[ 9 ]
# CHECK: Vreg: %63[ LoopTag+22 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %65[ LoopTag+28 ]
# CHECK: Vreg: %91[ 8 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ LoopTag+19 ]
# CHECK: Vreg: %3[ LoopTag+21 ]
# CHECK: Vreg: %17[ LoopTag+56 ]
# CHECK: Vreg: %43[ LoopTag+29 ]
# CHECK: Vreg: %24[ LoopTag*2+46 ]
# CHECK: Vreg: %88[ 2 ]
# CHECK: Vreg: %31[ LoopTag+31 ]
# CHECK: Vreg: %12:sub0[ LoopTag+42 ]
# CHECK: Vreg: %12:sub1[ LoopTag+43 ]
# CHECK: Instr: %95:vgpr_32 = COPY %93, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+23 ]
# CHECK: Vreg: %45[ LoopTag+17 ]
# CHECK: Vreg: %26[ 7 ]
# CHECK: Vreg: %85[ 2 ]
# CHECK: Vreg: %28[ LoopTag+33 ]
# CHECK: Vreg: %61[ LoopTag+18 ]
# CHECK: Vreg: %4[ 10 ]
# CHECK: Vreg: %11[ 5 ]
# CHECK: Vreg: %82[ 8 ]
# CHECK: Vreg: %63[ LoopTag+21 ]
# CHECK: Vreg: %25[ 5 ]
# CHECK: Vreg: %65[ LoopTag+27 ]
# CHECK: Vreg: %91[ 7 ]
# CHECK: Vreg: %15[ 3 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ LoopTag+20 ]
# CHECK: Vreg: %93[ 0 ]
# CHECK: Vreg: %17[ LoopTag+55 ]
# CHECK: Vreg: %43[ LoopTag+28 ]
# CHECK: Vreg: %24[ LoopTag*2+45 ]
# CHECK: Vreg: %88[ 1 ]
# CHECK: Vreg: %31[ LoopTag+30 ]
# CHECK: Vreg: %12:sub0[ LoopTag+41 ]
# CHECK: Vreg: %12:sub1[ LoopTag+42 ]
# CHECK: Instr: %96:sreg_32 = S_OR_B32 killed %88, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+22 ]
# CHECK: Vreg: %45[ LoopTag+16 ]
# CHECK: Vreg: %26[ 6 ]
# CHECK: Vreg: %85[ 1 ]
# CHECK: Vreg: %28[ LoopTag+32 ]
# CHECK: Vreg: %61[ LoopTag+17 ]
# CHECK: Vreg: %4[ 9 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %82[ 7 ]
# CHECK: Vreg: %63[ LoopTag+20 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %65[ LoopTag+26 ]
# CHECK: Vreg: %91[ 6 ]
# CHECK: Vreg: %15[ 2 ]
# CHECK: Vreg: %60[ LoopTag+17 ]
# CHECK: Vreg: %3[ LoopTag+19 ]
# CHECK: Vreg: %93[ 8 ]
# CHECK: Vreg: %17[ LoopTag+54 ]
# CHECK: Vreg: %43[ LoopTag+27 ]
# CHECK: Vreg: %24[ LoopTag*2+44 ]
# CHECK: Vreg: %88[ 0 ]
# CHECK: Vreg: %31[ LoopTag+29 ]
# CHECK: Vreg: %12:sub0[ LoopTag+40 ]
# CHECK: Vreg: %12:sub1[ LoopTag+41 ]
# CHECK: Vreg: %95[ 3 ]
# CHECK: Instr: %97:sreg_32 = S_OR_B32 killed %85, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+21 ]
# CHECK: Vreg: %45[ LoopTag+15 ]
# CHECK: Vreg: %26[ 5 ]
# CHECK: Vreg: %85[ 0 ]
# CHECK: Vreg: %28[ LoopTag+31 ]
# CHECK: Vreg: %61[ LoopTag+16 ]
# CHECK: Vreg: %4[ 8 ]
# CHECK: Vreg: %11[ 3 ]
# CHECK: Vreg: %82[ 6 ]
# CHECK: Vreg: %63[ LoopTag+19 ]
# CHECK: Vreg: %25[ 3 ]
# CHECK: Vreg: %96[ 2 ]
# CHECK: Vreg: %65[ LoopTag+25 ]
# CHECK: Vreg: %91[ 5 ]
# CHECK: Vreg: %15[ 1 ]
# CHECK: Vreg: %60[ LoopTag+16 ]
# CHECK: Vreg: %3[ LoopTag+18 ]
# CHECK: Vreg: %93[ 7 ]
# CHECK: Vreg: %17[ LoopTag+53 ]
# CHECK: Vreg: %43[ LoopTag+26 ]
# CHECK: Vreg: %24[ LoopTag*2+43 ]
# CHECK: Vreg: %31[ LoopTag+28 ]
# CHECK: Vreg: %12:sub0[ LoopTag+39 ]
# CHECK: Vreg: %12:sub1[ LoopTag+40 ]
# CHECK: Vreg: %95[ 2 ]
# CHECK: Instr: %98:sreg_32 = SI_IF %15, %bb.6, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+20 ]
# CHECK: Vreg: %45[ LoopTag+14 ]
# CHECK: Vreg: %26[ 4 ]
# CHECK: Vreg: %97[ 1 ]
# CHECK: Vreg: %28[ LoopTag+30 ]
# CHECK: Vreg: %61[ LoopTag+15 ]
# CHECK: Vreg: %4[ 7 ]
# CHECK: Vreg: %11[ 2 ]
# CHECK: Vreg: %82[ 5 ]
# CHECK: Vreg: %63[ LoopTag+18 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %96[ 1 ]
# CHECK: Vreg: %65[ LoopTag+24 ]
# CHECK: Vreg: %91[ 4 ]
# CHECK: Vreg: %15[ 0 ]
# CHECK: Vreg: %60[ LoopTag+15 ]
# CHECK: Vreg: %3[ LoopTag+17 ]
# CHECK: Vreg: %93[ 6 ]
# CHECK: Vreg: %17[ LoopTag+52 ]
# CHECK: Vreg: %43[ LoopTag+25 ]
# CHECK: Vreg: %24[ LoopTag*2+42 ]
# CHECK: Vreg: %31[ LoopTag+27 ]
# CHECK: Vreg: %12:sub0[ LoopTag+38 ]
# CHECK: Vreg: %12:sub1[ LoopTag+39 ]
# CHECK: Vreg: %95[ 1 ]
# CHECK: Instr: S_BRANCH %bb.5
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+19 ]
# CHECK: Vreg: %45[ LoopTag+13 ]
# CHECK: Vreg: %26[ 3 ]
# CHECK: Vreg: %97[ 0 ]
# CHECK: Vreg: %28[ LoopTag+29 ]
# CHECK: Vreg: %61[ LoopTag+14 ]
# CHECK: Vreg: %4[ 6 ]
# CHECK: Vreg: %11[ 1 ]
# CHECK: Vreg: %82[ 4 ]
# CHECK: Vreg: %63[ LoopTag+17 ]
# CHECK: Vreg: %25[ 1 ]
# CHECK: Vreg: %96[ 0 ]
# CHECK: Vreg: %65[ LoopTag+23 ]
# CHECK: Vreg: %91[ 3 ]
# CHECK: Vreg: %98[ 1 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ LoopTag+16 ]
# CHECK: Vreg: %93[ 5 ]
# CHECK: Vreg: %17[ LoopTag+51 ]
# CHECK: Vreg: %43[ LoopTag+24 ]
# CHECK: Vreg: %24[ LoopTag*2+41 ]
# CHECK: Vreg: %31[ LoopTag+26 ]
# CHECK: Vreg: %12:sub0[ LoopTag+37 ]
# CHECK: Vreg: %12:sub1[ LoopTag+38 ]
# CHECK: Vreg: %95[ 0 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+19 ]
# CHECK: Vreg: %45[ LoopTag+13 ]
# CHECK: Vreg: %26[ 3 ]
# CHECK: Vreg: %97[ 0 ]
# CHECK: Vreg: %28[ LoopTag+29 ]
# CHECK: Vreg: %61[ LoopTag+14 ]
# CHECK: Vreg: %4[ 6 ]
# CHECK: Vreg: %11[ 1 ]
# CHECK: Vreg: %82[ 4 ]
# CHECK: Vreg: %63[ LoopTag+17 ]
# CHECK: Vreg: %25[ 1 ]
# CHECK: Vreg: %96[ 0 ]
# CHECK: Vreg: %65[ LoopTag+23 ]
# CHECK: Vreg: %91[ 3 ]
# CHECK: Vreg: %98[ 1 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ LoopTag+16 ]
# CHECK: Vreg: %93[ 5 ]
# CHECK: Vreg: %17[ LoopTag+51 ]
# CHECK: Vreg: %43[ LoopTag+24 ]
# CHECK: Vreg: %24[ LoopTag*2+41 ]
# CHECK: Vreg: %31[ LoopTag+26 ]
# CHECK: Vreg: %12:sub0[ LoopTag+37 ]
# CHECK: Vreg: %12:sub1[ LoopTag+38 ]
# CHECK: Vreg: %95[ 0 ]
# CHECK: --- MBB_5 ---
# CHECK: Instr: GLOBAL_STORE_DWORD %11, %25, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+30 ]
# CHECK: Vreg: %45[ LoopTag+24 ]
# CHECK: Vreg: %26[ 2 ]
# CHECK: Vreg: %97[ 8 ]
# CHECK: Vreg: %28[ LoopTag+40 ]
# CHECK: Vreg: %61[ LoopTag+25 ]
# CHECK: Vreg: %4[ 5 ]
# CHECK: Vreg: %11[ 0 ]
# CHECK: Vreg: %82[ 15 ]
# CHECK: Vreg: %63[ LoopTag+28 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %96[ 5 ]
# CHECK: Vreg: %65[ LoopTag+34 ]
# CHECK: Vreg: %91[ 14 ]
# CHECK: Vreg: %98[ 12 ]
# CHECK: Vreg: %15[ 23 ]
# CHECK: Vreg: %60[ LoopTag+25 ]
# CHECK: Vreg: %3[ LoopTag+27 ]
# CHECK: Vreg: %93[ 4 ]
# CHECK: Vreg: %17[ LoopTag+62 ]
# CHECK: Vreg: %43[ LoopTag+35 ]
# CHECK: Vreg: %24[ LoopTag*2+52 ]
# CHECK: Vreg: %31[ LoopTag+37 ]
# CHECK: Vreg: %12:sub0[ LoopTag+48 ]
# CHECK: Vreg: %12:sub1[ LoopTag+49 ]
# CHECK: Instr: %99:sreg_32 = S_MOV_B32 -1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+29 ]
# CHECK: Vreg: %45[ LoopTag+23 ]
# CHECK: Vreg: %26[ 1 ]
# CHECK: Vreg: %97[ 7 ]
# CHECK: Vreg: %28[ LoopTag+39 ]
# CHECK: Vreg: %61[ LoopTag+24 ]
# CHECK: Vreg: %4[ 4 ]
# CHECK: Vreg: %11[ 24 ]
# CHECK: Vreg: %82[ 14 ]
# CHECK: Vreg: %63[ LoopTag+27 ]
# CHECK: Vreg: %25[ 10 ]
# CHECK: Vreg: %96[ 4 ]
# CHECK: Vreg: %65[ LoopTag+33 ]
# CHECK: Vreg: %91[ 13 ]
# CHECK: Vreg: %98[ 11 ]
# CHECK: Vreg: %15[ 22 ]
# CHECK: Vreg: %60[ LoopTag+24 ]
# CHECK: Vreg: %3[ LoopTag+26 ]
# CHECK: Vreg: %93[ 3 ]
# CHECK: Vreg: %17[ LoopTag+61 ]
# CHECK: Vreg: %43[ LoopTag+34 ]
# CHECK: Vreg: %24[ LoopTag*2+51 ]
# CHECK: Vreg: %31[ LoopTag+36 ]
# CHECK: Vreg: %12:sub0[ LoopTag+47 ]
# CHECK: Vreg: %12:sub1[ LoopTag+48 ]
# CHECK: Instr: %100:sreg_32 = SI_IF %26, %bb.17, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+28 ]
# CHECK: Vreg: %45[ LoopTag+22 ]
# CHECK: Vreg: %26[ 0 ]
# CHECK: Vreg: %97[ 6 ]
# CHECK: Vreg: %28[ LoopTag+38 ]
# CHECK: Vreg: %99[ 1 ]
# CHECK: Vreg: %61[ LoopTag+23 ]
# CHECK: Vreg: %4[ 3 ]
# CHECK: Vreg: %11[ 23 ]
# CHECK: Vreg: %82[ 13 ]
# CHECK: Vreg: %63[ LoopTag+26 ]
# CHECK: Vreg: %25[ 9 ]
# CHECK: Vreg: %96[ 3 ]
# CHECK: Vreg: %65[ LoopTag+32 ]
# CHECK: Vreg: %91[ 12 ]
# CHECK: Vreg: %98[ 10 ]
# CHECK: Vreg: %15[ 21 ]
# CHECK: Vreg: %60[ LoopTag+23 ]
# CHECK: Vreg: %3[ LoopTag+25 ]
# CHECK: Vreg: %93[ 2 ]
# CHECK: Vreg: %17[ LoopTag+60 ]
# CHECK: Vreg: %43[ LoopTag+33 ]
# CHECK: Vreg: %24[ LoopTag*2+50 ]
# CHECK: Vreg: %31[ LoopTag+35 ]
# CHECK: Vreg: %12:sub0[ LoopTag+46 ]
# CHECK: Vreg: %12:sub1[ LoopTag+47 ]
# CHECK: Instr: S_BRANCH %bb.7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+27 ]
# CHECK: Vreg: %45[ LoopTag+21 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %97[ 5 ]
# CHECK: Vreg: %28[ LoopTag+37 ]
# CHECK: Vreg: %99[ 0 ]
# CHECK: Vreg: %61[ LoopTag+22 ]
# CHECK: Vreg: %4[ 2 ]
# CHECK: Vreg: %11[ 22 ]
# CHECK: Vreg: %82[ 12 ]
# CHECK: Vreg: %63[ LoopTag+25 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %96[ 2 ]
# CHECK: Vreg: %65[ LoopTag+31 ]
# CHECK: Vreg: %91[ 11 ]
# CHECK: Vreg: %98[ 9 ]
# CHECK: Vreg: %15[ 20 ]
# CHECK: Vreg: %60[ LoopTag+22 ]
# CHECK: Vreg: %3[ LoopTag+24 ]
# CHECK: Vreg: %93[ 1 ]
# CHECK: Vreg: %100[ 1 ]
# CHECK: Vreg: %17[ LoopTag+59 ]
# CHECK: Vreg: %43[ LoopTag+32 ]
# CHECK: Vreg: %24[ LoopTag*2+49 ]
# CHECK: Vreg: %31[ LoopTag+34 ]
# CHECK: Vreg: %12:sub0[ LoopTag+45 ]
# CHECK: Vreg: %12:sub1[ LoopTag+46 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+27 ]
# CHECK: Vreg: %45[ LoopTag+21 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %97[ 5 ]
# CHECK: Vreg: %28[ LoopTag+37 ]
# CHECK: Vreg: %99[ 0 ]
# CHECK: Vreg: %61[ LoopTag+22 ]
# CHECK: Vreg: %4[ 2 ]
# CHECK: Vreg: %11[ 22 ]
# CHECK: Vreg: %82[ 12 ]
# CHECK: Vreg: %63[ LoopTag+25 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %96[ 2 ]
# CHECK: Vreg: %65[ LoopTag+31 ]
# CHECK: Vreg: %91[ 11 ]
# CHECK: Vreg: %98[ 9 ]
# CHECK: Vreg: %15[ 20 ]
# CHECK: Vreg: %60[ LoopTag+22 ]
# CHECK: Vreg: %3[ LoopTag+24 ]
# CHECK: Vreg: %93[ 1 ]
# CHECK: Vreg: %100[ 1 ]
# CHECK: Vreg: %17[ LoopTag+59 ]
# CHECK: Vreg: %43[ LoopTag+32 ]
# CHECK: Vreg: %24[ LoopTag*2+49 ]
# CHECK: Vreg: %31[ LoopTag+34 ]
# CHECK: Vreg: %12:sub0[ LoopTag+45 ]
# CHECK: Vreg: %12:sub1[ LoopTag+46 ]
# CHECK: --- MBB_6 ---
# CHECK: Instr: %87:sreg_32 = PHI %97, %bb.4, %101, %bb.17
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+19 ]
# CHECK: Vreg: %45[ LoopTag+13 ]
# CHECK: Vreg: %26[ 16 ]
# CHECK: Vreg: %97[ 0 ]
# CHECK: Vreg: %104[ 0 ]
# CHECK: Vreg: %28[ LoopTag+29 ]
# CHECK: Vreg: %61[ LoopTag+14 ]
# CHECK: Vreg: %4[ 19 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %101[ 0 ]
# CHECK: Vreg: %82[ 4 ]
# CHECK: Vreg: %63[ LoopTag+17 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %96[ 0 ]
# CHECK: Vreg: %65[ LoopTag+23 ]
# CHECK: Vreg: %91[ 3 ]
# CHECK: Vreg: %98[ 1 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ LoopTag+16 ]
# CHECK: Vreg: %17[ LoopTag+51 ]
# CHECK: Vreg: %43[ LoopTag+24 ]
# CHECK: Vreg: %24[ LoopTag*2+41 ]
# CHECK: Vreg: %31[ LoopTag+26 ]
# CHECK: Vreg: %12:sub0[ LoopTag+37 ]
# CHECK: Vreg: %12:sub1[ LoopTag+38 ]
# CHECK: Vreg: %95[ 0 ]
# CHECK: Vreg: %102[ 0 ]
# CHECK: Instr: %90:sreg_32 = PHI %96, %bb.4, %102, %bb.17
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+19 ]
# CHECK: Vreg: %45[ LoopTag+13 ]
# CHECK: Vreg: %26[ 16 ]
# CHECK: Vreg: %104[ 0 ]
# CHECK: Vreg: %28[ LoopTag+29 ]
# CHECK: Vreg: %61[ LoopTag+14 ]
# CHECK: Vreg: %87[ 3 ]
# CHECK: Vreg: %4[ 19 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %82[ 4 ]
# CHECK: Vreg: %63[ LoopTag+17 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %96[ 0 ]
# CHECK: Vreg: %65[ LoopTag+23 ]
# CHECK: Vreg: %91[ 3 ]
# CHECK: Vreg: %98[ 1 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ LoopTag+16 ]
# CHECK: Vreg: %17[ LoopTag+51 ]
# CHECK: Vreg: %43[ LoopTag+24 ]
# CHECK: Vreg: %24[ LoopTag*2+41 ]
# CHECK: Vreg: %31[ LoopTag+26 ]
# CHECK: Vreg: %12:sub0[ LoopTag+37 ]
# CHECK: Vreg: %12:sub1[ LoopTag+38 ]
# CHECK: Vreg: %95[ 0 ]
# CHECK: Vreg: %102[ 0 ]
# CHECK: Instr: %94:sreg_32 = PHI undef %103:sreg_32, %bb.4, %104, %bb.17
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+19 ]
# CHECK: Vreg: %45[ LoopTag+13 ]
# CHECK: Vreg: %26[ 16 ]
# CHECK: Vreg: %90[ 2 ]
# CHECK: Vreg: %104[ 0 ]
# CHECK: Vreg: %28[ LoopTag+29 ]
# CHECK: Vreg: %61[ LoopTag+14 ]
# CHECK: Vreg: %87[ 3 ]
# CHECK: Vreg: %4[ 19 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %82[ 4 ]
# CHECK: Vreg: %63[ LoopTag+17 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %65[ LoopTag+23 ]
# CHECK: Vreg: %91[ 3 ]
# CHECK: Vreg: %98[ 1 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ LoopTag+16 ]
# CHECK: Vreg: %17[ LoopTag+51 ]
# CHECK: Vreg: %43[ LoopTag+24 ]
# CHECK: Vreg: %24[ LoopTag*2+41 ]
# CHECK: Vreg: %31[ LoopTag+26 ]
# CHECK: Vreg: %12:sub0[ LoopTag+37 ]
# CHECK: Vreg: %12:sub1[ LoopTag+38 ]
# CHECK: Vreg: %95[ 0 ]
# CHECK: Instr: %74:vgpr_32 = PHI %95, %bb.4, %25, %bb.17
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+19 ]
# CHECK: Vreg: %45[ LoopTag+13 ]
# CHECK: Vreg: %26[ 16 ]
# CHECK: Vreg: %90[ 2 ]
# CHECK: Vreg: %28[ LoopTag+29 ]
# CHECK: Vreg: %61[ LoopTag+14 ]
# CHECK: Vreg: %87[ 3 ]
# CHECK: Vreg: %4[ 19 ]
# CHECK: Vreg: %94[ 8 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %82[ 4 ]
# CHECK: Vreg: %63[ LoopTag+17 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %65[ LoopTag+23 ]
# CHECK: Vreg: %91[ 3 ]
# CHECK: Vreg: %98[ 1 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ LoopTag+16 ]
# CHECK: Vreg: %17[ LoopTag+51 ]
# CHECK: Vreg: %43[ LoopTag+24 ]
# CHECK: Vreg: %24[ LoopTag*2+41 ]
# CHECK: Vreg: %31[ LoopTag+26 ]
# CHECK: Vreg: %12:sub0[ LoopTag+37 ]
# CHECK: Vreg: %12:sub1[ LoopTag+38 ]
# CHECK: Vreg: %95[ 0 ]
# CHECK: Instr: SI_END_CF killed %98, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+18 ]
# CHECK: Vreg: %45[ LoopTag+12 ]
# CHECK: Vreg: %26[ 15 ]
# CHECK: Vreg: %90[ 1 ]
# CHECK: Vreg: %28[ LoopTag+28 ]
# CHECK: Vreg: %61[ LoopTag+13 ]
# CHECK: Vreg: %87[ 2 ]
# CHECK: Vreg: %4[ 18 ]
# CHECK: Vreg: %94[ 7 ]
# CHECK: Vreg: %11[ 13 ]
# CHECK: Vreg: %82[ 3 ]
# CHECK: Vreg: %63[ LoopTag+16 ]
# CHECK: Vreg: %25[ 13 ]
# CHECK: Vreg: %65[ LoopTag+22 ]
# CHECK: Vreg: %91[ 2 ]
# CHECK: Vreg: %98[ 0 ]
# CHECK: Vreg: %15[ 11 ]
# CHECK: Vreg: %60[ LoopTag+13 ]
# CHECK: Vreg: %3[ LoopTag+15 ]
# CHECK: Vreg: %74[ LoopTag+21 ]
# CHECK: Vreg: %17[ LoopTag+50 ]
# CHECK: Vreg: %43[ LoopTag+23 ]
# CHECK: Vreg: %24[ LoopTag*2+40 ]
# CHECK: Vreg: %31[ LoopTag+25 ]
# CHECK: Vreg: %12:sub0[ LoopTag+36 ]
# CHECK: Vreg: %12:sub1[ LoopTag+37 ]
# CHECK: Instr: %105:sreg_32 = S_XOR_B32 %90, -1, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+17 ]
# CHECK: Vreg: %45[ LoopTag+11 ]
# CHECK: Vreg: %26[ 14 ]
# CHECK: Vreg: %90[ 0 ]
# CHECK: Vreg: %28[ LoopTag+27 ]
# CHECK: Vreg: %61[ LoopTag+12 ]
# CHECK: Vreg: %87[ 1 ]
# CHECK: Vreg: %4[ 17 ]
# CHECK: Vreg: %94[ 6 ]
# CHECK: Vreg: %11[ 12 ]
# CHECK: Vreg: %82[ 2 ]
# CHECK: Vreg: %63[ LoopTag+15 ]
# CHECK: Vreg: %25[ 12 ]
# CHECK: Vreg: %65[ LoopTag+21 ]
# CHECK: Vreg: %91[ 1 ]
# CHECK: Vreg: %15[ 10 ]
# CHECK: Vreg: %60[ LoopTag+12 ]
# CHECK: Vreg: %3[ LoopTag+14 ]
# CHECK: Vreg: %74[ LoopTag+20 ]
# CHECK: Vreg: %17[ LoopTag+49 ]
# CHECK: Vreg: %43[ LoopTag+22 ]
# CHECK: Vreg: %24[ LoopTag*2+39 ]
# CHECK: Vreg: %31[ LoopTag+24 ]
# CHECK: Vreg: %12:sub0[ LoopTag+35 ]
# CHECK: Vreg: %12:sub1[ LoopTag+36 ]
# CHECK: Instr: %92:sreg_32 = SI_IF_BREAK %87, killed %91, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+16 ]
# CHECK: Vreg: %45[ LoopTag+10 ]
# CHECK: Vreg: %26[ 13 ]
# CHECK: Vreg: %90[ 5 ]
# CHECK: Vreg: %28[ LoopTag+26 ]
# CHECK: Vreg: %61[ LoopTag+11 ]
# CHECK: Vreg: %87[ 0 ]
# CHECK: Vreg: %4[ 16 ]
# CHECK: Vreg: %94[ 5 ]
# CHECK: Vreg: %11[ 11 ]
# CHECK: Vreg: %82[ 1 ]
# CHECK: Vreg: %63[ LoopTag+14 ]
# CHECK: Vreg: %25[ 11 ]
# CHECK: Vreg: %65[ LoopTag+20 ]
# CHECK: Vreg: %91[ 0 ]
# CHECK: Vreg: %15[ 9 ]
# CHECK: Vreg: %60[ LoopTag+11 ]
# CHECK: Vreg: %105[ 2 ]
# CHECK: Vreg: %3[ LoopTag+13 ]
# CHECK: Vreg: %74[ LoopTag+19 ]
# CHECK: Vreg: %17[ LoopTag+48 ]
# CHECK: Vreg: %43[ LoopTag+21 ]
# CHECK: Vreg: %24[ LoopTag*2+38 ]
# CHECK: Vreg: %31[ LoopTag+23 ]
# CHECK: Vreg: %12:sub0[ LoopTag+34 ]
# CHECK: Vreg: %12:sub1[ LoopTag+35 ]
# CHECK: Instr: %106:sreg_32 = S_ANDN2_B32 killed %82, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+15 ]
# CHECK: Vreg: %45[ LoopTag+9 ]
# CHECK: Vreg: %26[ 12 ]
# CHECK: Vreg: %90[ 4 ]
# CHECK: Vreg: %28[ LoopTag+25 ]
# CHECK: Vreg: %92[ 3 ]
# CHECK: Vreg: %61[ LoopTag+10 ]
# CHECK: Vreg: %87[ 4 ]
# CHECK: Vreg: %4[ 15 ]
# CHECK: Vreg: %94[ 4 ]
# CHECK: Vreg: %11[ 10 ]
# CHECK: Vreg: %82[ 0 ]
# CHECK: Vreg: %63[ LoopTag+13 ]
# CHECK: Vreg: %25[ 10 ]
# CHECK: Vreg: %65[ LoopTag+19 ]
# CHECK: Vreg: %15[ 8 ]
# CHECK: Vreg: %60[ LoopTag+10 ]
# CHECK: Vreg: %105[ 1 ]
# CHECK: Vreg: %3[ LoopTag+12 ]
# CHECK: Vreg: %74[ LoopTag+18 ]
# CHECK: Vreg: %17[ LoopTag+47 ]
# CHECK: Vreg: %43[ LoopTag+20 ]
# CHECK: Vreg: %24[ LoopTag*2+37 ]
# CHECK: Vreg: %31[ LoopTag+22 ]
# CHECK: Vreg: %12:sub0[ LoopTag+33 ]
# CHECK: Vreg: %12:sub1[ LoopTag+34 ]
# CHECK: Instr: %107:sreg_32 = S_AND_B32 killed %105, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+14 ]
# CHECK: Vreg: %45[ LoopTag+8 ]
# CHECK: Vreg: %26[ 11 ]
# CHECK: Vreg: %90[ 3 ]
# CHECK: Vreg: %28[ LoopTag+24 ]
# CHECK: Vreg: %92[ 2 ]
# CHECK: Vreg: %61[ LoopTag+9 ]
# CHECK: Vreg: %106[ 1 ]
# CHECK: Vreg: %87[ 3 ]
# CHECK: Vreg: %4[ 14 ]
# CHECK: Vreg: %94[ 3 ]
# CHECK: Vreg: %11[ 9 ]
# CHECK: Vreg: %63[ LoopTag+12 ]
# CHECK: Vreg: %25[ 9 ]
# CHECK: Vreg: %65[ LoopTag+18 ]
# CHECK: Vreg: %15[ 7 ]
# CHECK: Vreg: %60[ LoopTag+9 ]
# CHECK: Vreg: %105[ 0 ]
# CHECK: Vreg: %3[ LoopTag+11 ]
# CHECK: Vreg: %74[ LoopTag+17 ]
# CHECK: Vreg: %17[ LoopTag+46 ]
# CHECK: Vreg: %43[ LoopTag+19 ]
# CHECK: Vreg: %24[ LoopTag*2+36 ]
# CHECK: Vreg: %31[ LoopTag+21 ]
# CHECK: Vreg: %12:sub0[ LoopTag+32 ]
# CHECK: Vreg: %12:sub1[ LoopTag+33 ]
# CHECK: Instr: %84:sreg_32 = S_OR_B32 killed %106, killed %107, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+13 ]
# CHECK: Vreg: %45[ LoopTag+7 ]
# CHECK: Vreg: %26[ 10 ]
# CHECK: Vreg: %90[ 2 ]
# CHECK: Vreg: %28[ LoopTag+23 ]
# CHECK: Vreg: %92[ 1 ]
# CHECK: Vreg: %61[ LoopTag+8 ]
# CHECK: Vreg: %106[ 0 ]
# CHECK: Vreg: %87[ 2 ]
# CHECK: Vreg: %4[ 13 ]
# CHECK: Vreg: %94[ 2 ]
# CHECK: Vreg: %11[ 8 ]
# CHECK: Vreg: %63[ LoopTag+11 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %65[ LoopTag+17 ]
# CHECK: Vreg: %15[ 6 ]
# CHECK: Vreg: %60[ LoopTag+8 ]
# CHECK: Vreg: %3[ LoopTag+10 ]
# CHECK: Vreg: %74[ LoopTag+16 ]
# CHECK: Vreg: %17[ LoopTag+45 ]
# CHECK: Vreg: %43[ LoopTag+18 ]
# CHECK: Vreg: %24[ LoopTag*2+35 ]
# CHECK: Vreg: %107[ 0 ]
# CHECK: Vreg: %31[ LoopTag+20 ]
# CHECK: Vreg: %12:sub0[ LoopTag+31 ]
# CHECK: Vreg: %12:sub1[ LoopTag+32 ]
# CHECK: Instr: SI_LOOP %92, %bb.4, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+12 ]
# CHECK: Vreg: %45[ LoopTag+6 ]
# CHECK: Vreg: %26[ 9 ]
# CHECK: Vreg: %90[ 1 ]
# CHECK: Vreg: %28[ LoopTag+22 ]
# CHECK: Vreg: %92[ 0 ]
# CHECK: Vreg: %61[ LoopTag+7 ]
# CHECK: Vreg: %87[ 1 ]
# CHECK: Vreg: %4[ 12 ]
# CHECK: Vreg: %94[ 1 ]
# CHECK: Vreg: %11[ 7 ]
# CHECK: Vreg: %63[ LoopTag+10 ]
# CHECK: Vreg: %25[ 7 ]
# CHECK: Vreg: %84[ 1 ]
# CHECK: Vreg: %65[ LoopTag+16 ]
# CHECK: Vreg: %15[ 5 ]
# CHECK: Vreg: %60[ LoopTag+7 ]
# CHECK: Vreg: %3[ LoopTag+9 ]
# CHECK: Vreg: %74[ LoopTag+15 ]
# CHECK: Vreg: %17[ LoopTag+44 ]
# CHECK: Vreg: %43[ LoopTag+17 ]
# CHECK: Vreg: %24[ LoopTag*2+34 ]
# CHECK: Vreg: %31[ LoopTag+19 ]
# CHECK: Vreg: %12:sub0[ LoopTag+30 ]
# CHECK: Vreg: %12:sub1[ LoopTag+31 ]
# CHECK: Instr: S_BRANCH %bb.18
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+11 ]
# CHECK: Vreg: %45[ LoopTag+5 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %90[ 0 ]
# CHECK: Vreg: %28[ LoopTag+21 ]
# CHECK: Vreg: %92[ 0 ]
# CHECK: Vreg: %61[ LoopTag+6 ]
# CHECK: Vreg: %87[ 0 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %94[ 0 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %63[ LoopTag+9 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %84[ 0 ]
# CHECK: Vreg: %65[ LoopTag+15 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ LoopTag+6 ]
# CHECK: Vreg: %3[ LoopTag+8 ]
# CHECK: Vreg: %74[ LoopTag+14 ]
# CHECK: Vreg: %17[ LoopTag+43 ]
# CHECK: Vreg: %43[ LoopTag+16 ]
# CHECK: Vreg: %24[ LoopTag*2+33 ]
# CHECK: Vreg: %31[ LoopTag+18 ]
# CHECK: Vreg: %12:sub0[ LoopTag+29 ]
# CHECK: Vreg: %12:sub1[ LoopTag+30 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+11 ]
# CHECK: Vreg: %45[ LoopTag+5 ]
# CHECK: Vreg: %26[ 8 ]
# CHECK: Vreg: %90[ 0 ]
# CHECK: Vreg: %28[ LoopTag+21 ]
# CHECK: Vreg: %92[ 0 ]
# CHECK: Vreg: %61[ LoopTag+6 ]
# CHECK: Vreg: %87[ 0 ]
# CHECK: Vreg: %4[ 11 ]
# CHECK: Vreg: %94[ 0 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %63[ LoopTag+9 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %84[ 0 ]
# CHECK: Vreg: %65[ LoopTag+15 ]
# CHECK: Vreg: %15[ 4 ]
# CHECK: Vreg: %60[ LoopTag+6 ]
# CHECK: Vreg: %3[ LoopTag+8 ]
# CHECK: Vreg: %74[ LoopTag+14 ]
# CHECK: Vreg: %17[ LoopTag+43 ]
# CHECK: Vreg: %43[ LoopTag+16 ]
# CHECK: Vreg: %24[ LoopTag*2+33 ]
# CHECK: Vreg: %31[ LoopTag+18 ]
# CHECK: Vreg: %12:sub0[ LoopTag+29 ]
# CHECK: Vreg: %12:sub1[ LoopTag+30 ]
# CHECK: --- MBB_7 ---
# CHECK: Instr: %108:sreg_32 = S_ADD_I32 killed %93, 1, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+31 ]
# CHECK: Vreg: %45[ LoopTag+25 ]
# CHECK: Vreg: %26[ 28 ]
# CHECK: Vreg: %97[ 9 ]
# CHECK: Vreg: %28[ LoopTag+41 ]
# CHECK: Vreg: %61[ LoopTag+26 ]
# CHECK: Vreg: %4[ 1 ]
# CHECK: Vreg: %11[ 26 ]
# CHECK: Vreg: %82[ 16 ]
# CHECK: Vreg: %63[ LoopTag+29 ]
# CHECK: Vreg: %25[ 12 ]
# CHECK: Vreg: %96[ 6 ]
# CHECK: Vreg: %65[ LoopTag+35 ]
# CHECK: Vreg: %91[ 15 ]
# CHECK: Vreg: %98[ 13 ]
# CHECK: Vreg: %15[ 24 ]
# CHECK: Vreg: %60[ LoopTag+26 ]
# CHECK: Vreg: %3[ LoopTag+28 ]
# CHECK: Vreg: %93[ 0 ]
# CHECK: Vreg: %100[ 5 ]
# CHECK: Vreg: %17[ LoopTag+63 ]
# CHECK: Vreg: %43[ LoopTag+36 ]
# CHECK: Vreg: %24[ LoopTag*2+53 ]
# CHECK: Vreg: %31[ LoopTag+38 ]
# CHECK: Vreg: %12:sub0[ LoopTag+49 ]
# CHECK: Vreg: %12:sub1[ LoopTag+50 ]
# CHECK: Instr: %109:sreg_32 = V_CMP_GE_U32_e64 %108, %4, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+30 ]
# CHECK: Vreg: %45[ LoopTag+24 ]
# CHECK: Vreg: %26[ 27 ]
# CHECK: Vreg: %97[ 8 ]
# CHECK: Vreg: %28[ LoopTag+40 ]
# CHECK: Vreg: %61[ LoopTag+25 ]
# CHECK: Vreg: %4[ 0 ]
# CHECK: Vreg: %11[ 25 ]
# CHECK: Vreg: %82[ 15 ]
# CHECK: Vreg: %63[ LoopTag+28 ]
# CHECK: Vreg: %108[ 0 ]
# CHECK: Vreg: %25[ 11 ]
# CHECK: Vreg: %96[ 5 ]
# CHECK: Vreg: %65[ LoopTag+34 ]
# CHECK: Vreg: %91[ 14 ]
# CHECK: Vreg: %98[ 12 ]
# CHECK: Vreg: %15[ 23 ]
# CHECK: Vreg: %60[ LoopTag+25 ]
# CHECK: Vreg: %3[ LoopTag+27 ]
# CHECK: Vreg: %100[ 4 ]
# CHECK: Vreg: %17[ LoopTag+62 ]
# CHECK: Vreg: %43[ LoopTag+35 ]
# CHECK: Vreg: %24[ LoopTag*2+52 ]
# CHECK: Vreg: %31[ LoopTag+37 ]
# CHECK: Vreg: %12:sub0[ LoopTag+48 ]
# CHECK: Vreg: %12:sub1[ LoopTag+49 ]
# CHECK: Instr: %110:sreg_32 = S_XOR_B32 $exec_lo, -1, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+29 ]
# CHECK: Vreg: %45[ LoopTag+23 ]
# CHECK: Vreg: %26[ 26 ]
# CHECK: Vreg: %109[ 1 ]
# CHECK: Vreg: %97[ 7 ]
# CHECK: Vreg: %28[ LoopTag+39 ]
# CHECK: Vreg: %61[ LoopTag+24 ]
# CHECK: Vreg: %4[ 29 ]
# CHECK: Vreg: %11[ 24 ]
# CHECK: Vreg: %82[ 14 ]
# CHECK: Vreg: %63[ LoopTag+27 ]
# CHECK: Vreg: %108[ 2 ]
# CHECK: Vreg: %25[ 10 ]
# CHECK: Vreg: %96[ 4 ]
# CHECK: Vreg: %65[ LoopTag+33 ]
# CHECK: Vreg: %91[ 13 ]
# CHECK: Vreg: %98[ 11 ]
# CHECK: Vreg: %15[ 22 ]
# CHECK: Vreg: %60[ LoopTag+24 ]
# CHECK: Vreg: %3[ LoopTag+26 ]
# CHECK: Vreg: %100[ 3 ]
# CHECK: Vreg: %17[ LoopTag+61 ]
# CHECK: Vreg: %43[ LoopTag+34 ]
# CHECK: Vreg: %24[ LoopTag*2+51 ]
# CHECK: Vreg: %31[ LoopTag+36 ]
# CHECK: Vreg: %12:sub0[ LoopTag+47 ]
# CHECK: Vreg: %12:sub1[ LoopTag+48 ]
# CHECK: Instr: %111:sreg_32 = S_ORN2_B32 killed %109, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+28 ]
# CHECK: Vreg: %45[ LoopTag+22 ]
# CHECK: Vreg: %26[ 25 ]
# CHECK: Vreg: %109[ 0 ]
# CHECK: Vreg: %97[ 6 ]
# CHECK: Vreg: %28[ LoopTag+38 ]
# CHECK: Vreg: %61[ LoopTag+23 ]
# CHECK: Vreg: %4[ 28 ]
# CHECK: Vreg: %11[ 23 ]
# CHECK: Vreg: %82[ 13 ]
# CHECK: Vreg: %63[ LoopTag+26 ]
# CHECK: Vreg: %108[ 1 ]
# CHECK: Vreg: %25[ 9 ]
# CHECK: Vreg: %96[ 3 ]
# CHECK: Vreg: %65[ LoopTag+32 ]
# CHECK: Vreg: %110[ 1 ]
# CHECK: Vreg: %91[ 12 ]
# CHECK: Vreg: %98[ 10 ]
# CHECK: Vreg: %15[ 21 ]
# CHECK: Vreg: %60[ LoopTag+23 ]
# CHECK: Vreg: %3[ LoopTag+25 ]
# CHECK: Vreg: %100[ 2 ]
# CHECK: Vreg: %17[ LoopTag+60 ]
# CHECK: Vreg: %43[ LoopTag+33 ]
# CHECK: Vreg: %24[ LoopTag*2+50 ]
# CHECK: Vreg: %31[ LoopTag+35 ]
# CHECK: Vreg: %12:sub0[ LoopTag+46 ]
# CHECK: Vreg: %12:sub1[ LoopTag+47 ]
# CHECK: Instr: S_BRANCH %bb.17
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+27 ]
# CHECK: Vreg: %45[ LoopTag+21 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %97[ 5 ]
# CHECK: Vreg: %111[ 0 ]
# CHECK: Vreg: %28[ LoopTag+37 ]
# CHECK: Vreg: %61[ LoopTag+22 ]
# CHECK: Vreg: %4[ 27 ]
# CHECK: Vreg: %11[ 22 ]
# CHECK: Vreg: %82[ 12 ]
# CHECK: Vreg: %63[ LoopTag+25 ]
# CHECK: Vreg: %108[ 0 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %96[ 2 ]
# CHECK: Vreg: %65[ LoopTag+31 ]
# CHECK: Vreg: %110[ 0 ]
# CHECK: Vreg: %91[ 11 ]
# CHECK: Vreg: %98[ 9 ]
# CHECK: Vreg: %15[ 20 ]
# CHECK: Vreg: %60[ LoopTag+22 ]
# CHECK: Vreg: %3[ LoopTag+24 ]
# CHECK: Vreg: %100[ 1 ]
# CHECK: Vreg: %17[ LoopTag+59 ]
# CHECK: Vreg: %43[ LoopTag+32 ]
# CHECK: Vreg: %24[ LoopTag*2+49 ]
# CHECK: Vreg: %31[ LoopTag+34 ]
# CHECK: Vreg: %12:sub0[ LoopTag+45 ]
# CHECK: Vreg: %12:sub1[ LoopTag+46 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+27 ]
# CHECK: Vreg: %45[ LoopTag+21 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %97[ 5 ]
# CHECK: Vreg: %111[ 0 ]
# CHECK: Vreg: %28[ LoopTag+37 ]
# CHECK: Vreg: %61[ LoopTag+22 ]
# CHECK: Vreg: %4[ 27 ]
# CHECK: Vreg: %11[ 22 ]
# CHECK: Vreg: %82[ 12 ]
# CHECK: Vreg: %63[ LoopTag+25 ]
# CHECK: Vreg: %108[ 0 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %96[ 2 ]
# CHECK: Vreg: %65[ LoopTag+31 ]
# CHECK: Vreg: %110[ 0 ]
# CHECK: Vreg: %91[ 11 ]
# CHECK: Vreg: %98[ 9 ]
# CHECK: Vreg: %15[ 20 ]
# CHECK: Vreg: %60[ LoopTag+22 ]
# CHECK: Vreg: %3[ LoopTag+24 ]
# CHECK: Vreg: %100[ 1 ]
# CHECK: Vreg: %17[ LoopTag+59 ]
# CHECK: Vreg: %43[ LoopTag+32 ]
# CHECK: Vreg: %24[ LoopTag*2+49 ]
# CHECK: Vreg: %31[ LoopTag+34 ]
# CHECK: Vreg: %12:sub0[ LoopTag+45 ]
# CHECK: Vreg: %12:sub1[ LoopTag+46 ]
# CHECK: --- MBB_8 ---
# CHECK: Instr: %112:sreg_32 = S_ADD_I32 %45, 1, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 13 ]
# CHECK: Vreg: %45[ 0 ]
# CHECK: Vreg: %26[ 56 ]
# CHECK: Vreg: %28[ 23 ]
# CHECK: Vreg: %61[ 8 ]
# CHECK: Vreg: %4[ 59 ]
# CHECK: Vreg: %11[ 2 ]
# CHECK: Vreg: %63[ 11 ]
# CHECK: Vreg: %25[ 54 ]
# CHECK: Vreg: %134[ 7 ]
# CHECK: Vreg: %65[ 17 ]
# CHECK: Vreg: %15[ 52 ]
# CHECK: Vreg: %60[ 1 ]
# CHECK: Vreg: %3[ 3 ]
# CHECK: Vreg: %74[ 16 ]
# CHECK: Vreg: %17[ 45 ]
# CHECK: Vreg: %43[ 18 ]
# CHECK: Vreg: %24[ LoopTag+35 ]
# CHECK: Vreg: %31[ 20 ]
# CHECK: Vreg: %12:sub0[ 31 ]
# CHECK: Vreg: %12:sub1[ 32 ]
# CHECK: Instr: %113:vgpr_32 = V_ADD_U32_e64 %112, %60, 0, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 12 ]
# CHECK: Vreg: %45[ 18 ]
# CHECK: Vreg: %26[ 55 ]
# CHECK: Vreg: %28[ 22 ]
# CHECK: Vreg: %61[ 7 ]
# CHECK: Vreg: %4[ 58 ]
# CHECK: Vreg: %11[ 1 ]
# CHECK: Vreg: %63[ 10 ]
# CHECK: Vreg: %25[ 53 ]
# CHECK: Vreg: %134[ 6 ]
# CHECK: Vreg: %65[ 16 ]
# CHECK: Vreg: %15[ 51 ]
# CHECK: Vreg: %60[ 0 ]
# CHECK: Vreg: %3[ 2 ]
# CHECK: Vreg: %112[ 0 ]
# CHECK: Vreg: %74[ 15 ]
# CHECK: Vreg: %17[ 44 ]
# CHECK: Vreg: %43[ 17 ]
# CHECK: Vreg: %24[ LoopTag+34 ]
# CHECK: Vreg: %31[ 19 ]
# CHECK: Vreg: %12:sub0[ 30 ]
# CHECK: Vreg: %12:sub1[ 31 ]
# CHECK: Instr: GLOBAL_STORE_DWORD %11, %113, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 11 ]
# CHECK: Vreg: %45[ 17 ]
# CHECK: Vreg: %26[ 54 ]
# CHECK: Vreg: %28[ 21 ]
# CHECK: Vreg: %61[ 6 ]
# CHECK: Vreg: %4[ 57 ]
# CHECK: Vreg: %113[ 0 ]
# CHECK: Vreg: %11[ 0 ]
# CHECK: Vreg: %63[ 9 ]
# CHECK: Vreg: %25[ 52 ]
# CHECK: Vreg: %134[ 5 ]
# CHECK: Vreg: %65[ 15 ]
# CHECK: Vreg: %15[ 50 ]
# CHECK: Vreg: %60[ LoopTag+32 ]
# CHECK: Vreg: %3[ 1 ]
# CHECK: Vreg: %112[ 1 ]
# CHECK: Vreg: %74[ 14 ]
# CHECK: Vreg: %17[ 43 ]
# CHECK: Vreg: %43[ 16 ]
# CHECK: Vreg: %24[ LoopTag+33 ]
# CHECK: Vreg: %31[ 18 ]
# CHECK: Vreg: %12:sub0[ 29 ]
# CHECK: Vreg: %12:sub1[ 30 ]
# CHECK: Instr: %114:sreg_32 = V_CMP_GE_U32_e64 %112, %3, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 10 ]
# CHECK: Vreg: %45[ 16 ]
# CHECK: Vreg: %26[ 53 ]
# CHECK: Vreg: %28[ 20 ]
# CHECK: Vreg: %61[ 5 ]
# CHECK: Vreg: %4[ 56 ]
# CHECK: Vreg: %113[ 3 ]
# CHECK: Vreg: %11[ 51 ]
# CHECK: Vreg: %63[ 8 ]
# CHECK: Vreg: %25[ 51 ]
# CHECK: Vreg: %134[ 4 ]
# CHECK: Vreg: %65[ 14 ]
# CHECK: Vreg: %15[ 49 ]
# CHECK: Vreg: %60[ LoopTag+31 ]
# CHECK: Vreg: %3[ 0 ]
# CHECK: Vreg: %112[ 0 ]
# CHECK: Vreg: %74[ 13 ]
# CHECK: Vreg: %17[ 42 ]
# CHECK: Vreg: %43[ 15 ]
# CHECK: Vreg: %24[ LoopTag+32 ]
# CHECK: Vreg: %31[ 17 ]
# CHECK: Vreg: %12:sub0[ 28 ]
# CHECK: Vreg: %12:sub1[ 29 ]
# CHECK: Instr: %115:sreg_32 = S_XOR_B32 $exec_lo, -1, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 9 ]
# CHECK: Vreg: %45[ 15 ]
# CHECK: Vreg: %26[ 52 ]
# CHECK: Vreg: %28[ 19 ]
# CHECK: Vreg: %61[ 4 ]
# CHECK: Vreg: %4[ 55 ]
# CHECK: Vreg: %113[ 2 ]
# CHECK: Vreg: %11[ 50 ]
# CHECK: Vreg: %63[ 7 ]
# CHECK: Vreg: %25[ 50 ]
# CHECK: Vreg: %134[ 3 ]
# CHECK: Vreg: %65[ 13 ]
# CHECK: Vreg: %15[ 48 ]
# CHECK: Vreg: %60[ LoopTag+30 ]
# CHECK: Vreg: %3[ 65 ]
# CHECK: Vreg: %112[ 2 ]
# CHECK: Vreg: %74[ 12 ]
# CHECK: Vreg: %17[ 41 ]
# CHECK: Vreg: %43[ 14 ]
# CHECK: Vreg: %24[ LoopTag+31 ]
# CHECK: Vreg: %114[ 1 ]
# CHECK: Vreg: %31[ 16 ]
# CHECK: Vreg: %12:sub0[ 27 ]
# CHECK: Vreg: %12:sub1[ 28 ]
# CHECK: Instr: %116:sreg_32 = S_ORN2_B32 killed %114, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 8 ]
# CHECK: Vreg: %45[ 14 ]
# CHECK: Vreg: %26[ 51 ]
# CHECK: Vreg: %28[ 18 ]
# CHECK: Vreg: %61[ 3 ]
# CHECK: Vreg: %4[ 54 ]
# CHECK: Vreg: %113[ 1 ]
# CHECK: Vreg: %11[ 49 ]
# CHECK: Vreg: %63[ 6 ]
# CHECK: Vreg: %25[ 49 ]
# CHECK: Vreg: %134[ 2 ]
# CHECK: Vreg: %115[ 1 ]
# CHECK: Vreg: %65[ 12 ]
# CHECK: Vreg: %15[ 47 ]
# CHECK: Vreg: %60[ LoopTag+29 ]
# CHECK: Vreg: %3[ 64 ]
# CHECK: Vreg: %112[ 1 ]
# CHECK: Vreg: %74[ 11 ]
# CHECK: Vreg: %17[ 40 ]
# CHECK: Vreg: %43[ 13 ]
# CHECK: Vreg: %24[ LoopTag+30 ]
# CHECK: Vreg: %114[ 0 ]
# CHECK: Vreg: %31[ 15 ]
# CHECK: Vreg: %12:sub0[ 26 ]
# CHECK: Vreg: %12:sub1[ 27 ]
# CHECK: Instr: S_BRANCH %bb.14
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 7 ]
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %26[ 50 ]
# CHECK: Vreg: %116[ 0 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %113[ 0 ]
# CHECK: Vreg: %11[ 48 ]
# CHECK: Vreg: %63[ 5 ]
# CHECK: Vreg: %25[ 48 ]
# CHECK: Vreg: %134[ 1 ]
# CHECK: Vreg: %115[ 0 ]
# CHECK: Vreg: %65[ 11 ]
# CHECK: Vreg: %15[ 46 ]
# CHECK: Vreg: %60[ LoopTag+28 ]
# CHECK: Vreg: %3[ 63 ]
# CHECK: Vreg: %112[ 0 ]
# CHECK: Vreg: %74[ 10 ]
# CHECK: Vreg: %17[ 39 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ 7 ]
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %26[ 50 ]
# CHECK: Vreg: %116[ 0 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %113[ 0 ]
# CHECK: Vreg: %11[ 48 ]
# CHECK: Vreg: %63[ 5 ]
# CHECK: Vreg: %25[ 48 ]
# CHECK: Vreg: %134[ 1 ]
# CHECK: Vreg: %115[ 0 ]
# CHECK: Vreg: %65[ 11 ]
# CHECK: Vreg: %15[ 46 ]
# CHECK: Vreg: %60[ LoopTag+28 ]
# CHECK: Vreg: %3[ 63 ]
# CHECK: Vreg: %112[ 0 ]
# CHECK: Vreg: %74[ 10 ]
# CHECK: Vreg: %17[ 39 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: --- MBB_9 ---
# CHECK: Instr: %117:vgpr_32 = PHI undef %118:vgpr_32, %bb.15, %119, %bb.12
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %123[ 1 ]
# CHECK: Vreg: %11[ 0 ]
# CHECK: Vreg: %77[ 3 ]
# CHECK: Vreg: %60[ 3 ]
# CHECK: Vreg: %119[ 0 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Instr: %120:vreg_64 = PHI %11, %bb.15, undef %121:vreg_64, %bb.12
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %123[ 1 ]
# CHECK: Vreg: %11[ 0 ]
# CHECK: Vreg: %77[ 3 ]
# CHECK: Vreg: %117[ 2 ]
# CHECK: Vreg: %60[ 3 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Instr: %122:sreg_32 = SI_ELSE killed %123, %bb.13, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %123[ 0 ]
# CHECK: Vreg: %120[ 3 ]
# CHECK: Vreg: %77[ 2 ]
# CHECK: Vreg: %117[ 1 ]
# CHECK: Vreg: %60[ 2 ]
# CHECK: Vreg: %24[ 3 ]
# CHECK: Instr: S_BRANCH %bb.10
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %120[ 2 ]
# CHECK: Vreg: %77[ 1 ]
# CHECK: Vreg: %122[ 1 ]
# CHECK: Vreg: %117[ 0 ]
# CHECK: Vreg: %60[ 1 ]
# CHECK: Vreg: %24[ 2 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %120[ 2 ]
# CHECK: Vreg: %77[ 1 ]
# CHECK: Vreg: %122[ 1 ]
# CHECK: Vreg: %117[ 0 ]
# CHECK: Vreg: %60[ 1 ]
# CHECK: Vreg: %24[ 2 ]
# CHECK: --- MBB_10 ---
# CHECK: Instr: %124:vgpr_32 = V_MUL_LO_U32_e64 killed %60, killed %77, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %120[ 1 ]
# CHECK: Vreg: %77[ 0 ]
# CHECK: Vreg: %122[ 3 ]
# CHECK: Vreg: %60[ 0 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Instr: GLOBAL_STORE_DWORD killed %120, %124, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %120[ 0 ]
# CHECK: Vreg: %122[ 2 ]
# CHECK: Vreg: %124[ 0 ]
# CHECK: Vreg: %24[ 3 ]
# CHECK: Instr: S_BRANCH %bb.13
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %122[ 1 ]
# CHECK: Vreg: %124[ 0 ]
# CHECK: Vreg: %24[ 2 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %122[ 1 ]
# CHECK: Vreg: %124[ 0 ]
# CHECK: Vreg: %24[ 2 ]
# CHECK: --- MBB_11 ---
# CHECK: Instr: GLOBAL_STORE_DWORD killed %11, %72, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %123[ 3 ]
# CHECK: Vreg: %125[ 1 ]
# CHECK: Vreg: %11[ 0 ]
# CHECK: Vreg: %77[ 5 ]
# CHECK: Vreg: %72[ 0 ]
# CHECK: Vreg: %60[ 5 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %123[ 3 ]
# CHECK: Vreg: %125[ 1 ]
# CHECK: Vreg: %77[ 5 ]
# CHECK: Vreg: %72[ 0 ]
# CHECK: Vreg: %60[ 5 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: --- MBB_12 ---
# CHECK: Instr: %119:vgpr_32 = PHI %75, %bb.16, %72, %bb.11
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %123[ 3 ]
# CHECK: Vreg: %125[ 1 ]
# CHECK: Vreg: %75[ 0 ]
# CHECK: Vreg: %77[ 5 ]
# CHECK: Vreg: %72[ 0 ]
# CHECK: Vreg: %60[ 5 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Instr: SI_END_CF killed %125, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %123[ 2 ]
# CHECK: Vreg: %125[ 0 ]
# CHECK: Vreg: %77[ 4 ]
# CHECK: Vreg: %60[ 4 ]
# CHECK: Vreg: %119[ 1 ]
# CHECK: Vreg: %24[ 5 ]
# CHECK: Instr: S_BRANCH %bb.9
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %123[ 1 ]
# CHECK: Vreg: %77[ 3 ]
# CHECK: Vreg: %60[ 3 ]
# CHECK: Vreg: %119[ 0 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %123[ 1 ]
# CHECK: Vreg: %77[ 3 ]
# CHECK: Vreg: %60[ 3 ]
# CHECK: Vreg: %119[ 0 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: --- MBB_13 ---
# CHECK: Instr: %126:vgpr_32 = PHI %117, %bb.9, %124, %bb.10
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %122[ 1 ]
# CHECK: Vreg: %117[ 0 ]
# CHECK: Vreg: %124[ 0 ]
# CHECK: Vreg: %24[ 2 ]
# CHECK: Instr: SI_END_CF killed %122, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %122[ 0 ]
# CHECK: Vreg: %126[ 1 ]
# CHECK: Vreg: %24[ 1 ]
# CHECK: Instr: %127:vgpr_32 = V_ADD3_U32_e64 killed %24, killed %126, 100, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %126[ 0 ]
# CHECK: Vreg: %24[ 0 ]
# CHECK: Instr: %128:sreg_32_xm0 = V_READFIRSTLANE_B32 killed %127, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %127[ 0 ]
# CHECK: Instr: $sgpr0 = COPY killed %128
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %128[ 0 ]
# CHECK: Instr: SI_RETURN_TO_EPILOG killed $sgpr0
# CHECK-NEXT: Next-use distances:
# CHECK: (no register uses)
# CHECK: Block End Distances:
# CHECK: (no registers live at block end)
# CHECK: --- MBB_14 ---
# CHECK: Instr: %129:sreg_32 = PHI %130, %bb.18, %116, %bb.8
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 7 ]
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %26[ 50 ]
# CHECK: Vreg: %116[ 0 ]
# CHECK: Vreg: %130[ 0 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %113[ 0 ]
# CHECK: Vreg: %11[ 48 ]
# CHECK: Vreg: %63[ 5 ]
# CHECK: Vreg: %25[ 48 ]
# CHECK: Vreg: %134[ 1 ]
# CHECK: Vreg: %115[ 0 ]
# CHECK: Vreg: %65[ 11 ]
# CHECK: Vreg: %15[ 46 ]
# CHECK: Vreg: %60[ LoopTag+28 ]
# CHECK: Vreg: %3[ 63 ]
# CHECK: Vreg: %112[ 0 ]
# CHECK: Vreg: %74[ 10 ]
# CHECK: Vreg: %17[ 39 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: Instr: %131:sreg_32 = PHI %130, %bb.18, %115, %bb.8
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 7 ]
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %26[ 50 ]
# CHECK: Vreg: %130[ 0 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %113[ 0 ]
# CHECK: Vreg: %11[ 48 ]
# CHECK: Vreg: %63[ 5 ]
# CHECK: Vreg: %25[ 48 ]
# CHECK: Vreg: %134[ 1 ]
# CHECK: Vreg: %115[ 0 ]
# CHECK: Vreg: %65[ 11 ]
# CHECK: Vreg: %129[ 8 ]
# CHECK: Vreg: %15[ 46 ]
# CHECK: Vreg: %60[ LoopTag+28 ]
# CHECK: Vreg: %3[ 63 ]
# CHECK: Vreg: %112[ 0 ]
# CHECK: Vreg: %74[ 10 ]
# CHECK: Vreg: %17[ 39 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: Instr: %71:sreg_32 = PHI undef %132:sreg_32, %bb.18, %112, %bb.8
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 7 ]
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %26[ 50 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %113[ 0 ]
# CHECK: Vreg: %11[ 48 ]
# CHECK: Vreg: %63[ 5 ]
# CHECK: Vreg: %25[ 48 ]
# CHECK: Vreg: %134[ 1 ]
# CHECK: Vreg: %65[ 11 ]
# CHECK: Vreg: %129[ 8 ]
# CHECK: Vreg: %15[ 46 ]
# CHECK: Vreg: %60[ LoopTag+28 ]
# CHECK: Vreg: %3[ 63 ]
# CHECK: Vreg: %131[ 3 ]
# CHECK: Vreg: %112[ 0 ]
# CHECK: Vreg: %74[ 10 ]
# CHECK: Vreg: %17[ 39 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: Instr: %76:vgpr_32 = PHI undef %133:vgpr_32, %bb.18, %113, %bb.8
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 7 ]
# CHECK: Vreg: %45[ 13 ]
# CHECK: Vreg: %26[ 50 ]
# CHECK: Vreg: %71[ 10 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %113[ 0 ]
# CHECK: Vreg: %11[ 48 ]
# CHECK: Vreg: %63[ 5 ]
# CHECK: Vreg: %25[ 48 ]
# CHECK: Vreg: %134[ 1 ]
# CHECK: Vreg: %65[ 11 ]
# CHECK: Vreg: %129[ 8 ]
# CHECK: Vreg: %15[ 46 ]
# CHECK: Vreg: %60[ LoopTag+28 ]
# CHECK: Vreg: %3[ 63 ]
# CHECK: Vreg: %131[ 3 ]
# CHECK: Vreg: %74[ 10 ]
# CHECK: Vreg: %17[ 39 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: Instr: SI_END_CF killed %134, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 6 ]
# CHECK: Vreg: %45[ 12 ]
# CHECK: Vreg: %26[ 49 ]
# CHECK: Vreg: %71[ 9 ]
# CHECK: Vreg: %28[ 16 ]
# CHECK: Vreg: %61[ 1 ]
# CHECK: Vreg: %4[ 52 ]
# CHECK: Vreg: %11[ 47 ]
# CHECK: Vreg: %63[ 4 ]
# CHECK: Vreg: %25[ 47 ]
# CHECK: Vreg: %134[ 0 ]
# CHECK: Vreg: %65[ 10 ]
# CHECK: Vreg: %129[ 7 ]
# CHECK: Vreg: %15[ 45 ]
# CHECK: Vreg: %60[ LoopTag+27 ]
# CHECK: Vreg: %3[ 62 ]
# CHECK: Vreg: %131[ 2 ]
# CHECK: Vreg: %74[ 9 ]
# CHECK: Vreg: %17[ 38 ]
# CHECK: Vreg: %43[ 11 ]
# CHECK: Vreg: %24[ LoopTag+28 ]
# CHECK: Vreg: %31[ 13 ]
# CHECK: Vreg: %12:sub0[ 24 ]
# CHECK: Vreg: %12:sub1[ 25 ]
# CHECK: Vreg: %76[ 9 ]
# CHECK: Instr: %135:sreg_32 = S_ANDN2_B32 killed %61, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 5 ]
# CHECK: Vreg: %45[ 11 ]
# CHECK: Vreg: %26[ 48 ]
# CHECK: Vreg: %71[ 8 ]
# CHECK: Vreg: %28[ 15 ]
# CHECK: Vreg: %61[ 0 ]
# CHECK: Vreg: %4[ 51 ]
# CHECK: Vreg: %11[ 46 ]
# CHECK: Vreg: %63[ 3 ]
# CHECK: Vreg: %25[ 46 ]
# CHECK: Vreg: %65[ 9 ]
# CHECK: Vreg: %129[ 6 ]
# CHECK: Vreg: %15[ 44 ]
# CHECK: Vreg: %60[ LoopTag+26 ]
# CHECK: Vreg: %3[ 61 ]
# CHECK: Vreg: %131[ 1 ]
# CHECK: Vreg: %74[ 8 ]
# CHECK: Vreg: %17[ 37 ]
# CHECK: Vreg: %43[ 10 ]
# CHECK: Vreg: %24[ LoopTag+27 ]
# CHECK: Vreg: %31[ 12 ]
# CHECK: Vreg: %12:sub0[ 23 ]
# CHECK: Vreg: %12:sub1[ 24 ]
# CHECK: Vreg: %76[ 8 ]
# CHECK: Instr: %136:sreg_32 = S_AND_B32 killed %131, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 4 ]
# CHECK: Vreg: %45[ 10 ]
# CHECK: Vreg: %26[ 47 ]
# CHECK: Vreg: %71[ 7 ]
# CHECK: Vreg: %135[ 1 ]
# CHECK: Vreg: %28[ 14 ]
# CHECK: Vreg: %4[ 50 ]
# CHECK: Vreg: %11[ 45 ]
# CHECK: Vreg: %63[ 2 ]
# CHECK: Vreg: %25[ 45 ]
# CHECK: Vreg: %65[ 8 ]
# CHECK: Vreg: %129[ 5 ]
# CHECK: Vreg: %15[ 43 ]
# CHECK: Vreg: %60[ LoopTag+25 ]
# CHECK: Vreg: %3[ 60 ]
# CHECK: Vreg: %131[ 0 ]
# CHECK: Vreg: %74[ 7 ]
# CHECK: Vreg: %17[ 36 ]
# CHECK: Vreg: %43[ 9 ]
# CHECK: Vreg: %24[ LoopTag+26 ]
# CHECK: Vreg: %31[ 11 ]
# CHECK: Vreg: %12:sub0[ 22 ]
# CHECK: Vreg: %12:sub1[ 23 ]
# CHECK: Vreg: %76[ 7 ]
# CHECK: Instr: %69:sreg_32 = S_OR_B32 killed %135, killed %136, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 3 ]
# CHECK: Vreg: %45[ 9 ]
# CHECK: Vreg: %26[ 46 ]
# CHECK: Vreg: %71[ 6 ]
# CHECK: Vreg: %135[ 0 ]
# CHECK: Vreg: %28[ 13 ]
# CHECK: Vreg: %4[ 49 ]
# CHECK: Vreg: %11[ 44 ]
# CHECK: Vreg: %63[ 1 ]
# CHECK: Vreg: %25[ 44 ]
# CHECK: Vreg: %65[ 7 ]
# CHECK: Vreg: %129[ 4 ]
# CHECK: Vreg: %136[ 0 ]
# CHECK: Vreg: %15[ 42 ]
# CHECK: Vreg: %60[ LoopTag+24 ]
# CHECK: Vreg: %3[ 59 ]
# CHECK: Vreg: %74[ 6 ]
# CHECK: Vreg: %17[ 35 ]
# CHECK: Vreg: %43[ 8 ]
# CHECK: Vreg: %24[ LoopTag+25 ]
# CHECK: Vreg: %31[ 10 ]
# CHECK: Vreg: %12:sub0[ 21 ]
# CHECK: Vreg: %12:sub1[ 22 ]
# CHECK: Vreg: %76[ 6 ]
# CHECK: Instr: %137:sreg_32 = S_ANDN2_B32 killed %63, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 2 ]
# CHECK: Vreg: %45[ 8 ]
# CHECK: Vreg: %26[ 45 ]
# CHECK: Vreg: %71[ 5 ]
# CHECK: Vreg: %28[ 12 ]
# CHECK: Vreg: %4[ 48 ]
# CHECK: Vreg: %11[ 43 ]
# CHECK: Vreg: %63[ 0 ]
# CHECK: Vreg: %25[ 43 ]
# CHECK: Vreg: %65[ 6 ]
# CHECK: Vreg: %129[ 3 ]
# CHECK: Vreg: %15[ 41 ]
# CHECK: Vreg: %60[ LoopTag+23 ]
# CHECK: Vreg: %3[ 58 ]
# CHECK: Vreg: %74[ 5 ]
# CHECK: Vreg: %17[ 34 ]
# CHECK: Vreg: %43[ 7 ]
# CHECK: Vreg: %24[ LoopTag+24 ]
# CHECK: Vreg: %69[ 5 ]
# CHECK: Vreg: %31[ 9 ]
# CHECK: Vreg: %12:sub0[ 20 ]
# CHECK: Vreg: %12:sub1[ 21 ]
# CHECK: Vreg: %76[ 5 ]
# CHECK: Instr: %68:sreg_32 = COPY killed %137
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 1 ]
# CHECK: Vreg: %45[ 7 ]
# CHECK: Vreg: %26[ 44 ]
# CHECK: Vreg: %71[ 4 ]
# CHECK: Vreg: %28[ 11 ]
# CHECK: Vreg: %137[ 0 ]
# CHECK: Vreg: %4[ 47 ]
# CHECK: Vreg: %11[ 42 ]
# CHECK: Vreg: %25[ 42 ]
# CHECK: Vreg: %65[ 5 ]
# CHECK: Vreg: %129[ 2 ]
# CHECK: Vreg: %15[ 40 ]
# CHECK: Vreg: %60[ LoopTag+22 ]
# CHECK: Vreg: %3[ 57 ]
# CHECK: Vreg: %74[ 4 ]
# CHECK: Vreg: %17[ 33 ]
# CHECK: Vreg: %43[ 6 ]
# CHECK: Vreg: %24[ LoopTag+23 ]
# CHECK: Vreg: %69[ 4 ]
# CHECK: Vreg: %31[ 8 ]
# CHECK: Vreg: %12:sub0[ 19 ]
# CHECK: Vreg: %12:sub1[ 20 ]
# CHECK: Vreg: %76[ 4 ]
# CHECK: Instr: %138:sreg_32 = S_ANDN2_B32 killed %64, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 0 ]
# CHECK: Vreg: %45[ 6 ]
# CHECK: Vreg: %26[ 43 ]
# CHECK: Vreg: %71[ 3 ]
# CHECK: Vreg: %28[ 10 ]
# CHECK: Vreg: %4[ 46 ]
# CHECK: Vreg: %68[ 3 ]
# CHECK: Vreg: %11[ 41 ]
# CHECK: Vreg: %25[ 41 ]
# CHECK: Vreg: %65[ 4 ]
# CHECK: Vreg: %129[ 1 ]
# CHECK: Vreg: %15[ 39 ]
# CHECK: Vreg: %60[ LoopTag+21 ]
# CHECK: Vreg: %3[ 56 ]
# CHECK: Vreg: %74[ 3 ]
# CHECK: Vreg: %17[ 32 ]
# CHECK: Vreg: %43[ 5 ]
# CHECK: Vreg: %24[ LoopTag+22 ]
# CHECK: Vreg: %69[ 3 ]
# CHECK: Vreg: %31[ 7 ]
# CHECK: Vreg: %12:sub0[ 18 ]
# CHECK: Vreg: %12:sub1[ 19 ]
# CHECK: Vreg: %76[ 3 ]
# CHECK: Instr: %139:sreg_32 = S_AND_B32 killed %129, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 5 ]
# CHECK: Vreg: %26[ 42 ]
# CHECK: Vreg: %71[ 2 ]
# CHECK: Vreg: %28[ 9 ]
# CHECK: Vreg: %4[ 45 ]
# CHECK: Vreg: %68[ 2 ]
# CHECK: Vreg: %11[ 40 ]
# CHECK: Vreg: %25[ 40 ]
# CHECK: Vreg: %65[ 3 ]
# CHECK: Vreg: %129[ 0 ]
# CHECK: Vreg: %15[ 38 ]
# CHECK: Vreg: %60[ LoopTag+20 ]
# CHECK: Vreg: %3[ 55 ]
# CHECK: Vreg: %74[ 2 ]
# CHECK: Vreg: %138[ 1 ]
# CHECK: Vreg: %17[ 31 ]
# CHECK: Vreg: %43[ 4 ]
# CHECK: Vreg: %24[ LoopTag+21 ]
# CHECK: Vreg: %69[ 2 ]
# CHECK: Vreg: %31[ 6 ]
# CHECK: Vreg: %12:sub0[ 17 ]
# CHECK: Vreg: %12:sub1[ 18 ]
# CHECK: Vreg: %76[ 2 ]
# CHECK: Instr: %67:sreg_32 = S_OR_B32 killed %138, killed %139, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 4 ]
# CHECK: Vreg: %26[ 41 ]
# CHECK: Vreg: %71[ 1 ]
# CHECK: Vreg: %28[ 8 ]
# CHECK: Vreg: %4[ 44 ]
# CHECK: Vreg: %68[ 1 ]
# CHECK: Vreg: %11[ 39 ]
# CHECK: Vreg: %139[ 0 ]
# CHECK: Vreg: %25[ 39 ]
# CHECK: Vreg: %65[ 2 ]
# CHECK: Vreg: %15[ 37 ]
# CHECK: Vreg: %60[ LoopTag+19 ]
# CHECK: Vreg: %3[ 54 ]
# CHECK: Vreg: %74[ 1 ]
# CHECK: Vreg: %138[ 0 ]
# CHECK: Vreg: %17[ 30 ]
# CHECK: Vreg: %43[ 3 ]
# CHECK: Vreg: %24[ LoopTag+20 ]
# CHECK: Vreg: %69[ 1 ]
# CHECK: Vreg: %31[ 5 ]
# CHECK: Vreg: %12:sub0[ 16 ]
# CHECK: Vreg: %12:sub1[ 17 ]
# CHECK: Vreg: %76[ 1 ]
# CHECK: Instr: S_BRANCH %bb.3
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 40 ]
# CHECK: Vreg: %71[ 0 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %68[ 0 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %25[ 38 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %67[ 0 ]
# CHECK: Vreg: %74[ 0 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %69[ 0 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Vreg: %76[ 0 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 40 ]
# CHECK: Vreg: %71[ 0 ]
# CHECK: Vreg: %28[ 7 ]
# CHECK: Vreg: %4[ 43 ]
# CHECK: Vreg: %68[ 0 ]
# CHECK: Vreg: %11[ 38 ]
# CHECK: Vreg: %25[ 38 ]
# CHECK: Vreg: %65[ 1 ]
# CHECK: Vreg: %15[ 36 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ 53 ]
# CHECK: Vreg: %67[ 0 ]
# CHECK: Vreg: %74[ 0 ]
# CHECK: Vreg: %17[ 29 ]
# CHECK: Vreg: %43[ 2 ]
# CHECK: Vreg: %24[ LoopTag+19 ]
# CHECK: Vreg: %69[ 0 ]
# CHECK: Vreg: %31[ 4 ]
# CHECK: Vreg: %12:sub0[ 15 ]
# CHECK: Vreg: %12:sub1[ 16 ]
# CHECK: Vreg: %76[ 0 ]
# CHECK: --- MBB_15 ---
# CHECK: Instr: SI_END_CF killed %44, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %33[ 4 ]
# CHECK: Vreg: %30[ 1 ]
# CHECK: Vreg: %11[ 3 ]
# CHECK: Vreg: %75[ 5 ]
# CHECK: Vreg: %44[ 0 ]
# CHECK: Vreg: %77[ 6 ]
# CHECK: Vreg: %72[ 6 ]
# CHECK: Vreg: %60[ 6 ]
# CHECK: Vreg: %24[ 7 ]
# CHECK: Instr: %140:sreg_32 = S_XOR_B32 killed %30, -1, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %33[ 3 ]
# CHECK: Vreg: %30[ 0 ]
# CHECK: Vreg: %11[ 2 ]
# CHECK: Vreg: %75[ 4 ]
# CHECK: Vreg: %77[ 5 ]
# CHECK: Vreg: %72[ 5 ]
# CHECK: Vreg: %60[ 5 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Instr: %123:sreg_32 = SI_IF killed %140, %bb.9, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %33[ 2 ]
# CHECK: Vreg: %11[ 1 ]
# CHECK: Vreg: %75[ 3 ]
# CHECK: Vreg: %77[ 4 ]
# CHECK: Vreg: %72[ 4 ]
# CHECK: Vreg: %60[ 4 ]
# CHECK: Vreg: %24[ 5 ]
# CHECK: Vreg: %140[ 0 ]
# CHECK: Instr: S_BRANCH %bb.16
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %33[ 1 ]
# CHECK: Vreg: %123[ 1 ]
# CHECK: Vreg: %11[ 0 ]
# CHECK: Vreg: %75[ 2 ]
# CHECK: Vreg: %77[ 3 ]
# CHECK: Vreg: %72[ 3 ]
# CHECK: Vreg: %60[ 3 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %33[ 1 ]
# CHECK: Vreg: %123[ 1 ]
# CHECK: Vreg: %11[ 0 ]
# CHECK: Vreg: %75[ 2 ]
# CHECK: Vreg: %77[ 3 ]
# CHECK: Vreg: %72[ 3 ]
# CHECK: Vreg: %60[ 3 ]
# CHECK: Vreg: %24[ 4 ]
# CHECK: --- MBB_16 ---
# CHECK: Instr: %125:sreg_32 = SI_IF killed %33, %bb.12, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %33[ 0 ]
# CHECK: Vreg: %123[ 4 ]
# CHECK: Vreg: %11[ 2 ]
# CHECK: Vreg: %75[ 1 ]
# CHECK: Vreg: %77[ 6 ]
# CHECK: Vreg: %72[ 2 ]
# CHECK: Vreg: %60[ 6 ]
# CHECK: Vreg: %24[ 7 ]
# CHECK: Instr: S_BRANCH %bb.11
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %123[ 3 ]
# CHECK: Vreg: %125[ 1 ]
# CHECK: Vreg: %11[ 1 ]
# CHECK: Vreg: %75[ 0 ]
# CHECK: Vreg: %77[ 5 ]
# CHECK: Vreg: %72[ 1 ]
# CHECK: Vreg: %60[ 5 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %123[ 3 ]
# CHECK: Vreg: %125[ 1 ]
# CHECK: Vreg: %11[ 1 ]
# CHECK: Vreg: %75[ 0 ]
# CHECK: Vreg: %77[ 5 ]
# CHECK: Vreg: %72[ 1 ]
# CHECK: Vreg: %60[ 5 ]
# CHECK: Vreg: %24[ 6 ]
# CHECK: --- MBB_17 ---
# CHECK: Instr: %141:sreg_32 = PHI %99, %bb.5, %111, %bb.7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+27 ]
# CHECK: Vreg: %45[ LoopTag+21 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %97[ 5 ]
# CHECK: Vreg: %111[ 0 ]
# CHECK: Vreg: %28[ LoopTag+37 ]
# CHECK: Vreg: %99[ 0 ]
# CHECK: Vreg: %61[ LoopTag+22 ]
# CHECK: Vreg: %4[ 27 ]
# CHECK: Vreg: %11[ 22 ]
# CHECK: Vreg: %82[ 12 ]
# CHECK: Vreg: %63[ LoopTag+25 ]
# CHECK: Vreg: %108[ 0 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %96[ 2 ]
# CHECK: Vreg: %65[ LoopTag+31 ]
# CHECK: Vreg: %110[ 0 ]
# CHECK: Vreg: %91[ 11 ]
# CHECK: Vreg: %98[ 9 ]
# CHECK: Vreg: %15[ 20 ]
# CHECK: Vreg: %60[ LoopTag+22 ]
# CHECK: Vreg: %3[ LoopTag+24 ]
# CHECK: Vreg: %100[ 1 ]
# CHECK: Vreg: %17[ LoopTag+59 ]
# CHECK: Vreg: %43[ LoopTag+32 ]
# CHECK: Vreg: %24[ LoopTag*2+49 ]
# CHECK: Vreg: %31[ LoopTag+34 ]
# CHECK: Vreg: %12:sub0[ LoopTag+45 ]
# CHECK: Vreg: %12:sub1[ LoopTag+46 ]
# CHECK: Instr: %142:sreg_32 = PHI %99, %bb.5, %110, %bb.7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+27 ]
# CHECK: Vreg: %45[ LoopTag+21 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %97[ 5 ]
# CHECK: Vreg: %28[ LoopTag+37 ]
# CHECK: Vreg: %99[ 0 ]
# CHECK: Vreg: %61[ LoopTag+22 ]
# CHECK: Vreg: %4[ 27 ]
# CHECK: Vreg: %11[ 22 ]
# CHECK: Vreg: %82[ 12 ]
# CHECK: Vreg: %63[ LoopTag+25 ]
# CHECK: Vreg: %108[ 0 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %96[ 2 ]
# CHECK: Vreg: %141[ 6 ]
# CHECK: Vreg: %65[ LoopTag+31 ]
# CHECK: Vreg: %110[ 0 ]
# CHECK: Vreg: %91[ 11 ]
# CHECK: Vreg: %98[ 9 ]
# CHECK: Vreg: %15[ 20 ]
# CHECK: Vreg: %60[ LoopTag+22 ]
# CHECK: Vreg: %3[ LoopTag+24 ]
# CHECK: Vreg: %100[ 1 ]
# CHECK: Vreg: %17[ LoopTag+59 ]
# CHECK: Vreg: %43[ LoopTag+32 ]
# CHECK: Vreg: %24[ LoopTag*2+49 ]
# CHECK: Vreg: %31[ LoopTag+34 ]
# CHECK: Vreg: %12:sub0[ LoopTag+45 ]
# CHECK: Vreg: %12:sub1[ LoopTag+46 ]
# CHECK: Instr: %104:sreg_32 = PHI undef %143:sreg_32, %bb.5, %108, %bb.7
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+27 ]
# CHECK: Vreg: %45[ LoopTag+21 ]
# CHECK: Vreg: %26[ 24 ]
# CHECK: Vreg: %97[ 5 ]
# CHECK: Vreg: %142[ 3 ]
# CHECK: Vreg: %28[ LoopTag+37 ]
# CHECK: Vreg: %61[ LoopTag+22 ]
# CHECK: Vreg: %4[ 27 ]
# CHECK: Vreg: %11[ 22 ]
# CHECK: Vreg: %82[ 12 ]
# CHECK: Vreg: %63[ LoopTag+25 ]
# CHECK: Vreg: %108[ 0 ]
# CHECK: Vreg: %25[ 8 ]
# CHECK: Vreg: %96[ 2 ]
# CHECK: Vreg: %141[ 6 ]
# CHECK: Vreg: %65[ LoopTag+31 ]
# CHECK: Vreg: %91[ 11 ]
# CHECK: Vreg: %98[ 9 ]
# CHECK: Vreg: %15[ 20 ]
# CHECK: Vreg: %60[ LoopTag+22 ]
# CHECK: Vreg: %3[ LoopTag+24 ]
# CHECK: Vreg: %100[ 1 ]
# CHECK: Vreg: %17[ LoopTag+59 ]
# CHECK: Vreg: %43[ LoopTag+32 ]
# CHECK: Vreg: %24[ LoopTag*2+49 ]
# CHECK: Vreg: %31[ LoopTag+34 ]
# CHECK: Vreg: %12:sub0[ LoopTag+45 ]
# CHECK: Vreg: %12:sub1[ LoopTag+46 ]
# CHECK: Instr: SI_END_CF killed %100, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+26 ]
# CHECK: Vreg: %45[ LoopTag+20 ]
# CHECK: Vreg: %26[ 23 ]
# CHECK: Vreg: %97[ 4 ]
# CHECK: Vreg: %142[ 2 ]
# CHECK: Vreg: %104[ 7 ]
# CHECK: Vreg: %28[ LoopTag+36 ]
# CHECK: Vreg: %61[ LoopTag+21 ]
# CHECK: Vreg: %4[ 26 ]
# CHECK: Vreg: %11[ 21 ]
# CHECK: Vreg: %82[ 11 ]
# CHECK: Vreg: %63[ LoopTag+24 ]
# CHECK: Vreg: %25[ 7 ]
# CHECK: Vreg: %96[ 1 ]
# CHECK: Vreg: %141[ 5 ]
# CHECK: Vreg: %65[ LoopTag+30 ]
# CHECK: Vreg: %91[ 10 ]
# CHECK: Vreg: %98[ 8 ]
# CHECK: Vreg: %15[ 19 ]
# CHECK: Vreg: %60[ LoopTag+21 ]
# CHECK: Vreg: %3[ LoopTag+23 ]
# CHECK: Vreg: %100[ 0 ]
# CHECK: Vreg: %17[ LoopTag+58 ]
# CHECK: Vreg: %43[ LoopTag+31 ]
# CHECK: Vreg: %24[ LoopTag*2+48 ]
# CHECK: Vreg: %31[ LoopTag+33 ]
# CHECK: Vreg: %12:sub0[ LoopTag+44 ]
# CHECK: Vreg: %12:sub1[ LoopTag+45 ]
# CHECK: Instr: %144:sreg_32 = S_ANDN2_B32 killed %96, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+25 ]
# CHECK: Vreg: %45[ LoopTag+19 ]
# CHECK: Vreg: %26[ 22 ]
# CHECK: Vreg: %97[ 3 ]
# CHECK: Vreg: %142[ 1 ]
# CHECK: Vreg: %104[ 6 ]
# CHECK: Vreg: %28[ LoopTag+35 ]
# CHECK: Vreg: %61[ LoopTag+20 ]
# CHECK: Vreg: %4[ 25 ]
# CHECK: Vreg: %11[ 20 ]
# CHECK: Vreg: %82[ 10 ]
# CHECK: Vreg: %63[ LoopTag+23 ]
# CHECK: Vreg: %25[ 6 ]
# CHECK: Vreg: %96[ 0 ]
# CHECK: Vreg: %141[ 4 ]
# CHECK: Vreg: %65[ LoopTag+29 ]
# CHECK: Vreg: %91[ 9 ]
# CHECK: Vreg: %98[ 7 ]
# CHECK: Vreg: %15[ 18 ]
# CHECK: Vreg: %60[ LoopTag+20 ]
# CHECK: Vreg: %3[ LoopTag+22 ]
# CHECK: Vreg: %17[ LoopTag+57 ]
# CHECK: Vreg: %43[ LoopTag+30 ]
# CHECK: Vreg: %24[ LoopTag*2+47 ]
# CHECK: Vreg: %31[ LoopTag+32 ]
# CHECK: Vreg: %12:sub0[ LoopTag+43 ]
# CHECK: Vreg: %12:sub1[ LoopTag+44 ]
# CHECK: Instr: %145:sreg_32 = S_AND_B32 killed %142, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+24 ]
# CHECK: Vreg: %45[ LoopTag+18 ]
# CHECK: Vreg: %26[ 21 ]
# CHECK: Vreg: %97[ 2 ]
# CHECK: Vreg: %142[ 0 ]
# CHECK: Vreg: %104[ 5 ]
# CHECK: Vreg: %28[ LoopTag+34 ]
# CHECK: Vreg: %144[ 1 ]
# CHECK: Vreg: %61[ LoopTag+19 ]
# CHECK: Vreg: %4[ 24 ]
# CHECK: Vreg: %11[ 19 ]
# CHECK: Vreg: %82[ 9 ]
# CHECK: Vreg: %63[ LoopTag+22 ]
# CHECK: Vreg: %25[ 5 ]
# CHECK: Vreg: %141[ 3 ]
# CHECK: Vreg: %65[ LoopTag+28 ]
# CHECK: Vreg: %91[ 8 ]
# CHECK: Vreg: %98[ 6 ]
# CHECK: Vreg: %15[ 17 ]
# CHECK: Vreg: %60[ LoopTag+19 ]
# CHECK: Vreg: %3[ LoopTag+21 ]
# CHECK: Vreg: %17[ LoopTag+56 ]
# CHECK: Vreg: %43[ LoopTag+29 ]
# CHECK: Vreg: %24[ LoopTag*2+46 ]
# CHECK: Vreg: %31[ LoopTag+31 ]
# CHECK: Vreg: %12:sub0[ LoopTag+42 ]
# CHECK: Vreg: %12:sub1[ LoopTag+43 ]
# CHECK: Instr: %102:sreg_32 = S_OR_B32 killed %144, killed %145, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+23 ]
# CHECK: Vreg: %45[ LoopTag+17 ]
# CHECK: Vreg: %26[ 20 ]
# CHECK: Vreg: %97[ 1 ]
# CHECK: Vreg: %104[ 4 ]
# CHECK: Vreg: %28[ LoopTag+33 ]
# CHECK: Vreg: %144[ 0 ]
# CHECK: Vreg: %61[ LoopTag+18 ]
# CHECK: Vreg: %4[ 23 ]
# CHECK: Vreg: %11[ 18 ]
# CHECK: Vreg: %82[ 8 ]
# CHECK: Vreg: %63[ LoopTag+21 ]
# CHECK: Vreg: %25[ 4 ]
# CHECK: Vreg: %141[ 2 ]
# CHECK: Vreg: %65[ LoopTag+27 ]
# CHECK: Vreg: %91[ 7 ]
# CHECK: Vreg: %98[ 5 ]
# CHECK: Vreg: %15[ 16 ]
# CHECK: Vreg: %60[ LoopTag+18 ]
# CHECK: Vreg: %3[ LoopTag+20 ]
# CHECK: Vreg: %17[ LoopTag+55 ]
# CHECK: Vreg: %145[ 0 ]
# CHECK: Vreg: %43[ LoopTag+28 ]
# CHECK: Vreg: %24[ LoopTag*2+45 ]
# CHECK: Vreg: %31[ LoopTag+30 ]
# CHECK: Vreg: %12:sub0[ LoopTag+41 ]
# CHECK: Vreg: %12:sub1[ LoopTag+42 ]
# CHECK: Instr: %146:sreg_32 = S_ANDN2_B32 killed %97, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+22 ]
# CHECK: Vreg: %45[ LoopTag+16 ]
# CHECK: Vreg: %26[ 19 ]
# CHECK: Vreg: %97[ 0 ]
# CHECK: Vreg: %104[ 3 ]
# CHECK: Vreg: %28[ LoopTag+32 ]
# CHECK: Vreg: %61[ LoopTag+17 ]
# CHECK: Vreg: %4[ 22 ]
# CHECK: Vreg: %11[ 17 ]
# CHECK: Vreg: %82[ 7 ]
# CHECK: Vreg: %63[ LoopTag+20 ]
# CHECK: Vreg: %25[ 3 ]
# CHECK: Vreg: %141[ 1 ]
# CHECK: Vreg: %65[ LoopTag+26 ]
# CHECK: Vreg: %91[ 6 ]
# CHECK: Vreg: %98[ 4 ]
# CHECK: Vreg: %15[ 15 ]
# CHECK: Vreg: %60[ LoopTag+17 ]
# CHECK: Vreg: %3[ LoopTag+19 ]
# CHECK: Vreg: %17[ LoopTag+54 ]
# CHECK: Vreg: %43[ LoopTag+27 ]
# CHECK: Vreg: %24[ LoopTag*2+44 ]
# CHECK: Vreg: %31[ LoopTag+29 ]
# CHECK: Vreg: %12:sub0[ LoopTag+40 ]
# CHECK: Vreg: %12:sub1[ LoopTag+41 ]
# CHECK: Vreg: %102[ 3 ]
# CHECK: Instr: %147:sreg_32 = S_AND_B32 killed %141, $exec_lo, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+21 ]
# CHECK: Vreg: %45[ LoopTag+15 ]
# CHECK: Vreg: %26[ 18 ]
# CHECK: Vreg: %104[ 2 ]
# CHECK: Vreg: %28[ LoopTag+31 ]
# CHECK: Vreg: %61[ LoopTag+16 ]
# CHECK: Vreg: %4[ 21 ]
# CHECK: Vreg: %11[ 16 ]
# CHECK: Vreg: %82[ 6 ]
# CHECK: Vreg: %63[ LoopTag+19 ]
# CHECK: Vreg: %25[ 2 ]
# CHECK: Vreg: %146[ 1 ]
# CHECK: Vreg: %141[ 0 ]
# CHECK: Vreg: %65[ LoopTag+25 ]
# CHECK: Vreg: %91[ 5 ]
# CHECK: Vreg: %98[ 3 ]
# CHECK: Vreg: %15[ 14 ]
# CHECK: Vreg: %60[ LoopTag+16 ]
# CHECK: Vreg: %3[ LoopTag+18 ]
# CHECK: Vreg: %17[ LoopTag+53 ]
# CHECK: Vreg: %43[ LoopTag+26 ]
# CHECK: Vreg: %24[ LoopTag*2+43 ]
# CHECK: Vreg: %31[ LoopTag+28 ]
# CHECK: Vreg: %12:sub0[ LoopTag+39 ]
# CHECK: Vreg: %12:sub1[ LoopTag+40 ]
# CHECK: Vreg: %102[ 2 ]
# CHECK: Instr: %101:sreg_32 = S_OR_B32 killed %146, killed %147, implicit-def dead $scc
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+20 ]
# CHECK: Vreg: %45[ LoopTag+14 ]
# CHECK: Vreg: %26[ 17 ]
# CHECK: Vreg: %104[ 1 ]
# CHECK: Vreg: %28[ LoopTag+30 ]
# CHECK: Vreg: %61[ LoopTag+15 ]
# CHECK: Vreg: %4[ 20 ]
# CHECK: Vreg: %11[ 15 ]
# CHECK: Vreg: %82[ 5 ]
# CHECK: Vreg: %63[ LoopTag+18 ]
# CHECK: Vreg: %25[ 1 ]
# CHECK: Vreg: %146[ 0 ]
# CHECK: Vreg: %65[ LoopTag+24 ]
# CHECK: Vreg: %91[ 4 ]
# CHECK: Vreg: %98[ 2 ]
# CHECK: Vreg: %15[ 13 ]
# CHECK: Vreg: %60[ LoopTag+15 ]
# CHECK: Vreg: %3[ LoopTag+17 ]
# CHECK: Vreg: %17[ LoopTag+52 ]
# CHECK: Vreg: %43[ LoopTag+25 ]
# CHECK: Vreg: %24[ LoopTag*2+42 ]
# CHECK: Vreg: %31[ LoopTag+27 ]
# CHECK: Vreg: %12:sub0[ LoopTag+38 ]
# CHECK: Vreg: %12:sub1[ LoopTag+39 ]
# CHECK: Vreg: %102[ 1 ]
# CHECK: Vreg: %147[ 0 ]
# CHECK: Instr: S_BRANCH %bb.6
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ LoopTag+19 ]
# CHECK: Vreg: %45[ LoopTag+13 ]
# CHECK: Vreg: %26[ 16 ]
# CHECK: Vreg: %104[ 0 ]
# CHECK: Vreg: %28[ LoopTag+29 ]
# CHECK: Vreg: %61[ LoopTag+14 ]
# CHECK: Vreg: %4[ 19 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %101[ 0 ]
# CHECK: Vreg: %82[ 4 ]
# CHECK: Vreg: %63[ LoopTag+17 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %65[ LoopTag+23 ]
# CHECK: Vreg: %91[ 3 ]
# CHECK: Vreg: %98[ 1 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ LoopTag+16 ]
# CHECK: Vreg: %17[ LoopTag+51 ]
# CHECK: Vreg: %43[ LoopTag+24 ]
# CHECK: Vreg: %24[ LoopTag*2+41 ]
# CHECK: Vreg: %31[ LoopTag+26 ]
# CHECK: Vreg: %12:sub0[ LoopTag+37 ]
# CHECK: Vreg: %12:sub1[ LoopTag+38 ]
# CHECK: Vreg: %102[ 0 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ LoopTag+19 ]
# CHECK: Vreg: %45[ LoopTag+13 ]
# CHECK: Vreg: %26[ 16 ]
# CHECK: Vreg: %104[ 0 ]
# CHECK: Vreg: %28[ LoopTag+29 ]
# CHECK: Vreg: %61[ LoopTag+14 ]
# CHECK: Vreg: %4[ 19 ]
# CHECK: Vreg: %11[ 14 ]
# CHECK: Vreg: %101[ 0 ]
# CHECK: Vreg: %82[ 4 ]
# CHECK: Vreg: %63[ LoopTag+17 ]
# CHECK: Vreg: %25[ 0 ]
# CHECK: Vreg: %65[ LoopTag+23 ]
# CHECK: Vreg: %91[ 3 ]
# CHECK: Vreg: %98[ 1 ]
# CHECK: Vreg: %15[ 12 ]
# CHECK: Vreg: %60[ LoopTag+14 ]
# CHECK: Vreg: %3[ LoopTag+16 ]
# CHECK: Vreg: %17[ LoopTag+51 ]
# CHECK: Vreg: %43[ LoopTag+24 ]
# CHECK: Vreg: %24[ LoopTag*2+41 ]
# CHECK: Vreg: %31[ LoopTag+26 ]
# CHECK: Vreg: %12:sub0[ LoopTag+37 ]
# CHECK: Vreg: %12:sub1[ LoopTag+38 ]
# CHECK: Vreg: %102[ 0 ]
# CHECK: --- MBB_18 ---
# CHECK: Instr: SI_END_CF killed %92, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 10 ]
# CHECK: Vreg: %45[ 4 ]
# CHECK: Vreg: %26[ 53 ]
# CHECK: Vreg: %28[ 20 ]
# CHECK: Vreg: %92[ 0 ]
# CHECK: Vreg: %61[ 5 ]
# CHECK: Vreg: %4[ 56 ]
# CHECK: Vreg: %11[ 6 ]
# CHECK: Vreg: %63[ 8 ]
# CHECK: Vreg: %25[ 51 ]
# CHECK: Vreg: %84[ 2 ]
# CHECK: Vreg: %65[ 14 ]
# CHECK: Vreg: %15[ 49 ]
# CHECK: Vreg: %60[ 5 ]
# CHECK: Vreg: %3[ 7 ]
# CHECK: Vreg: %74[ 13 ]
# CHECK: Vreg: %17[ 42 ]
# CHECK: Vreg: %43[ 15 ]
# CHECK: Vreg: %24[ LoopTag+32 ]
# CHECK: Vreg: %31[ 17 ]
# CHECK: Vreg: %12:sub0[ 28 ]
# CHECK: Vreg: %12:sub1[ 29 ]
# CHECK: Instr: %130:sreg_32 = S_MOV_B32 -1
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 9 ]
# CHECK: Vreg: %45[ 3 ]
# CHECK: Vreg: %26[ 52 ]
# CHECK: Vreg: %28[ 19 ]
# CHECK: Vreg: %61[ 4 ]
# CHECK: Vreg: %4[ 55 ]
# CHECK: Vreg: %11[ 5 ]
# CHECK: Vreg: %63[ 7 ]
# CHECK: Vreg: %25[ 50 ]
# CHECK: Vreg: %84[ 1 ]
# CHECK: Vreg: %65[ 13 ]
# CHECK: Vreg: %15[ 48 ]
# CHECK: Vreg: %60[ 4 ]
# CHECK: Vreg: %3[ 6 ]
# CHECK: Vreg: %74[ 12 ]
# CHECK: Vreg: %17[ 41 ]
# CHECK: Vreg: %43[ 14 ]
# CHECK: Vreg: %24[ LoopTag+31 ]
# CHECK: Vreg: %31[ 16 ]
# CHECK: Vreg: %12:sub0[ 27 ]
# CHECK: Vreg: %12:sub1[ 28 ]
# CHECK: Instr: %134:sreg_32 = SI_IF killed %84, %bb.14, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 8 ]
# CHECK: Vreg: %45[ 2 ]
# CHECK: Vreg: %26[ 51 ]
# CHECK: Vreg: %130[ 1 ]
# CHECK: Vreg: %28[ 18 ]
# CHECK: Vreg: %61[ 3 ]
# CHECK: Vreg: %4[ 54 ]
# CHECK: Vreg: %11[ 4 ]
# CHECK: Vreg: %63[ 6 ]
# CHECK: Vreg: %25[ 49 ]
# CHECK: Vreg: %84[ 0 ]
# CHECK: Vreg: %65[ 12 ]
# CHECK: Vreg: %15[ 47 ]
# CHECK: Vreg: %60[ 3 ]
# CHECK: Vreg: %3[ 5 ]
# CHECK: Vreg: %74[ 11 ]
# CHECK: Vreg: %17[ 40 ]
# CHECK: Vreg: %43[ 13 ]
# CHECK: Vreg: %24[ LoopTag+30 ]
# CHECK: Vreg: %31[ 15 ]
# CHECK: Vreg: %12:sub0[ 26 ]
# CHECK: Vreg: %12:sub1[ 27 ]
# CHECK: Instr: S_BRANCH %bb.8
# CHECK-NEXT: Next-use distances:
# CHECK: Vreg: %64[ 7 ]
# CHECK: Vreg: %45[ 1 ]
# CHECK: Vreg: %26[ 50 ]
# CHECK: Vreg: %130[ 0 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %11[ 3 ]
# CHECK: Vreg: %63[ 5 ]
# CHECK: Vreg: %25[ 48 ]
# CHECK: Vreg: %134[ 1 ]
# CHECK: Vreg: %65[ 11 ]
# CHECK: Vreg: %15[ 46 ]
# CHECK: Vreg: %60[ 2 ]
# CHECK: Vreg: %3[ 4 ]
# CHECK: Vreg: %74[ 10 ]
# CHECK: Vreg: %17[ 39 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: Block End Distances:
# CHECK: Vreg: %64[ 7 ]
# CHECK: Vreg: %45[ 1 ]
# CHECK: Vreg: %26[ 50 ]
# CHECK: Vreg: %130[ 0 ]
# CHECK: Vreg: %28[ 17 ]
# CHECK: Vreg: %61[ 2 ]
# CHECK: Vreg: %4[ 53 ]
# CHECK: Vreg: %11[ 3 ]
# CHECK: Vreg: %63[ 5 ]
# CHECK: Vreg: %25[ 48 ]
# CHECK: Vreg: %134[ 1 ]
# CHECK: Vreg: %65[ 11 ]
# CHECK: Vreg: %15[ 46 ]
# CHECK: Vreg: %60[ 2 ]
# CHECK: Vreg: %3[ 4 ]
# CHECK: Vreg: %74[ 10 ]
# CHECK: Vreg: %17[ 39 ]
# CHECK: Vreg: %43[ 12 ]
# CHECK: Vreg: %24[ LoopTag+29 ]
# CHECK: Vreg: %31[ 14 ]
# CHECK: Vreg: %12:sub0[ 25 ]
# CHECK: Vreg: %12:sub1[ 26 ]
# CHECK: === End NextUseAnalysis Results ===

--- |
  define amdgpu_ps i32 @test12 (ptr addrspace(1) %p1, ptr addrspace(1) %p2, ptr addrspace(1) %p3, i32 %TC1, i32 %TC2, i32 %Val, i1 %cond1, i1 %cond2) {
  0:
  %ld1 = load i32, ptr addrspace(1) %p1, align 1
  %add1 = add i32 %ld1, 100
  br label %1
  1:
  %phi.inc1 = phi i32 [ 0, %0 ], [ %inc1, %5 ]
  %sext = sext i32 %phi.inc1 to i64
  %gep1 = getelementptr inbounds i64, ptr addrspace(1) %p2, i64 %sext
  %ld2 = load i32, ptr addrspace(1) %gep1, align 1
  br i1 %cond1, label %2, label %6
  2:
  %phi.inc2 = phi i32 [ 0, %1 ], [ %inc2, %4 ]
  br i1 %cond2, label %3, label %7
  3:
  %mul1 = mul i32 %ld1, 100
  store i32 %mul1, ptr addrspace(1) %p3
  %cond3 = icmp ult i32 %mul1, %Val
  br i1 %cond3, label %4, label %7
  4:
  %inc2 = add i32 %phi.inc2, 1
  %cond4 = icmp ult i32 %inc2, %TC1
  br i1 %cond4, label %2, label %5
  5:
  %inc1 = add i32 %phi.inc1, 1
  %add2 = add i32 %ld2, %inc1
  store i32 %add2, ptr addrspace(1) %p3
  %cond5 = icmp ult i32 %inc1, %TC2
  br i1 %cond5, label %1, label %8
  6:
  %mul2 = mul i32 %ld2, %phi.inc1
  store i32 %mul2, ptr addrspace(1) %p3
  br label %8
  7:
  %phi1 = phi i32 [ %phi.inc2, %2 ], [ %mul1, %3 ]
  store i32 %phi1, ptr addrspace(1) %p3
  br label %8
  8:
  %phi2 = phi i32 [ %add2, %5 ], [ %mul2, %6 ], [ %phi1, %7 ]
  %add3 = add i32 %phi2, %add1
  ret i32 %add3
  }
...

---
name:            test12
alignment:       1
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
noPhis:          false
isSSA:           true
machineFunctionInfo: {}
body:             |
  bb.0:
    successors: %bb.1(0x80000000)
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10
  
    %64:vgpr_32 = COPY killed $vgpr10
    %63:vgpr_32 = COPY killed $vgpr9
    %62:vgpr_32 = COPY killed $vgpr8
    %61:vgpr_32 = COPY killed $vgpr7
    %60:vgpr_32 = COPY killed $vgpr6
    %59:vgpr_32 = COPY killed $vgpr5
    %58:vgpr_32 = COPY killed $vgpr4
    %57:vgpr_32 = COPY killed $vgpr3
    %56:vgpr_32 = COPY killed $vgpr2
    %55:vgpr_32 = COPY killed $vgpr1
    %54:vgpr_32 = COPY killed $vgpr0
    %151:vreg_64 = REG_SEQUENCE killed %58, %subreg.sub0, killed %59, %subreg.sub1
    %150:vreg_64 = REG_SEQUENCE killed %56, %subreg.sub0, killed %57, %subreg.sub1
    %149:vreg_64 = REG_SEQUENCE killed %54, %subreg.sub0, killed %55, %subreg.sub1
    %73:vgpr_32 = V_AND_B32_e64 1, killed %64, implicit $exec
    %74:sreg_32 = V_CMP_EQ_U32_e64 1, killed %73, implicit $exec
    %75:vgpr_32 = V_AND_B32_e64 1, killed %63, implicit $exec
    %76:sreg_32 = V_CMP_EQ_U32_e64 1, killed %75, implicit $exec
    %77:vgpr_32 = GLOBAL_LOAD_UBYTE %149, 0, 0, implicit $exec :: (load (s8) from %ir.p1, addrspace 1)
    %79:vgpr_32 = GLOBAL_LOAD_UBYTE %149, 1, 0, implicit $exec :: (load (s8) from %ir.p1 + 1, addrspace 1)
    %82:vgpr_32 = V_LSHL_OR_B32_e64 killed %79, 8, killed %77, implicit $exec
    %83:vgpr_32 = GLOBAL_LOAD_UBYTE %149, 2, 0, implicit $exec :: (load (s8) from %ir.p1 + 2, addrspace 1)
    %85:vgpr_32 = GLOBAL_LOAD_UBYTE killed %149, 3, 0, implicit $exec :: (load (s8) from %ir.p1 + 3, addrspace 1)
    %87:vgpr_32 = V_LSHL_OR_B32_e64 killed %85, 8, killed %83, implicit $exec
    %0:vgpr_32 = V_LSHL_OR_B32_e64 killed %87, 16, killed %82, implicit $exec
    %1:vgpr_32 = V_MUL_LO_U32_e64 100, %0, implicit $exec
    %90:sreg_32 = V_CMP_LT_U32_e64 %1, killed %62, implicit $exec
    %69:sreg_32 = S_MOV_B32 0
  
  bb.1:
    successors: %bb.2(0x40000000), %bb.3(0x40000000)
  
    %191:sreg_32 = PHI undef %190:sreg_32, %bb.0, %39, %bb.3
    %187:sreg_32 = PHI undef %186:sreg_32, %bb.0, %38, %bb.3
    %169:sreg_32 = PHI undef %166:sreg_32, %bb.0, %12, %bb.3
    %164:sreg_32 = PHI undef %161:sreg_32, %bb.0, %9, %bb.3
    %157:sreg_32 = PHI undef %154:sreg_32, %bb.0, %8, %bb.3
    %3:sreg_32 = PHI %69, %bb.0, %13, %bb.3
    %4:sreg_32 = PHI %69, %bb.0, %7, %bb.3
    %95:sreg_32_xm0 = S_ASHR_I32 %4, 31, implicit-def dead $scc
    %97:sreg_64 = REG_SEQUENCE %4, %subreg.sub0, killed %95, %subreg.sub1
    %99:sreg_64 = nsw S_LSHL_B64 killed %97, 3, implicit-def dead $scc
    %200:vgpr_32, %202:sreg_32_xm0_xexec = V_ADD_CO_U32_e64 %150.sub0, %99.sub0, 0, implicit $exec
    %201:vgpr_32, dead $sgpr_null = V_ADDC_U32_e64 killed %99.sub1, %150.sub1, killed %202, 0, implicit $exec
    %100:vreg_64 = REG_SEQUENCE killed %200, %subreg.sub0, killed %201, %subreg.sub1
    %101:vgpr_32 = GLOBAL_LOAD_UBYTE %100, 0, 0, implicit $exec :: (load (s8) from %ir.gep1, addrspace 1)
    %102:vgpr_32 = GLOBAL_LOAD_UBYTE %100, 1, 0, implicit $exec :: (load (s8) from %ir.gep1 + 1, addrspace 1)
    %104:vgpr_32 = V_LSHL_OR_B32_e64 killed %102, 8, killed %101, implicit $exec
    %105:vgpr_32 = GLOBAL_LOAD_UBYTE %100, 2, 0, implicit $exec :: (load (s8) from %ir.gep1 + 2, addrspace 1)
    %106:vgpr_32 = GLOBAL_LOAD_UBYTE killed %100, 3, 0, implicit $exec :: (load (s8) from %ir.gep1 + 3, addrspace 1)
    %107:vgpr_32 = V_LSHL_OR_B32_e64 killed %106, 8, killed %105, implicit $exec
    %5:vgpr_32 = V_LSHL_OR_B32_e64 killed %107, 16, killed %104, implicit $exec
    %158:sreg_32 = S_ANDN2_B32 killed %157, $exec_lo, implicit-def dead $scc
    %155:sreg_32 = COPY %158
    %162:sreg_32 = S_OR_B32 killed %164, $exec_lo, implicit-def dead $scc
    %167:sreg_32 = S_OR_B32 killed %169, $exec_lo, implicit-def dead $scc
    %6:sreg_32 = SI_IF %76, %bb.3, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.2
  
  bb.2:
    successors: %bb.4(0x80000000)
  
    %112:sreg_32 = S_MOV_B32 0
    S_BRANCH %bb.4
  
  bb.3:
    successors: %bb.15(0x04000000), %bb.1(0x7c000000)
  
    %12:sreg_32 = PHI %167, %bb.1, %168, %bb.14
    %9:sreg_32 = PHI %162, %bb.1, %163, %bb.14
    %8:sreg_32 = PHI %155, %bb.1, %156, %bb.14
    %7:sreg_32 = PHI undef %91:sreg_32, %bb.1, %34, %bb.14
    %10:vgpr_32 = PHI undef %94:vgpr_32, %bb.1, %20, %bb.14
    %11:vgpr_32 = PHI undef %94:vgpr_32, %bb.1, %36, %bb.14
    SI_END_CF killed %6, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %13:sreg_32 = SI_IF_BREAK %12, killed %3, implicit-def dead $scc
    %153:vgpr_32 = COPY killed %4, implicit $exec
    %188:sreg_32 = S_ANDN2_B32 killed %187, $exec_lo, implicit-def dead $scc
    %189:sreg_32 = S_AND_B32 %8, $exec_lo, implicit-def dead $scc
    %38:sreg_32 = S_OR_B32 killed %188, killed %189, implicit-def dead $scc
    %192:sreg_32 = S_ANDN2_B32 killed %191, $exec_lo, implicit-def dead $scc
    %193:sreg_32 = S_AND_B32 %9, $exec_lo, implicit-def dead $scc
    %39:sreg_32 = S_OR_B32 killed %192, killed %193, implicit-def dead $scc
    SI_LOOP %13, %bb.1, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.15
  
  bb.4:
    successors: %bb.5(0x40000000), %bb.6(0x40000000)
  
    %197:sreg_32 = PHI undef %196:sreg_32, %bb.2, %51, %bb.6
    %181:sreg_32 = PHI undef %178:sreg_32, %bb.2, %21, %bb.6
    %175:sreg_32 = PHI undef %172:sreg_32, %bb.2, %19, %bb.6
    %14:sreg_32 = PHI %112, %bb.2, %23, %bb.6
    %15:sreg_32 = PHI %112, %bb.2, %18, %bb.6
    %152:vgpr_32 = COPY %15, implicit $exec
    %173:sreg_32 = S_OR_B32 killed %175, $exec_lo, implicit-def dead $scc
    %179:sreg_32 = S_OR_B32 killed %181, $exec_lo, implicit-def dead $scc
    %16:sreg_32 = SI_IF %74, %bb.6, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.5
  
  bb.5:
    successors: %bb.7(0x40000000), %bb.17(0x40000000)
  
    GLOBAL_STORE_DWORD %151, %1, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
    %119:sreg_32 = S_MOV_B32 -1
    %17:sreg_32 = SI_IF %90, %bb.17, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.7
  
  bb.6:
    successors: %bb.18(0x04000000), %bb.4(0x7c000000)
  
    %21:sreg_32 = PHI %179, %bb.4, %180, %bb.17
    %19:sreg_32 = PHI %173, %bb.4, %174, %bb.17
    %18:sreg_32 = PHI undef %113:sreg_32, %bb.4, %47, %bb.17
    %20:vgpr_32 = PHI %152, %bb.4, %1, %bb.17
    SI_END_CF killed %16, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %126:sreg_32 = S_XOR_B32 %19, -1, implicit-def dead $scc
    %23:sreg_32 = SI_IF_BREAK %21, killed %14, implicit-def dead $scc
    %198:sreg_32 = S_ANDN2_B32 killed %197, $exec_lo, implicit-def dead $scc
    %199:sreg_32 = S_AND_B32 killed %126, $exec_lo, implicit-def dead $scc
    %51:sreg_32 = S_OR_B32 killed %198, killed %199, implicit-def dead $scc
    SI_LOOP %23, %bb.4, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.18
  
  bb.7:
    successors: %bb.17(0x80000000)
  
    %24:sreg_32 = S_ADD_I32 killed %15, 1, implicit-def dead $scc
    %123:sreg_32 = V_CMP_GE_U32_e64 %24, %60, implicit $exec
    %194:sreg_32 = S_XOR_B32 $exec_lo, -1, implicit-def dead $scc
    %195:sreg_32 = S_ORN2_B32 killed %123, $exec_lo, implicit-def dead $scc
    S_BRANCH %bb.17
  
  bb.8:
    successors: %bb.14(0x80000000)
  
    %26:sreg_32 = S_ADD_I32 %4, 1, implicit-def dead $scc
    %27:vgpr_32 = V_ADD_U32_e64 %26, %5, 0, implicit $exec
    GLOBAL_STORE_DWORD %151, %27, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
    %136:sreg_32 = V_CMP_GE_U32_e64 %26, %61, implicit $exec
    %184:sreg_32 = S_XOR_B32 $exec_lo, -1, implicit-def dead $scc
    %185:sreg_32 = S_ORN2_B32 killed %136, $exec_lo, implicit-def dead $scc
    S_BRANCH %bb.14
  
  bb.9:
    successors: %bb.10(0x40000000), %bb.13(0x40000000)
  
    %29:vgpr_32 = PHI undef %141:vgpr_32, %bb.15, %32, %bb.12
    %203:vreg_64 = PHI %151, %bb.15, undef %204:vreg_64, %bb.12
    %30:sreg_32 = SI_ELSE killed %45, %bb.13, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.10
  
  bb.10:
    successors: %bb.13(0x80000000)
  
    %31:vgpr_32 = V_MUL_LO_U32_e64 killed %5, killed %153, implicit $exec
    GLOBAL_STORE_DWORD killed %203, %31, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
    S_BRANCH %bb.13
  
  bb.11:
    successors: %bb.12(0x80000000)
  
    GLOBAL_STORE_DWORD killed %151, %10, 0, 0, implicit $exec :: (store (s32) into %ir.p3, addrspace 1)
  
  bb.12:
    successors: %bb.9(0x80000000)
  
    %32:vgpr_32 = PHI %11, %bb.16, %10, %bb.11
    SI_END_CF killed %46, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.9
  
  bb.13:
    %33:vgpr_32 = PHI %29, %bb.9, %31, %bb.10
    SI_END_CF killed %30, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %147:vgpr_32 = V_ADD3_U32_e64 killed %0, killed %33, 100, implicit $exec
    %148:sreg_32_xm0 = V_READFIRSTLANE_B32 killed %147, implicit $exec
    $sgpr0 = COPY killed %148
    SI_RETURN_TO_EPILOG killed $sgpr0
  
  bb.14:
    successors: %bb.3(0x80000000)
  
    %37:sreg_32 = PHI %132, %bb.18, %185, %bb.8
    %35:sreg_32 = PHI %132, %bb.18, %184, %bb.8
    %34:sreg_32 = PHI undef %129:sreg_32, %bb.18, %26, %bb.8
    %36:vgpr_32 = PHI undef %131:vgpr_32, %bb.18, %27, %bb.8
    SI_END_CF killed %53, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %159:sreg_32 = S_ANDN2_B32 killed %158, $exec_lo, implicit-def dead $scc
    %160:sreg_32 = S_AND_B32 killed %35, $exec_lo, implicit-def dead $scc
    %156:sreg_32 = S_OR_B32 killed %159, killed %160, implicit-def dead $scc
    %165:sreg_32 = S_ANDN2_B32 killed %162, $exec_lo, implicit-def dead $scc
    %163:sreg_32 = COPY killed %165
    %170:sreg_32 = S_ANDN2_B32 killed %167, $exec_lo, implicit-def dead $scc
    %171:sreg_32 = S_AND_B32 killed %37, $exec_lo, implicit-def dead $scc
    %168:sreg_32 = S_OR_B32 killed %170, killed %171, implicit-def dead $scc
    S_BRANCH %bb.3
  
  bb.15:
    successors: %bb.16(0x40000000), %bb.9(0x40000000)
  
    SI_END_CF killed %13, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %143:sreg_32 = S_XOR_B32 killed %39, -1, implicit-def dead $scc
    %45:sreg_32 = SI_IF killed %143, %bb.9, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.16
  
  bb.16:
    successors: %bb.11(0x40000000), %bb.12(0x40000000)
  
    %46:sreg_32 = SI_IF killed %38, %bb.12, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.11
  
  bb.17:
    successors: %bb.6(0x80000000)
  
    %49:sreg_32 = PHI %119, %bb.5, %195, %bb.7
    %48:sreg_32 = PHI %119, %bb.5, %194, %bb.7
    %47:sreg_32 = PHI undef %117:sreg_32, %bb.5, %24, %bb.7
    SI_END_CF killed %17, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %176:sreg_32 = S_ANDN2_B32 killed %173, $exec_lo, implicit-def dead $scc
    %177:sreg_32 = S_AND_B32 killed %48, $exec_lo, implicit-def dead $scc
    %174:sreg_32 = S_OR_B32 killed %176, killed %177, implicit-def dead $scc
    %182:sreg_32 = S_ANDN2_B32 killed %179, $exec_lo, implicit-def dead $scc
    %183:sreg_32 = S_AND_B32 killed %49, $exec_lo, implicit-def dead $scc
    %180:sreg_32 = S_OR_B32 killed %182, killed %183, implicit-def dead $scc
    S_BRANCH %bb.6
  
  bb.18:
    successors: %bb.8(0x40000000), %bb.14(0x40000000)
  
    SI_END_CF killed %23, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    %132:sreg_32 = S_MOV_B32 -1
    %53:sreg_32 = SI_IF killed %51, %bb.14, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    S_BRANCH %bb.8
...
---
