; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -O3 -mtriple=amdgcn-amd-hsa -mcpu=gfx1031 -o - < %s | FileCheck %s

%struct.bar = type { %struct.bar.0, %struct.bar.0, %struct.bar.0 }
%struct.bar.0 = type { %struct.blam }
%struct.blam = type { i32, i32, i32, i32 }

@global = external addrspace(3) global %struct.bar

define void @snork() {
; CHECK-LABEL: snork:
; CHECK:       ; %bb.0: ; %bb
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    s_mov_b32 s4, 0
; CHECK-NEXT:    v_mov_b32_e32 v4, global@abs32@lo
; CHECK-NEXT:    s_mov_b32 s5, s4
; CHECK-NEXT:    s_mov_b32 s6, s4
; CHECK-NEXT:    s_mov_b32 s7, s4
; CHECK-NEXT:    v_mov_b32_e32 v0, s4
; CHECK-NEXT:    v_mov_b32_e32 v1, s5
; CHECK-NEXT:    v_mov_b32_e32 v2, s6
; CHECK-NEXT:    v_mov_b32_e32 v3, s7
; CHECK-NEXT:    s_cmp_lg_u32 0, 0
; CHECK-NEXT:    ds_write_b128 v4, v[0:3] offset:32
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
bb:
  %call = call float @llvm.amdgcn.rcp.f32(float 0.000000e+00)
  %fmul = fmul ninf float %call, 0.000000e+00
  %fptoui = fptoui float %fmul to i32
  %zext = zext i32 %fptoui to i64
  %mul = mul i64 2, %zext
  %trunc = trunc i64 %mul to i32
  store i32 %trunc, ptr addrspace(3) getelementptr inbounds (%struct.bar, ptr addrspace(3) @global, i32 0, i32 2), align 16
  store i32 0, ptr addrspace(3) getelementptr inbounds nuw (i8, ptr addrspace(3) @global, i32 36), align 4
  store i32 0, ptr addrspace(3) getelementptr inbounds nuw (i8, ptr addrspace(3) @global, i32 40), align 8
  store i32 %trunc, ptr addrspace(3) getelementptr inbounds nuw (i8, ptr addrspace(3) @global, i32 44), align 4
  %load = load <4 x i32>, ptr addrspace(3) getelementptr inbounds (%struct.bar, ptr addrspace(3) @global, i32 0, i32 2), align 16
  %extractelement = extractelement <4 x i32> %load, i64 0
  %icmp = icmp ne i32 %extractelement, 0
  %extractelement1 = extractelement <4 x i32> %load, i64 3
  %icmp2 = icmp ne i32 %extractelement1, 0
  %select = select i1 %icmp, i1 true, i1 %icmp2
  br i1 %select, label %bb5, label %bb3

bb3:                                              ; preds = %bb
  %and = and <4 x i32> %load, splat (i32 1)
  %extractelement4 = extractelement <4 x i32> %and, i64 0
  br label %bb5

bb5:                                              ; preds = %bb3, %bb
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.amdgcn.rcp.f32(float) #0

attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
