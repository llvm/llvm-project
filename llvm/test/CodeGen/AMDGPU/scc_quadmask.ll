; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 6
; RUN: llc -mtriple=amdgcn-amd-amdpal -mcpu=gfx900 < %s | FileCheck %s
;; Ensure that AND/ICMP cannot be fused into an AND because s_quadmask_32 implicitly defines SCC.

define amdgpu_kernel void @quadmask_32(i32 %val0, i32 %val1, ptr addrspace(1) %ptr) {
; CHECK-LABEL: quadmask_32:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    s_load_dwordx4 s[0:3], s[4:5], 0x0
; CHECK-NEXT:    v_mov_b32_e32 v2, 0
; CHECK-NEXT:    v_mov_b32_e32 v0, 0
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    s_and_b32 s0, s0, 1
; CHECK-NEXT:    s_quadmask_b32 s1, s1
; CHECK-NEXT:    s_cmp_eq_u32 s0, 0
; CHECK-NEXT:    v_mov_b32_e32 v3, s1
; CHECK-NEXT:    s_cselect_b64 s[0:1], -1, 0
; CHECK-NEXT:    global_store_dword v2, v3, s[2:3]
; CHECK-NEXT:    v_cndmask_b32_e64 v2, 0, 1, s[0:1]
; CHECK-NEXT:    global_store_dword v[0:1], v2, off
; CHECK-NEXT:    s_endpgm
  %and = and i32 %val0, 1
  %result = call i32 @llvm.amdgcn.s.quadmask.i32(i32 %val1) nounwind readnone
  store i32 %result, ptr addrspace(1) %ptr
  %cmp = icmp eq i32 %and, 0
  %sel = select i1 %cmp, i32 1, i32 0
  store i32 %sel, ptr addrspace(1) null, align 4
  ret void
}

define amdgpu_kernel void @quadmask_64(i32 %val0, i64 %val1, ptr addrspace(1) %ptr) {
; CHECK-LABEL: quadmask_64:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    s_load_dword s6, s[4:5], 0x0
; CHECK-NEXT:    s_load_dwordx4 s[0:3], s[4:5], 0x8
; CHECK-NEXT:    v_mov_b32_e32 v2, 0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    s_and_b32 s4, s6, 1
; CHECK-NEXT:    s_quadmask_b64 s[0:1], s[0:1]
; CHECK-NEXT:    v_mov_b32_e32 v0, s0
; CHECK-NEXT:    v_mov_b32_e32 v1, s1
; CHECK-NEXT:    s_cmp_eq_u32 s4, 0
; CHECK-NEXT:    global_store_dwordx2 v2, v[0:1], s[2:3]
; CHECK-NEXT:    v_mov_b32_e32 v0, 0
; CHECK-NEXT:    s_cselect_b64 s[0:1], -1, 0
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    v_cndmask_b32_e64 v2, 0, 1, s[0:1]
; CHECK-NEXT:    global_store_dword v[0:1], v2, off
; CHECK-NEXT:    s_endpgm
  %and = and i32 %val0, 1
  %result = call i64 @llvm.amdgcn.s.quadmask.i64(i64 %val1) nounwind readnone
  store i64 %result, ptr addrspace(1) %ptr
  %cmp = icmp eq i32 %and, 0
  %sel = select i1 %cmp, i32 1, i32 0
  store i32 %sel, ptr addrspace(1) null, align 4
  ret void
}
