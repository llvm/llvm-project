# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx942 -start-before=postrapseudos %s -o - | FileCheck %s

# CHECK: v_mov_b64_misalign:
# CHECK: ; %bb.0:
# CHECK:         s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
# CHECK:         s_load_dwordx2 s[0:1], s[4:5], 0x0
# CHECK:         v_mov_b32_e32 v5, 0
# CHECK:         v_mov_b32_e32 v4, 0
# CHECK:         v_mov_b32_e32 v6, 0
# CHECK:         s_waitcnt lgkmcnt(0)
# CHECK:         v_mov_b64_e32 v[2:3], s[0:1]
# CHECK:         flat_store_dwordx3 v[2:3], v[4:6]
# CHECK:         s_endpgm

---
name:            v_mov_b64_misalign
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $sgpr4_sgpr5
  
    frame-setup CFI_INSTRUCTION escape 0x0f, 0x04, 0x30, 0x36, 0xe9, 0x02
    frame-setup CFI_INSTRUCTION undefined $pc_reg
    renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
    renamable $vgpr4 = AV_MOV_B32_IMM_PSEUDO 0, implicit $exec
    renamable $vgpr5_vgpr6 = AV_MOV_B64_IMM_PSEUDO 0, implicit $exec
    renamable $vgpr2_vgpr3 = COPY killed renamable $sgpr0_sgpr1, implicit $exec
    FLAT_STORE_DWORDX3 killed renamable $vgpr2_vgpr3, killed renamable $vgpr4_vgpr5_vgpr6, 0, 0, implicit $exec, implicit $flat_scr :: (store (s96) into `ptr addrspace(1) undef`, align 4)
    S_ENDPGM 0
...

