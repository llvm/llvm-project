# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -mtriple=amdgcn -mcpu=gfx900 -run-pass=machine-cse -verify-machineinstrs %s -o - | FileCheck --check-prefix=GCN %s

# Check that invalid MIR is not produced with a frame index in a
# commutable operand.

---
name: commute_frame_index__v_add_co_u32_e32__sgpr_fi
tracksRegLiveness: true
stack:
  - { id: 0, size: 8, alignment: 4, local-offset: 0 }
body:             |
  bb.0:
    liveins: $sgpr4

    ; GCN-LABEL: name: commute_frame_index__v_add_co_u32_e32__sgpr_fi
    ; GCN: liveins: $sgpr4
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr4
    ; GCN-NEXT: [[V_ADD_CO_U32_e32_:%[0-9]+]]:vgpr_32 = V_ADD_CO_U32_e32 killed [[COPY]], %stack.0, implicit-def dead $vcc, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_ADD_CO_U32_e32_]]
    %0:sreg_32 = COPY $sgpr4
    %1:vgpr_32 = V_ADD_CO_U32_e32 killed %0, %stack.0, implicit-def dead $vcc, implicit $exec
    S_ENDPGM 0, implicit %1

...

---
name: commute_frame_index__v_add_co_u32_e64__fi_sgpr
tracksRegLiveness: true
stack:
  - { id: 0, size: 8, alignment: 4, local-offset: 0 }
body:             |
  bb.0:
    liveins: $sgpr4

    ; GCN-LABEL: name: commute_frame_index__v_add_co_u32_e64__fi_sgpr
    ; GCN: liveins: $sgpr4
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr4
    ; GCN-NEXT: [[V_ADD_CO_U32_e64_:%[0-9]+]]:vgpr_32, [[V_ADD_CO_U32_e64_1:%[0-9]+]]:sreg_64 = V_ADD_CO_U32_e64 %stack.0, killed [[COPY]], 0, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_ADD_CO_U32_e64_]]
    %0:sreg_32 = COPY $sgpr4
    %1:vgpr_32, %2:sreg_64 = V_ADD_CO_U32_e64 %stack.0, killed %0, 0, implicit $exec
    S_ENDPGM 0, implicit %1

...

---
name: commute_frame_index__v_add_co_u32__vgpr_fi
tracksRegLiveness: true
stack:
  - { id: 0, size: 8, alignment: 4, local-offset: 0 }
body:             |
  bb.0:
    liveins: $vgpr0

    ; GCN-LABEL: name: commute_frame_index__v_add_co_u32__vgpr_fi
    ; GCN: liveins: $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[V_ADD_CO_U32_e32_:%[0-9]+]]:vgpr_32 = V_ADD_CO_U32_e32 %stack.0, killed [[COPY]], implicit-def dead $vcc, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_ADD_CO_U32_e32_]]
    %0:vgpr_32 = COPY $vgpr0
    %1:vgpr_32 = V_ADD_CO_U32_e32 killed %0, %stack.0, implicit-def dead $vcc, implicit $exec
    S_ENDPGM 0, implicit %1

...

---
name: commute_frame_index__v_add_co_u32__fi_vgpr
tracksRegLiveness: true
stack:
  - { id: 0, size: 8, alignment: 4, local-offset: 0 }
body:             |
  bb.0.entry:
    liveins: $vgpr0

    ; GCN-LABEL: name: commute_frame_index__v_add_co_u32__fi_vgpr
    ; GCN: liveins: $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[V_ADD_CO_U32_e32_:%[0-9]+]]:vgpr_32 = V_ADD_CO_U32_e32 %stack.0, killed [[COPY]], implicit-def dead $vcc, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_ADD_CO_U32_e32_]]
    %0:vgpr_32 = COPY $vgpr0
    %1:vgpr_32 = V_ADD_CO_U32_e32 %stack.0, killed %0, implicit-def dead $vcc, implicit $exec
    S_ENDPGM 0, implicit %1

...

---
name: commute_frame_index__v_add_co_u32_e32__fi_fi
tracksRegLiveness: true
stack:
  - { id: 0, size: 8, alignment: 4, local-offset: 0 }
  - { id: 1, size: 8, alignment: 4, local-offset: 0 }
body:             |
  bb.0:

    ; GCN-LABEL: name: commute_frame_index__v_add_co_u32_e32__fi_fi
    ; GCN: [[V_ADD_CO_U32_e32_:%[0-9]+]]:vgpr_32 = V_ADD_CO_U32_e32 %stack.0, %stack.1, implicit-def dead $vcc, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_ADD_CO_U32_e32_]]
    %0:vgpr_32 = V_ADD_CO_U32_e32 %stack.0, %stack.1, implicit-def dead $vcc, implicit $exec
    S_ENDPGM 0, implicit %0

...
