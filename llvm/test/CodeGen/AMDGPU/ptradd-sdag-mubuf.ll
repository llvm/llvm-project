; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=tahiti -amdgpu-use-sdag-ptradd=1 < %s | FileCheck --check-prefixes=GFX6,GFX6_PTRADD %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=tahiti -amdgpu-use-sdag-ptradd=0 < %s | FileCheck --check-prefixes=GFX6,GFX6_LEGACY %s

; Test PTRADD handling in AMDGPUDAGToDAGISel::SelectMUBUF.

define amdgpu_kernel void @v_add_i32(ptr addrspace(1) %out, ptr addrspace(1) %in) {
; GFX6_PTRADD-LABEL: v_add_i32:
; GFX6_PTRADD:       ; %bb.0:
; GFX6_PTRADD-NEXT:    s_load_dwordx4 s[0:3], s[8:9], 0x0
; GFX6_PTRADD-NEXT:    v_lshlrev_b32_e32 v0, 2, v0
; GFX6_PTRADD-NEXT:    s_mov_b32 s7, 0x100f000
; GFX6_PTRADD-NEXT:    s_mov_b32 s10, 0
; GFX6_PTRADD-NEXT:    s_mov_b32 s11, s7
; GFX6_PTRADD-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6_PTRADD-NEXT:    v_mov_b32_e32 v1, s3
; GFX6_PTRADD-NEXT:    v_add_i32_e32 v0, vcc, s2, v0
; GFX6_PTRADD-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; GFX6_PTRADD-NEXT:    s_mov_b32 s8, s10
; GFX6_PTRADD-NEXT:    s_mov_b32 s9, s10
; GFX6_PTRADD-NEXT:    buffer_load_dword v2, v[0:1], s[8:11], 0 addr64 glc
; GFX6_PTRADD-NEXT:    s_waitcnt vmcnt(0)
; GFX6_PTRADD-NEXT:    buffer_load_dword v0, v[0:1], s[8:11], 0 addr64 offset:4 glc
; GFX6_PTRADD-NEXT:    s_waitcnt vmcnt(0)
; GFX6_PTRADD-NEXT:    s_mov_b32 s6, -1
; GFX6_PTRADD-NEXT:    s_mov_b32 s4, s0
; GFX6_PTRADD-NEXT:    s_mov_b32 s5, s1
; GFX6_PTRADD-NEXT:    v_add_i32_e32 v0, vcc, v2, v0
; GFX6_PTRADD-NEXT:    buffer_store_dword v0, off, s[4:7], 0
; GFX6_PTRADD-NEXT:    s_endpgm
;
; GFX6_LEGACY-LABEL: v_add_i32:
; GFX6_LEGACY:       ; %bb.0:
; GFX6_LEGACY-NEXT:    s_load_dwordx4 s[0:3], s[8:9], 0x0
; GFX6_LEGACY-NEXT:    s_mov_b32 s7, 0x100f000
; GFX6_LEGACY-NEXT:    s_mov_b32 s10, 0
; GFX6_LEGACY-NEXT:    s_mov_b32 s11, s7
; GFX6_LEGACY-NEXT:    v_lshlrev_b32_e32 v0, 2, v0
; GFX6_LEGACY-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6_LEGACY-NEXT:    s_mov_b64 s[8:9], s[2:3]
; GFX6_LEGACY-NEXT:    v_mov_b32_e32 v1, 0
; GFX6_LEGACY-NEXT:    buffer_load_dword v2, v[0:1], s[8:11], 0 addr64 glc
; GFX6_LEGACY-NEXT:    s_waitcnt vmcnt(0)
; GFX6_LEGACY-NEXT:    buffer_load_dword v0, v[0:1], s[8:11], 0 addr64 offset:4 glc
; GFX6_LEGACY-NEXT:    s_waitcnt vmcnt(0)
; GFX6_LEGACY-NEXT:    s_mov_b32 s6, -1
; GFX6_LEGACY-NEXT:    s_mov_b32 s4, s0
; GFX6_LEGACY-NEXT:    s_mov_b32 s5, s1
; GFX6_LEGACY-NEXT:    v_add_i32_e32 v0, vcc, v2, v0
; GFX6_LEGACY-NEXT:    buffer_store_dword v0, off, s[4:7], 0
; GFX6_LEGACY-NEXT:    s_endpgm
  %tid = call i32 @llvm.amdgcn.workitem.id.x()
  %gep = getelementptr inbounds i32, ptr addrspace(1) %in, i32 %tid
  %b_ptr = getelementptr i32, ptr addrspace(1) %gep, i32 1
  %a = load volatile i32, ptr addrspace(1) %gep
  %b = load volatile i32, ptr addrspace(1) %b_ptr
  %result = add i32 %a, %b
  store i32 %result, ptr addrspace(1) %out
  ret void
}

;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; GFX6: {{.*}}
