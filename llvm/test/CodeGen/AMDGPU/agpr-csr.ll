; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=amdgcn -mcpu=gfx90a -verify-machineinstrs < %s | FileCheck --check-prefixes=GCN,GFX90A %s
; RUN: llc -mtriple=amdgcn -mcpu=gfx908 -verify-machineinstrs < %s | FileCheck --check-prefixes=GCN,GFX908 %s

define void @func_empty() #0 {
; GCN-LABEL: func_empty:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    s_setpc_b64 s[30:31]
  ret void
}

define void @func_areg_4() #0 {
; GCN-LABEL: func_areg_4:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    ;;#ASMSTART
; GCN-NEXT:    ; use agpr3
; GCN-NEXT:    ;;#ASMEND
; GCN-NEXT:    s_setpc_b64 s[30:31]
  call void asm sideeffect "; use agpr3", "~{a3}" ()
  ret void
}

define void @func_areg_32() #0 {
; GCN-LABEL: func_areg_32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    ;;#ASMSTART
; GCN-NEXT:    ; use agpr31
; GCN-NEXT:    ;;#ASMEND
; GCN-NEXT:    s_setpc_b64 s[30:31]
  call void asm sideeffect "; use agpr31", "~{a31}" ()
  ret void
}

define void @func_areg_33() #0 {
; GFX90A-LABEL: func_areg_33:
; GFX90A:       ; %bb.0:
; GFX90A-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX90A-NEXT:    v_accvgpr_read_b32 v0, a32 ; Reload Reuse
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; use agpr32
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    v_accvgpr_write_b32 a32, v0 ; Reload Reuse
; GFX90A-NEXT:    s_setpc_b64 s[30:31]
;
; GFX908-LABEL: func_areg_33:
; GFX908:       ; %bb.0:
; GFX908-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; use agpr32
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    s_setpc_b64 s[30:31]
  call void asm sideeffect "; use agpr32", "~{a32}" ()
  ret void
}


define void @func_areg_64() #0 {
; GFX90A-LABEL: func_areg_64:
; GFX90A:       ; %bb.0:
; GFX90A-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX90A-NEXT:    v_accvgpr_read_b32 v0, a63 ; Reload Reuse
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; use agpr63
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    v_accvgpr_write_b32 a63, v0 ; Reload Reuse
; GFX90A-NEXT:    s_setpc_b64 s[30:31]
;
; GFX908-LABEL: func_areg_64:
; GFX908:       ; %bb.0:
; GFX908-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; use agpr63
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    s_setpc_b64 s[30:31]
  call void asm sideeffect "; use agpr63", "~{a63}" ()
  ret void
}

define void @func_areg_31_63() #0 {
; GFX90A-LABEL: func_areg_31_63:
; GFX90A:       ; %bb.0:
; GFX90A-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX90A-NEXT:    v_accvgpr_read_b32 v0, a63 ; Reload Reuse
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; use agpr31, agpr63
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    v_accvgpr_write_b32 a63, v0 ; Reload Reuse
; GFX90A-NEXT:    s_setpc_b64 s[30:31]
;
; GFX908-LABEL: func_areg_31_63:
; GFX908:       ; %bb.0:
; GFX908-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; use agpr31, agpr63
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    s_setpc_b64 s[30:31]
  call void asm sideeffect "; use agpr31, agpr63", "~{a31},~{a63}" ()
  ret void
}

declare void @func_unknown() #0

define amdgpu_kernel void @test_call_empty() #0 {
; GFX90A-LABEL: test_call_empty:
; GFX90A:       ; %bb.0: ; %bb
; GFX90A-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX90A-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX90A-NEXT:    s_mov_b32 s22, -1
; GFX90A-NEXT:    s_mov_b32 s23, 0xe00000
; GFX90A-NEXT:    s_add_u32 s20, s20, s11
; GFX90A-NEXT:    s_addc_u32 s21, s21, 0
; GFX90A-NEXT:    s_mov_b32 s12, s8
; GFX90A-NEXT:    s_add_u32 s8, s4, 36
; GFX90A-NEXT:    s_mov_b32 s13, s9
; GFX90A-NEXT:    s_addc_u32 s9, s5, 0
; GFX90A-NEXT:    s_getpc_b64 s[4:5]
; GFX90A-NEXT:    s_add_u32 s4, s4, func_empty@gotpcrel32@lo+4
; GFX90A-NEXT:    s_addc_u32 s5, s5, func_empty@gotpcrel32@hi+12
; GFX90A-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX90A-NEXT:    s_mov_b32 s14, s10
; GFX90A-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX90A-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX90A-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX90A-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX90A-NEXT:    v_mov_b32_e32 v31, v0
; GFX90A-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX90A-NEXT:    s_mov_b32 s32, 0
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; def a[0:31]
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[28:31], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[24:27], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[20:23], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[16:19], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[12:15], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[8:11], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[4:7], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[0:3], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    s_endpgm
;
; GFX908-LABEL: test_call_empty:
; GFX908:       ; %bb.0: ; %bb
; GFX908-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX908-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX908-NEXT:    s_mov_b32 s22, -1
; GFX908-NEXT:    s_mov_b32 s23, 0xe00000
; GFX908-NEXT:    s_add_u32 s20, s20, s11
; GFX908-NEXT:    s_addc_u32 s21, s21, 0
; GFX908-NEXT:    s_mov_b32 s12, s8
; GFX908-NEXT:    s_add_u32 s8, s4, 36
; GFX908-NEXT:    s_mov_b32 s13, s9
; GFX908-NEXT:    s_addc_u32 s9, s5, 0
; GFX908-NEXT:    s_getpc_b64 s[4:5]
; GFX908-NEXT:    s_add_u32 s4, s4, func_empty@gotpcrel32@lo+4
; GFX908-NEXT:    s_addc_u32 s5, s5, func_empty@gotpcrel32@hi+12
; GFX908-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX908-NEXT:    s_mov_b32 s14, s10
; GFX908-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX908-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX908-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX908-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX908-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX908-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX908-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX908-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX908-NEXT:    s_mov_b32 s32, 0
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; def a[0:31]
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    s_waitcnt lgkmcnt(0)
; GFX908-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a28
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a29
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a30
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a31
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a24
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a25
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a26
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a27
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a20
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a21
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a22
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a23
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a16
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a17
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a18
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a19
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a12
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a13
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a14
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a15
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a8
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a9
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a10
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a11
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a4
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a5
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a6
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a7
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a0
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a1
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a2
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a3
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    s_endpgm
bb:
  %reg = call <32 x float> asm sideeffect "; def $0", "=a"()
  call void @func_empty()
  store volatile <32 x float> %reg, ptr addrspace(1) poison
  ret void
}

define amdgpu_kernel void @test_call_areg4() #0 {
; GFX90A-LABEL: test_call_areg4:
; GFX90A:       ; %bb.0: ; %bb
; GFX90A-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX90A-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX90A-NEXT:    s_mov_b32 s22, -1
; GFX90A-NEXT:    s_mov_b32 s23, 0xe00000
; GFX90A-NEXT:    s_add_u32 s20, s20, s11
; GFX90A-NEXT:    s_addc_u32 s21, s21, 0
; GFX90A-NEXT:    s_mov_b32 s12, s8
; GFX90A-NEXT:    s_add_u32 s8, s4, 36
; GFX90A-NEXT:    s_mov_b32 s13, s9
; GFX90A-NEXT:    s_addc_u32 s9, s5, 0
; GFX90A-NEXT:    s_getpc_b64 s[4:5]
; GFX90A-NEXT:    s_add_u32 s4, s4, func_areg_4@gotpcrel32@lo+4
; GFX90A-NEXT:    s_addc_u32 s5, s5, func_areg_4@gotpcrel32@hi+12
; GFX90A-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX90A-NEXT:    s_mov_b32 s14, s10
; GFX90A-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX90A-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX90A-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX90A-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX90A-NEXT:    v_mov_b32_e32 v31, v0
; GFX90A-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX90A-NEXT:    s_mov_b32 s32, 0
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; def a[4:35]
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[32:35], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[28:31], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[24:27], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[20:23], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[16:19], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[12:15], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[8:11], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[4:7], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    s_endpgm
;
; GFX908-LABEL: test_call_areg4:
; GFX908:       ; %bb.0: ; %bb
; GFX908-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX908-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX908-NEXT:    s_mov_b32 s22, -1
; GFX908-NEXT:    s_mov_b32 s23, 0xe00000
; GFX908-NEXT:    s_add_u32 s20, s20, s11
; GFX908-NEXT:    s_addc_u32 s21, s21, 0
; GFX908-NEXT:    s_mov_b32 s12, s8
; GFX908-NEXT:    s_add_u32 s8, s4, 36
; GFX908-NEXT:    s_mov_b32 s13, s9
; GFX908-NEXT:    s_addc_u32 s9, s5, 0
; GFX908-NEXT:    s_getpc_b64 s[4:5]
; GFX908-NEXT:    s_add_u32 s4, s4, func_areg_4@gotpcrel32@lo+4
; GFX908-NEXT:    s_addc_u32 s5, s5, func_areg_4@gotpcrel32@hi+12
; GFX908-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX908-NEXT:    s_mov_b32 s14, s10
; GFX908-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX908-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX908-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX908-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX908-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX908-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX908-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX908-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX908-NEXT:    s_mov_b32 s32, 0
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; def a[4:35]
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    s_waitcnt lgkmcnt(0)
; GFX908-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a32
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a33
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a34
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a35
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a28
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a29
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a30
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a31
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a24
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a25
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a26
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a27
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a20
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a21
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a22
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a23
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a16
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a17
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a18
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a19
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a12
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a13
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a14
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a15
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a8
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a9
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a10
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a11
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a4
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a5
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a6
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a7
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    s_endpgm
bb:
  %reg = call <32 x float> asm sideeffect "; def $0", "=a"()
  call void @func_areg_4()
  store volatile <32 x float> %reg, ptr addrspace(1) poison
  ret void
}

define amdgpu_kernel void @test_call_areg32() #0 {
; GFX90A-LABEL: test_call_areg32:
; GFX90A:       ; %bb.0: ; %bb
; GFX90A-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX90A-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX90A-NEXT:    s_mov_b32 s22, -1
; GFX90A-NEXT:    s_mov_b32 s23, 0xe00000
; GFX90A-NEXT:    s_add_u32 s20, s20, s11
; GFX90A-NEXT:    s_addc_u32 s21, s21, 0
; GFX90A-NEXT:    s_mov_b32 s12, s8
; GFX90A-NEXT:    s_add_u32 s8, s4, 36
; GFX90A-NEXT:    s_mov_b32 s13, s9
; GFX90A-NEXT:    s_addc_u32 s9, s5, 0
; GFX90A-NEXT:    s_getpc_b64 s[4:5]
; GFX90A-NEXT:    s_add_u32 s4, s4, func_areg_32@gotpcrel32@lo+4
; GFX90A-NEXT:    s_addc_u32 s5, s5, func_areg_32@gotpcrel32@hi+12
; GFX90A-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX90A-NEXT:    s_mov_b32 s14, s10
; GFX90A-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX90A-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX90A-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX90A-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX90A-NEXT:    v_mov_b32_e32 v31, v0
; GFX90A-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX90A-NEXT:    s_mov_b32 s32, 0
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; def a[32:63]
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[60:63], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[56:59], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[52:55], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[48:51], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[44:47], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[40:43], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[36:39], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[32:35], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    s_endpgm
;
; GFX908-LABEL: test_call_areg32:
; GFX908:       ; %bb.0: ; %bb
; GFX908-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX908-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX908-NEXT:    s_mov_b32 s22, -1
; GFX908-NEXT:    s_mov_b32 s23, 0xe00000
; GFX908-NEXT:    s_add_u32 s20, s20, s11
; GFX908-NEXT:    s_addc_u32 s21, s21, 0
; GFX908-NEXT:    s_mov_b32 s12, s8
; GFX908-NEXT:    s_add_u32 s8, s4, 36
; GFX908-NEXT:    s_mov_b32 s13, s9
; GFX908-NEXT:    s_addc_u32 s9, s5, 0
; GFX908-NEXT:    s_getpc_b64 s[4:5]
; GFX908-NEXT:    s_add_u32 s4, s4, func_areg_32@gotpcrel32@lo+4
; GFX908-NEXT:    s_addc_u32 s5, s5, func_areg_32@gotpcrel32@hi+12
; GFX908-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX908-NEXT:    s_mov_b32 s14, s10
; GFX908-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX908-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX908-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX908-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX908-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX908-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX908-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX908-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX908-NEXT:    s_mov_b32 s32, 0
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; def a[32:63]
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    s_waitcnt lgkmcnt(0)
; GFX908-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a60
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a61
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a62
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a63
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a56
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a57
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a58
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a59
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a52
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a53
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a54
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a55
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a48
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a49
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a50
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a51
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a44
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a45
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a46
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a47
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a40
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a41
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a42
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a43
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a36
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a37
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a38
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a39
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a32
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a33
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a34
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a35
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    s_endpgm
bb:
  %reg = call <32 x float> asm sideeffect "; def $0", "=a"()
  call void @func_areg_32()
  store volatile <32 x float> %reg, ptr addrspace(1) poison
  ret void
}

define amdgpu_kernel void @test_call_areg64() #0 {
; GFX90A-LABEL: test_call_areg64:
; GFX90A:       ; %bb.0: ; %bb
; GFX90A-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX90A-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX90A-NEXT:    s_mov_b32 s22, -1
; GFX90A-NEXT:    s_mov_b32 s23, 0xe00000
; GFX90A-NEXT:    s_add_u32 s20, s20, s11
; GFX90A-NEXT:    s_addc_u32 s21, s21, 0
; GFX90A-NEXT:    s_mov_b32 s12, s8
; GFX90A-NEXT:    s_add_u32 s8, s4, 36
; GFX90A-NEXT:    s_mov_b32 s13, s9
; GFX90A-NEXT:    s_addc_u32 s9, s5, 0
; GFX90A-NEXT:    s_getpc_b64 s[4:5]
; GFX90A-NEXT:    s_add_u32 s4, s4, func_areg_64@gotpcrel32@lo+4
; GFX90A-NEXT:    s_addc_u32 s5, s5, func_areg_64@gotpcrel32@hi+12
; GFX90A-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX90A-NEXT:    s_mov_b32 s14, s10
; GFX90A-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX90A-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX90A-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX90A-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX90A-NEXT:    v_mov_b32_e32 v31, v0
; GFX90A-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX90A-NEXT:    s_mov_b32 s32, 0
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; def a[0:31]
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[28:31], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[24:27], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[20:23], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[16:19], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[12:15], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[8:11], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[4:7], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[0:3], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    s_endpgm
;
; GFX908-LABEL: test_call_areg64:
; GFX908:       ; %bb.0: ; %bb
; GFX908-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX908-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX908-NEXT:    s_mov_b32 s22, -1
; GFX908-NEXT:    s_mov_b32 s23, 0xe00000
; GFX908-NEXT:    s_add_u32 s20, s20, s11
; GFX908-NEXT:    s_addc_u32 s21, s21, 0
; GFX908-NEXT:    s_mov_b32 s12, s8
; GFX908-NEXT:    s_add_u32 s8, s4, 36
; GFX908-NEXT:    s_mov_b32 s13, s9
; GFX908-NEXT:    s_addc_u32 s9, s5, 0
; GFX908-NEXT:    s_getpc_b64 s[4:5]
; GFX908-NEXT:    s_add_u32 s4, s4, func_areg_64@gotpcrel32@lo+4
; GFX908-NEXT:    s_addc_u32 s5, s5, func_areg_64@gotpcrel32@hi+12
; GFX908-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX908-NEXT:    s_mov_b32 s14, s10
; GFX908-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX908-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX908-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX908-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX908-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX908-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX908-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX908-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX908-NEXT:    s_mov_b32 s32, 0
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; def a[0:31]
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    s_waitcnt lgkmcnt(0)
; GFX908-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a28
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a29
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a30
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a31
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a24
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a25
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a26
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a27
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a20
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a21
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a22
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a23
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a16
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a17
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a18
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a19
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a12
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a13
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a14
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a15
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a8
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a9
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a10
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a11
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a4
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a5
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a6
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a7
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a0
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a1
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a2
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a3
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    s_endpgm
bb:
  %reg = call <32 x float> asm sideeffect "; def $0", "=a"()
  call void @func_areg_64()
  store volatile <32 x float> %reg, ptr addrspace(1) poison
  ret void
}

define amdgpu_kernel void @test_call_areg31_63() #0 {
; GFX90A-LABEL: test_call_areg31_63:
; GFX90A:       ; %bb.0: ; %bb
; GFX90A-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX90A-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX90A-NEXT:    s_mov_b32 s22, -1
; GFX90A-NEXT:    s_mov_b32 s23, 0xe00000
; GFX90A-NEXT:    s_add_u32 s20, s20, s11
; GFX90A-NEXT:    s_addc_u32 s21, s21, 0
; GFX90A-NEXT:    s_mov_b32 s12, s8
; GFX90A-NEXT:    s_add_u32 s8, s4, 36
; GFX90A-NEXT:    s_mov_b32 s13, s9
; GFX90A-NEXT:    s_addc_u32 s9, s5, 0
; GFX90A-NEXT:    s_getpc_b64 s[4:5]
; GFX90A-NEXT:    s_add_u32 s4, s4, func_areg_31_63@gotpcrel32@lo+4
; GFX90A-NEXT:    s_addc_u32 s5, s5, func_areg_31_63@gotpcrel32@hi+12
; GFX90A-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX90A-NEXT:    s_mov_b32 s14, s10
; GFX90A-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX90A-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX90A-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX90A-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX90A-NEXT:    v_mov_b32_e32 v31, v0
; GFX90A-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX90A-NEXT:    s_mov_b32 s32, 0
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; def a[32:63]
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[60:63], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[56:59], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[52:55], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[48:51], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[44:47], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[40:43], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[36:39], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[32:35], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    s_endpgm
;
; GFX908-LABEL: test_call_areg31_63:
; GFX908:       ; %bb.0: ; %bb
; GFX908-NEXT:    s_mov_b32 s20, SCRATCH_RSRC_DWORD0
; GFX908-NEXT:    s_mov_b32 s21, SCRATCH_RSRC_DWORD1
; GFX908-NEXT:    s_mov_b32 s22, -1
; GFX908-NEXT:    s_mov_b32 s23, 0xe00000
; GFX908-NEXT:    s_add_u32 s20, s20, s11
; GFX908-NEXT:    s_addc_u32 s21, s21, 0
; GFX908-NEXT:    s_mov_b32 s12, s8
; GFX908-NEXT:    s_add_u32 s8, s4, 36
; GFX908-NEXT:    s_mov_b32 s13, s9
; GFX908-NEXT:    s_addc_u32 s9, s5, 0
; GFX908-NEXT:    s_getpc_b64 s[4:5]
; GFX908-NEXT:    s_add_u32 s4, s4, func_areg_31_63@gotpcrel32@lo+4
; GFX908-NEXT:    s_addc_u32 s5, s5, func_areg_31_63@gotpcrel32@hi+12
; GFX908-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX908-NEXT:    s_mov_b32 s14, s10
; GFX908-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX908-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX908-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX908-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX908-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX908-NEXT:    s_mov_b64 s[0:1], s[20:21]
; GFX908-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX908-NEXT:    s_mov_b64 s[2:3], s[22:23]
; GFX908-NEXT:    s_mov_b32 s32, 0
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; def a[64:95]
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    s_waitcnt lgkmcnt(0)
; GFX908-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a92
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a93
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a94
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a95
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a88
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a89
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a90
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a91
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a84
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a85
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a86
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a87
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a80
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a81
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a82
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a83
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a76
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a77
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a78
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a79
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a72
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a73
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a74
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a75
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a68
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a69
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a70
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a71
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_accvgpr_read_b32 v0, a64
; GFX908-NEXT:    v_accvgpr_read_b32 v1, a65
; GFX908-NEXT:    v_accvgpr_read_b32 v2, a66
; GFX908-NEXT:    v_accvgpr_read_b32 v3, a67
; GFX908-NEXT:    s_nop 1
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    s_endpgm
bb:
  %reg = call <32 x float> asm sideeffect "; def $0", "=a"()
  call void @func_areg_31_63()
  store volatile <32 x float> %reg, ptr addrspace(1) poison
  ret void
}

define amdgpu_kernel void @test_call_unknown() #0 {
; GFX90A-LABEL: test_call_unknown:
; GFX90A:       ; %bb.0: ; %bb
; GFX90A-NEXT:    s_mov_b32 s36, SCRATCH_RSRC_DWORD0
; GFX90A-NEXT:    s_mov_b32 s37, SCRATCH_RSRC_DWORD1
; GFX90A-NEXT:    s_mov_b32 s38, -1
; GFX90A-NEXT:    s_mov_b32 s39, 0xe00000
; GFX90A-NEXT:    s_add_u32 s36, s36, s11
; GFX90A-NEXT:    s_addc_u32 s37, s37, 0
; GFX90A-NEXT:    s_mov_b32 s12, s8
; GFX90A-NEXT:    s_add_u32 s8, s4, 36
; GFX90A-NEXT:    s_mov_b32 s13, s9
; GFX90A-NEXT:    s_addc_u32 s9, s5, 0
; GFX90A-NEXT:    s_getpc_b64 s[4:5]
; GFX90A-NEXT:    s_add_u32 s4, s4, func_unknown@gotpcrel32@lo+4
; GFX90A-NEXT:    s_addc_u32 s5, s5, func_unknown@gotpcrel32@hi+12
; GFX90A-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX90A-NEXT:    s_mov_b32 s14, s10
; GFX90A-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX90A-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX90A-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX90A-NEXT:    s_mov_b64 s[0:1], s[36:37]
; GFX90A-NEXT:    v_mov_b32_e32 v31, v0
; GFX90A-NEXT:    s_mov_b64 s[2:3], s[38:39]
; GFX90A-NEXT:    s_mov_b32 s32, 0
; GFX90A-NEXT:    ;;#ASMSTART
; GFX90A-NEXT:    ; def a[32:63]
; GFX90A-NEXT:    ;;#ASMEND
; GFX90A-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[60:63], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[56:59], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[52:55], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[48:51], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[44:47], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[40:43], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[36:39], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    global_store_dwordx4 v[0:1], a[32:35], off
; GFX90A-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NEXT:    s_endpgm
;
; GFX908-LABEL: test_call_unknown:
; GFX908:       ; %bb.0: ; %bb
; GFX908-NEXT:    s_mov_b32 s36, SCRATCH_RSRC_DWORD0
; GFX908-NEXT:    s_mov_b32 s37, SCRATCH_RSRC_DWORD1
; GFX908-NEXT:    s_mov_b32 s38, -1
; GFX908-NEXT:    s_mov_b32 s39, 0xe00000
; GFX908-NEXT:    s_add_u32 s36, s36, s11
; GFX908-NEXT:    s_addc_u32 s37, s37, 0
; GFX908-NEXT:    s_mov_b32 s12, s8
; GFX908-NEXT:    s_add_u32 s8, s4, 36
; GFX908-NEXT:    s_mov_b32 s13, s9
; GFX908-NEXT:    s_addc_u32 s9, s5, 0
; GFX908-NEXT:    s_getpc_b64 s[4:5]
; GFX908-NEXT:    s_add_u32 s4, s4, func_unknown@gotpcrel32@lo+4
; GFX908-NEXT:    s_addc_u32 s5, s5, func_unknown@gotpcrel32@hi+12
; GFX908-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x0
; GFX908-NEXT:    s_mov_b32 s14, s10
; GFX908-NEXT:    s_mov_b64 s[10:11], s[6:7]
; GFX908-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX908-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX908-NEXT:    s_mov_b64 s[4:5], s[0:1]
; GFX908-NEXT:    s_mov_b64 s[6:7], s[2:3]
; GFX908-NEXT:    s_mov_b64 s[0:1], s[36:37]
; GFX908-NEXT:    ;;#ASMSTART
; GFX908-NEXT:    ; def a[0:31]
; GFX908-NEXT:    ;;#ASMEND
; GFX908-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX908-NEXT:    s_mov_b64 s[2:3], s[38:39]
; GFX908-NEXT:    s_mov_b32 s32, 0
; GFX908-NEXT:    v_accvgpr_read_b32 v95, a0 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v94, a1 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v93, a2 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v92, a3 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v91, a4 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v90, a5 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v89, a6 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v88, a7 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v79, a8 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v78, a9 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v77, a10 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v76, a11 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v75, a12 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v74, a13 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v73, a14 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v72, a15 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v63, a16 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v62, a17 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v61, a18 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v60, a19 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v59, a20 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v58, a21 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v57, a22 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v56, a23 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v47, a24 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v46, a25 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v45, a26 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v44, a27 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v43, a28 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v42, a29 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v41, a30 ; Reload Reuse
; GFX908-NEXT:    v_accvgpr_read_b32 v40, a31 ; Reload Reuse
; GFX908-NEXT:    s_waitcnt lgkmcnt(0)
; GFX908-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX908-NEXT:    v_mov_b32_e32 v4, v95
; GFX908-NEXT:    v_mov_b32_e32 v5, v94
; GFX908-NEXT:    v_mov_b32_e32 v6, v93
; GFX908-NEXT:    v_mov_b32_e32 v7, v92
; GFX908-NEXT:    v_mov_b32_e32 v8, v91
; GFX908-NEXT:    v_mov_b32_e32 v9, v90
; GFX908-NEXT:    v_mov_b32_e32 v10, v89
; GFX908-NEXT:    v_mov_b32_e32 v11, v88
; GFX908-NEXT:    v_mov_b32_e32 v12, v79
; GFX908-NEXT:    v_mov_b32_e32 v13, v78
; GFX908-NEXT:    v_mov_b32_e32 v14, v77
; GFX908-NEXT:    v_mov_b32_e32 v15, v76
; GFX908-NEXT:    v_mov_b32_e32 v16, v75
; GFX908-NEXT:    v_mov_b32_e32 v17, v74
; GFX908-NEXT:    v_mov_b32_e32 v18, v73
; GFX908-NEXT:    v_mov_b32_e32 v19, v72
; GFX908-NEXT:    v_mov_b32_e32 v20, v63
; GFX908-NEXT:    v_mov_b32_e32 v21, v62
; GFX908-NEXT:    v_mov_b32_e32 v22, v61
; GFX908-NEXT:    v_mov_b32_e32 v23, v60
; GFX908-NEXT:    v_mov_b32_e32 v24, v59
; GFX908-NEXT:    v_mov_b32_e32 v25, v58
; GFX908-NEXT:    v_mov_b32_e32 v26, v57
; GFX908-NEXT:    v_mov_b32_e32 v27, v56
; GFX908-NEXT:    v_mov_b32_e32 v28, v47
; GFX908-NEXT:    v_mov_b32_e32 v29, v46
; GFX908-NEXT:    v_mov_b32_e32 v30, v45
; GFX908-NEXT:    v_mov_b32_e32 v31, v44
; GFX908-NEXT:    v_mov_b32_e32 v32, v43
; GFX908-NEXT:    v_mov_b32_e32 v33, v42
; GFX908-NEXT:    v_mov_b32_e32 v34, v41
; GFX908-NEXT:    v_mov_b32_e32 v35, v40
; GFX908-NEXT:    v_mov_b32_e32 v0, v32
; GFX908-NEXT:    v_mov_b32_e32 v1, v33
; GFX908-NEXT:    v_mov_b32_e32 v2, v34
; GFX908-NEXT:    v_mov_b32_e32 v3, v35
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_mov_b32_e32 v0, v28
; GFX908-NEXT:    v_mov_b32_e32 v1, v29
; GFX908-NEXT:    v_mov_b32_e32 v2, v30
; GFX908-NEXT:    v_mov_b32_e32 v3, v31
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_mov_b32_e32 v0, v24
; GFX908-NEXT:    v_mov_b32_e32 v1, v25
; GFX908-NEXT:    v_mov_b32_e32 v2, v26
; GFX908-NEXT:    v_mov_b32_e32 v3, v27
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_mov_b32_e32 v0, v20
; GFX908-NEXT:    v_mov_b32_e32 v1, v21
; GFX908-NEXT:    v_mov_b32_e32 v2, v22
; GFX908-NEXT:    v_mov_b32_e32 v3, v23
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_mov_b32_e32 v0, v16
; GFX908-NEXT:    v_mov_b32_e32 v1, v17
; GFX908-NEXT:    v_mov_b32_e32 v2, v18
; GFX908-NEXT:    v_mov_b32_e32 v3, v19
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_mov_b32_e32 v0, v12
; GFX908-NEXT:    v_mov_b32_e32 v1, v13
; GFX908-NEXT:    v_mov_b32_e32 v2, v14
; GFX908-NEXT:    v_mov_b32_e32 v3, v15
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_mov_b32_e32 v0, v8
; GFX908-NEXT:    v_mov_b32_e32 v1, v9
; GFX908-NEXT:    v_mov_b32_e32 v2, v10
; GFX908-NEXT:    v_mov_b32_e32 v3, v11
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    v_mov_b32_e32 v0, v4
; GFX908-NEXT:    v_mov_b32_e32 v1, v5
; GFX908-NEXT:    v_mov_b32_e32 v2, v6
; GFX908-NEXT:    v_mov_b32_e32 v3, v7
; GFX908-NEXT:    global_store_dwordx4 v[0:1], v[0:3], off
; GFX908-NEXT:    s_waitcnt vmcnt(0)
; GFX908-NEXT:    s_endpgm
bb:
  %reg = call <32 x float> asm sideeffect "; def $0", "=a"()
  call void @func_unknown()
  store volatile <32 x float> %reg, ptr addrspace(1) poison
  ret void
}

attributes #0 = { nounwind noinline "amdgpu-flat-work-group-size"="1,512" }
