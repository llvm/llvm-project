# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=tahiti -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX6 %s

---

name:            fadd_s64_vvv
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-LABEL: name: fadd_s64_vvv
    ; GFX6: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:vreg_64 = COPY $vgpr2_vgpr3
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(i64) = COPY $vgpr2_vgpr3
    %2:vgpr(f64) = G_BITCAST %0(i64)
    %3:vgpr(f64) = G_BITCAST %1(i64)
    %4:vgpr(f64) = G_FADD %2, %3
    %5:vgpr(i64) = G_BITCAST %4(f64)
    S_ENDPGM 0, implicit %5(i64)

...

---

name:            fadd_s64_vsv
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $sgpr0_sgpr1
    ; GFX6-LABEL: name: fadd_s64_vsv
    ; GFX6: liveins: $vgpr0_vgpr1, $sgpr0_sgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:vgpr(i64) = COPY $vgpr0_vgpr1
    %2:sgpr(f64) = G_BITCAST %0(i64)
    %3:vgpr(f64) = G_BITCAST %1(i64)
    %4:vgpr(f64) = G_FADD %2, %3
    %5:vgpr(i64) = G_BITCAST %4(f64)
    S_ENDPGM 0, implicit %5(i64)

...

---

name:            fadd_s64_vvs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $sgpr0_sgpr1
    ; GFX6-LABEL: name: fadd_s64_vvs
    ; GFX6: liveins: $vgpr0_vgpr1, $sgpr0_sgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:sgpr(i64) = COPY $sgpr0_sgpr1
    %2:vgpr(f64) = G_BITCAST %0(i64)
    %3:sgpr(f64) = G_BITCAST %1(i64)
    %4:vgpr(f64) = G_FADD %2, %3
    %5:vgpr(i64) = G_BITCAST %4(f64)
    S_ENDPGM 0, implicit %5(i64)

...

---

name:            fadd_s64_vvv_fabs_lhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-LABEL: name: fadd_s64_vvv_fabs_lhs
    ; GFX6: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:vreg_64 = COPY $vgpr2_vgpr3
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 2, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(i64) = COPY $vgpr2_vgpr3
    %2:vgpr(f64) = G_BITCAST %0(i64)
    %3:vgpr(f64) = G_FABS %2
    %4:vgpr(f64) = G_BITCAST %1(i64)
    %5:vgpr(f64) = G_FADD %3, %4
    %6:vgpr(i64) = G_BITCAST %5(f64)
    S_ENDPGM 0, implicit %6(i64)

...

---

name:            fadd_s64_vvv_fabs_rhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-LABEL: name: fadd_s64_vvv_fabs_rhs
    ; GFX6: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr2_vgpr3
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY]], 2, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(i64) = COPY $vgpr2_vgpr3
    %2:vgpr(f64) = G_BITCAST %1(i64)
    %3:vgpr(f64) = G_FABS %2
    %4:vgpr(f64) = G_BITCAST %1(i64)
    %5:vgpr(f64) = G_FADD %4, %3
    %6:vgpr(i64) = G_BITCAST %5(f64)
    S_ENDPGM 0, implicit %6(i64)

...

---

name:            fadd_s64_vvv_fneg_fabs_lhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-LABEL: name: fadd_s64_vvv_fneg_fabs_lhs
    ; GFX6: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:vreg_64 = COPY $vgpr2_vgpr3
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 3, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(i64) = COPY $vgpr2_vgpr3
    %2:vgpr(f64) = G_BITCAST %0(i64)
    %3:vgpr(f64) = G_FABS %2
    %4:vgpr(f64) = G_FNEG %3
    %5:vgpr(f64) = G_BITCAST %1(i64)
    %6:vgpr(f64) = G_FADD %4, %5
    %7:vgpr(i64) = G_BITCAST %6(f64)
    S_ENDPGM 0, implicit %7(i64)

...

---

name:            fadd_s64_vvv_fneg_fabs_rhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-LABEL: name: fadd_s64_vvv_fneg_fabs_rhs
    ; GFX6: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY]], 3, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(i64) = COPY $vgpr0_vgpr1
    %2:vgpr(f64) = G_BITCAST %1(i64)
    %3:vgpr(f64) = G_FABS %2
    %4:vgpr(f64) = G_FNEG %3
    %5:vgpr(f64) = G_BITCAST %1(i64)
    %6:vgpr(f64) = G_FADD %5, %4
    %7:vgpr(i64) = G_BITCAST %6(f64)
    S_ENDPGM 0, implicit %7(i64)

...

# Need to look through reg bank copy to find source modifiers

---

name:            fadd_s64_fneg_copy_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $sgpr0_sgpr1
    ; GFX6-LABEL: name: fadd_s64_fneg_copy_sgpr
    ; GFX6: liveins: $vgpr0_vgpr1, $sgpr0_sgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY1]].sub1
    ; GFX6-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY2]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xm0 = COPY [[S_XOR_B32_]]
    ; GFX6-NEXT: [[COPY4:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY1]].sub0
    ; GFX6-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY4]], %subreg.sub0, [[COPY3]], %subreg.sub1
    ; GFX6-NEXT: [[COPY5:%[0-9]+]]:vreg_64 = COPY [[REG_SEQUENCE]]
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY]], 0, [[COPY5]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:sgpr(i64) = COPY $sgpr0_sgpr1
    %2:sgpr(f64) = G_BITCAST %1(i64)
    %3:sgpr(f64) = G_FNEG %2
    %4:sgpr(i64) = G_BITCAST %3(f64)
    %5:vgpr(i64) = COPY %4(i64)
    %6:vgpr(f64) = G_BITCAST %0(i64)
    %7:vgpr(f64) = G_BITCAST %5(i64)
    %8:vgpr(f64) = G_FADD %6, %7
    %9:vgpr(i64) = G_BITCAST %8(f64)
    S_ENDPGM 0, implicit %9(i64)

...

# The source modifier lookup searches through SGPR->VGPR copies. Make
# sure we don't violate the constant bus restriction when we look at
# the source.

---

name:            fadd_s64_copy_fabs_sgpr_copy_fabs_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX6-LABEL: name: fadd_s64_copy_fabs_sgpr_copy_fabs_sgpr
    ; GFX6: liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_64 = COPY $sgpr2_sgpr3
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483647
    ; GFX6-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; GFX6-NEXT: [[S_AND_B32_:%[0-9]+]]:sreg_32 = S_AND_B32 [[COPY2]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xm0 = COPY [[S_AND_B32_]]
    ; GFX6-NEXT: [[COPY4:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; GFX6-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY4]], %subreg.sub0, [[COPY3]], %subreg.sub1
    ; GFX6-NEXT: [[S_MOV_B32_1:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483647
    ; GFX6-NEXT: [[COPY5:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY1]].sub1
    ; GFX6-NEXT: [[S_AND_B32_1:%[0-9]+]]:sreg_32 = S_AND_B32 [[COPY5]], [[S_MOV_B32_1]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY6:%[0-9]+]]:sreg_32_xm0 = COPY [[S_AND_B32_1]]
    ; GFX6-NEXT: [[COPY7:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY1]].sub0
    ; GFX6-NEXT: [[REG_SEQUENCE1:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY7]], %subreg.sub0, [[COPY6]], %subreg.sub1
    ; GFX6-NEXT: [[COPY8:%[0-9]+]]:vreg_64 = COPY [[REG_SEQUENCE]]
    ; GFX6-NEXT: [[COPY9:%[0-9]+]]:vreg_64 = COPY [[REG_SEQUENCE1]]
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY8]], 0, [[COPY9]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:sgpr(i64) = COPY $sgpr2_sgpr3
    %2:sgpr(f64) = G_BITCAST %0(i64)
    %3:sgpr(f64) = G_FABS %2
    %4:sgpr(f64) = G_BITCAST %1(i64)
    %5:sgpr(f64) = G_FABS %4
    %6:sgpr(i64) = G_BITCAST %3(f64)
    %7:vgpr(i64) = COPY %6(i64)
    %8:sgpr(i64) = G_BITCAST %5(f64)
    %9:vgpr(i64) = COPY %8(i64)
    %10:vgpr(f64) = G_BITCAST %7(i64)
    %11:vgpr(f64) = G_BITCAST %9(i64)
    %12:vgpr(f64) = G_FADD %10, %11
    %13:vgpr(i64) = G_BITCAST %12(f64)
    S_ENDPGM 0, implicit %13(i64)

...

---

name:            fadd_s64_copy_fneg_sgpr_copy_fneg_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; GFX6-LABEL: name: fadd_s64_copy_fneg_sgpr_copy_fneg_sgpr
    ; GFX6: liveins: $sgpr0, $sgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_64 = COPY $sgpr2_sgpr3
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; GFX6-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY2]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xm0 = COPY [[S_XOR_B32_]]
    ; GFX6-NEXT: [[COPY4:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; GFX6-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY4]], %subreg.sub0, [[COPY3]], %subreg.sub1
    ; GFX6-NEXT: [[S_MOV_B32_1:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[COPY5:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY1]].sub1
    ; GFX6-NEXT: [[S_XOR_B32_1:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY5]], [[S_MOV_B32_1]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY6:%[0-9]+]]:sreg_32_xm0 = COPY [[S_XOR_B32_1]]
    ; GFX6-NEXT: [[COPY7:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY1]].sub0
    ; GFX6-NEXT: [[REG_SEQUENCE1:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY7]], %subreg.sub0, [[COPY6]], %subreg.sub1
    ; GFX6-NEXT: [[COPY8:%[0-9]+]]:vreg_64 = COPY [[REG_SEQUENCE]]
    ; GFX6-NEXT: [[COPY9:%[0-9]+]]:vreg_64 = COPY [[REG_SEQUENCE1]]
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY8]], 0, [[COPY9]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:sgpr(i64) = COPY $sgpr2_sgpr3
    %2:sgpr(f64) = G_BITCAST %0(i64)
    %3:sgpr(f64) = G_FNEG %2
    %4:sgpr(f64) = G_BITCAST %1(i64)
    %5:sgpr(f64) = G_FNEG %4
    %6:sgpr(i64) = G_BITCAST %3(f64)
    %7:vgpr(i64) = COPY %6(i64)
    %8:sgpr(i64) = G_BITCAST %5(f64)
    %9:vgpr(i64) = COPY %8(i64)
    %10:vgpr(f64) = G_BITCAST %7(i64)
    %11:vgpr(f64) = G_BITCAST %9(i64)
    %12:vgpr(f64) = G_FADD %10, %11
    %13:vgpr(i64) = G_BITCAST %12(f64)
    S_ENDPGM 0, implicit %13(i64)

...

---

name:            fadd_s64_copy_fneg_fabs_sgpr_copy_fneg_fabs_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; GFX6-LABEL: name: fadd_s64_copy_fneg_fabs_sgpr_copy_fneg_fabs_sgpr
    ; GFX6: liveins: $sgpr0, $sgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_64 = COPY $sgpr2_sgpr3
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; GFX6-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY2]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xm0 = COPY [[S_OR_B32_]]
    ; GFX6-NEXT: [[COPY4:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; GFX6-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY4]], %subreg.sub0, [[COPY3]], %subreg.sub1
    ; GFX6-NEXT: [[S_MOV_B32_1:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[COPY5:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY1]].sub1
    ; GFX6-NEXT: [[S_OR_B32_1:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY5]], [[S_MOV_B32_1]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY6:%[0-9]+]]:sreg_32_xm0 = COPY [[S_OR_B32_1]]
    ; GFX6-NEXT: [[COPY7:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY1]].sub0
    ; GFX6-NEXT: [[REG_SEQUENCE1:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY7]], %subreg.sub0, [[COPY6]], %subreg.sub1
    ; GFX6-NEXT: [[COPY8:%[0-9]+]]:vreg_64 = COPY [[REG_SEQUENCE]]
    ; GFX6-NEXT: [[COPY9:%[0-9]+]]:vreg_64 = COPY [[REG_SEQUENCE1]]
    ; GFX6-NEXT: [[V_ADD_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_ADD_F64_e64 0, [[COPY8]], 0, [[COPY9]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F64_e64_]]
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:sgpr(i64) = COPY $sgpr2_sgpr3
    %2:sgpr(f64) = G_BITCAST %0(i64)
    %3:sgpr(f64) = G_FABS %2
    %4:sgpr(f64) = G_BITCAST %1(i64)
    %5:sgpr(f64) = G_FABS %4
    %6:sgpr(f64) = G_FNEG %3
    %7:sgpr(f64) = G_FNEG %5
    %8:sgpr(i64) = G_BITCAST %6(f64)
    %9:vgpr(i64) = COPY %8(i64)
    %10:sgpr(i64) = G_BITCAST %7(f64)
    %11:vgpr(i64) = COPY %10(i64)
    %12:vgpr(f64) = G_BITCAST %9(i64)
    %13:vgpr(f64) = G_BITCAST %11(i64)
    %14:vgpr(f64) = G_FADD %12, %13
    %15:vgpr(i64) = G_BITCAST %14(f64)
    S_ENDPGM 0, implicit %15(i64)

...
