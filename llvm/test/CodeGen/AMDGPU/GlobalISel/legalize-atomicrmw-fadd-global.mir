# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx908 -O0 -run-pass=legalizer %s -o - | FileCheck %s
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx90a -O0 -run-pass=legalizer %s -o - | FileCheck %s

# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=fiji -O0 -run-pass=legalizer -global-isel-abort=2 -pass-remarks-missed='gisel.*' %s -o /dev/null 2>&1 | FileCheck -check-prefix=ERR %s

# ERR: remark: <unknown>:0:0: unable to legalize instruction: %3:_(f32) = G_ATOMICRMW_FADD %0:_(p1), %2:_ :: (load store seq_cst (f32), addrspace 1) (in function: atomicrmw_fadd_global_i32)

---
name: atomicrmw_fadd_global_i32

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $sgpr2
    ; CHECK-LABEL: name: atomicrmw_fadd_global_i32
    ; CHECK: [[COPY:%[0-9]+]]:_(p1) = COPY $sgpr0_sgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $sgpr2
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[ATOMICRMW_FADD:%[0-9]+]]:_(f32) = G_ATOMICRMW_FADD [[COPY]](p1), [[BITCAST]] :: (load store seq_cst (f32), addrspace 1)
    %0:_(p1) = COPY $sgpr0_sgpr1
    %1:_(i32) = COPY $sgpr2
    %2:_(f32) = G_BITCAST %1(i32)
    %3:_(f32) = G_ATOMICRMW_FADD %0(p1), %2 :: (load store seq_cst (f32), addrspace 1)
...
