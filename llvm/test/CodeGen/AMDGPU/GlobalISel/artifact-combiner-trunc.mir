# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=amdgcn-mesa-mesa3d -mcpu=tahiti -run-pass=legalizer %s -o - | FileCheck %s

---
name: trunc_s16_merge_s64_s32

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_s16_merge_s64_s32
    ; CHECK: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $vgpr0 = COPY [[C]](i32)
    %0:_(i32) = G_CONSTANT i32 0
    %1:_(i32) = G_CONSTANT i32 1
    %2:_(i64) = G_MERGE_VALUES %0(i32), %1(i32)
    %3:_(i16) = G_TRUNC %2(i64)
    %4:_(i32) = G_ANYEXT %3(i16)
    $vgpr0 = COPY %4(i32)
...

---
name: trunc_s32_merge_s64_s32

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_s32_merge_s64_s32
    ; CHECK: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $vgpr0 = COPY [[C]](i32)
    %0:_(i32) = G_CONSTANT i32 0
    %1:_(i32) = G_CONSTANT i32 1
    %2:_(i64) = G_MERGE_VALUES %0(i32), %1(i32)
    %3:_(i32) = G_TRUNC %2(i64)
    $vgpr0 = COPY %3(i32)
...

---
name: trunc_s64_merge_s128_s32

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_s64_merge_s128_s32
    ; CHECK: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(i64) = G_MERGE_VALUES [[C]](i32), [[C1]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    %0:_(i32) = G_CONSTANT i32 0
    %1:_(i32) = G_CONSTANT i32 1
    %2:_(i128) = G_MERGE_VALUES %0(i32), %1(i32), %0(i32), %1(i32)
    %3:_(i64) = G_TRUNC %2(i128)
    $vgpr0_vgpr1 = COPY %3(i64)
...

---
name: trunc_s32_merge_s128_p0

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_s32_merge_s128_p0
    ; CHECK: [[C:%[0-9]+]]:_(p0) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(p0) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(i128) = G_MERGE_VALUES [[C]](p0), [[C1]](p0)
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i32) = G_TRUNC [[MV]](i128)
    ; CHECK-NEXT: $vgpr0 = COPY [[TRUNC]](i32)
    %0:_(p0) = G_CONSTANT i64 0
    %1:_(p0) = G_CONSTANT i64 1
    %2:_(i128) = G_MERGE_VALUES %0(p0), %1(p0)
    %3:_(i32) = G_TRUNC %2(i128)
    $vgpr0 = COPY %3(i32)
...

---
name: trunc_s64_merge_s128_p0

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_s64_merge_s128_p0
    ; CHECK: [[C:%[0-9]+]]:_(p0) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(p0) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(i128) = G_MERGE_VALUES [[C]](p0), [[C1]](p0)
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i64) = G_TRUNC [[MV]](i128)
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[TRUNC]](i64)
    %0:_(p0) = G_CONSTANT i64 0
    %1:_(p0) = G_CONSTANT i64 1
    %2:_(i128) = G_MERGE_VALUES %0(p0), %1(p0)
    %3:_(i64) = G_TRUNC %2(i128)
    $vgpr0_vgpr1 = COPY %3(i64)
...

---
name: trunc_s128_merge_s192_p0

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_s128_merge_s192_p0
    ; CHECK: [[C:%[0-9]+]]:_(p0) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(p0) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(i192) = G_MERGE_VALUES [[C]](p0), [[C1]](p0), [[C]](p0)
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i128) = G_TRUNC [[MV]](i192)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[TRUNC]](i128)
    %0:_(p0) = G_CONSTANT i64 0
    %1:_(p0) = G_CONSTANT i64 1
    %2:_(i192) = G_MERGE_VALUES %0(p0), %1(p0), %0(p0)
    %3:_(i128) = G_TRUNC %2(i192)
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %3(i128)
...

---
name: trunc_s68_merge_s128_s32

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_s68_merge_s128_s32
    ; CHECK: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $vgpr0 = COPY [[C]](i32)
    %0:_(i32) = G_CONSTANT i32 0
    %1:_(i32) = G_CONSTANT i32 1
    %2:_(i128) = G_MERGE_VALUES %0(i32), %1(i32), %0(i32), %1(i32)
    %3:_(i68) = G_TRUNC %2(i128)
    %4:_(i32) = G_TRUNC %3(i68)
    $vgpr0 = COPY %4(i32)
...

---
name: trunc_trunc

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_trunc
    ; CHECK: [[DEF:%[0-9]+]]:_(i64) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i32) = G_TRUNC [[DEF]](i64)
    ; CHECK-NEXT: $vgpr0 = COPY [[TRUNC]](i32)
    %0:_(i64) = G_IMPLICIT_DEF
    %1:_(i48) = G_TRUNC %0(i64)
    %2:_(i32) = G_TRUNC %1(i48)
    $vgpr0 = COPY %2(i32)
...

---
name: trunc_sext

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_sext
    ; CHECK: [[DEF:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $vgpr0 = COPY [[DEF]](i32)
    %0:_(i32) = G_IMPLICIT_DEF
    %1:_(i64) = G_SEXT %0(i32)
    %2:_(i32) = G_TRUNC %1(i64)
    $vgpr0 = COPY %2(i32)
...

---
name: trunc_zext

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_zext
    ; CHECK: [[DEF:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $vgpr0 = COPY [[DEF]](i32)
    %0:_(i32) = G_IMPLICIT_DEF
    %1:_(i64) = G_ZEXT %0(i32)
    %2:_(i32) = G_TRUNC %1(i64)
    $vgpr0 = COPY %2(i32)
...

---
name: trunc_anyext

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_anyext
    ; CHECK: [[DEF:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $vgpr0 = COPY [[DEF]](i32)
    %0:_(i32) = G_IMPLICIT_DEF
    %1:_(i64) = G_ANYEXT %0(i32)
    %2:_(i32) = G_TRUNC %1(i64)
    $vgpr0 = COPY %2(i32)
...

---
name: trunc_ext

body: |
  bb.0:
    ; CHECK-LABEL: name: trunc_ext
    ; CHECK: [[DEF:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $vgpr0 = COPY [[DEF]](i32)
    %0:_(i32) = G_IMPLICIT_DEF
    %1:_(i64) = G_SEXT %0(i32)
    %2:_(i32) = G_TRUNC %1(i64)
    %3:_(i128) = G_ZEXT %2(i32)
    %4:_(i64) = G_TRUNC %3(i128)
    %5:_(i32) = G_TRUNC %4(i64)
    $vgpr0 = COPY %5(i32)
...
