# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck %s -check-prefixes=GCN

---

name:            fmul_f32
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0, $vgpr1, $vgpr3_vgpr4
    ; GCN-LABEL: name: fmul_f32
    ; GCN: liveins: $sgpr0, $vgpr0, $vgpr1, $vgpr3_vgpr4
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GCN-NEXT: [[COPY3:%[0-9]+]]:vreg_64 = COPY $vgpr3_vgpr4
    ; GCN-NEXT: [[V_MUL_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 0, [[COPY1]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_1:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_2:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 0, [[COPY1]], 0, [[COPY2]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY3]], [[V_MUL_F32_e64_]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY3]], [[V_MUL_F32_e64_1]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY3]], [[V_MUL_F32_e64_2]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    %0:sgpr(i32) = COPY $sgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:vgpr(i32) = COPY $vgpr1
    %3:vgpr(p1) = COPY $vgpr3_vgpr4
    %4:vgpr(f32) = G_BITCAST %1(i32)
    %5:sgpr(f32) = G_BITCAST %0(i32)
    %6:vgpr(f32) = G_FMUL %4, %5
    %7:sgpr(f32) = G_BITCAST %0(i32)
    %8:vgpr(f32) = G_BITCAST %1(i32)
    %9:vgpr(f32) = G_FMUL %7, %8
    %10:vgpr(f32) = G_BITCAST %1(i32)
    %11:vgpr(f32) = G_BITCAST %2(i32)
    %12:vgpr(f32) = G_FMUL %10, %11
    G_STORE %6(f32), %3(p1) :: (store (f32), addrspace 1)
    G_STORE %9(f32), %3(p1) :: (store (f32), addrspace 1)
    G_STORE %12(f32), %3(p1) :: (store (f32), addrspace 1)




...

---

name:            fmul_f64
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5
    ; GCN-LABEL: name: fmul_f64
    ; GCN: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:vreg_64 = COPY $vgpr2_vgpr3
    ; GCN-NEXT: [[V_MUL_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_MUL_F64_e64 0, [[COPY1]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F64_e64_1:%[0-9]+]]:vreg_64 = nofpexcept V_MUL_F64_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F64_e64_2:%[0-9]+]]:vreg_64 = nofpexcept V_MUL_F64_e64 0, [[COPY1]], 0, [[COPY2]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MUL_F64_e64_]], implicit [[V_MUL_F64_e64_1]], implicit [[V_MUL_F64_e64_2]]
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:vgpr(i64) = COPY $vgpr0_vgpr1
    %2:vgpr(i64) = COPY $vgpr2_vgpr3
    %3:vgpr(p1) = COPY $vgpr4_vgpr5
    %4:vgpr(f64) = G_BITCAST %1(i64)
    %5:sgpr(f64) = G_BITCAST %0(i64)
    %6:vgpr(f64) = G_FMUL %4, %5
    %7:sgpr(f64) = G_BITCAST %0(i64)
    %8:vgpr(f64) = G_BITCAST %1(i64)
    %9:vgpr(f64) = G_FMUL %7, %8
    %10:vgpr(f64) = G_BITCAST %1(i64)
    %11:vgpr(f64) = G_BITCAST %2(i64)
    %12:vgpr(f64) = G_FMUL %10, %11
    %13:vgpr(i64) = G_BITCAST %6(f64)
    %14:vgpr(i64) = G_BITCAST %9(f64)
    %15:vgpr(i64) = G_BITCAST %12(f64)
    S_ENDPGM 0, implicit %13(i64), implicit %14(i64), implicit %15(i64)




...

---

name:            fmul_f16
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0, $vgpr1, $vgpr3_vgpr4
    ; GCN-LABEL: name: fmul_f16
    ; GCN: liveins: $sgpr0, $vgpr0, $vgpr1, $vgpr3_vgpr4
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[V_MUL_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F16_e64 0, [[COPY]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F16_e64_1:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F16_e64 0, [[COPY]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F16_e64_2:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F16_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MUL_F16_e64_]], implicit [[V_MUL_F16_e64_1]], implicit [[V_MUL_F16_e64_2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:vgpr(i32) = COPY $vgpr1
    %3:vgpr(p1) = COPY $vgpr3_vgpr4
    %4:sgpr(i16) = G_TRUNC %0(i32)
    %5:vgpr(i16) = G_TRUNC %1(i32)
    %6:vgpr(i16) = G_TRUNC %2(i32)
    %7:sgpr(f16) = G_BITCAST %4(i16)
    %8:sgpr(f16) = G_BITCAST %4(i16)
    %9:vgpr(f16) = G_FMUL %7, %8
    %10:sgpr(f16) = G_BITCAST %4(i16)
    %11:sgpr(f16) = G_BITCAST %4(i16)
    %12:vgpr(f16) = G_FMUL %10, %11
    %13:sgpr(f16) = G_BITCAST %4(i16)
    %14:vgpr(f16) = G_BITCAST %5(i16)
    %15:vgpr(f16) = G_FMUL %13, %14
    %16:vgpr(i16) = G_BITCAST %9(f16)
    %17:vgpr(i16) = G_BITCAST %12(f16)
    %18:vgpr(i16) = G_BITCAST %15(f16)
    S_ENDPGM 0, implicit %16(i16), implicit %17(i16), implicit %18(i16)





...

---

name:            fmul_modifiers_f32
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2_vgpr3
    ; GCN-LABEL: name: fmul_modifiers_f32
    ; GCN: liveins: $vgpr0, $vgpr1, $vgpr2_vgpr3
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vreg_64 = COPY $vgpr2_vgpr3
    ; GCN-NEXT: [[V_MUL_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 2, [[COPY]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_1:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 0, [[COPY]], 2, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_2:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 2, [[COPY]], 2, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_3:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 1, [[COPY]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_4:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 0, [[COPY]], 1, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_5:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 1, [[COPY]], 1, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_6:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 3, [[COPY]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_7:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 0, [[COPY]], 3, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_8:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 3, [[COPY]], 3, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_9:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 3, [[COPY]], 1, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_1]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_2]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_3]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_4]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_5]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_6]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_7]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_8]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    ; GCN-NEXT: FLAT_STORE_DWORD [[COPY1]], [[V_MUL_F32_e64_9]], 0, 0, implicit $exec, implicit $flat_scr :: (store (f32), addrspace 1)
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(p1) = COPY $vgpr2_vgpr3
    %3:vgpr(f32) = G_BITCAST %0(i32)
    %4:vgpr(f32) = G_FABS %3
    %5:vgpr(f32) = G_BITCAST %0(i32)
    %6:vgpr(f32) = G_FNEG %5
    %7:vgpr(f32) = G_FNEG %4
    %8:vgpr(f32) = G_BITCAST %0(i32)
    %9:vgpr(f32) = G_FMUL %4, %8
    %10:vgpr(f32) = G_BITCAST %0(i32)
    %11:vgpr(f32) = G_FMUL %10, %4
    %12:vgpr(f32) = G_FMUL %4, %4
    %13:vgpr(f32) = G_BITCAST %0(i32)
    %14:vgpr(f32) = G_FMUL %6, %13
    %15:vgpr(f32) = G_BITCAST %0(i32)
    %16:vgpr(f32) = G_FMUL %15, %6
    %17:vgpr(f32) = G_FMUL %6, %6
    %18:vgpr(f32) = G_BITCAST %0(i32)
    %19:vgpr(f32) = G_FMUL %7, %18
    %20:vgpr(f32) = G_BITCAST %0(i32)
    %21:vgpr(f32) = G_FMUL %20, %7
    %22:vgpr(f32) = G_FMUL %7, %7
    %23:vgpr(f32) = G_FMUL %7, %6
    G_STORE %9(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %11(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %12(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %14(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %16(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %17(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %19(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %21(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %22(f32), %2(p1) :: (store (f32), addrspace 1)
    G_STORE %23(f32), %2(p1) :: (store (f32), addrspace 1)
















...

---
name:            fmul_to_ldexp_f32
legalized:       true
regBankSelected: true
body: |
  bb.0:
    liveins: $vgpr0

    ; GCN-LABEL: name: fmul_to_ldexp_f32
    ; GCN: liveins: $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[V_MOV_B32_e32_:%[0-9]+]]:vgpr_32 = V_MOV_B32_e32 1098907648, implicit $exec
    ; GCN-NEXT: [[V_MUL_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_MUL_F32_e64 0, [[COPY]], 0, [[V_MOV_B32_e32_]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: $vgpr0 = COPY [[V_MUL_F32_e64_]]
    ; GCN-NEXT: SI_RETURN implicit $vgpr0
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(f32) = G_FCONSTANT float 1.600000e+01
    %2:vgpr(f32) = G_BITCAST %0(i32)
    %3:vgpr(f32) = G_FMUL %2, %1
    %4:vgpr(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)
    SI_RETURN implicit $vgpr0

...

---
name:            fmul_to_ldexp_f64_0
legalized:       true
regBankSelected: true
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GCN-LABEL: name: fmul_to_ldexp_f64_0
    ; GCN: liveins: $vgpr0_vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 4
    ; GCN-NEXT: [[V_LDEXP_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_LDEXP_F64_e64 0, [[COPY]], 0, [[S_MOV_B32_]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: $vgpr0_vgpr1 = COPY [[V_LDEXP_F64_e64_]]
    ; GCN-NEXT: SI_RETURN implicit $vgpr0_vgpr1
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(f64) = G_FCONSTANT double 1.600000e+01
    %2:vgpr(f64) = G_BITCAST %0(i64)
    %3:vgpr(f64) = G_FMUL %2, %1
    %4:vgpr(i64) = G_BITCAST %3(f64)
    $vgpr0_vgpr1 = COPY %4(i64)
    SI_RETURN implicit $vgpr0_vgpr1

...

---
name:            fmul_to_ldexp_f64_1
legalized:       true
regBankSelected: true
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GCN-LABEL: name: fmul_to_ldexp_f64_1
    ; GCN: liveins: $vgpr0_vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 65
    ; GCN-NEXT: [[V_LDEXP_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_LDEXP_F64_e64 0, [[COPY]], 0, [[S_MOV_B32_]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: $vgpr0_vgpr1 = COPY [[V_LDEXP_F64_e64_]]
    ; GCN-NEXT: SI_RETURN implicit $vgpr0_vgpr1
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(f64) = G_FCONSTANT double 0x4400000000000000
    %2:vgpr(f64) = G_BITCAST %0(i64)
    %3:vgpr(f64) = G_FMUL %2, %1
    %4:vgpr(i64) = G_BITCAST %3(f64)
    $vgpr0_vgpr1 = COPY %4(i64)
    SI_RETURN implicit $vgpr0_vgpr1

...

---
name:            fmul_to_ldexp_f64_2
legalized:       true
regBankSelected: true
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GCN-LABEL: name: fmul_to_ldexp_f64_2
    ; GCN: liveins: $vgpr0_vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 4
    ; GCN-NEXT: [[V_LDEXP_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_LDEXP_F64_e64 1, [[COPY]], 0, [[S_MOV_B32_]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: $vgpr0_vgpr1 = COPY [[V_LDEXP_F64_e64_]]
    ; GCN-NEXT: SI_RETURN implicit $vgpr0_vgpr1
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(f64) = G_FCONSTANT double -1.600000e+01
    %2:vgpr(f64) = G_BITCAST %0(i64)
    %3:vgpr(f64) = G_FMUL %2, %1
    %4:vgpr(i64) = G_BITCAST %3(f64)
    $vgpr0_vgpr1 = COPY %4(i64)
    SI_RETURN implicit $vgpr0_vgpr1

...

---
name:            fmul_to_ldexp_f64_3
legalized:       true
regBankSelected: true
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GCN-LABEL: name: fmul_to_ldexp_f64_3
    ; GCN: liveins: $vgpr0_vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 4
    ; GCN-NEXT: [[V_LDEXP_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_LDEXP_F64_e64 3, [[COPY]], 0, [[S_MOV_B32_]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: $vgpr0_vgpr1 = COPY [[V_LDEXP_F64_e64_]]
    ; GCN-NEXT: SI_RETURN implicit $vgpr0_vgpr1
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(f64) = G_BITCAST %0(i64)
    %2:vgpr(f64) = G_FABS %1
    %3:vgpr(f64) = G_FCONSTANT double -1.600000e+01
    %4:vgpr(f64) = G_FMUL %2, %3
    %5:vgpr(i64) = G_BITCAST %4(f64)
    $vgpr0_vgpr1 = COPY %5(i64)
    SI_RETURN implicit $vgpr0_vgpr1

...

---
name:            fmul_to_ldexp_f64_4
legalized:       true
regBankSelected: true
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GCN-LABEL: name: fmul_to_ldexp_f64_4
    ; GCN: liveins: $vgpr0_vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; GCN-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GCN-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; GCN-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_OR_B32_e64_]], %subreg.sub1
    ; GCN-NEXT: [[S_MOV_B32_1:%[0-9]+]]:sreg_32 = S_MOV_B32 4
    ; GCN-NEXT: [[V_LDEXP_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_LDEXP_F64_e64 1, [[REG_SEQUENCE]], 0, [[S_MOV_B32_1]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: $vgpr0_vgpr1 = COPY [[V_LDEXP_F64_e64_]]
    ; GCN-NEXT: SI_RETURN implicit $vgpr0_vgpr1
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(f64) = G_BITCAST %0(i64)
    %2:vgpr(f64) = G_FABS %1
    %3:vgpr(f64) = G_FNEG %2
    %4:vgpr(f64) = G_FCONSTANT double -1.600000e+01
    %5:vgpr(f64) = G_FMUL %3, %4
    %6:vgpr(i64) = G_BITCAST %5(f64)
    $vgpr0_vgpr1 = COPY %6(i64)
    SI_RETURN implicit $vgpr0_vgpr1

...

---
name:            fmul_to_ldexp_f64_5
legalized:       true
regBankSelected: true
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GCN-LABEL: name: fmul_to_ldexp_f64_5
    ; GCN: liveins: $vgpr0_vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN-NEXT: [[V_MOV_B:%[0-9]+]]:vreg_64 = V_MOV_B64_PSEUDO -4598175219545276416, implicit $exec
    ; GCN-NEXT: [[V_MUL_F64_e64_:%[0-9]+]]:vreg_64 = nofpexcept V_MUL_F64_e64 3, [[COPY]], 1, [[V_MOV_B]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: $vgpr0_vgpr1 = COPY [[V_MUL_F64_e64_]]
    ; GCN-NEXT: SI_RETURN implicit $vgpr0_vgpr1
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(f64) = G_BITCAST %0(i64)
    %2:vgpr(f64) = G_FABS %1
    %3:vgpr(f64) = G_FNEG %2
    %4:vgpr(f64) = G_FCONSTANT double -1.600000e+01
    %5:vgpr(f64) = G_FNEG %4
    %6:vgpr(f64) = G_FMUL %3, %5
    %7:vgpr(i64) = G_BITCAST %6(f64)
    $vgpr0_vgpr1 = COPY %7(i64)
    SI_RETURN implicit $vgpr0_vgpr1

...
