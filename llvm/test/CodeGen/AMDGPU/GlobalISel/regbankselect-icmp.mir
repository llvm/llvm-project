# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=hawaii -run-pass=regbankselect -regbankselect-fast -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX7 %s
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=regbankselect -regbankselect-fast -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX8 %s
# RUN: llc -mtriple=amdgcn -mcpu=hawaii -run-pass=regbankselect -regbankselect-greedy -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX7 %s
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=regbankselect -regbankselect-greedy -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX8 %s

---
name: icmp_eq_s32_ss
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; GFX7-LABEL: name: icmp_eq_s32_ss
    ; GFX7: liveins: $sgpr0, $sgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:sgpr(i32) = G_ICMP intpred(eq), [[COPY]](i32), [[COPY1]]
    ; GFX7-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i1) = G_TRUNC [[ICMP]](i32)
    ;
    ; GFX8-LABEL: name: icmp_eq_s32_ss
    ; GFX8: liveins: $sgpr0, $sgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:sgpr(i32) = G_ICMP intpred(eq), [[COPY]](i32), [[COPY1]]
    ; GFX8-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i1) = G_TRUNC [[ICMP]](i32)
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $sgpr1
    %2:_(i1) = G_ICMP intpred(eq), %0(i32), %1
...

---
name: icmp_eq_s32_sv
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0
    ; GFX7-LABEL: name: icmp_eq_s32_sv
    ; GFX7: liveins: $sgpr0, $vgpr0
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY2]](i32), [[COPY1]]
    ;
    ; GFX8-LABEL: name: icmp_eq_s32_sv
    ; GFX8: liveins: $sgpr0, $vgpr0
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY2]](i32), [[COPY1]]
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $vgpr0
    %2:_(i1) = G_ICMP intpred(eq), %0(i32), %1
...

---
name: icmp_eq_s32_vs
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0
    ; GFX7-LABEL: name: icmp_eq_s32_vs
    ; GFX7: liveins: $sgpr0, $vgpr0
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[COPY2]]
    ;
    ; GFX8-LABEL: name: icmp_eq_s32_vs
    ; GFX8: liveins: $sgpr0, $vgpr0
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[COPY2]]
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $vgpr0
    %2:_(i1) = G_ICMP intpred(eq), %1(i32), %0
...

---
name: icmp_eq_s32_vv
legalized: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX7-LABEL: name: icmp_eq_s32_vv
    ; GFX7: liveins: $vgpr0, $vgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr1
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY]](i32), [[COPY1]]
    ;
    ; GFX8-LABEL: name: icmp_eq_s32_vv
    ; GFX8: liveins: $vgpr0, $vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr1
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY]](i32), [[COPY1]]
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i1) = G_ICMP intpred(eq), %0(i32), %1
...

---
name: icmp_eq_s64_ss
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX7-LABEL: name: icmp_eq_s64_ss
    ; GFX7: liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:sgpr(i64) = COPY $sgpr2_sgpr3
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[COPY3:%[0-9]+]]:vgpr(i64) = COPY [[COPY1]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY2]](i64), [[COPY3]]
    ;
    ; GFX8-LABEL: name: icmp_eq_s64_ss
    ; GFX8: liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:sgpr(i64) = COPY $sgpr2_sgpr3
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:sgpr(i32) = G_ICMP intpred(eq), [[COPY]](i64), [[COPY1]]
    ; GFX8-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i1) = G_TRUNC [[ICMP]](i32)
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $sgpr2_sgpr3
    %2:_(i1) = G_ICMP intpred(eq), %0(i64), %1
...

---
name: icmp_eq_s64_sv
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-LABEL: name: icmp_eq_s64_sv
    ; GFX7: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY2]](i64), [[COPY1]]
    ;
    ; GFX8-LABEL: name: icmp_eq_s64_sv
    ; GFX8: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY2]](i64), [[COPY1]]
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $vgpr0_vgpr1
    %2:_(i1) = G_ICMP intpred(eq), %0(i64), %1
...

---
name: icmp_eq_s64_vs
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-LABEL: name: icmp_eq_s64_vs
    ; GFX7: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i64), [[COPY2]]
    ;
    ; GFX8-LABEL: name: icmp_eq_s64_vs
    ; GFX8: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i64), [[COPY2]]
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $vgpr0_vgpr1
    %2:_(i1) = G_ICMP intpred(eq), %1(i64), %0
...

---
name: icmp_eq_s64_vv
legalized: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX7-LABEL: name: icmp_eq_s64_vv
    ; GFX7: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr2_vgpr3
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY]](i64), [[COPY1]]
    ;
    ; GFX8-LABEL: name: icmp_eq_s64_vv
    ; GFX8: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr2_vgpr3
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY]](i64), [[COPY1]]
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i1) = G_ICMP intpred(eq), %0(i64), %1
...

---
name: icmp_ne_s64_ss
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX7-LABEL: name: icmp_ne_s64_ss
    ; GFX7: liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:sgpr(i64) = COPY $sgpr2_sgpr3
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[COPY3:%[0-9]+]]:vgpr(i64) = COPY [[COPY1]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(ne), [[COPY2]](i64), [[COPY3]]
    ;
    ; GFX8-LABEL: name: icmp_ne_s64_ss
    ; GFX8: liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:sgpr(i64) = COPY $sgpr2_sgpr3
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:sgpr(i32) = G_ICMP intpred(ne), [[COPY]](i64), [[COPY1]]
    ; GFX8-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i1) = G_TRUNC [[ICMP]](i32)
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $sgpr2_sgpr3
    %2:_(i1) = G_ICMP intpred(ne), %0(i64), %1
...

---
name: icmp_ne_s64_sv
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-LABEL: name: icmp_ne_s64_sv
    ; GFX7: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(ne), [[COPY2]](i64), [[COPY1]]
    ;
    ; GFX8-LABEL: name: icmp_ne_s64_sv
    ; GFX8: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(ne), [[COPY2]](i64), [[COPY1]]
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $vgpr0_vgpr1
    %2:_(i1) = G_ICMP intpred(ne), %0(i64), %1
...

---
name: icmp_ne_s64_vs
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-LABEL: name: icmp_ne_s64_vs
    ; GFX7: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(ne), [[COPY1]](i64), [[COPY2]]
    ;
    ; GFX8-LABEL: name: icmp_ne_s64_vs
    ; GFX8: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(ne), [[COPY1]](i64), [[COPY2]]
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $vgpr0_vgpr1
    %2:_(i1) = G_ICMP intpred(ne), %1(i64), %0
...

---
name: icmp_ne_s64_vv
legalized: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX7-LABEL: name: icmp_ne_s64_vv
    ; GFX7: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr2_vgpr3
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(ne), [[COPY]](i64), [[COPY1]]
    ;
    ; GFX8-LABEL: name: icmp_ne_s64_vv
    ; GFX8: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr2_vgpr3
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(ne), [[COPY]](i64), [[COPY1]]
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i1) = G_ICMP intpred(ne), %0(i64), %1
...

---
name: icmp_slt_s64_ss
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX7-LABEL: name: icmp_slt_s64_ss
    ; GFX7: liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:sgpr(i64) = COPY $sgpr2_sgpr3
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[COPY3:%[0-9]+]]:vgpr(i64) = COPY [[COPY1]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(slt), [[COPY2]](i64), [[COPY3]]
    ;
    ; GFX8-LABEL: name: icmp_slt_s64_ss
    ; GFX8: liveins: $sgpr0_sgpr1, $sgpr2_sgpr3
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:sgpr(i64) = COPY $sgpr2_sgpr3
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX8-NEXT: [[COPY3:%[0-9]+]]:vgpr(i64) = COPY [[COPY1]](i64)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(slt), [[COPY2]](i64), [[COPY3]]
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $sgpr2_sgpr3
    %2:_(i1) = G_ICMP intpred(slt), %0(i64), %1
...

---
name: icmp_slt_s64_sv
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-LABEL: name: icmp_slt_s64_sv
    ; GFX7: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(slt), [[COPY2]](i64), [[COPY1]]
    ;
    ; GFX8-LABEL: name: icmp_slt_s64_sv
    ; GFX8: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(slt), [[COPY2]](i64), [[COPY1]]
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $vgpr0_vgpr1
    %2:_(i1) = G_ICMP intpred(slt), %0(i64), %1
...

---
name: icmp_slt_s64_vs
legalized: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-LABEL: name: icmp_slt_s64_vs
    ; GFX7: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(slt), [[COPY1]](i64), [[COPY2]]
    ;
    ; GFX8-LABEL: name: icmp_slt_s64_vs
    ; GFX8: liveins: $sgpr0_sgpr1, $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i64) = COPY [[COPY]](i64)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(slt), [[COPY1]](i64), [[COPY2]]
    %0:_(i64) = COPY $sgpr0_sgpr1
    %1:_(i64) = COPY $vgpr0_vgpr1
    %2:_(i1) = G_ICMP intpred(slt), %1(i64), %0
...

---
name: icmp_slt_s64_vv
legalized: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX7-LABEL: name: icmp_slt_s64_vv
    ; GFX7: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr2_vgpr3
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(slt), [[COPY]](i64), [[COPY1]]
    ;
    ; GFX8-LABEL: name: icmp_slt_s64_vv
    ; GFX8: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr(i64) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr(i64) = COPY $vgpr2_vgpr3
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(slt), [[COPY]](i64), [[COPY1]]
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i1) = G_ICMP intpred(slt), %0(i64), %1
...

# Result is already constrained to be VCC bank, despite scalar inputs.
---
name:            map_icmp_already_vcc_bank_sgpr_inputs
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX7-LABEL: name: map_icmp_already_vcc_bank_sgpr_inputs
    ; GFX7: liveins: $sgpr0, $sgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; GFX7-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[COPY1]](i32)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY2]](i32), [[COPY3]]
    ; GFX7-NEXT: S_ENDPGM 0, implicit [[ICMP]](i1)
    ;
    ; GFX8-LABEL: name: map_icmp_already_vcc_bank_sgpr_inputs
    ; GFX8: liveins: $sgpr0, $sgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; GFX8-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[COPY1]](i32)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY2]](i32), [[COPY3]]
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[ICMP]](i1)
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $sgpr1
    %2:vcc(i1) = G_ICMP intpred(eq), %0(i32), %1
    S_ENDPGM 0, implicit %2(i1)
...

# Result is already con strained to be VCC bank, despite scalar inputs
# and also has a register class.
---
name:            map_icmp_already_vcc_regclass_sgpr_inputs
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX7-LABEL: name: map_icmp_already_vcc_regclass_sgpr_inputs
    ; GFX7: liveins: $sgpr0, $sgpr1
    ; GFX7-NEXT: {{  $}}
    ; GFX7-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX7-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; GFX7-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; GFX7-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[COPY1]](i32)
    ; GFX7-NEXT: [[ICMP:%[0-9]+]]:sreg_64_xexec(i1) = G_ICMP intpred(eq), [[COPY2]](i32), [[COPY3]]
    ; GFX7-NEXT: S_ENDPGM 0, implicit [[ICMP]](i1)
    ;
    ; GFX8-LABEL: name: map_icmp_already_vcc_regclass_sgpr_inputs
    ; GFX8: liveins: $sgpr0, $sgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; GFX8-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; GFX8-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[COPY1]](i32)
    ; GFX8-NEXT: [[ICMP:%[0-9]+]]:sreg_64_xexec(i1) = G_ICMP intpred(eq), [[COPY2]](i32), [[COPY3]]
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[ICMP]](i1)
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $sgpr1
    %2:sreg_64_xexec(i1) = G_ICMP intpred(eq), %0(i32), %1
    S_ENDPGM 0, implicit %2(i1)
...
