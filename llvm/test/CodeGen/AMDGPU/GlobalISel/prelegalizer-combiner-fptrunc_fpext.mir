# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 -run-pass=amdgpu-prelegalizer-combiner -o - %s | FileCheck %s

---
name: fptrunc_fpext_s16_to_s32_to_s16
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: fptrunc_fpext_s16_to_s32_to_s16
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %reg:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: $vgpr0 = COPY %reg(i32)
    %reg:_(i32) = COPY $vgpr0
    %src:_(i16) = G_TRUNC %reg(i32)
    %2:_(f16) = G_BITCAST %src(i16)
    %fpext:_(f32) = G_FPEXT %2(f16)
    %fptrunc:_(f16) = G_FPTRUNC %fpext(f32)
    %5:_(i16) = G_BITCAST %fptrunc(f16)
    %anyext:_(i32) = G_ANYEXT %5(i16)
    $vgpr0 = COPY %anyext(i32)
...

---
name: fptrunc_fpext_s16_to_s64_to_s32
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: fptrunc_fpext_s16_to_s64_to_s32
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %reg:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: %src:_(i16) = G_TRUNC %reg(i32)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f16) = G_BITCAST %src(i16)
    ; CHECK-NEXT: %fpext:_(f64) = G_FPEXT [[BITCAST]](f16)
    ; CHECK-NEXT: %fptrunc:_(f32) = G_FPTRUNC %fpext(f64)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST %fptrunc(f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    %reg:_(i32) = COPY $vgpr0
    %src:_(i16) = G_TRUNC %reg(i32)
    %2:_(f16) = G_BITCAST %src(i16)
    %fpext:_(f64) = G_FPEXT %2(f16)
    %fptrunc:_(f32) = G_FPTRUNC %fpext(f64)
    %5:_(i32) = G_BITCAST %fptrunc(f32)
    $vgpr0 = COPY %5(i32)
...

---
name: fptrunc_fpext_v2s16_to_v2s32_to_v2s16
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: fptrunc_fpext_v2s16_to_v2s32_to_v2s16
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %src:_(<2 x i16>) = COPY $vgpr0
    ; CHECK-NEXT: $vgpr0 = COPY %src(<2 x i16>)
    %src:_(<2 x i16>) = COPY $vgpr0
    %1:_(<2 x f16>) = G_BITCAST %src(<2 x i16>)
    %fpext:_(<2 x f32>) = G_FPEXT %1(<2 x f16>)
    %fptrunc:_(<2 x f16>) = G_FPTRUNC %fpext(<2 x f32>)
    %4:_(<2 x i16>) = G_BITCAST %fptrunc(<2 x f16>)
    $vgpr0 = COPY %4(<2 x i16>)
...

---
name: fptrunc_fpext_v2s16_to_v2s64_to_v2s32
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: fptrunc_fpext_v2s16_to_v2s64_to_v2s32
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %src:_(<2 x i16>) = COPY $vgpr0
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(<2 x f16>) = G_BITCAST %src(<2 x i16>)
    ; CHECK-NEXT: %fpext:_(<2 x f64>) = G_FPEXT [[BITCAST]](<2 x f16>)
    ; CHECK-NEXT: %fptrunc:_(<2 x f32>) = G_FPTRUNC %fpext(<2 x f64>)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(<2 x i32>) = G_BITCAST %fptrunc(<2 x f32>)
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[BITCAST1]](<2 x i32>)
    %src:_(<2 x i16>) = COPY $vgpr0
    %1:_(<2 x f16>) = G_BITCAST %src(<2 x i16>)
    %fpext:_(<2 x f64>) = G_FPEXT %1(<2 x f16>)
    %fptrunc:_(<2 x f32>) = G_FPTRUNC %fpext(<2 x f64>)
    %4:_(<2 x i32>) = G_BITCAST %fptrunc(<2 x f32>)
    $vgpr0_vgpr1 = COPY %4(<2 x i32>)
...
