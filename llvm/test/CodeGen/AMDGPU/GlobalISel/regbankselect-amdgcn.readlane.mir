# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=gfx908 -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-fast | FileCheck %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx908 -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-greedy | FileCheck %s

---
name: readlane_ss
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; CHECK-LABEL: name: readlane_ss
    ; CHECK: liveins: $sgpr0, $sgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; CHECK-NEXT: [[INTRINSIC_CONVERGENT:%[0-9]+]]:sgpr(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), [[COPY2]](i32), [[COPY1]](i32)
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $sgpr1
    %2:_(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), %0(i32), %1(i32)
...

---
name: readlane_vs
legalized: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; CHECK-LABEL: name: readlane_vs
    ; CHECK: liveins: $vgpr0, $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[INTRINSIC_CONVERGENT:%[0-9]+]]:sgpr(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), [[COPY]](i32), [[COPY1]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $sgpr0
    %2:_(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), %0(i32), %1(i32)
...

---
name: readlane_vv
legalized: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; CHECK-LABEL: name: readlane_vv
    ; CHECK: liveins: $vgpr0, $vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[V_READFIRSTLANE_B32_:%[0-9]+]]:sreg_32_xm0(i32) = V_READFIRSTLANE_B32 [[COPY1]](i32), implicit $exec
    ; CHECK-NEXT: [[INTRINSIC_CONVERGENT:%[0-9]+]]:sgpr(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), [[COPY]](i32), [[V_READFIRSTLANE_B32_]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), %0(i32), %1(i32)
...

---
name: readlane_sv
legalized: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; CHECK-LABEL: name: readlane_sv
    ; CHECK: liveins: $vgpr0, $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; CHECK-NEXT: [[V_READFIRSTLANE_B32_:%[0-9]+]]:sreg_32_xm0(i32) = V_READFIRSTLANE_B32 [[COPY1]](i32), implicit $exec
    ; CHECK-NEXT: [[INTRINSIC_CONVERGENT:%[0-9]+]]:sgpr(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), [[COPY2]](i32), [[V_READFIRSTLANE_B32_]](i32)
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $vgpr0
    %2:_(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), %0(i32), %1(i32)
...

---
name: readlane_aa
legalized: true

body: |
  bb.0:
    liveins: $agpr0, $agpr1
    ; CHECK-LABEL: name: readlane_aa
    ; CHECK: liveins: $agpr0, $agpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:agpr(i32) = COPY $agpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:agpr(i32) = COPY $agpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:vgpr_32(i32) = COPY [[COPY1]](i32)
    ; CHECK-NEXT: [[V_READFIRSTLANE_B32_:%[0-9]+]]:sreg_32_xm0(i32) = V_READFIRSTLANE_B32 [[COPY3]](i32), implicit $exec
    ; CHECK-NEXT: [[INTRINSIC_CONVERGENT:%[0-9]+]]:sgpr(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), [[COPY2]](i32), [[V_READFIRSTLANE_B32_]](i32)
    ; CHECK-NEXT: S_ENDPGM 0, implicit [[INTRINSIC_CONVERGENT]](i32)
    %0:_(i32) = COPY $agpr0
    %1:_(i32) = COPY $agpr1
    %2:_(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), %0(i32), %1(i32)
    S_ENDPGM 0, implicit %2(i32)
...

---
name: readlane_as
legalized: true

body: |
  bb.0:
    liveins: $agpr0, $sgpr0
    ; CHECK-LABEL: name: readlane_as
    ; CHECK: liveins: $agpr0, $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:agpr(i32) = COPY $agpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; CHECK-NEXT: [[INTRINSIC_CONVERGENT:%[0-9]+]]:sgpr(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), [[COPY2]](i32), [[COPY1]](i32)
    %0:_(i32) = COPY $agpr0
    %1:_(i32) = COPY $sgpr0
    %2:_(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), %0(i32), %1(i32)
...

---
name: readlane_sa
legalized: true

body: |
  bb.0:
    liveins: $agpr0, $sgpr0
    ; CHECK-LABEL: name: readlane_sa
    ; CHECK: liveins: $agpr0, $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:agpr(i32) = COPY $agpr0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[COPY]](i32)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:vgpr_32(i32) = COPY [[COPY1]](i32)
    ; CHECK-NEXT: [[V_READFIRSTLANE_B32_:%[0-9]+]]:sreg_32_xm0(i32) = V_READFIRSTLANE_B32 [[COPY3]](i32), implicit $exec
    ; CHECK-NEXT: [[INTRINSIC_CONVERGENT:%[0-9]+]]:sgpr(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), [[COPY2]](i32), [[V_READFIRSTLANE_B32_]](i32)
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $agpr0
    %2:_(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), %0(i32), %1(i32)
...

---
name: readlane_va
legalized: true

body: |
  bb.0:
    liveins: $vgpr0, $agpr0
    ; CHECK-LABEL: name: readlane_va
    ; CHECK: liveins: $vgpr0, $agpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:agpr(i32) = COPY $agpr0
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[COPY1]](i32)
    ; CHECK-NEXT: [[V_READFIRSTLANE_B32_:%[0-9]+]]:sreg_32_xm0(i32) = V_READFIRSTLANE_B32 [[COPY2]](i32), implicit $exec
    ; CHECK-NEXT: [[INTRINSIC_CONVERGENT:%[0-9]+]]:sgpr(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), [[COPY]](i32), [[V_READFIRSTLANE_B32_]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $agpr0
    %2:_(i32) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.amdgcn.readlane), %0(i32), %1(i32)
...
