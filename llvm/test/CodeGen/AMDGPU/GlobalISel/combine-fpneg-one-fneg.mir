# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass=amdgpu-postlegalizer-combiner -verify-machineinstrs %s -o - | FileCheck %s --check-prefixes=CHECK

---
name:            test_neg_one_f16_sgpr
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $sgpr0

    ; CHECK-LABEL: name: test_neg_one_f16_sgpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; CHECK-NEXT: %x:_(i16) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f16) = G_BITCAST %x(i16)
    ; CHECK-NEXT: %d:_(f16) = G_FNEG [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i16) = G_BITCAST %d(f16)
    ; CHECK-NEXT: %ext:_(i32) = G_ANYEXT [[BITCAST1]](i16)
    ; CHECK-NEXT: $sgpr0 = COPY %ext(i32)
    %0:_(i32) = COPY $sgpr0
    %x:_(i16) = G_TRUNC %0(i32)
    %y:_(f16) = G_FCONSTANT half 0xHBC00
    %3:_(f16) = G_BITCAST %x(i16)
    %d:_(f16) = G_FMUL %3, %y
    %5:_(i16) = G_BITCAST %d(f16)
    %ext:_(i32) = G_ANYEXT %5(i16)
    $sgpr0 = COPY %ext(i32)

...

---
name:            test_neg_one_f32_sgpr
body:             |
  bb.0:
    liveins: $sgpr0

    ; CHECK-LABEL: name: test_neg_one_f32_sgpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[FNEG:%[0-9]+]]:_(f32) = G_FNEG [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[FNEG]](f32)
    ; CHECK-NEXT: $sgpr0 = COPY [[BITCAST1]](i32)
    %0:_(i32) = COPY $sgpr0
    %1:_(f32) = G_FCONSTANT float -1.000000e+00
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FMUL %2, %1
    %4:_(i32) = G_BITCAST %3(f32)
    $sgpr0 = COPY %4(i32)

...

---
name:            test_neg_one_f64_sgpr
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $sgpr0

    ; CHECK-LABEL: name: test_neg_one_f64_sgpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; CHECK-NEXT: %x:_(i64) = G_ANYEXT [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f64) = G_BITCAST %x(i64)
    ; CHECK-NEXT: %d:_(f64) = G_FNEG [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i64) = G_BITCAST %d(f64)
    ; CHECK-NEXT: %ext:_(i32) = G_TRUNC [[BITCAST1]](i64)
    ; CHECK-NEXT: $sgpr0 = COPY %ext(i32)
    %0:_(i32) = COPY $sgpr0
    %x:_(i64) = G_ANYEXT %0(i32)
    %y:_(f64) = G_FCONSTANT double -1.000000e+00
    %3:_(f64) = G_BITCAST %x(i64)
    %d:_(f64) = G_FMUL %3, %y
    %5:_(i64) = G_BITCAST %d(f64)
    %ext:_(i32) = G_TRUNC %5(i64)
    $sgpr0 = COPY %ext(i32)

...

---
name:            test_neg_ten_f32_sgpr
body:             |
  bb.0:
    liveins: $sgpr0

    ; CHECK-LABEL: name: test_neg_ten_f32_sgpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(f32) = G_FCONSTANT float -1.000000e+01
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[FMUL:%[0-9]+]]:_(f32) = G_FMUL [[BITCAST]], [[C]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[FMUL]](f32)
    ; CHECK-NEXT: $sgpr0 = COPY [[BITCAST1]](i32)
    %0:_(i32) = COPY $sgpr0
    %1:_(f32) = G_FCONSTANT float -1.000000e+01
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FMUL %2, %1
    %4:_(i32) = G_BITCAST %3(f32)
    $sgpr0 = COPY %4(i32)

...

---
name:            test_neg_fract_f32_sgpr
body:             |
  bb.0:
    liveins: $sgpr0

    ; CHECK-LABEL: name: test_neg_fract_f32_sgpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(f32) = G_FCONSTANT float -5.000000e-01
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[FMUL:%[0-9]+]]:_(f32) = G_FMUL [[BITCAST]], [[C]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[FMUL]](f32)
    ; CHECK-NEXT: $sgpr0 = COPY [[BITCAST1]](i32)
    %0:_(i32) = COPY $sgpr0
    %1:_(f32) = G_FCONSTANT float -5.000000e-01
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FMUL %2, %1
    %4:_(i32) = G_BITCAST %3(f32)
    $sgpr0 = COPY %4(i32)

...

---
name:            test_neg_one_f16_vgpr
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_neg_one_f16_vgpr
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: %x:_(i16) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f16) = G_BITCAST %x(i16)
    ; CHECK-NEXT: %d:_(f16) = G_FNEG [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i16) = G_BITCAST %d(f16)
    ; CHECK-NEXT: %ext:_(i32) = G_ANYEXT [[BITCAST1]](i16)
    ; CHECK-NEXT: $vgpr0 = COPY %ext(i32)
    %0:_(i32) = COPY $vgpr0
    %x:_(i16) = G_TRUNC %0(i32)
    %y:_(f16) = G_FCONSTANT half 0xHBC00
    %3:_(f16) = G_BITCAST %x(i16)
    %d:_(f16) = G_FMUL %3, %y
    %5:_(i16) = G_BITCAST %d(f16)
    %ext:_(i32) = G_ANYEXT %5(i16)
    $vgpr0 = COPY %ext(i32)

...

---
name:            test_neg_one_f32_vgpr
body:             |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_neg_one_f32_vgpr
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[FNEG:%[0-9]+]]:_(f32) = G_FNEG [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[FNEG]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(f32) = G_FCONSTANT float -1.000000e+00
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FMUL %2, %1
    %4:_(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)

...

---
name:            test_neg_one_f64_vgpr
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_neg_one_f64_vgpr
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: %x:_(i64) = G_ANYEXT [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f64) = G_BITCAST %x(i64)
    ; CHECK-NEXT: %d:_(f64) = G_FNEG [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i64) = G_BITCAST %d(f64)
    ; CHECK-NEXT: %ext:_(i32) = G_TRUNC [[BITCAST1]](i64)
    ; CHECK-NEXT: $vgpr0 = COPY %ext(i32)
    %0:_(i32) = COPY $vgpr0
    %x:_(i64) = G_ANYEXT %0(i32)
    %y:_(f64) = G_FCONSTANT double -1.000000e+00
    %3:_(f64) = G_BITCAST %x(i64)
    %d:_(f64) = G_FMUL %3, %y
    %5:_(i64) = G_BITCAST %d(f64)
    %ext:_(i32) = G_TRUNC %5(i64)
    $vgpr0 = COPY %ext(i32)

...

---
name:            test_neg_ten_f32_vgpr
body:             |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_neg_ten_f32_vgpr
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(f32) = G_FCONSTANT float -1.000000e+01
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[FMUL:%[0-9]+]]:_(f32) = G_FMUL [[BITCAST]], [[C]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[FMUL]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(f32) = G_FCONSTANT float -1.000000e+01
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FMUL %2, %1
    %4:_(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)

...

---
name:            test_neg_fract_f32_vgpr
body:             |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_neg_fract_f32_vgpr
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(f32) = G_FCONSTANT float -5.000000e-01
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[FMUL:%[0-9]+]]:_(f32) = G_FMUL [[BITCAST]], [[C]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[FMUL]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(f32) = G_FCONSTANT float -5.000000e-01
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FMUL %2, %1
    %4:_(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)

...
