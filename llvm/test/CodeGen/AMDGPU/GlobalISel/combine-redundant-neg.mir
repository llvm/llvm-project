# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -run-pass=amdgpu-prelegalizer-combiner -verify-machineinstrs %s -o - | FileCheck %s

---
name:            test_add_rhs
body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1

    ; CHECK-LABEL: name: test_add_rhs
    ; CHECK: liveins: $vgpr0, $vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[FSUB:%[0-9]+]]:_(f32) = G_FSUB [[BITCAST1]], [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(i32) = G_BITCAST [[FSUB]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST2]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(f32) = G_BITCAST %1(i32)
    %3:_(f32) = G_FNEG %2
    %4:_(f32) = G_BITCAST %0(i32)
    %5:_(f32) = G_FADD %4, %3
    %6:_(i32) = G_BITCAST %5(f32)
    $vgpr0 = COPY %6(i32)

...
---
name:            test_add_lhs
body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1

    ; CHECK-LABEL: name: test_add_lhs
    ; CHECK: liveins: $vgpr0, $vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[FSUB:%[0-9]+]]:_(f32) = G_FSUB [[BITCAST1]], [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(i32) = G_BITCAST [[FSUB]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST2]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FNEG %2
    %4:_(f32) = G_BITCAST %1(i32)
    %5:_(f32) = G_FADD %3, %4
    %6:_(i32) = G_BITCAST %5(f32)
    $vgpr0 = COPY %6(i32)

...
---
name:            test_sub
body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1

    ; CHECK-LABEL: name: test_sub
    ; CHECK: liveins: $vgpr0, $vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[FADD:%[0-9]+]]:_(f32) = G_FADD [[BITCAST1]], [[BITCAST]]
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(i32) = G_BITCAST [[FADD]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST2]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(f32) = G_BITCAST %1(i32)
    %3:_(f32) = G_FNEG %2
    %4:_(f32) = G_BITCAST %0(i32)
    %5:_(f32) = G_FSUB %4, %3
    %6:_(i32) = G_BITCAST %5(f32)
    $vgpr0 = COPY %6(i32)

...
---
name:            test_mul
body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1

    ; CHECK-LABEL: name: test_mul
    ; CHECK: liveins: $vgpr0, $vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[FMUL:%[0-9]+]]:_(f32) = G_FMUL [[BITCAST]], [[BITCAST1]]
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(i32) = G_BITCAST [[FMUL]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST2]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FNEG %2
    %4:_(f32) = G_BITCAST %1(i32)
    %5:_(f32) = G_FNEG %4
    %6:_(f32) = G_FMUL %3, %5
    %7:_(i32) = G_BITCAST %6(f32)
    $vgpr0 = COPY %7(i32)

...
---
name:            test_div
body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1

    ; CHECK-LABEL: name: test_div
    ; CHECK: liveins: $vgpr0, $vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[FDIV:%[0-9]+]]:_(f32) = G_FDIV [[BITCAST]], [[BITCAST1]]
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(i32) = G_BITCAST [[FDIV]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST2]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_FNEG %2
    %4:_(f32) = G_BITCAST %1(i32)
    %5:_(f32) = G_FNEG %4
    %6:_(f32) = G_FDIV %3, %5
    %7:_(i32) = G_BITCAST %6(f32)
    $vgpr0 = COPY %7(i32)

...
---
name:            test_fmad
body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2

    ; CHECK-LABEL: name: test_fmad
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(f32) = G_BITCAST [[COPY2]](i32)
    ; CHECK-NEXT: [[FMAD:%[0-9]+]]:_(f32) = G_FMAD [[BITCAST]], [[BITCAST1]], [[BITCAST2]]
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:_(i32) = G_BITCAST [[FMAD]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST3]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(f32) = G_BITCAST %0(i32)
    %4:_(f32) = G_FNEG %3
    %5:_(f32) = G_BITCAST %1(i32)
    %6:_(f32) = G_FNEG %5
    %7:_(f32) = G_BITCAST %2(i32)
    %8:_(f32) = G_FMAD %4, %6, %7
    %9:_(i32) = G_BITCAST %8(f32)
    $vgpr0 = COPY %9(i32)

...
---
name:            test_fma
body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2

    ; CHECK-LABEL: name: test_fma
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(f32) = G_BITCAST [[COPY2]](i32)
    ; CHECK-NEXT: [[FMA:%[0-9]+]]:_(f32) = G_FMA [[BITCAST]], [[BITCAST1]], [[BITCAST2]]
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:_(i32) = G_BITCAST [[FMA]](f32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST3]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(f32) = G_BITCAST %0(i32)
    %4:_(f32) = G_FNEG %3
    %5:_(f32) = G_BITCAST %1(i32)
    %6:_(f32) = G_FNEG %5
    %7:_(f32) = G_BITCAST %2(i32)
    %8:_(f32) = G_FMA %4, %6, %7
    %9:_(i32) = G_BITCAST %8(f32)
    $vgpr0 = COPY %9(i32)

...
