# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -run-pass=amdgpu-postlegalizer-combiner -verify-machineinstrs %s -o - | FileCheck -check-prefix=GCN %s

---
name:            select_from_different_results_of_unmerge_values
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; GCN-LABEL: name: select_from_different_results_of_unmerge_values
    ; GCN: liveins: $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[DEF:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; GCN-NEXT: $vgpr0 = COPY [[DEF]](i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG $vgpr0
    %0:_(<2 x i32>) = G_IMPLICIT_DEF
    %1:_(i32) = COPY $vgpr0
    %2:_(i1) = G_TRUNC %1(i32)
    %3:_(i32), %4:_(i32) = G_UNMERGE_VALUES %0(<2 x i32>)
    %5:_(i32) = G_SELECT %2(i1), %3, %4
    $vgpr0 = COPY %5(i32)
    SI_RETURN_TO_EPILOG $vgpr0

...

---
name:            select_from_same_results_of_unmerge_values
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; GCN-LABEL: name: select_from_same_results_of_unmerge_values
    ; GCN: liveins: $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[DEF:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; GCN-NEXT: $vgpr0 = COPY [[DEF]](i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG $vgpr0
    %0:_(<2 x i32>) = G_IMPLICIT_DEF
    %1:_(i32) = COPY $vgpr0
    %2:_(i1) = G_TRUNC %1(i32)
    %3:_(i32), %4:_(i32) = G_UNMERGE_VALUES %0(<2 x i32>)
    %5:_(i32) = G_SELECT %2(i1), %3, %3
    $vgpr0 = COPY %5(i32)
    SI_RETURN_TO_EPILOG $vgpr0

...

---
name: select_different_result_from_different_unmerge_values_with_the_same_source
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3, $vgpr4

    ; GCN-LABEL: name: select_different_result_from_different_unmerge_values_with_the_same_source
    ; GCN: liveins: $vgpr0_vgpr1_vgpr2_vgpr3, $vgpr4
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(<4 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; GCN-NEXT: [[TRUNC:%[0-9]+]]:_(i1) = G_TRUNC [[COPY1]](i32)
    ; GCN-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32), [[UV3:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<4 x i32>)
    ; GCN-NEXT: [[UV4:%[0-9]+]]:_(i32), [[UV5:%[0-9]+]]:_(i32), [[UV6:%[0-9]+]]:_(i32), [[UV7:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<4 x i32>)
    ; GCN-NEXT: [[SELECT:%[0-9]+]]:_(i32) = G_SELECT [[TRUNC]](i1), [[UV1]], [[UV7]]
    ; GCN-NEXT: $vgpr0 = COPY [[SELECT]](i32)
    %0:_(<4 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(i32) = COPY $vgpr4
    %2:_(i1) = G_TRUNC %1(i32)
    %3:_(i32), %4:_(i32), %5:_(i32), %6:_(i32) = G_UNMERGE_VALUES %0(<4 x i32>)
    %7:_(i32), %8:_(i32), %9:_(i32), %10:_(i32) = G_UNMERGE_VALUES %0(<4 x i32>)
    %11:_(i32) = G_SELECT %2(i1), %4, %10
    $vgpr0 = COPY %11(i32)
...

---
name: select_same_result_from_different_unmerge_values_with_the_same_source
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3, $vgpr4

    ; GCN-LABEL: name: select_same_result_from_different_unmerge_values_with_the_same_source
    ; GCN: liveins: $vgpr0_vgpr1_vgpr2_vgpr3, $vgpr4
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(<4 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; GCN-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32), [[UV3:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<4 x i32>)
    ; GCN-NEXT: $vgpr0 = COPY [[UV1]](i32)
    %0:_(<4 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(i32) = COPY $vgpr4
    %2:_(i1) = G_TRUNC %1(i32)
    %3:_(i32), %4:_(i32), %5:_(i32), %6:_(i32) = G_UNMERGE_VALUES %0(<4 x i32>)
    %7:_(i32), %8:_(i32), %9:_(i32), %10:_(i32) = G_UNMERGE_VALUES %0(<4 x i32>)
    %11:_(i32) = G_SELECT %2(i1), %4, %8
    $vgpr0 = COPY %11(i32)
...
