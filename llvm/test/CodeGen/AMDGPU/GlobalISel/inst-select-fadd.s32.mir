# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=tahiti -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX6 %s

---

name:            fadd_s32_vvv
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX6-LABEL: name: fadd_s32_vvv
    ; GFX6: liveins: $vgpr0, $vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(f32) = G_BITCAST %0(i32)
    %3:vgpr(f32) = G_BITCAST %1(i32)
    %4:vgpr(f32) = G_FADD %2, %3
    %5:vgpr(i32) = G_BITCAST %4(f32)
    S_ENDPGM 0, implicit %5(i32)

...

---

name:            fadd_s32_vsv
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; GFX6-LABEL: name: fadd_s32_vsv
    ; GFX6: liveins: $vgpr0, $sgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:vgpr(f32) = G_BITCAST %1(i32)
    %4:vgpr(f32) = G_FADD %2, %3
    %5:vgpr(i32) = G_BITCAST %4(f32)
    S_ENDPGM 0, implicit %5(i32)

...

---

name:            fadd_s32_vvs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; GFX6-LABEL: name: fadd_s32_vvs
    ; GFX6: liveins: $vgpr0, $sgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:sgpr(i32) = COPY $sgpr0
    %2:vgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:vgpr(f32) = G_FADD %2, %3
    %5:vgpr(i32) = G_BITCAST %4(f32)
    S_ENDPGM 0, implicit %5(i32)

...

---

name:            fadd_s32_vvv_fabs_lhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX6-LABEL: name: fadd_s32_vvv_fabs_lhs
    ; GFX6: liveins: $vgpr0, $vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 2, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(f32) = G_BITCAST %0(i32)
    %3:vgpr(f32) = G_FABS %2
    %4:vgpr(f32) = G_BITCAST %1(i32)
    %5:vgpr(f32) = G_FADD %3, %4
    %6:vgpr(i32) = G_BITCAST %5(f32)
    S_ENDPGM 0, implicit %6(i32)

...

---

name:            fadd_s32_vvv_fabs_rhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX6-LABEL: name: fadd_s32_vvv_fabs_rhs
    ; GFX6: liveins: $vgpr0, $vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY]], 2, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(f32) = G_BITCAST %1(i32)
    %3:vgpr(f32) = G_FABS %2
    %4:vgpr(f32) = G_BITCAST %1(i32)
    %5:vgpr(f32) = G_FADD %4, %3
    %6:vgpr(i32) = G_BITCAST %5(f32)
    S_ENDPGM 0, implicit %6(i32)

...

---

name:            fadd_s32_vvv_fneg_fabs_lhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX6-LABEL: name: fadd_s32_vvv_fneg_fabs_lhs
    ; GFX6: liveins: $vgpr0, $vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 3, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(f32) = G_BITCAST %0(i32)
    %3:vgpr(f32) = G_FABS %2
    %4:vgpr(f32) = G_FNEG %3
    %5:vgpr(f32) = G_BITCAST %1(i32)
    %6:vgpr(f32) = G_FADD %4, %5
    %7:vgpr(i32) = G_BITCAST %6(f32)
    S_ENDPGM 0, implicit %7(i32)

...

---

name:            fadd_s32_vvv_fneg_fabs_rhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX6-LABEL: name: fadd_s32_vvv_fneg_fabs_rhs
    ; GFX6: liveins: $vgpr0, $vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY]], 3, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(f32) = G_BITCAST %1(i32)
    %3:vgpr(f32) = G_FABS %2
    %4:vgpr(f32) = G_FNEG %3
    %5:vgpr(f32) = G_BITCAST %1(i32)
    %6:vgpr(f32) = G_FADD %5, %4
    %7:vgpr(i32) = G_BITCAST %6(f32)
    S_ENDPGM 0, implicit %7(i32)

...

# Need to look through reg bank copy to find source modifiers
---

name:            fadd_s32_fneg_copy_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; GFX6-LABEL: name: fadd_s32_fneg_copy_sgpr
    ; GFX6: liveins: $vgpr0, $sgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[S_XOR_B32_]]
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY]], 0, [[COPY2]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:sgpr(i32) = COPY $sgpr0
    %2:sgpr(f32) = G_BITCAST %1(i32)
    %3:sgpr(f32) = G_FNEG %2
    %4:sgpr(i32) = G_BITCAST %3(f32)
    %5:vgpr(i32) = COPY %4(i32)
    %6:vgpr(f32) = G_BITCAST %0(i32)
    %7:vgpr(f32) = G_BITCAST %5(i32)
    %8:vgpr(f32) = G_FADD %6, %7
    %9:vgpr(i32) = G_BITCAST %8(f32)
    S_ENDPGM 0, implicit %9(i32)

...

# Need to look through copy in between fneg and fabs

---

name:            fadd_s32_copy_fneg_copy_fabs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; GFX6-LABEL: name: fadd_s32_copy_fneg_copy_fabs
    ; GFX6: liveins: $vgpr0, $sgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483647
    ; GFX6-NEXT: [[S_AND_B32_:%[0-9]+]]:sreg_32 = S_AND_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[S_MOV_B32_1:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[S_AND_B32_]], [[S_MOV_B32_1]], implicit-def dead $scc
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY]], 0, [[S_XOR_B32_]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:sgpr(i32) = COPY $sgpr0
    %2:sgpr(f32) = G_BITCAST %1(i32)
    %3:sgpr(f32) = G_FABS %2
    %4:sgpr(i32) = G_BITCAST %3(f32)
    %5:sgpr(i32) = COPY %4(i32)
    %6:sgpr(f32) = G_BITCAST %5(i32)
    %7:sgpr(f32) = G_FNEG %6
    %8:sgpr(i32) = G_BITCAST %7(f32)
    %9:sgpr(i32) = COPY %8(i32)
    %10:vgpr(f32) = G_BITCAST %0(i32)
    %11:sgpr(f32) = G_BITCAST %9(i32)
    %12:vgpr(f32) = G_FADD %10, %11
    %13:vgpr(i32) = G_BITCAST %12(f32)
    S_ENDPGM 0, implicit %13(i32)

...

# The source modifier lookup searches through SGPR->VGPR copies. Make
# sure we don't violate the constant bus restriction when we look at
# the source.

---

name:            fadd_s32_copy_fabs_sgpr_copy_fabs_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; GFX6-LABEL: name: fadd_s32_copy_fabs_sgpr_copy_fabs_sgpr
    ; GFX6: liveins: $sgpr0, $sgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483647
    ; GFX6-NEXT: [[S_AND_B32_:%[0-9]+]]:sreg_32 = S_AND_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[S_MOV_B32_1:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483647
    ; GFX6-NEXT: [[S_AND_B32_1:%[0-9]+]]:sreg_32 = S_AND_B32 [[COPY1]], [[S_MOV_B32_1]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[S_AND_B32_]]
    ; GFX6-NEXT: [[COPY3:%[0-9]+]]:vgpr_32 = COPY [[S_AND_B32_1]]
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY2]], 0, [[COPY3]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_FABS %2
    %4:sgpr(f32) = G_BITCAST %1(i32)
    %5:sgpr(f32) = G_FABS %4
    %6:sgpr(i32) = G_BITCAST %3(f32)
    %7:vgpr(i32) = COPY %6(i32)
    %8:sgpr(i32) = G_BITCAST %5(f32)
    %9:vgpr(i32) = COPY %8(i32)
    %10:vgpr(f32) = G_BITCAST %7(i32)
    %11:vgpr(f32) = G_BITCAST %9(i32)
    %12:vgpr(f32) = G_FADD %10, %11
    %13:vgpr(i32) = G_BITCAST %12(f32)
    S_ENDPGM 0, implicit %13(i32)

...

---

name:            fadd_s32_copy_fneg_sgpr_copy_fneg_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; GFX6-LABEL: name: fadd_s32_copy_fneg_sgpr_copy_fneg_sgpr
    ; GFX6: liveins: $sgpr0, $sgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[S_MOV_B32_1:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[S_XOR_B32_1:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY1]], [[S_MOV_B32_1]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[S_XOR_B32_]]
    ; GFX6-NEXT: [[COPY3:%[0-9]+]]:vgpr_32 = COPY [[S_XOR_B32_1]]
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY2]], 0, [[COPY3]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_FNEG %2
    %4:sgpr(f32) = G_BITCAST %1(i32)
    %5:sgpr(f32) = G_FNEG %4
    %6:sgpr(i32) = G_BITCAST %3(f32)
    %7:vgpr(i32) = COPY %6(i32)
    %8:sgpr(i32) = G_BITCAST %5(f32)
    %9:vgpr(i32) = COPY %8(i32)
    %10:vgpr(f32) = G_BITCAST %7(i32)
    %11:vgpr(f32) = G_BITCAST %9(i32)
    %12:vgpr(f32) = G_FADD %10, %11
    %13:vgpr(i32) = G_BITCAST %12(f32)
    S_ENDPGM 0, implicit %13(i32)

...

---

name:            fadd_s32_copy_fneg_fabs_sgpr_copy_fneg_fabs_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; GFX6-LABEL: name: fadd_s32_copy_fneg_fabs_sgpr_copy_fneg_fabs_sgpr
    ; GFX6: liveins: $sgpr0, $sgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX6-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX6-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX6-NEXT: [[S_MOV_B32_1:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX6-NEXT: [[S_OR_B32_1:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY1]], [[S_MOV_B32_1]], implicit-def dead $scc
    ; GFX6-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[S_OR_B32_]]
    ; GFX6-NEXT: [[COPY3:%[0-9]+]]:vgpr_32 = COPY [[S_OR_B32_1]]
    ; GFX6-NEXT: [[V_ADD_F32_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F32_e64 0, [[COPY2]], 0, [[COPY3]], 0, 0, implicit $mode, implicit $exec
    ; GFX6-NEXT: S_ENDPGM 0, implicit [[V_ADD_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_FABS %2
    %4:sgpr(f32) = G_BITCAST %1(i32)
    %5:sgpr(f32) = G_FABS %4
    %6:sgpr(f32) = G_FNEG %3
    %7:sgpr(f32) = G_FNEG %5
    %8:sgpr(i32) = G_BITCAST %6(f32)
    %9:vgpr(i32) = COPY %8(i32)
    %10:sgpr(i32) = G_BITCAST %7(f32)
    %11:vgpr(i32) = COPY %10(i32)
    %12:vgpr(f32) = G_BITCAST %9(i32)
    %13:vgpr(f32) = G_BITCAST %11(i32)
    %14:vgpr(f32) = G_FADD %12, %13
    %15:vgpr(i32) = G_BITCAST %14(f32)
    S_ENDPGM 0, implicit %15(i32)

...
