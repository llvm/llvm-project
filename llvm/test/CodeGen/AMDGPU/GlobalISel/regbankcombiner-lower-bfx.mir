# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1010 -run-pass=amdgpu-regbank-combiner -verify-machineinstrs %s -o - | FileCheck %s

---
name: test_s_bfe_i32__constants
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.1:
    liveins: $sgpr0

    ; CHECK-LABEL: name: test_s_bfe_i32__constants
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %reg:sreg_32(s32) = COPY $sgpr0
    ; CHECK-NEXT: %width:sgpr(s32) = G_CONSTANT i32 5
    ; CHECK-NEXT: %offset:sgpr(s32) = G_CONSTANT i32 7
    ; CHECK-NEXT: [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:sgpr(s32) = G_SHL %width, [[C]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:sreg_32(s32) = G_OR %offset, [[SHL]]
    ; CHECK-NEXT: %bfx:sreg_32(s32) = S_BFE_I32 %reg(s32), [[OR]](s32), implicit-def $scc
    ; CHECK-NEXT: $sgpr0 = COPY %bfx(s32)
    %reg:sgpr(s32) = COPY $sgpr0
    %width:sgpr(s32) = G_CONSTANT i32 5
    %offset:sgpr(s32) = G_CONSTANT i32 7
    %bfx:sgpr(s32) = G_SBFX %reg, %offset, %width
    $sgpr0 = COPY %bfx
...
---
name: test_s_bfe_u32__constants
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.1:
    liveins: $sgpr0

    ; CHECK-LABEL: name: test_s_bfe_u32__constants
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %reg:sreg_32(s32) = COPY $sgpr0
    ; CHECK-NEXT: %width:sgpr(s32) = G_CONSTANT i32 5
    ; CHECK-NEXT: %offset:sgpr(s32) = G_CONSTANT i32 7
    ; CHECK-NEXT: [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:sgpr(s32) = G_SHL %width, [[C]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:sreg_32(s32) = G_OR %offset, [[SHL]]
    ; CHECK-NEXT: %bfx:sreg_32(s32) = S_BFE_U32 %reg(s32), [[OR]](s32), implicit-def $scc
    ; CHECK-NEXT: $sgpr0 = COPY %bfx(s32)
    %reg:sgpr(s32) = COPY $sgpr0
    %width:sgpr(s32) = G_CONSTANT i32 5
    %offset:sgpr(s32) = G_CONSTANT i32 7
    %bfx:sgpr(s32) = G_UBFX %reg, %offset, %width
    $sgpr0 = COPY %bfx
...
---
name: test_s_bfe_i64__constants
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.1:
    liveins: $sgpr0_sgpr1

    ; CHECK-LABEL: name: test_s_bfe_i64__constants
    ; CHECK: liveins: $sgpr0_sgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %reg:sreg_64(s64) = COPY $sgpr0_sgpr1
    ; CHECK-NEXT: %width:sgpr(s32) = G_CONSTANT i32 5
    ; CHECK-NEXT: %offset:sgpr(s32) = G_CONSTANT i32 7
    ; CHECK-NEXT: [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:sgpr(s32) = G_SHL %width, [[C]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:sreg_32(s32) = G_OR %offset, [[SHL]]
    ; CHECK-NEXT: %bfx:sreg_64(s64) = S_BFE_I64 %reg(s64), [[OR]](s32), implicit-def $scc
    ; CHECK-NEXT: $sgpr0_sgpr1 = COPY %bfx(s64)
    %reg:sgpr(s64) = COPY $sgpr0_sgpr1
    %width:sgpr(s32) = G_CONSTANT i32 5
    %offset:sgpr(s32) = G_CONSTANT i32 7
    %bfx:sgpr(s64) = G_SBFX %reg, %offset, %width
    $sgpr0_sgpr1 = COPY %bfx
...
---
name: test_s_bfe_u64__constants
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.1:
    liveins: $sgpr0_sgpr1

    ; CHECK-LABEL: name: test_s_bfe_u64__constants
    ; CHECK: liveins: $sgpr0_sgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %reg:sreg_64(s64) = COPY $sgpr0_sgpr1
    ; CHECK-NEXT: %width:sgpr(s32) = G_CONSTANT i32 5
    ; CHECK-NEXT: %offset:sgpr(s32) = G_CONSTANT i32 7
    ; CHECK-NEXT: [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:sgpr(s32) = G_SHL %width, [[C]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:sreg_32(s32) = G_OR %offset, [[SHL]]
    ; CHECK-NEXT: %bfx:sreg_64(s64) = S_BFE_U64 %reg(s64), [[OR]](s32), implicit-def $scc
    ; CHECK-NEXT: $sgpr0_sgpr1 = COPY %bfx(s64)
    %reg:sgpr(s64) = COPY $sgpr0_sgpr1
    %width:sgpr(s32) = G_CONSTANT i32 5
    %offset:sgpr(s32) = G_CONSTANT i32 7
    %bfx:sgpr(s64) = G_UBFX %reg, %offset, %width
    $sgpr0_sgpr1 = COPY %bfx
...
