# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -run-pass=amdgpu-postlegalizer-combiner -verify-machineinstrs %s -o - | FileCheck %s

---
name: trunc_s32_shl_s64_5
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; CHECK-LABEL: name: trunc_s32_shl_s64_5
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i32) = G_TRUNC [[COPY]](i64)
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(i32) = G_SHL [[TRUNC]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[SHL]](i32)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_CONSTANT i32 1
    %2:_(i64) = G_SHL %0, %1(i32)
    %3:_(i32) = G_TRUNC %2(i64)
    $vgpr0 = COPY %3(i32)
...

---
name: trunc_s16_shl_s32_5
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: trunc_s16_shl_s32_5
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(i32) = G_SHL [[COPY]], [[C]](i32)
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i16) = G_TRUNC [[SHL]](i32)
    ; CHECK-NEXT: S_ENDPGM 0, implicit [[TRUNC]](i16)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = G_CONSTANT i32 1
    %2:_(i32) = G_SHL %0, %1(i32)
    %3:_(i16) = G_TRUNC %2(i32)
    S_ENDPGM 0, implicit %3(i16)

...

---
name: trunc_s16_shl_s64_5
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; CHECK-LABEL: name: trunc_s16_shl_s64_5
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(i64) = G_SHL [[COPY]], [[C]](i32)
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i16) = G_TRUNC [[SHL]](i64)
    ; CHECK-NEXT: S_ENDPGM 0, implicit [[TRUNC]](i16)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_CONSTANT i32 1
    %2:_(i64) = G_SHL %0, %1(i32)
    %3:_(i16) = G_TRUNC %2(i64)
    S_ENDPGM 0, implicit %3(i16)

...

---
name:            s16_trunc_s64_lshr_16
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: s16_trunc_s64_lshr_16
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: %amt:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], %amt(i32)
    ; CHECK-NEXT: %trunc:_(i16) = G_TRUNC [[LSHR]](i32)
    ; CHECK-NEXT: %foo:_(i16) = G_CONSTANT i16 55
    ; CHECK-NEXT: %keep:_(i32) = G_MERGE_VALUES %trunc(i16), %foo(i16)
    ; CHECK-NEXT: $vgpr0 = COPY %keep(i32)
    %0:_(i32) = COPY $vgpr0
    %src:_(i64) = G_ZEXT %0(i32)
    %amt:_(i32) = G_CONSTANT i32 16
    %shift:_(i64) = G_LSHR %src, %amt(i32)
    %trunc:_(i16) = G_TRUNC %shift(i64)
    %foo:_(i16) = G_CONSTANT i16 55
    %keep:_(i32) = G_MERGE_VALUES %trunc(i16), %foo(i16)
    $vgpr0 = COPY %keep(i32)
...

---
name:            s16_trunc_s64_ashr_16
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: s16_trunc_s64_ashr_16
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: %amt:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(i32) = G_ASHR [[COPY]], %amt(i32)
    ; CHECK-NEXT: %trunc:_(i16) = G_TRUNC [[ASHR]](i32)
    ; CHECK-NEXT: %foo:_(i16) = G_CONSTANT i16 55
    ; CHECK-NEXT: %keep:_(i32) = G_MERGE_VALUES %trunc(i16), %foo(i16)
    ; CHECK-NEXT: $vgpr0 = COPY %keep(i32)
    %0:_(i32) = COPY $vgpr0
    %src:_(i64) = G_ZEXT %0(i32)
    %amt:_(i32) = G_CONSTANT i32 16
    %shift:_(i64) = G_ASHR %src, %amt(i32)
    %trunc:_(i16) = G_TRUNC %shift(i64)
    %foo:_(i16) = G_CONSTANT i16 55
    %keep:_(i32) = G_MERGE_VALUES %trunc(i16), %foo(i16)
    $vgpr0 = COPY %keep(i32)
...

---
name:            s16_trunc_s64_lshr_17_nofold
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: s16_trunc_s64_lshr_17_nofold
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: %src:_(i64) = G_ZEXT [[COPY]](i32)
    ; CHECK-NEXT: %amt:_(i32) = G_CONSTANT i32 17
    ; CHECK-NEXT: %shift:_(i64) = G_LSHR %src, %amt(i32)
    ; CHECK-NEXT: %trunc:_(i16) = G_TRUNC %shift(i64)
    ; CHECK-NEXT: %foo:_(i16) = G_CONSTANT i16 55
    ; CHECK-NEXT: %keep:_(i32) = G_MERGE_VALUES %trunc(i16), %foo(i16)
    ; CHECK-NEXT: $vgpr0 = COPY %keep(i32)
    %0:_(i32) = COPY $vgpr0
    %src:_(i64) = G_ZEXT %0(i32)
    %amt:_(i32) = G_CONSTANT i32 17
    %shift:_(i64) = G_LSHR %src, %amt(i32)
    %trunc:_(i16) = G_TRUNC %shift(i64)
    %foo:_(i16) = G_CONSTANT i16 55
    %keep:_(i32) = G_MERGE_VALUES %trunc(i16), %foo(i16)
    $vgpr0 = COPY %keep(i32)
...

---
name:            s26_trunc_s64_lshr_6
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: s26_trunc_s64_lshr_6
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: %amt:_(i32) = G_CONSTANT i32 6
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], %amt(i32)
    ; CHECK-NEXT: %trunc:_(i26) = G_TRUNC [[LSHR]](i32)
    ; CHECK-NEXT: %foo:_(i26) = G_CONSTANT i26 55
    ; CHECK-NEXT: %keep0:_(i26) = G_ADD %trunc, %foo
    ; CHECK-NEXT: %keep1:_(i32) = G_ANYEXT %keep0(i26)
    ; CHECK-NEXT: $vgpr0 = COPY %keep1(i32)
    %0:_(i32) = COPY $vgpr0
    %src:_(i64) = G_ZEXT %0(i32)
    %amt:_(i32) = G_CONSTANT i32 6
    %shift:_(i64) = G_LSHR %src, %amt(i32)
    %trunc:_(i26) = G_TRUNC %shift(i64)
    %foo:_(i26) = G_CONSTANT i26 55
    %keep0:_(i26) = G_ADD %trunc, %foo
    %keep1:_(i32) = G_ANYEXT %keep0(i26)
    $vgpr0 = COPY %keep1(i32)
...

---
name:            s26_trunc_s64_lshr_7_nofold
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: s26_trunc_s64_lshr_7_nofold
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: %src:_(i64) = G_ZEXT [[COPY]](i32)
    ; CHECK-NEXT: %amt:_(i32) = G_CONSTANT i32 7
    ; CHECK-NEXT: %shift:_(i64) = G_LSHR %src, %amt(i32)
    ; CHECK-NEXT: %trunc:_(i26) = G_TRUNC %shift(i64)
    ; CHECK-NEXT: %foo:_(i26) = G_CONSTANT i26 55
    ; CHECK-NEXT: %keep0:_(i26) = G_ADD %trunc, %foo
    ; CHECK-NEXT: %keep1:_(i32) = G_ANYEXT %keep0(i26)
    ; CHECK-NEXT: $vgpr0 = COPY %keep1(i32)
    %0:_(i32) = COPY $vgpr0
    %src:_(i64) = G_ZEXT %0(i32)
    %amt:_(i32) = G_CONSTANT i32 7
    %shift:_(i64) = G_LSHR %src, %amt(i32)
    %trunc:_(i26) = G_TRUNC %shift(i64)
    %foo:_(i26) = G_CONSTANT i26 55
    %keep0:_(i26) = G_ADD %trunc, %foo
    %keep1:_(i32) = G_ANYEXT %keep0(i26)
    $vgpr0 = COPY %keep1(i32)
...
