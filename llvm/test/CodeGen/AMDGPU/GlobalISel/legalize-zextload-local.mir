# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=fiji -run-pass=legalizer -o - %s | FileCheck %s
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=tahiti -run-pass=legalizer -o - %s | FileCheck %s
---
name: test_zextload_local_i32_i8
body: |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_zextload_local_i32_i8
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p3) :: (load (i8), addrspace 3)
    ; CHECK-NEXT: $vgpr0 = COPY [[ZEXTLOAD]](i32)
    %0:_(p3) = COPY $vgpr0
    %1:_(i32) = G_ZEXTLOAD %0(p3) :: (load (i8), addrspace 3)
    $vgpr0 = COPY %1(i32)
...
---
name: test_zextload_local_i32_i16
body: |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_zextload_local_i32_i16
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p3) :: (load (i16), addrspace 3)
    ; CHECK-NEXT: $vgpr0 = COPY [[ZEXTLOAD]](i32)
    %0:_(p3) = COPY $vgpr0
    %1:_(i32) = G_ZEXTLOAD %0(p3) :: (load (i16), addrspace 3)
    $vgpr0 = COPY %1(i32)
...
---
name: test_zextload_local_i31_i8
body: |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_zextload_local_i31_i8
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p3) :: (load (i8), addrspace 3)
    ; CHECK-NEXT: $vgpr0 = COPY [[ZEXTLOAD]](i32)
    %0:_(p3) = COPY $vgpr0
    %1:_(i31) = G_ZEXTLOAD %0(p3) :: (load (i8), addrspace 3)
    %2:_(i32) = G_ANYEXT %1(i31)
    $vgpr0 = COPY %2(i32)
...
---
name: test_zextload_local_i64_i8
body: |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_zextload_local_i64_i8
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p3) :: (load (i8), addrspace 3)
    ; CHECK-NEXT: [[ZEXT:%[0-9]+]]:_(i64) = G_ZEXT [[ZEXTLOAD]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[ZEXT]](i64)
    %0:_(p3) = COPY $vgpr0
    %1:_(i64) = G_ZEXTLOAD %0(p3) :: (load (i8), addrspace 3)
    $vgpr0_vgpr1 = COPY %1(i64)
...
---
name: test_zextload_local_i64_i16
body: |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_zextload_local_i64_i16
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p3) :: (load (i16), addrspace 3)
    ; CHECK-NEXT: [[ZEXT:%[0-9]+]]:_(i64) = G_ZEXT [[ZEXTLOAD]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[ZEXT]](i64)
    %0:_(p3) = COPY $vgpr0
    %1:_(i64) = G_ZEXTLOAD %0(p3) :: (load (i16), addrspace 3)
    $vgpr0_vgpr1 = COPY %1(i64)
...
---
name: test_zextload_local_i64_i32
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; CHECK-LABEL: name: test_zextload_local_i64_i32
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p3) :: (load (i32), addrspace 3)
    ; CHECK-NEXT: [[ZEXT:%[0-9]+]]:_(i64) = G_ZEXT [[LOAD]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[ZEXT]](i64)
    %0:_(p3) = COPY $vgpr0
    %1:_(i64) = G_ZEXTLOAD %0(p3) :: (load (i32), addrspace 3)
    $vgpr0_vgpr1 = COPY %1(i64)
...
