# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX8 %s

---

name:            fadd_s16_vvv
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX8-LABEL: name: fadd_s16_vvv
    ; GFX8: liveins: $vgpr0, $vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX8-NEXT: [[V_ADD_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F16_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[V_ADD_F16_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(i16) = G_TRUNC %0(i32)
    %3:vgpr(i16) = G_TRUNC %1(i32)
    %4:vgpr(f16) = G_BITCAST %2(i16)
    %5:vgpr(f16) = G_BITCAST %3(i16)
    %6:vgpr(f16) = G_FADD %4, %5
    %7:vgpr(i16) = G_BITCAST %6(f16)
    S_ENDPGM 0, implicit %7(i16)

...

---

name:            fadd_s16_vsv
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; GFX8-LABEL: name: fadd_s16_vsv
    ; GFX8: liveins: $vgpr0, $sgpr0
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX8-NEXT: [[V_ADD_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F16_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[V_ADD_F16_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:sgpr(i16) = G_TRUNC %0(i32)
    %3:vgpr(i16) = G_TRUNC %1(i32)
    %4:sgpr(f16) = G_BITCAST %2(i16)
    %5:vgpr(f16) = G_BITCAST %3(i16)
    %6:vgpr(f16) = G_FADD %4, %5
    %7:vgpr(i16) = G_BITCAST %6(f16)
    S_ENDPGM 0, implicit %7(i16)

...

---

name:            fadd_s16_vvs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; GFX8-LABEL: name: fadd_s16_vvs
    ; GFX8: liveins: $vgpr0, $sgpr0
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX8-NEXT: [[V_ADD_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F16_e64 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[V_ADD_F16_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:sgpr(i32) = COPY $sgpr0
    %2:vgpr(i16) = G_TRUNC %0(i32)
    %3:sgpr(i16) = G_TRUNC %1(i32)
    %4:vgpr(f16) = G_BITCAST %2(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:vgpr(f16) = G_FADD %4, %5
    %7:vgpr(i16) = G_BITCAST %6(f16)
    S_ENDPGM 0, implicit %7(i16)

...

---

name:            fadd_s16_vvv_fabs_lhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX8-LABEL: name: fadd_s16_vvv_fabs_lhs
    ; GFX8: liveins: $vgpr0, $vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX8-NEXT: [[V_ADD_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F16_e64 2, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[V_ADD_F16_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(i16) = G_TRUNC %0(i32)
    %3:vgpr(i16) = G_TRUNC %1(i32)
    %4:vgpr(f16) = G_BITCAST %2(i16)
    %5:vgpr(f16) = G_FABS %4
    %6:vgpr(f16) = G_BITCAST %3(i16)
    %7:vgpr(f16) = G_FADD %5, %6
    %8:vgpr(i16) = G_BITCAST %7(f16)
    S_ENDPGM 0, implicit %8(i16)

...

---

name:            fadd_s16_vvv_fabs_rhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX8-LABEL: name: fadd_s16_vvv_fabs_rhs
    ; GFX8: liveins: $vgpr0, $vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX8-NEXT: [[V_ADD_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F16_e64 0, [[COPY]], 2, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[V_ADD_F16_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(i16) = G_TRUNC %0(i32)
    %3:vgpr(i16) = G_TRUNC %1(i32)
    %4:vgpr(f16) = G_BITCAST %3(i16)
    %5:vgpr(f16) = G_FABS %4
    %6:vgpr(f16) = G_BITCAST %2(i16)
    %7:vgpr(f16) = G_FADD %6, %5
    %8:vgpr(i16) = G_BITCAST %7(f16)
    S_ENDPGM 0, implicit %8(i16)

...

---

name:            fadd_s16_vvv_fneg_fabs_lhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX8-LABEL: name: fadd_s16_vvv_fneg_fabs_lhs
    ; GFX8: liveins: $vgpr0, $vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX8-NEXT: [[V_ADD_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F16_e64 3, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[V_ADD_F16_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(i16) = G_TRUNC %0(i32)
    %3:vgpr(i16) = G_TRUNC %1(i32)
    %4:vgpr(f16) = G_BITCAST %2(i16)
    %5:vgpr(f16) = G_FABS %4
    %6:vgpr(f16) = G_FNEG %5
    %7:vgpr(f16) = G_BITCAST %3(i16)
    %8:vgpr(f16) = G_FADD %6, %7
    %9:vgpr(i16) = G_BITCAST %8(f16)
    S_ENDPGM 0, implicit %9(i16)

...

---

name:            fadd_s16_vvv_fneg_fabs_rhs
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX8-LABEL: name: fadd_s16_vvv_fneg_fabs_rhs
    ; GFX8: liveins: $vgpr0, $vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GFX8-NEXT: [[V_ADD_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F16_e64 0, [[COPY]], 3, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[V_ADD_F16_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(i16) = G_TRUNC %0(i32)
    %3:vgpr(i16) = G_TRUNC %1(i32)
    %4:vgpr(f16) = G_BITCAST %3(i16)
    %5:vgpr(f16) = G_FABS %4
    %6:vgpr(f16) = G_FNEG %5
    %7:vgpr(f16) = G_BITCAST %2(i16)
    %8:vgpr(f16) = G_FADD %7, %6
    %9:vgpr(i16) = G_BITCAST %8(f16)
    S_ENDPGM 0, implicit %9(i16)

...

---

name:            fadd_s16_fneg_copy_sgpr
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0, $sgpr0
    ; GFX8-LABEL: name: fadd_s16_fneg_copy_sgpr
    ; GFX8: liveins: $vgpr0, $sgpr0
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX8-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX8-NEXT: [[V_ADD_F16_e64_:%[0-9]+]]:vgpr_32 = nofpexcept V_ADD_F16_e64 0, [[COPY]], 1, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GFX8-NEXT: S_ENDPGM 0, implicit [[V_ADD_F16_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:sgpr(i32) = COPY $sgpr0
    %2:vgpr(i16) = G_TRUNC %0(i32)
    %3:sgpr(i16) = G_TRUNC %1(i32)
    %4:sgpr(f16) = G_BITCAST %3(i16)
    %5:sgpr(f16) = G_FNEG %4
    %6:vgpr(f16) = G_BITCAST %2(i16)
    %7:vgpr(f16) = G_FADD %6, %5
    %8:vgpr(i16) = G_BITCAST %7(f16)
    S_ENDPGM 0, implicit %8(i16)

...
