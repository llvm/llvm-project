# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=fiji -O0 -run-pass=legalizer %s -o - | FileCheck --check-prefix=GCN %s
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx900 -O0 -run-pass=legalizer %s -o - | FileCheck --check-prefix=GCN %s
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx1010 -O0 -run-pass=legalizer %s -o - | FileCheck --check-prefix=GCN %s
...
---
name:            test_sbfx_s32
body: |
  bb.0.entry:
    liveins: $vgpr0, $vgpr1, $vgpr2

    ; GCN-LABEL: name: test_sbfx_s32
    ; GCN: liveins: $vgpr0, $vgpr1, $vgpr2
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: %copy:_(i32) = COPY $vgpr0
    ; GCN-NEXT: %offset:_(i32) = COPY $vgpr1
    ; GCN-NEXT: %width:_(i32) = COPY $vgpr2
    ; GCN-NEXT: %sbfx:_(i32) = G_SBFX %copy, %offset(i32), %width
    ; GCN-NEXT: $vgpr0 = COPY %sbfx(i32)
    %copy:_(i32) = COPY $vgpr0
    %offset:_(i32) = COPY $vgpr1
    %width:_(i32) = COPY $vgpr2
    %sbfx:_(i32) = G_SBFX %copy, %offset(i32), %width
    $vgpr0 = COPY %sbfx(i32)
...

---
name:            test_sbfx_s64
body: |
  bb.0.entry:
    liveins: $vgpr0_vgpr1, $vgpr2, $vgpr3

    ; GCN-LABEL: name: test_sbfx_s64
    ; GCN: liveins: $vgpr0_vgpr1, $vgpr2, $vgpr3
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: %copy:_(i64) = COPY $vgpr0_vgpr1
    ; GCN-NEXT: %offset:_(i32) = COPY $vgpr2
    ; GCN-NEXT: %width:_(i32) = COPY $vgpr3
    ; GCN-NEXT: %sbfx:_(i64) = G_SBFX %copy, %offset(i32), %width
    ; GCN-NEXT: $vgpr0_vgpr1 = COPY %sbfx(i64)
    %copy:_(i64) = COPY $vgpr0_vgpr1
    %offset:_(i32) = COPY $vgpr2
    %width:_(i32) = COPY $vgpr3
    %sbfx:_(i64) = G_SBFX %copy, %offset(i32), %width
    $vgpr0_vgpr1 = COPY %sbfx(i64)
...

---
name:            test_sbfx_s8
body: |
  bb.0.entry:
    liveins: $vgpr0, $vgpr1, $vgpr2

    ; GCN-LABEL: name: test_sbfx_s8
    ; GCN: liveins: $vgpr0, $vgpr1, $vgpr2
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; GCN-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 255
    ; GCN-NEXT: [[AND:%[0-9]+]]:_(i32) = G_AND [[COPY1]], [[C]]
    ; GCN-NEXT: [[AND1:%[0-9]+]]:_(i32) = G_AND [[COPY2]], [[C]]
    ; GCN-NEXT: [[SBFX:%[0-9]+]]:_(i32) = G_SBFX [[COPY]], [[AND]](i32), [[AND1]]
    ; GCN-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[SBFX]], 8
    ; GCN-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %copy:_(i8) = G_TRUNC %0(i32)
    %offset:_(i8) = G_TRUNC %1(i32)
    %width:_(i8) = G_TRUNC %2(i32)
    %sbfx:_(i8) = G_SBFX %copy, %offset(i8), %width
    %7:_(i32) = G_SEXT %sbfx(i8)
    $vgpr0 = COPY %7(i32)
...

---
name:            test_sbfx_s16
body: |
  bb.0.entry:
    liveins: $vgpr0, $vgpr1, $vgpr2

    ; GCN-LABEL: name: test_sbfx_s16
    ; GCN: liveins: $vgpr0, $vgpr1, $vgpr2
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; GCN-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 65535
    ; GCN-NEXT: [[AND:%[0-9]+]]:_(i32) = G_AND [[COPY1]], [[C]]
    ; GCN-NEXT: [[AND1:%[0-9]+]]:_(i32) = G_AND [[COPY2]], [[C]]
    ; GCN-NEXT: [[SBFX:%[0-9]+]]:_(i32) = G_SBFX [[COPY]], [[AND]](i32), [[AND1]]
    ; GCN-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[SBFX]], 16
    ; GCN-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %copy:_(i16) = G_TRUNC %0(i32)
    %offset:_(i16) = G_TRUNC %1(i32)
    %width:_(i16) = G_TRUNC %2(i32)
    %sbfx:_(i16) = G_SBFX %copy, %offset(i16), %width
    %7:_(i32) = G_SEXT %sbfx(i16)
    $vgpr0 = COPY %7(i32)
...
