# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=fiji -run-pass=legalizer -global-isel-abort=2 -pass-remarks-missed='gisel*' -o - 2> %t %s | FileCheck -check-prefix=GFX8 %s
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=tahiti -run-pass=legalizer -global-isel-abort=2 -o - %s | FileCheck -check-prefix=GFX6  %s
# RUN: FileCheck -check-prefixes=ERR %s < %t

# FIXME: Run with and without unaligned access turned on

# ERR-NOT: remark
# ERR: remark: <unknown>:0:0: unable to legalize instruction: %1:_(<2 x i16>) = G_SEXTLOAD %0:_(p1) :: (load (<2 x i8>), addrspace 1) (in function: test_sextload_global_v2i16_from_v2s8)
# ERR-NEXT: remark: <unknown>:0:0: unable to legalize instruction: %1:_(<2 x i32>) = G_SEXTLOAD %0:_(p1) :: (load (<2 x i8>), addrspace 1) (in function: test_sextload_global_v2i32_from_v2s8)
# ERR-NEXT: remark: <unknown>:0:0: unable to legalize instruction: %1:_(<2 x i32>) = G_SEXTLOAD %0:_(p1) :: (load (<2 x i16>), addrspace 1) (in function: test_sextload_global_v2i32_from_v2s16)
# ERR-NEXT: remark: <unknown>:0:0: unable to legalize instruction: %1:_(<2 x i64>) = G_SEXTLOAD %0:_(p1) :: (load (<2 x i16>), addrspace 1) (in function: test_sextload_global_v2i64_from_v2s16)
# ERR-NEXT: remark: <unknown>:0:0: unable to legalize instruction: %1:_(<2 x i64>) = G_SEXTLOAD %0:_(p1) :: (load (<2 x i32>), addrspace 1) (in function: test_sextload_global_v2i64_from_v2s32)
# ERR-NEXT: remark: <unknown>:0:0: unable to legalize instruction: %1:_(i128) = G_SEXTLOAD %0:_(p1) :: (load (i64), addrspace 1) (in function: test_sextload_global_s128_8)
# ERR-NOT: remark

---
name: test_sextload_global_i32_i1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i32_i1
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX8-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[LOAD]], 1
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i32_i1
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX6-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[LOAD]], 1
    ; GFX6-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_SEXTLOAD %0(p1) :: (load (i1), addrspace 1)
    $vgpr0 = COPY %1(i32)
...

---
name: test_sextload_global_i32_i7
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i32_i7
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX8-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[LOAD]], 7
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i32_i7
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX6-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[LOAD]], 7
    ; GFX6-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_SEXTLOAD %0(p1) :: (load (i7), addrspace 1)
    $vgpr0 = COPY %1(i32)
...
---
name: test_sextload_global_i32_i24
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i32_i24
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p1) :: (load (i16), align 4, addrspace 1)
    ; GFX8-NEXT: [[C:%[0-9]+]]:_(i64) = G_CONSTANT i64 2
    ; GFX8-NEXT: [[PTR_ADD:%[0-9]+]]:_(p1) = G_PTR_ADD [[COPY]], [[C]](i64)
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[PTR_ADD]](p1) :: (load (i8) from unknown-address + 2, align 2, addrspace 1)
    ; GFX8-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; GFX8-NEXT: [[SHL:%[0-9]+]]:_(i32) = G_SHL [[SEXTLOAD]], [[C1]](i32)
    ; GFX8-NEXT: [[OR:%[0-9]+]]:_(i32) = G_OR [[SHL]], [[ZEXTLOAD]]
    ; GFX8-NEXT: $vgpr0 = COPY [[OR]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i32_i24
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p1) :: (load (i16), align 4, addrspace 1)
    ; GFX6-NEXT: [[C:%[0-9]+]]:_(i64) = G_CONSTANT i64 2
    ; GFX6-NEXT: [[PTR_ADD:%[0-9]+]]:_(p1) = G_PTR_ADD [[COPY]], [[C]](i64)
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[PTR_ADD]](p1) :: (load (i8) from unknown-address + 2, align 2, addrspace 1)
    ; GFX6-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; GFX6-NEXT: [[SHL:%[0-9]+]]:_(i32) = G_SHL [[SEXTLOAD]], [[C1]](i32)
    ; GFX6-NEXT: [[OR:%[0-9]+]]:_(i32) = G_OR [[SHL]], [[ZEXTLOAD]]
    ; GFX6-NEXT: $vgpr0 = COPY [[OR]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_SEXTLOAD %0(p1) :: (load (i24), align 4, addrspace 1)
    $vgpr0 = COPY %1(i32)
...

---
name: test_sextload_global_i32_i30
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i32_i30
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i32), addrspace 1)
    ; GFX8-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[LOAD]], 30
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i32_i30
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i32), addrspace 1)
    ; GFX6-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[LOAD]], 30
    ; GFX6-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_SEXTLOAD %0(p1) :: (load (i30), addrspace 1)
    $vgpr0 = COPY %1(i32)
...

---
name: test_sextload_global_i32_i31
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i32_i31
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i32), addrspace 1)
    ; GFX8-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[LOAD]], 31
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i32_i31
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i32), addrspace 1)
    ; GFX6-NEXT: [[SEXT_INREG:%[0-9]+]]:_(i32) = G_SEXT_INREG [[LOAD]], 31
    ; GFX6-NEXT: $vgpr0 = COPY [[SEXT_INREG]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_SEXTLOAD %0(p1) :: (load (i31), addrspace 1)
    $vgpr0 = COPY %1(i32)
...

---
name: test_sextload_global_i32_i8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i32_i8
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXTLOAD]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i32_i8
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX6-NEXT: $vgpr0 = COPY [[SEXTLOAD]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_SEXTLOAD %0(p1) :: (load (i8), addrspace 1)
    $vgpr0 = COPY %1(i32)
...

---
name: test_sextload_global_i32_i16
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i32_i16
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i16), addrspace 1)
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXTLOAD]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i32_i16
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i16), addrspace 1)
    ; GFX6-NEXT: $vgpr0 = COPY [[SEXTLOAD]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_SEXTLOAD %0(p1) :: (load (i16), addrspace 1)
    $vgpr0 = COPY %1(i32)
...
---
name: test_sextload_global_i31_i8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i31_i8
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXTLOAD]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i31_i8
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX6-NEXT: $vgpr0 = COPY [[SEXTLOAD]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i31) = G_SEXTLOAD %0(p1) :: (load (i8), addrspace 1)
    %2:_(i32) = G_ANYEXT %1(i31)
    $vgpr0 = COPY %2(i32)
...
---
name: test_sextload_global_i64_i8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i64_i8
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX8-NEXT: [[SEXT:%[0-9]+]]:_(i64) = G_SEXT [[SEXTLOAD]](i32)
    ; GFX8-NEXT: $vgpr0_vgpr1 = COPY [[SEXT]](i64)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i64_i8
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX6-NEXT: [[SEXT:%[0-9]+]]:_(i64) = G_SEXT [[SEXTLOAD]](i32)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY [[SEXT]](i64)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i64) = G_SEXTLOAD %0(p1) :: (load (i8), addrspace 1)
    $vgpr0_vgpr1 = COPY %1(i64)
...
---
name: test_sextload_global_i64_i16
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i64_i16
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i16), addrspace 1)
    ; GFX8-NEXT: [[SEXT:%[0-9]+]]:_(i64) = G_SEXT [[SEXTLOAD]](i32)
    ; GFX8-NEXT: $vgpr0_vgpr1 = COPY [[SEXT]](i64)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i64_i16
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i16), addrspace 1)
    ; GFX6-NEXT: [[SEXT:%[0-9]+]]:_(i64) = G_SEXT [[SEXTLOAD]](i32)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY [[SEXT]](i64)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i64) = G_SEXTLOAD %0(p1) :: (load (i16), addrspace 1)
    $vgpr0_vgpr1 = COPY %1(i64)
...
---
name: test_sextload_global_i64_i32
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_i64_i32
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i32), addrspace 1)
    ; GFX8-NEXT: [[SEXT:%[0-9]+]]:_(i64) = G_SEXT [[LOAD]](i32)
    ; GFX8-NEXT: $vgpr0_vgpr1 = COPY [[SEXT]](i64)
    ;
    ; GFX6-LABEL: name: test_sextload_global_i64_i32
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[LOAD:%[0-9]+]]:_(i32) = G_LOAD [[COPY]](p1) :: (load (i32), addrspace 1)
    ; GFX6-NEXT: [[SEXT:%[0-9]+]]:_(i64) = G_SEXT [[LOAD]](i32)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY [[SEXT]](i64)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i64) = G_SEXTLOAD %0(p1) :: (load (i32), addrspace 1)
    $vgpr0_vgpr1 = COPY %1(i64)
...

---
name: test_sextload_global_s32_from_2_align1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_s32_from_2_align1
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i16), align 1, addrspace 1)
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXTLOAD]](i32)
    ;
    ; GFX6-LABEL: name: test_sextload_global_s32_from_2_align1
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX6-NEXT: [[C:%[0-9]+]]:_(i64) = G_CONSTANT i64 1
    ; GFX6-NEXT: [[PTR_ADD:%[0-9]+]]:_(p1) = G_PTR_ADD [[COPY]], [[C]](i64)
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[PTR_ADD]](p1) :: (load (i8) from unknown-address + 1, addrspace 1)
    ; GFX6-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; GFX6-NEXT: [[SHL:%[0-9]+]]:_(i32) = G_SHL [[SEXTLOAD]], [[C1]](i32)
    ; GFX6-NEXT: [[OR:%[0-9]+]]:_(i32) = G_OR [[SHL]], [[ZEXTLOAD]]
    ; GFX6-NEXT: $vgpr0 = COPY [[OR]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32) = G_SEXTLOAD %0(p1) :: (load (i16), align 1, addrspace 1)
    $vgpr0 = COPY %1(i32)
...

---
name: test_sextload_global_s64_from_2_align1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_s64_from_2_align1
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[COPY]](p1) :: (load (i16), align 1, addrspace 1)
    ; GFX8-NEXT: [[SEXT:%[0-9]+]]:_(i64) = G_SEXT [[SEXTLOAD]](i32)
    ; GFX8-NEXT: $vgpr0_vgpr1 = COPY [[SEXT]](i64)
    ;
    ; GFX6-LABEL: name: test_sextload_global_s64_from_2_align1
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(i32) = G_ZEXTLOAD [[COPY]](p1) :: (load (i8), addrspace 1)
    ; GFX6-NEXT: [[C:%[0-9]+]]:_(i64) = G_CONSTANT i64 1
    ; GFX6-NEXT: [[PTR_ADD:%[0-9]+]]:_(p1) = G_PTR_ADD [[COPY]], [[C]](i64)
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i32) = G_SEXTLOAD [[PTR_ADD]](p1) :: (load (i8) from unknown-address + 1, addrspace 1)
    ; GFX6-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; GFX6-NEXT: [[SHL:%[0-9]+]]:_(i32) = G_SHL [[SEXTLOAD]], [[C1]](i32)
    ; GFX6-NEXT: [[OR:%[0-9]+]]:_(i32) = G_OR [[SHL]], [[ZEXTLOAD]]
    ; GFX6-NEXT: [[SEXT:%[0-9]+]]:_(i64) = G_SEXT [[OR]](i32)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY [[SEXT]](i64)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i64) = G_SEXTLOAD %0(p1) :: (load (i16), align 1, addrspace 1)
    $vgpr0_vgpr1 = COPY %1(i64)
...

---
name: test_sextload_global_v2i16_from_v2s8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_v2i16_from_v2s8
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i16>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i8>), addrspace 1)
    ; GFX8-NEXT: $vgpr0 = COPY [[SEXTLOAD]](<2 x i16>)
    ;
    ; GFX6-LABEL: name: test_sextload_global_v2i16_from_v2s8
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i16>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i8>), addrspace 1)
    ; GFX6-NEXT: $vgpr0 = COPY [[SEXTLOAD]](<2 x i16>)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(<2 x i16>) = G_SEXTLOAD %0(p1) :: (load (<2 x i8>), addrspace 1)
    $vgpr0 = COPY %1(<2 x i16>)
...

---
name: test_sextload_global_v2i32_from_v2s8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_v2i32_from_v2s8
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i32>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i8>), addrspace 1)
    ; GFX8-NEXT: $vgpr0_vgpr1 = COPY [[SEXTLOAD]](<2 x i32>)
    ;
    ; GFX6-LABEL: name: test_sextload_global_v2i32_from_v2s8
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i32>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i8>), addrspace 1)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY [[SEXTLOAD]](<2 x i32>)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(<2 x i32>) = G_SEXTLOAD %0(p1) :: (load (<2 x i8>), addrspace 1)
    $vgpr0_vgpr1 = COPY %1(<2 x i32>)
...

---
name: test_sextload_global_v2i32_from_v2s16
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_v2i32_from_v2s16
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i32>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i16>), addrspace 1)
    ; GFX8-NEXT: $vgpr0_vgpr1 = COPY [[SEXTLOAD]](<2 x i32>)
    ;
    ; GFX6-LABEL: name: test_sextload_global_v2i32_from_v2s16
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i32>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i16>), addrspace 1)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY [[SEXTLOAD]](<2 x i32>)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(<2 x i32>) = G_SEXTLOAD %0(p1) :: (load (<2 x i16>), addrspace 1)
    $vgpr0_vgpr1 = COPY %1(<2 x i32>)
...

---
name: test_sextload_global_v2i64_from_v2s16
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_v2i64_from_v2s16
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i64>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i16>), addrspace 1)
    ; GFX8-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[SEXTLOAD]](<2 x i64>)
    ;
    ; GFX6-LABEL: name: test_sextload_global_v2i64_from_v2s16
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i64>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i16>), addrspace 1)
    ; GFX6-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[SEXTLOAD]](<2 x i64>)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(<2 x i64>) = G_SEXTLOAD %0(p1) :: (load (<2 x i16>), addrspace 1)
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(<2 x i64>)
...

---
name: test_sextload_global_v2i64_from_v2s32
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_v2i64_from_v2s32
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i64>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i32>), addrspace 1)
    ; GFX8-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[SEXTLOAD]](<2 x i64>)
    ;
    ; GFX6-LABEL: name: test_sextload_global_v2i64_from_v2s32
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(<2 x i64>) = G_SEXTLOAD [[COPY]](p1) :: (load (<2 x i32>), addrspace 1)
    ; GFX6-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[SEXTLOAD]](<2 x i64>)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(<2 x i64>) = G_SEXTLOAD %0(p1) :: (load (<2 x i32>), addrspace 1)
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(<2 x i64>)
...

---
name: test_sextload_global_s128_8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX8-LABEL: name: test_sextload_global_s128_8
    ; GFX8: liveins: $vgpr0_vgpr1
    ; GFX8-NEXT: {{  $}}
    ; GFX8-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX8-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i128) = G_SEXTLOAD [[COPY]](p1) :: (load (i64), addrspace 1)
    ; GFX8-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[SEXTLOAD]](i128)
    ;
    ; GFX6-LABEL: name: test_sextload_global_s128_8
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: [[SEXTLOAD:%[0-9]+]]:_(i128) = G_SEXTLOAD [[COPY]](p1) :: (load (i64), addrspace 1)
    ; GFX6-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[SEXTLOAD]](i128)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i128) = G_SEXTLOAD %0(p1) :: (load (i64), addrspace 1)
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(i128)
...
