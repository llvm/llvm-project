# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=amdgcn-mesa-mesa3d -mcpu=tahiti -run-pass=legalizer -allow-ginsert-as-artifact=0 -global-isel-abort=0 %s -o - | FileCheck %s
# RUN: llc -O0 -mtriple=amdgcn-mesa-mesa3d -mcpu=fiji -run-pass=legalizer -allow-ginsert-as-artifact=0 -global-isel-abort=0 %s -o - | FileCheck %s

---
name: test_freeze_s1
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s1
    ; CHECK: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i1) = G_FREEZE [[TRUNC]]
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(i32) = G_ANYEXT [[FREEZE]](i1)
    ; CHECK-NEXT: $vgpr0 = COPY [[ANYEXT]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i1) = G_TRUNC %0(i32)
    %2:_(i1) = G_FREEZE %1
    %3:_(i32) = G_ANYEXT %2(i1)
    $vgpr0 = COPY %3(i32)
...

---
name: test_freeze_s7
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s7
    ; CHECK: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i32) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0 = COPY [[FREEZE]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i7) = G_TRUNC %0(i32)
    %2:_(i7) = G_FREEZE %1
    %3:_(i32) = G_ANYEXT %2(i7)
    $vgpr0 = COPY %3(i32)
...

---
name: test_freeze_s8
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s8
    ; CHECK: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i32) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0 = COPY [[FREEZE]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i8) = G_TRUNC %0(i32)
    %2:_(i8) = G_FREEZE %1
    %3:_(i32) = G_ANYEXT %2(i8)
    $vgpr0 = COPY %3(i32)
...

---
name: test_freeze_s16
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i16) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i16) = G_FREEZE [[TRUNC]]
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(i32) = G_ANYEXT [[FREEZE]](i16)
    ; CHECK-NEXT: $vgpr0 = COPY [[ANYEXT]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i16) = G_TRUNC %0(i32)
    %2:_(i16) = G_FREEZE %1
    %3:_(i32) = G_ANYEXT %2(i16)
    $vgpr0 = COPY %3(i32)
...

---
name: test_freeze_s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i32) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0 = COPY [[FREEZE]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = G_FREEZE %0
    $vgpr0 = COPY %1(i32)
...

---
name: test_freeze_s48
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s48
    ; CHECK: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i64) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](i64)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i48) = G_TRUNC %0(i64)
    %2:_(i48) = G_FREEZE %1
    %3:_(i64) = G_ANYEXT %2(i48)
    $vgpr0_vgpr1 = COPY %3(i64)
...

---
name: test_freeze_s64
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s64
    ; CHECK: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i64) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](i64)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = G_FREEZE %0
    $vgpr0_vgpr1 = COPY %1(i64)
...

---
name: test_freeze_s65
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s65
    ; CHECK: [[COPY:%[0-9]+]]:_(i96) = COPY $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](i96)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(i64) = G_MERGE_VALUES [[UV]](i32), [[UV1]](i32)
    ; CHECK-NEXT: [[MV1:%[0-9]+]]:_(i64) = G_MERGE_VALUES [[UV2]](i32), [[DEF]](i32)
    ; CHECK-NEXT: [[MV2:%[0-9]+]]:_(i128) = G_MERGE_VALUES [[MV]](i64), [[MV1]](i64)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i128) = G_FREEZE [[MV2]]
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i96) = G_TRUNC [[FREEZE]](i128)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[TRUNC]](i96)
    %0:_(i96) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(i65) = G_TRUNC %0(i96)
    %2:_(i65) = G_FREEZE %1
    %3:_(i96) = G_ANYEXT %2(i65)
    $vgpr0_vgpr1_vgpr2 = COPY %3(i96)
...

---
name: test_freeze_s128
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s128
    ; CHECK: [[COPY:%[0-9]+]]:_(i128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i128) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[FREEZE]](i128)
    %0:_(i128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(i128) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(i128)
...

---
name: test_freeze_256
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_256
    ; CHECK: [[COPY:%[0-9]+]]:_(i256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i256) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[FREEZE]](i256)
    %0:_(i256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    %1:_(i256) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY %1(i256)
...

---
name: test_freeze_s448
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s448
    ; CHECK: [[COPY:%[0-9]+]]:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i512) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[FREEZE]](i512)
    %0:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i448) = G_TRUNC %0(i512)
    %2:_(i448) = G_FREEZE %1
    %3:_(i512) = G_ANYEXT %2(i448)
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY %3(i512)
...

---
name: test_freeze_s512
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s512
    ; CHECK: [[COPY:%[0-9]+]]:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i512) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[FREEZE]](i512)
    %0:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i512) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY %1(i512)
...

---
name: test_freeze_s1024
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s1024
    ; CHECK: [[COPY:%[0-9]+]]:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i64), [[UV1:%[0-9]+]]:_(i64), [[UV2:%[0-9]+]]:_(i64), [[UV3:%[0-9]+]]:_(i64), [[UV4:%[0-9]+]]:_(i64), [[UV5:%[0-9]+]]:_(i64), [[UV6:%[0-9]+]]:_(i64), [[UV7:%[0-9]+]]:_(i64) = G_UNMERGE_VALUES [[COPY]](i512)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(i64) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(i1024) = G_MERGE_VALUES [[UV]](i64), [[UV1]](i64), [[UV2]](i64), [[UV3]](i64), [[UV4]](i64), [[UV5]](i64), [[UV6]](i64), [[UV7]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i1024) = G_FREEZE [[MV]]
    ; CHECK-NEXT: S_NOP 0, implicit [[FREEZE]](i1024)
    %0:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i1024) = G_ANYEXT %0(i512)
    %2:_(i1024) = G_FREEZE %1
    S_NOP 0, implicit %2(i1024)
...

---
name: test_freeze_s1056
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s1056
    ; CHECK: [[COPY:%[0-9]+]]:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(i1056) = G_ANYEXT [[COPY]](i512)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i1056) = G_FREEZE [[ANYEXT]]
    ; CHECK-NEXT: S_NOP 0, implicit [[FREEZE]](i1056)
    %0:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i1056) = G_ANYEXT %0(i512)
    %2:_(i1056) = G_FREEZE %1
    S_NOP 0, implicit %2(i1056)
...

---
name: test_freeze_s2048
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_s2048
    ; CHECK: [[COPY:%[0-9]+]]:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i64), [[UV1:%[0-9]+]]:_(i64), [[UV2:%[0-9]+]]:_(i64), [[UV3:%[0-9]+]]:_(i64), [[UV4:%[0-9]+]]:_(i64), [[UV5:%[0-9]+]]:_(i64), [[UV6:%[0-9]+]]:_(i64), [[UV7:%[0-9]+]]:_(i64) = G_UNMERGE_VALUES [[COPY]](i512)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(i64) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[MV:%[0-9]+]]:_(i1024) = G_MERGE_VALUES [[UV]](i64), [[UV1]](i64), [[UV2]](i64), [[UV3]](i64), [[UV4]](i64), [[UV5]](i64), [[UV6]](i64), [[UV7]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64)
    ; CHECK-NEXT: [[MV1:%[0-9]+]]:_(i1024) = G_MERGE_VALUES [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64), [[DEF]](i64)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(i1024) = G_FREEZE [[MV]]
    ; CHECK-NEXT: [[FREEZE1:%[0-9]+]]:_(i1024) = G_FREEZE [[MV1]]
    ; CHECK-NEXT: [[MV2:%[0-9]+]]:_(i2048) = G_MERGE_VALUES [[FREEZE]](i1024), [[FREEZE1]](i1024)
    ; CHECK-NEXT: S_NOP 0, implicit [[MV2]](i2048)
    %0:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i2048) = G_ANYEXT %0(i512)
    %2:_(i2048) = G_FREEZE %1
    S_NOP 0, implicit %2(i2048)
...

---
name: test_freeze_v2s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v2s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<2 x i32>) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<2 x i32>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](<2 x i32>)
    %0:_(<2 x i32>) = COPY $vgpr0_vgpr1
    %1:_(<2 x i32>) = G_FREEZE %0
    $vgpr0_vgpr1 = COPY %1(<2 x i32>)
...

---
name: test_freeze_v3s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v3s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<3 x i32>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[FREEZE]](<3 x i32>)
    %0:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(<3 x i32>) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2 = COPY %1(<3 x i32>)
...

---
name: test_freeze_v4s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v4s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<4 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<4 x i32>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[FREEZE]](<4 x i32>)
    %0:_(<4 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(<4 x i32>) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(<4 x i32>)
...

---
name: test_freeze_v5s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v5s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<5 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<5 x i32>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4 = COPY [[FREEZE]](<5 x i32>)
    %0:_(<5 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4
    %1:_(<5 x i32>) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4 = COPY %1(<5 x i32>)
...

---
name: test_freeze_v6s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v6s32
    ; CHECK: [[DEF:%[0-9]+]]:_(<6 x i32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<6 x i32>) = G_FREEZE [[DEF]]
    ; CHECK-NEXT: S_NOP 0, implicit [[FREEZE]](<6 x i32>)
    %0:_(<6 x i32>) = G_IMPLICIT_DEF
    %1:_(<6 x i32>) = G_FREEZE %0
    S_NOP 0, implicit %1(<6 x i32>)
...

---
name: test_freeze_v7s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v7s32
    ; CHECK: [[DEF:%[0-9]+]]:_(<7 x i32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<7 x i32>) = G_FREEZE [[DEF]]
    ; CHECK-NEXT: S_NOP 0, implicit [[FREEZE]](<7 x i32>)
    %0:_(<7 x i32>) = G_IMPLICIT_DEF
    %1:_(<7 x i32>) = G_FREEZE %0
    S_NOP 0, implicit %1(<7 x i32>)
...

---
name: test_freeze_v8s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v8s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<8 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<8 x i32>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[FREEZE]](<8 x i32>)
    %0:_(<8 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    %1:_(<8 x i32>) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY %1(<8 x i32>)
...

---
name: test_freeze_v16s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v16s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<16 x i32>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[FREEZE]](<16 x i32>)
    %0:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(<16 x i32>) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY %1(<16 x i32>)
...

---
name: test_freeze_v17s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v17s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<16 x i32>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: S_NOP 0, implicit [[FREEZE]](<16 x i32>)
    %0:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(<16 x i32>) = G_FREEZE %0
    S_NOP 0, implicit %1(<16 x i32>)
...

---
name: test_freeze_v32s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v32s32
    ; CHECK: [[DEF:%[0-9]+]]:_(<32 x i32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<32 x i32>) = G_FREEZE [[DEF]]
    ; CHECK-NEXT: S_NOP 0, implicit [[FREEZE]](<32 x i32>)
    %0:_(<32 x i32>) = G_IMPLICIT_DEF
    %1:_(<32 x i32>) = G_FREEZE %0
    S_NOP 0, implicit %1(<32 x i32>)
...

---
name: test_freeze_v33s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v33s32
    ; CHECK: [[DEF:%[0-9]+]]:_(<32 x i32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[DEF1:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<32 x i32>) = G_FREEZE [[DEF]]
    ; CHECK-NEXT: [[FREEZE1:%[0-9]+]]:_(i32) = G_FREEZE [[DEF1]]
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32), [[UV3:%[0-9]+]]:_(i32), [[UV4:%[0-9]+]]:_(i32), [[UV5:%[0-9]+]]:_(i32), [[UV6:%[0-9]+]]:_(i32), [[UV7:%[0-9]+]]:_(i32), [[UV8:%[0-9]+]]:_(i32), [[UV9:%[0-9]+]]:_(i32), [[UV10:%[0-9]+]]:_(i32), [[UV11:%[0-9]+]]:_(i32), [[UV12:%[0-9]+]]:_(i32), [[UV13:%[0-9]+]]:_(i32), [[UV14:%[0-9]+]]:_(i32), [[UV15:%[0-9]+]]:_(i32), [[UV16:%[0-9]+]]:_(i32), [[UV17:%[0-9]+]]:_(i32), [[UV18:%[0-9]+]]:_(i32), [[UV19:%[0-9]+]]:_(i32), [[UV20:%[0-9]+]]:_(i32), [[UV21:%[0-9]+]]:_(i32), [[UV22:%[0-9]+]]:_(i32), [[UV23:%[0-9]+]]:_(i32), [[UV24:%[0-9]+]]:_(i32), [[UV25:%[0-9]+]]:_(i32), [[UV26:%[0-9]+]]:_(i32), [[UV27:%[0-9]+]]:_(i32), [[UV28:%[0-9]+]]:_(i32), [[UV29:%[0-9]+]]:_(i32), [[UV30:%[0-9]+]]:_(i32), [[UV31:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[FREEZE]](<32 x i32>)
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<33 x i32>) = G_BUILD_VECTOR [[UV]](i32), [[UV1]](i32), [[UV2]](i32), [[UV3]](i32), [[UV4]](i32), [[UV5]](i32), [[UV6]](i32), [[UV7]](i32), [[UV8]](i32), [[UV9]](i32), [[UV10]](i32), [[UV11]](i32), [[UV12]](i32), [[UV13]](i32), [[UV14]](i32), [[UV15]](i32), [[UV16]](i32), [[UV17]](i32), [[UV18]](i32), [[UV19]](i32), [[UV20]](i32), [[UV21]](i32), [[UV22]](i32), [[UV23]](i32), [[UV24]](i32), [[UV25]](i32), [[UV26]](i32), [[UV27]](i32), [[UV28]](i32), [[UV29]](i32), [[UV30]](i32), [[UV31]](i32), [[FREEZE1]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<33 x i32>)
    %0:_(<33 x i32>) = G_IMPLICIT_DEF
    %1:_(<33 x i32>) = G_FREEZE %0
    S_NOP 0, implicit %1(<33 x i32>)
...

---
name: test_freeze_v64s32
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v64s32
    ; CHECK: [[DEF:%[0-9]+]]:_(<32 x i32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<32 x i32>) = G_FREEZE [[DEF]]
    ; CHECK-NEXT: [[FREEZE1:%[0-9]+]]:_(<32 x i32>) = G_FREEZE [[DEF]]
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<64 x i32>) = G_CONCAT_VECTORS [[FREEZE]](<32 x i32>), [[FREEZE1]](<32 x i32>)
    ; CHECK-NEXT: S_NOP 0, implicit [[CONCAT_VECTORS]](<64 x i32>)
    %0:_(<64 x i32>) = G_IMPLICIT_DEF
    %1:_(<64 x i32>) = G_FREEZE %0
    S_NOP 0, implicit %1(<64 x i32>)
...

---
name: test_freeze_v2s1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3

    ; CHECK-LABEL: name: test_freeze_v2s1
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<2 x i32>) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<2 x i32>) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<2 x i32>)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(i32), [[UV3:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY1]](<2 x i32>)
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(i1) = G_ICMP intpred(ne), [[UV]](i32), [[UV2]]
    ; CHECK-NEXT: [[ICMP1:%[0-9]+]]:_(i1) = G_ICMP intpred(ne), [[UV1]](i32), [[UV3]]
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(i32) = G_ANYEXT [[ICMP]](i1)
    ; CHECK-NEXT: [[ANYEXT1:%[0-9]+]]:_(i32) = G_ANYEXT [[ICMP1]](i1)
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x i32>) = G_BUILD_VECTOR [[ANYEXT]](i32), [[ANYEXT1]](i32)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<2 x i32>) = G_FREEZE [[BUILD_VECTOR]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](<2 x i32>)
    %0:_(<2 x i32>) = COPY $vgpr0_vgpr1
    %1:_(<2 x i32>) = COPY $vgpr2_vgpr3
    %2:_(<2 x i1>) = G_ICMP intpred(ne), %0(<2 x i32>), %1
    %3:_(<2 x i1>) = G_FREEZE %2
    %4:_(<2 x i32>) = G_ANYEXT %3(<2 x i1>)
    $vgpr0_vgpr1 = COPY %4(<2 x i32>)
...

---
name: test_freeze_v3s1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2, $vgpr3_vgpr4_vgpr5

    ; CHECK-LABEL: name: test_freeze_v3s1
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2, $vgpr3_vgpr4_vgpr5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<3 x i32>) = COPY $vgpr3_vgpr4_vgpr5
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<3 x i32>)
    ; CHECK-NEXT: [[UV3:%[0-9]+]]:_(i32), [[UV4:%[0-9]+]]:_(i32), [[UV5:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY1]](<3 x i32>)
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(i1) = G_ICMP intpred(ne), [[UV]](i32), [[UV3]]
    ; CHECK-NEXT: [[ICMP1:%[0-9]+]]:_(i1) = G_ICMP intpred(ne), [[UV1]](i32), [[UV4]]
    ; CHECK-NEXT: [[ICMP2:%[0-9]+]]:_(i1) = G_ICMP intpred(ne), [[UV2]](i32), [[UV5]]
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(i32) = G_ANYEXT [[ICMP]](i1)
    ; CHECK-NEXT: [[ANYEXT1:%[0-9]+]]:_(i32) = G_ANYEXT [[ICMP1]](i1)
    ; CHECK-NEXT: [[ANYEXT2:%[0-9]+]]:_(i32) = G_ANYEXT [[ICMP2]](i1)
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[ANYEXT]](i32), [[ANYEXT1]](i32), [[ANYEXT2]](i32)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<3 x i32>) = G_FREEZE [[BUILD_VECTOR]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[FREEZE]](<3 x i32>)
    %0:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(<3 x i32>) = COPY $vgpr3_vgpr4_vgpr5
    %2:_(<3 x i1>) = G_ICMP intpred(ne), %0(<3 x i32>), %1
    %3:_(<3 x i1>) = G_FREEZE %2
    %4:_(<3 x i32>) = G_ANYEXT %3(<3 x i1>)
    $vgpr0_vgpr1_vgpr2 = COPY %4(<3 x i32>)
...

---
name: test_freeze_v2s8
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v2s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<2 x i32>) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<2 x i32>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](<2 x i32>)
    %0:_(<2 x i32>) = COPY $vgpr0_vgpr1
    %1:_(<2 x i8>) = G_TRUNC %0(<2 x i32>)
    %2:_(<2 x i8>) = G_FREEZE %1
    %3:_(<2 x i32>) = G_ANYEXT %2(<2 x i8>)
    $vgpr0_vgpr1 = COPY %3(<2 x i32>)
...

---
name: test_freeze_v3s8
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v3s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<3 x i32>)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(i32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x i32>) = G_BUILD_VECTOR [[UV]](i32), [[UV1]](i32), [[UV2]](i32), [[DEF]](i32)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<4 x i32>) = G_FREEZE [[BUILD_VECTOR]]
    ; CHECK-NEXT: [[UV3:%[0-9]+]]:_(i32), [[UV4:%[0-9]+]]:_(i32), [[UV5:%[0-9]+]]:_(i32), [[UV6:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[FREEZE]](<4 x i32>)
    ; CHECK-NEXT: [[BUILD_VECTOR1:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[UV3]](i32), [[UV4]](i32), [[UV5]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR1]](<3 x i32>)
    %0:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(<3 x i8>) = G_TRUNC %0(<3 x i32>)
    %2:_(<3 x i8>) = G_FREEZE %1
    %3:_(<3 x i32>) = G_ANYEXT %2(<3 x i8>)
    $vgpr0_vgpr1_vgpr2 = COPY %3(<3 x i32>)
...

---
name: test_freeze_v2s16
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v2s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<2 x i16>) = COPY $vgpr0
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<2 x i16>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0 = COPY [[FREEZE]](<2 x i16>)
    %0:_(<2 x i16>) = COPY $vgpr0
    %1:_(<2 x i16>) = G_FREEZE %0
    $vgpr0 = COPY %1(<2 x i16>)
...

---
name: test_freeze_v3s16
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v3s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<3 x i32>)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(i32) = G_AND [[UV]], [[C]]
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(i32) = G_AND [[UV1]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(i32) = G_SHL [[AND1]], [[C1]](i32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(i32) = G_OR [[AND]], [[SHL]]
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(<2 x i16>) = G_BITCAST [[OR]](i32)
    ; CHECK-NEXT: [[AND2:%[0-9]+]]:_(i32) = G_AND [[UV2]], [[C]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:_(i32) = G_SHL [[C2]], [[C1]](i32)
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:_(i32) = G_OR [[AND2]], [[SHL1]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(<2 x i16>) = G_BITCAST [[OR1]](i32)
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x i16>) = G_CONCAT_VECTORS [[BITCAST]](<2 x i16>), [[BITCAST1]](<2 x i16>)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<4 x i16>) = G_FREEZE [[CONCAT_VECTORS]]
    ; CHECK-NEXT: [[UV3:%[0-9]+]]:_(<2 x i16>), [[UV4:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[FREEZE]](<4 x i16>)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(i32) = G_BITCAST [[UV3]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST2]], [[C1]](i32)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:_(i32) = G_BITCAST [[UV4]](<2 x i16>)
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[BITCAST2]](i32), [[LSHR]](i32), [[BITCAST3]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x i32>)
    %0:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(<3 x i16>) = G_TRUNC %0(<3 x i32>)
    %2:_(<3 x i16>) = G_FREEZE %1
    %3:_(<3 x i32>) = G_ANYEXT %2(<3 x i16>)
    $vgpr0_vgpr1_vgpr2 = COPY %3(<3 x i32>)
...

---
name: test_freeze_v4s16
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v4s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<4 x i16>) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<4 x i16>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](<4 x i16>)
    %0:_(<4 x i16>) = COPY $vgpr0_vgpr1
    %1:_(<4 x i16>) = G_FREEZE %0
    $vgpr0_vgpr1 = COPY %1(<4 x i16>)
...

---
name: test_freeze_v5s16
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v5s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<5 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32), [[UV3:%[0-9]+]]:_(i32), [[UV4:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<5 x i32>)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(i32) = G_AND [[UV]], [[C]]
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(i32) = G_AND [[UV1]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(i32) = G_SHL [[AND1]], [[C1]](i32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(i32) = G_OR [[AND]], [[SHL]]
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(<2 x i16>) = G_BITCAST [[OR]](i32)
    ; CHECK-NEXT: [[AND2:%[0-9]+]]:_(i32) = G_AND [[UV2]], [[C]]
    ; CHECK-NEXT: [[AND3:%[0-9]+]]:_(i32) = G_AND [[UV3]], [[C]]
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:_(i32) = G_SHL [[AND3]], [[C1]](i32)
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:_(i32) = G_OR [[AND2]], [[SHL1]]
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(<2 x i16>) = G_BITCAST [[OR1]](i32)
    ; CHECK-NEXT: [[AND4:%[0-9]+]]:_(i32) = G_AND [[UV4]], [[C]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SHL2:%[0-9]+]]:_(i32) = G_SHL [[C2]], [[C1]](i32)
    ; CHECK-NEXT: [[OR2:%[0-9]+]]:_(i32) = G_OR [[AND4]], [[SHL2]]
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(<2 x i16>) = G_BITCAST [[OR2]](i32)
    ; CHECK-NEXT: [[CONCAT_VECTORS:%[0-9]+]]:_(<6 x i16>) = G_CONCAT_VECTORS [[BITCAST]](<2 x i16>), [[BITCAST1]](<2 x i16>), [[BITCAST2]](<2 x i16>)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<6 x i16>) = G_FREEZE [[CONCAT_VECTORS]]
    ; CHECK-NEXT: [[UV5:%[0-9]+]]:_(<2 x i16>), [[UV6:%[0-9]+]]:_(<2 x i16>), [[UV7:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[FREEZE]](<6 x i16>)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:_(i32) = G_BITCAST [[UV5]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST3]], [[C1]](i32)
    ; CHECK-NEXT: [[BITCAST4:%[0-9]+]]:_(i32) = G_BITCAST [[UV6]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST4]], [[C1]](i32)
    ; CHECK-NEXT: [[BITCAST5:%[0-9]+]]:_(i32) = G_BITCAST [[UV7]](<2 x i16>)
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<5 x i32>) = G_BUILD_VECTOR [[BITCAST3]](i32), [[LSHR]](i32), [[BITCAST4]](i32), [[LSHR1]](i32), [[BITCAST5]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4 = COPY [[BUILD_VECTOR]](<5 x i32>)
    %0:_(<5 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4
    %1:_(<5 x i16>) = G_TRUNC %0(<5 x i32>)
    %2:_(<5 x i16>) = G_FREEZE %1
    %3:_(<5 x i32>) = G_ANYEXT %2(<5 x i16>)
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4 = COPY %3(<5 x i32>)
...

---
name: test_freeze_v6s16
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v6s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<6 x i16>) = COPY $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<6 x i16>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[FREEZE]](<6 x i16>)
    %0:_(<6 x i16>) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(<6 x i16>) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2 = COPY %1(<6 x i16>)
...

---
name: test_freeze_v8s16
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v8s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<8 x i16>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<8 x i16>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[FREEZE]](<8 x i16>)
    %0:_(<8 x i16>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(<8 x i16>) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(<8 x i16>)
...

---
name: test_freeze_v2s64
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v2s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<2 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<2 x i64>) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[FREEZE]](<2 x i64>)
    %0:_(<2 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(<2 x i64>) = G_FREEZE %0
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(<2 x i64>)
...

---
name: test_freeze_v4s8
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3

    ; CHECK-LABEL: name: test_freeze_v4s8
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32)
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<4 x i32>) = G_FREEZE [[BUILD_VECTOR]]
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32), [[UV3:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[FREEZE]](<4 x i32>)
    ; CHECK-NEXT: S_ENDPGM 0, implicit [[UV]](i32), implicit [[UV1]](i32), implicit [[UV2]](i32), implicit [[UV3]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i8) = G_TRUNC %0(i32)
    %5:_(i8) = G_TRUNC %1(i32)
    %6:_(i8) = G_TRUNC %2(i32)
    %7:_(i8) = G_TRUNC %3(i32)
    %8:_(<4 x i8>) = G_BUILD_VECTOR %4(i8), %5(i8), %6(i8), %7(i8)
    %9:_(<4 x i8>) = G_FREEZE %8
    %10:_(i8), %11:_(i8), %12:_(i8), %13:_(i8) = G_UNMERGE_VALUES %9(<4 x i8>)
    %14:_(i32) = G_ANYEXT %10(i8)
    %15:_(i32) = G_ANYEXT %11(i8)
    %16:_(i32) = G_ANYEXT %12(i8)
    %17:_(i32) = G_ANYEXT %13(i8)
    S_ENDPGM 0, implicit %14(i32), implicit %15(i32), implicit %16(i32), implicit %17(i32)
...

---
name: test_freeze_p0
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_p0
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(p0) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](p0)
    %0:_(p0) = COPY $vgpr0_vgpr1
    %1:_(p0) = G_FREEZE %0
    $vgpr0_vgpr1 = COPY %1(p0)
...

---
name: test_freeze_p1
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_p1
    ; CHECK: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(p1) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](p1)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(p1) = G_FREEZE %0
    $vgpr0_vgpr1 = COPY %1(p1)
...

---
name: test_freeze_p2
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_p2
    ; CHECK: [[COPY:%[0-9]+]]:_(p2) = COPY $vgpr0
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(p2) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0 = COPY [[FREEZE]](p2)
    %0:_(p2) = COPY $vgpr0
    %1:_(p2) = G_FREEZE %0
    $vgpr0 = COPY %1(p2)
...

---
name: test_freeze_p3
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_p3
    ; CHECK: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(p3) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0 = COPY [[FREEZE]](p3)
    %0:_(p3) = COPY $vgpr0
    %1:_(p3) = G_FREEZE %0
    $vgpr0 = COPY %1(p3)
...

---
name: test_freeze_p4
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_p4
    ; CHECK: [[COPY:%[0-9]+]]:_(p4) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(p4) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](p4)
    %0:_(p4) = COPY $vgpr0_vgpr1
    %1:_(p4) = G_FREEZE %0
    $vgpr0_vgpr1 = COPY %1(p4)
...

---
name: test_freeze_p5
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_p5
    ; CHECK: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(p5) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0 = COPY [[FREEZE]](p5)
    %0:_(p5) = COPY $vgpr0
    %1:_(p5) = G_FREEZE %0
    $vgpr0 = COPY %1(p5)
...

---
name: test_freeze_p999
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_p999
    ; CHECK: [[COPY:%[0-9]+]]:_(p999) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(p999) = G_FREEZE [[COPY]]
    ; CHECK-NEXT: $vgpr0_vgpr1 = COPY [[FREEZE]](p999)
    %0:_(p999) = COPY $vgpr0_vgpr1
    %1:_(p999) = G_FREEZE %0
    $vgpr0_vgpr1 = COPY %1(p999)

...

---
name: test_freeze_v2s1024
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v2s1024
    ; CHECK: [[DEF:%[0-9]+]]:_(<2 x i1024>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<2 x i1024>) = G_FREEZE [[DEF]]
    ; CHECK-NEXT: S_NOP 0, implicit [[FREEZE]](<2 x i1024>)
    %0:_(<2 x i1024>) = G_IMPLICIT_DEF
    %1:_(<2 x i1024>) = G_FREEZE %0
    S_NOP 0, implicit %1(<2 x i1024>)
...

---

name: test_freeze_v3s1024
body: |
  bb.0:

    ; CHECK-LABEL: name: test_freeze_v3s1024
    ; CHECK: [[DEF:%[0-9]+]]:_(<3 x i1024>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(<3 x i1024>) = G_FREEZE [[DEF]]
    ; CHECK-NEXT: S_NOP 0, implicit [[FREEZE]](<3 x i1024>)
    %0:_(<3 x i1024>) = G_IMPLICIT_DEF
    %1:_(<3 x i1024>) = G_FREEZE %0
    S_NOP 0, implicit %1(<3 x i1024>)
...
