# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=gfx908 -run-pass=regbankselect -regbankselect-fast -verify-machineinstrs %s -o - | FileCheck %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx908 -run-pass=regbankselect -regbankselect-greedy -verify-machineinstrs %s -o - | FileCheck %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass=regbankselect -regbankselect-fast -verify-machineinstrs %s -o - | FileCheck --check-prefix=WAVE32 %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass=regbankselect -regbankselect-greedy -verify-machineinstrs %s -o - | FileCheck --check-prefix=WAVE32 %s

---
name: copy_s32_vgpr_to_vgpr
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_s32_vgpr_to_vgpr
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ;
    ; WAVE32-LABEL: name: copy_s32_vgpr_to_vgpr
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY]](i32)
    %0:_(i32) = COPY $vgpr0
    $vgpr0 = COPY %0(i32)

...

---
name: copy_s32_sgpr_to_sgpr
legalized: true

body: |
  bb.0:
    liveins: $sgpr0
    ; CHECK-LABEL: name: copy_s32_sgpr_to_sgpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: $sgpr0 = COPY [[COPY]](i32)
    ;
    ; WAVE32-LABEL: name: copy_s32_sgpr_to_sgpr
    ; WAVE32: liveins: $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE32-NEXT: $sgpr0 = COPY [[COPY]](i32)
    %0:_(i32) = COPY $sgpr0
    $sgpr0 = COPY %0(i32)

...

---
name: copy_s32_sgpr_to_vgpr
legalized: true

body: |
  bb.0:
    liveins: $sgpr0
    ; CHECK-LABEL: name: copy_s32_sgpr_to_vgpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ;
    ; WAVE32-LABEL: name: copy_s32_sgpr_to_vgpr
    ; WAVE32: liveins: $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY]](i32)
    %0:_(i32) = COPY $sgpr0
    $vgpr0 = COPY %0(i32)

...

---
name: copy_s32_vgpr_to_agpr
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_s32_vgpr_to_agpr
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: $agpr0 = COPY [[COPY]](i32)
    ;
    ; WAVE32-LABEL: name: copy_s32_vgpr_to_agpr
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: $agpr0 = COPY [[COPY]](i32)
    %0:_(i32) = COPY $vgpr0
    $agpr0 = COPY %0(i32)

...

---
name: copy_s32_sgpr_to_agpr
legalized: true

body: |
  bb.0:
    liveins: $sgpr0
    ; CHECK-LABEL: name: copy_s32_sgpr_to_agpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: $agpr0 = COPY [[COPY]](i32)
    ;
    ; WAVE32-LABEL: name: copy_s32_sgpr_to_agpr
    ; WAVE32: liveins: $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE32-NEXT: $agpr0 = COPY [[COPY]](i32)
    %0:_(i32) = COPY $sgpr0
    $agpr0 = COPY %0(i32)

...

---
name: copy_s32_agpr_to_vgpr
legalized: true

body: |
  bb.0:
    liveins: $agpr0
    ; CHECK-LABEL: name: copy_s32_agpr_to_vgpr
    ; CHECK: liveins: $agpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:agpr(i32) = COPY $agpr0
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ;
    ; WAVE32-LABEL: name: copy_s32_agpr_to_vgpr
    ; WAVE32: liveins: $agpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:agpr(i32) = COPY $agpr0
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY]](i32)
    %0:_(i32) = COPY $agpr0
    $vgpr0 = COPY %0(i32)

...

---
name: copy_s32_agpr_to_agpr
legalized: true

body: |
  bb.0:
    liveins: $agpr0
    ; CHECK-LABEL: name: copy_s32_agpr_to_agpr
    ; CHECK: liveins: $agpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:agpr(i32) = COPY $agpr0
    ; CHECK-NEXT: $agpr0 = COPY [[COPY]](i32)
    ;
    ; WAVE32-LABEL: name: copy_s32_agpr_to_agpr
    ; WAVE32: liveins: $agpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:agpr(i32) = COPY $agpr0
    ; WAVE32-NEXT: $agpr0 = COPY [[COPY]](i32)
    %0:_(i32) = COPY $agpr0
    $agpr0 = COPY %0(i32)

...

---
name: copy_s1_sgpr_to_vcc_preassigned
legalized: true

body: |
  bb.0:
    liveins: $sgpr0
    ; CHECK-LABEL: name: copy_s1_sgpr_to_vcc_preassigned
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; CHECK-NEXT: S_ENDPGM 0, implicit [[COPY1]](i1)
    ;
    ; WAVE32-LABEL: name: copy_s1_sgpr_to_vcc_preassigned
    ; WAVE32: liveins: $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; WAVE32-NEXT: S_ENDPGM 0, implicit [[COPY1]](i1)
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i1) = G_TRUNC %0(i32)
    %2:vcc(i1) = COPY %1(i1)
    S_ENDPGM 0, implicit %2(i1)
...

---
name: copy_s1_vgpr_to_vcc_preassigned
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_s1_vgpr_to_vcc_preassigned
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; CHECK-NEXT: S_ENDPGM 0, implicit [[COPY1]](i1)
    ;
    ; WAVE32-LABEL: name: copy_s1_vgpr_to_vcc_preassigned
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; WAVE32-NEXT: S_ENDPGM 0, implicit [[COPY1]](i1)
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i1) = G_TRUNC %0(i32)
    %2:vcc(i1) = COPY %1(i1)
    S_ENDPGM 0, implicit %2(i1)
...

---
name: copy_s1_sgpr_to_vcc
legalized: true

body: |
  bb.0:
    liveins: $sgpr0
    ; CHECK-LABEL: name: copy_s1_sgpr_to_vcc
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; CHECK-NEXT: S_ENDPGM 0, implicit [[COPY1]](i1)
    ;
    ; WAVE32-LABEL: name: copy_s1_sgpr_to_vcc
    ; WAVE32: liveins: $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; WAVE32-NEXT: S_ENDPGM 0, implicit [[COPY1]](i1)
    %0:_(i32) = COPY $sgpr0
    %1:_(i1) = G_TRUNC %0(i32)
    %2:vcc(i1) = COPY %1(i1)
    S_ENDPGM 0, implicit %2(i1)
...


---
name: copy_s1_vgpr_to_vcc
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_s1_vgpr_to_vcc
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; CHECK-NEXT: S_ENDPGM 0, implicit [[COPY1]](i1)
    ;
    ; WAVE32-LABEL: name: copy_s1_vgpr_to_vcc
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; WAVE32-NEXT: S_ENDPGM 0, implicit [[COPY1]](i1)
    %0:_(i32) = COPY $vgpr0
    %1:_(i1) = G_TRUNC %0(i32)
    %2:vcc(i1) = COPY %1(i1)
    S_ENDPGM 0, implicit %2(i1)
...

---
name: wave64_copy_sgpr_64_to_s1
legalized: true

body: |
  bb.0:
    liveins: $sgpr4_sgpr5
    ; CHECK-LABEL: name: wave64_copy_sgpr_64_to_s1
    ; CHECK: liveins: $sgpr4_sgpr5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr4_sgpr5
    ; CHECK-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    ;
    ; WAVE32-LABEL: name: wave64_copy_sgpr_64_to_s1
    ; WAVE32: liveins: $sgpr4_sgpr5
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr4_sgpr5
    ; WAVE32-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    %0:_(i1) = COPY $sgpr4_sgpr5
    %1:_(i32) = G_ZEXT %0(i1)
...

---
name: wave32_copy_sgpr_32_to_s1
legalized: true

body: |
  bb.0:
    liveins: $sgpr0
    ; CHECK-LABEL: name: wave32_copy_sgpr_32_to_s1
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    ;
    ; WAVE32-LABEL: name: wave32_copy_sgpr_32_to_s1
    ; WAVE32: liveins: $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr0
    ; WAVE32-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    %0:_(i1) = COPY $sgpr0
    %1:_(i32) = G_ZEXT %0(i1)
...

---
name: wave64_copy2_sgpr_64_to_s1
legalized: true

body: |
  bb.0:
    liveins: $sgpr4_sgpr5, $sgpr6_sgpr7
    ; CHECK-LABEL: name: wave64_copy2_sgpr_64_to_s1
    ; CHECK: liveins: $sgpr4_sgpr5, $sgpr6_sgpr7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr4_sgpr5
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY $sgpr6_sgpr7
    ; CHECK-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C3:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY1]](i1), [[C2]], [[C3]]
    ;
    ; WAVE32-LABEL: name: wave64_copy2_sgpr_64_to_s1
    ; WAVE32: liveins: $sgpr4_sgpr5, $sgpr6_sgpr7
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr4_sgpr5
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY $sgpr6_sgpr7
    ; WAVE32-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY1]](i1), [[C2]], [[C3]]
    %0:_(i1) = COPY $sgpr4_sgpr5
    %1:_(i1) = COPY $sgpr6_sgpr7
    %2:_(i32) = G_ZEXT %0(i1)
    %3:_(i32) = G_ZEXT %1(i1)
...

---
name: wave32_copy2_sgpr_32_to_s1
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; CHECK-LABEL: name: wave32_copy2_sgpr_32_to_s1
    ; CHECK: liveins: $sgpr0, $sgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY $sgpr1
    ; CHECK-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C3:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY1]](i1), [[C2]], [[C3]]
    ;
    ; WAVE32-LABEL: name: wave32_copy2_sgpr_32_to_s1
    ; WAVE32: liveins: $sgpr0, $sgpr1
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr0
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY $sgpr1
    ; WAVE32-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY1]](i1), [[C2]], [[C3]]
    %0:_(i1) = COPY $sgpr0
    %1:_(i1) = COPY $sgpr1
    %2:_(i32) = G_ZEXT %0(i1)
    %3:_(i32) = G_ZEXT %1(i1)
...

---
name: copy_sgpr_64_to_s1_vgpr
legalized: true

body: |
  bb.0:
    liveins: $sgpr4_sgpr5
    ; CHECK-LABEL: name: copy_sgpr_64_to_s1_vgpr
    ; CHECK: liveins: $sgpr4_sgpr5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i1) = COPY $sgpr4_sgpr5
    ; CHECK-NEXT: [[ZEXT:%[0-9]+]]:vgpr(i32) = G_ZEXT [[COPY]](i1)
    ;
    ; WAVE32-LABEL: name: copy_sgpr_64_to_s1_vgpr
    ; WAVE32: liveins: $sgpr4_sgpr5
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i1) = COPY $sgpr4_sgpr5
    ; WAVE32-NEXT: [[ZEXT:%[0-9]+]]:vgpr(i32) = G_ZEXT [[COPY]](i1)
    %0:vgpr(i1) = COPY $sgpr4_sgpr5
    %1:_(i32) = G_ZEXT %0(i1)
...

---
name: copy_sgpr_32_to_s1_vgpr
legalized: true

body: |
  bb.0:
    liveins: $sgpr0
    ; CHECK-LABEL: name: copy_sgpr_32_to_s1_vgpr
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i1) = COPY $sgpr0
    ; CHECK-NEXT: [[ZEXT:%[0-9]+]]:vgpr(i32) = G_ZEXT [[COPY]](i1)
    ;
    ; WAVE32-LABEL: name: copy_sgpr_32_to_s1_vgpr
    ; WAVE32: liveins: $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i1) = COPY $sgpr0
    ; WAVE32-NEXT: [[ZEXT:%[0-9]+]]:vgpr(i32) = G_ZEXT [[COPY]](i1)
    %0:vgpr(i1) = COPY $sgpr0
    %1:_(i32) = G_ZEXT %0(i1)
...

---
name: wave64_copy_sgpr_64_to_s1_vcc
legalized: true

body: |
  bb.0:
    liveins: $sgpr4_sgpr5
    ; CHECK-LABEL: name: wave64_copy_sgpr_64_to_s1_vcc
    ; CHECK: liveins: $sgpr4_sgpr5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr4_sgpr5
    ; CHECK-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    ;
    ; WAVE32-LABEL: name: wave64_copy_sgpr_64_to_s1_vcc
    ; WAVE32: liveins: $sgpr4_sgpr5
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr4_sgpr5
    ; WAVE32-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    %0:vcc(i1) = COPY $sgpr4_sgpr5
    %1:_(i32) = G_ZEXT %0(i1)
...

---
name: wave32_copy_sgpr_32_to_s1_vcc
legalized: true

body: |
  bb.0:
    liveins: $sgpr0
    ; CHECK-LABEL: name: wave32_copy_sgpr_32_to_s1_vcc
    ; CHECK: liveins: $sgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    ;
    ; WAVE32-LABEL: name: wave32_copy_sgpr_32_to_s1_vcc
    ; WAVE32: liveins: $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vcc(i1) = COPY $sgpr0
    ; WAVE32-NEXT: [[C:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:vgpr(i32) = G_CONSTANT i32 0
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[COPY]](i1), [[C]], [[C1]]
    %0:vcc(i1) = COPY $sgpr0
    %1:_(i32) = G_ZEXT %0(i1)
...

---
name: copy_virt_reg_to_s1
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_virt_reg_to_s1
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vgpr(i1) = COPY [[TRUNC]](i1)
    ;
    ; WAVE32-LABEL: name: copy_virt_reg_to_s1
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i1) = COPY [[TRUNC]](i1)
    %0:_(i32) = COPY $vgpr0
    %1:_(i1) = G_TRUNC %0(i32)
    %2:_(i1) = COPY %1(i1)
...

---
name: copy_virt_reg_to_s1_vgpr
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_virt_reg_to_s1_vgpr
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vgpr(i1) = COPY [[TRUNC]](i1)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(i1) = COPY [[COPY1]](i1)
    ;
    ; WAVE32-LABEL: name: copy_virt_reg_to_s1_vgpr
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i1) = COPY [[TRUNC]](i1)
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i1) = COPY [[COPY1]](i1)
    %0:_(i32) = COPY $vgpr0
    %1:_(i1) = G_TRUNC %0(i32)
    %2:vgpr(i1) = COPY %1(i1)
    %3:_(i1) = COPY %2(i1)
...


---
name: copy_virt_reg_to_s1_vcc
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_virt_reg_to_s1_vcc
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vcc(i1) = COPY [[COPY1]](i1)
    ;
    ; WAVE32-LABEL: name: copy_virt_reg_to_s1_vcc
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vcc(i1) = COPY [[TRUNC]](i1)
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vcc(i1) = COPY [[COPY1]](i1)
    %0:_(i32) = COPY $vgpr0
    %1:_(i1) = G_TRUNC %0(i32)
    %2:vcc(i1) = COPY %1(i1)
    %3:_(i1) = COPY %2(i1)
...

---
name: copy_s1_to_sgpr_64
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_s1_to_sgpr_64
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: $sgpr4_sgpr5 = COPY [[TRUNC]](i1)
    ;
    ; WAVE32-LABEL: name: copy_s1_to_sgpr_64
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: $sgpr4_sgpr5 = COPY [[TRUNC]](i1)
    %0:_(i32) = COPY $vgpr0
    %1:_(i1) = G_TRUNC %0(i32)
    $sgpr4_sgpr5 = COPY %1(i1)
...

---
name: copy_s1_to_sgpr_32
legalized: true

body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: copy_s1_to_sgpr_32
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; CHECK-NEXT: $sgpr0 = COPY [[TRUNC]](i1)
    ;
    ; WAVE32-LABEL: name: copy_s1_to_sgpr_32
    ; WAVE32: liveins: $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[TRUNC:%[0-9]+]]:vgpr(i1) = G_TRUNC [[COPY]](i32)
    ; WAVE32-NEXT: $sgpr0 = COPY [[TRUNC]](i1)
    %0:_(i32) = COPY $vgpr0
    %1:_(i1) = G_TRUNC %0(i32)
    $sgpr0 = COPY %1(i1)
...
