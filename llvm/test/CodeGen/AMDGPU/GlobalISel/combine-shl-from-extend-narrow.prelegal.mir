# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=tahiti -run-pass=amdgpu-prelegalizer-combiner -verify-machineinstrs %s -o - | FileCheck -check-prefix=GFX6 %s
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx900 -run-pass=amdgpu-prelegalizer-combiner -verify-machineinstrs %s -o - | FileCheck -check-prefix=GFX9 %s

---
name: narrow_shl_s32_by_2_from_zext_s16
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; GFX6-LABEL: name: narrow_shl_s32_by_2_from_zext_s16
    ; GFX6: liveins: $vgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: %argument:_(i32) = COPY $vgpr0
    ; GFX6-NEXT: %narrow:_(i16) = G_TRUNC %argument(i32)
    ; GFX6-NEXT: %masklow14:_(i16) = G_CONSTANT i16 16383
    ; GFX6-NEXT: %masked:_(i16) = G_AND %narrow, %masklow14
    ; GFX6-NEXT: [[C:%[0-9]+]]:_(i16) = G_CONSTANT i16 2
    ; GFX6-NEXT: [[SHL:%[0-9]+]]:_(i16) = G_SHL %masked, [[C]](i16)
    ; GFX6-NEXT: %shl:_(i32) = G_ZEXT [[SHL]](i16)
    ; GFX6-NEXT: $vgpr0 = COPY %shl(i32)
    ;
    ; GFX9-LABEL: name: narrow_shl_s32_by_2_from_zext_s16
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: %argument:_(i32) = COPY $vgpr0
    ; GFX9-NEXT: %narrow:_(i16) = G_TRUNC %argument(i32)
    ; GFX9-NEXT: %masklow14:_(i16) = G_CONSTANT i16 16383
    ; GFX9-NEXT: %masked:_(i16) = G_AND %narrow, %masklow14
    ; GFX9-NEXT: [[C:%[0-9]+]]:_(i16) = G_CONSTANT i16 2
    ; GFX9-NEXT: [[SHL:%[0-9]+]]:_(i16) = G_SHL %masked, [[C]](i16)
    ; GFX9-NEXT: %shl:_(i32) = G_ZEXT [[SHL]](i16)
    ; GFX9-NEXT: $vgpr0 = COPY %shl(i32)
    %argument:_(i32) = COPY $vgpr0
    %narrow:_(i16) = G_TRUNC %argument(i32)
    %masklow14:_(i16) = G_CONSTANT i16 16383
    %masked:_(i16) = G_AND %narrow, %masklow14
    %extend:_(i32) = G_ZEXT %masked(i16)
    %shiftamt:_(i32) = G_CONSTANT i32 2
    %shl:_(i32) = G_SHL %extend, %shiftamt(i32)
    $vgpr0 = COPY %shl(i32)
...

---
name: narrow_shl_s64_by_2_from_zext_s16
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; GFX6-LABEL: name: narrow_shl_s64_by_2_from_zext_s16
    ; GFX6: liveins: $vgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: %argument:_(i32) = COPY $vgpr0
    ; GFX6-NEXT: %narrow:_(i16) = G_TRUNC %argument(i32)
    ; GFX6-NEXT: %masklow14:_(i16) = G_CONSTANT i16 16383
    ; GFX6-NEXT: %masked:_(i16) = G_AND %narrow, %masklow14
    ; GFX6-NEXT: [[C:%[0-9]+]]:_(i16) = G_CONSTANT i16 2
    ; GFX6-NEXT: [[SHL:%[0-9]+]]:_(i16) = G_SHL %masked, [[C]](i16)
    ; GFX6-NEXT: %shl:_(i64) = G_ZEXT [[SHL]](i16)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY %shl(i64)
    ;
    ; GFX9-LABEL: name: narrow_shl_s64_by_2_from_zext_s16
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: %argument:_(i32) = COPY $vgpr0
    ; GFX9-NEXT: %narrow:_(i16) = G_TRUNC %argument(i32)
    ; GFX9-NEXT: %masklow14:_(i16) = G_CONSTANT i16 16383
    ; GFX9-NEXT: %masked:_(i16) = G_AND %narrow, %masklow14
    ; GFX9-NEXT: [[C:%[0-9]+]]:_(i16) = G_CONSTANT i16 2
    ; GFX9-NEXT: [[SHL:%[0-9]+]]:_(i16) = G_SHL %masked, [[C]](i16)
    ; GFX9-NEXT: %shl:_(i64) = G_ZEXT [[SHL]](i16)
    ; GFX9-NEXT: $vgpr0_vgpr1 = COPY %shl(i64)
    %argument:_(i32) = COPY $vgpr0
    %narrow:_(i16) = G_TRUNC %argument(i32)
    %masklow14:_(i16) = G_CONSTANT i16 16383
    %masked:_(i16) = G_AND %narrow, %masklow14
    %extend:_(i64) = G_ZEXT %masked(i16)
    %shiftamt:_(i32) = G_CONSTANT i32 2
    %shl:_(i64) = G_SHL %extend, %shiftamt(i32)
    $vgpr0_vgpr1 = COPY %shl(i64)
...

---
name: narrow_shl_s16_by_2_from_zext_s8
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; GFX6-LABEL: name: narrow_shl_s16_by_2_from_zext_s8
    ; GFX6: liveins: $vgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: %argument:_(i32) = COPY $vgpr0
    ; GFX6-NEXT: %narrow:_(i8) = G_TRUNC %argument(i32)
    ; GFX6-NEXT: %masklow6:_(i8) = G_CONSTANT i8 63
    ; GFX6-NEXT: %masked:_(i8) = G_AND %narrow, %masklow6
    ; GFX6-NEXT: [[C:%[0-9]+]]:_(i8) = G_CONSTANT i8 2
    ; GFX6-NEXT: [[SHL:%[0-9]+]]:_(i8) = G_SHL %masked, [[C]](i8)
    ; GFX6-NEXT: %result:_(i32) = G_ZEXT [[SHL]](i8)
    ; GFX6-NEXT: $vgpr0 = COPY %result(i32)
    ;
    ; GFX9-LABEL: name: narrow_shl_s16_by_2_from_zext_s8
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: %argument:_(i32) = COPY $vgpr0
    ; GFX9-NEXT: %narrow:_(i8) = G_TRUNC %argument(i32)
    ; GFX9-NEXT: %masklow6:_(i8) = G_CONSTANT i8 63
    ; GFX9-NEXT: %masked:_(i8) = G_AND %narrow, %masklow6
    ; GFX9-NEXT: [[C:%[0-9]+]]:_(i8) = G_CONSTANT i8 2
    ; GFX9-NEXT: [[SHL:%[0-9]+]]:_(i8) = G_SHL %masked, [[C]](i8)
    ; GFX9-NEXT: %result:_(i32) = G_ZEXT [[SHL]](i8)
    ; GFX9-NEXT: $vgpr0 = COPY %result(i32)
    %argument:_(i32) = COPY $vgpr0
    %narrow:_(i8) = G_TRUNC %argument(i32)
    %masklow6:_(i8) = G_CONSTANT i8 63
    %masked:_(i8) = G_AND %narrow, %masklow6
    %extend:_(i16) = G_ZEXT %masked(i8)
    %shiftamt:_(i16) = G_CONSTANT i16 2
    %shl:_(i16) = G_SHL %extend, %shiftamt(i16)
    %result:_(i32) = G_ANYEXT %shl(i16)
    $vgpr0 = COPY %result(i32)
...

---
name: narrow_shl_v2s32_by_2_from_zext_v2s16
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0

    ; GFX6-LABEL: name: narrow_shl_v2s32_by_2_from_zext_v2s16
    ; GFX6: liveins: $vgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: %narrow:_(<2 x i16>) = COPY $vgpr0
    ; GFX6-NEXT: %masklow14:_(i16) = G_CONSTANT i16 16383
    ; GFX6-NEXT: %masklow14vec:_(<2 x i16>) = G_BUILD_VECTOR %masklow14(i16), %masklow14(i16)
    ; GFX6-NEXT: %masked:_(<2 x i16>) = G_AND %narrow, %masklow14vec
    ; GFX6-NEXT: [[C:%[0-9]+]]:_(i16) = G_CONSTANT i16 2
    ; GFX6-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x i16>) = G_BUILD_VECTOR [[C]](i16), [[C]](i16)
    ; GFX6-NEXT: [[SHL:%[0-9]+]]:_(<2 x i16>) = G_SHL %masked, [[BUILD_VECTOR]](<2 x i16>)
    ; GFX6-NEXT: %shl:_(<2 x i32>) = G_ZEXT [[SHL]](<2 x i16>)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY %shl(<2 x i32>)
    ;
    ; GFX9-LABEL: name: narrow_shl_v2s32_by_2_from_zext_v2s16
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: %narrow:_(<2 x i16>) = COPY $vgpr0
    ; GFX9-NEXT: %masklow14:_(i16) = G_CONSTANT i16 16383
    ; GFX9-NEXT: %masklow14vec:_(<2 x i16>) = G_BUILD_VECTOR %masklow14(i16), %masklow14(i16)
    ; GFX9-NEXT: %masked:_(<2 x i16>) = G_AND %narrow, %masklow14vec
    ; GFX9-NEXT: [[C:%[0-9]+]]:_(i16) = G_CONSTANT i16 2
    ; GFX9-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x i16>) = G_BUILD_VECTOR [[C]](i16), [[C]](i16)
    ; GFX9-NEXT: [[SHL:%[0-9]+]]:_(<2 x i16>) = G_SHL %masked, [[BUILD_VECTOR]](<2 x i16>)
    ; GFX9-NEXT: %shl:_(<2 x i32>) = G_ZEXT [[SHL]](<2 x i16>)
    ; GFX9-NEXT: $vgpr0_vgpr1 = COPY %shl(<2 x i32>)
    %narrow:_(<2 x i16>) = COPY $vgpr0
    %masklow14:_(i16) = G_CONSTANT i16 16383
    %masklow14vec:_(<2 x i16>) = G_BUILD_VECTOR %masklow14(i16), %masklow14(i16)
    %masked:_(<2 x i16>) = G_AND %narrow, %masklow14vec
    %extend:_(<2 x i32>) = G_ZEXT %masked(<2 x i16>)
    %shiftamt:_(i32) = G_CONSTANT i32 2
    %shiftamtvec:_(<2 x i32>) = G_BUILD_VECTOR %shiftamt(i32), %shiftamt(i32)
    %shl:_(<2 x i32>) = G_SHL %extend, %shiftamtvec(<2 x i32>)
    $vgpr0_vgpr1 = COPY %shl(<2 x i32>)
...

---
name: narrow_shl_v2s64_by_2_from_anyext_v2s32
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX6-LABEL: name: narrow_shl_v2s64_by_2_from_anyext_v2s32
    ; GFX6: liveins: $vgpr0_vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: %narrow:_(<2 x i32>) = COPY $vgpr0_vgpr1
    ; GFX6-NEXT: %masklow30:_(i32) = G_CONSTANT i32 1073741823
    ; GFX6-NEXT: %masklow30vec:_(<2 x i32>) = G_BUILD_VECTOR %masklow30(i32), %masklow30(i32)
    ; GFX6-NEXT: %masked:_(<2 x i32>) = G_AND %narrow, %masklow30vec
    ; GFX6-NEXT: %shiftamt:_(i32) = G_CONSTANT i32 2
    ; GFX6-NEXT: %shiftamtvec:_(<2 x i32>) = G_BUILD_VECTOR %shiftamt(i32), %shiftamt(i32)
    ; GFX6-NEXT: [[SHL:%[0-9]+]]:_(<2 x i32>) = G_SHL %masked, %shiftamtvec(<2 x i32>)
    ; GFX6-NEXT: %shl:_(<2 x i64>) = G_ZEXT [[SHL]](<2 x i32>)
    ; GFX6-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %shl(<2 x i64>)
    ;
    ; GFX9-LABEL: name: narrow_shl_v2s64_by_2_from_anyext_v2s32
    ; GFX9: liveins: $vgpr0_vgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: %narrow:_(<2 x i32>) = COPY $vgpr0_vgpr1
    ; GFX9-NEXT: %masklow30:_(i32) = G_CONSTANT i32 1073741823
    ; GFX9-NEXT: %masklow30vec:_(<2 x i32>) = G_BUILD_VECTOR %masklow30(i32), %masklow30(i32)
    ; GFX9-NEXT: %masked:_(<2 x i32>) = G_AND %narrow, %masklow30vec
    ; GFX9-NEXT: %shiftamt:_(i32) = G_CONSTANT i32 2
    ; GFX9-NEXT: %shiftamtvec:_(<2 x i32>) = G_BUILD_VECTOR %shiftamt(i32), %shiftamt(i32)
    ; GFX9-NEXT: [[SHL:%[0-9]+]]:_(<2 x i32>) = G_SHL %masked, %shiftamtvec(<2 x i32>)
    ; GFX9-NEXT: %shl:_(<2 x i64>) = G_ZEXT [[SHL]](<2 x i32>)
    ; GFX9-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %shl(<2 x i64>)
    %narrow:_(<2 x i32>) = COPY $vgpr0_vgpr1
    %masklow30:_(i32) = G_CONSTANT i32 1073741823
    %masklow30vec:_(<2 x i32>) = G_BUILD_VECTOR %masklow30(i32), %masklow30(i32)
    %masked:_(<2 x i32>) = G_AND %narrow, %masklow30vec
    %extend:_(<2 x i64>) = G_ANYEXT %masked(<2 x i32>)
    %shiftamt:_(i32) = G_CONSTANT i32 2
    %shiftamtvec:_(<2 x i32>) = G_BUILD_VECTOR %shiftamt(i32), %shiftamt(i32)
    %shl:_(<2 x i64>) = G_SHL %extend, %shiftamtvec(<2 x i32>)
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %shl(<2 x i64>)
...

---
name: do_not_shl_s32_zero_by_16_from_zext_s16
tracksRegLiveness: true
legalized: true

body:             |
  bb.0:
    liveins: $vgpr0
    ; GFX6-LABEL: name: do_not_shl_s32_zero_by_16_from_zext_s16
    ; GFX6: liveins: $vgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: %extend:_(i32) = G_CONSTANT i32 0
    ; GFX6-NEXT: $vgpr0 = COPY %extend(i32)
    ;
    ; GFX9-LABEL: name: do_not_shl_s32_zero_by_16_from_zext_s16
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: %extend:_(i32) = G_CONSTANT i32 0
    ; GFX9-NEXT: $vgpr0 = COPY %extend(i32)
    %zero:_(i16) = G_CONSTANT i16 0
    %extend:_(i32) = G_ZEXT %zero(i16)
    %shiftamt:_(i16) = G_CONSTANT i16 16
    %shl:_(i32) = G_SHL %extend, %shiftamt(i16)
    $vgpr0 = COPY %shl(i32)
...

---
name: do_not_shl_v2s32_zero_by_16_from_zext_v2s16
tracksRegLiveness: true
legalized: true

body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GFX6-LABEL: name: do_not_shl_v2s32_zero_by_16_from_zext_v2s16
    ; GFX6: liveins: $vgpr0, $vgpr1
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 0
    ; GFX6-NEXT: %shl:_(<2 x i32>) = G_BUILD_VECTOR [[C]](i32), [[C]](i32)
    ; GFX6-NEXT: $vgpr0_vgpr1 = COPY %shl(<2 x i32>)
    ;
    ; GFX9-LABEL: name: do_not_shl_v2s32_zero_by_16_from_zext_v2s16
    ; GFX9: liveins: $vgpr0, $vgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 0
    ; GFX9-NEXT: %shl:_(<2 x i32>) = G_BUILD_VECTOR [[C]](i32), [[C]](i32)
    ; GFX9-NEXT: $vgpr0_vgpr1 = COPY %shl(<2 x i32>)
    %zero:_(i16) = G_CONSTANT i16 0
    %zerovector:_(<2 x i16>) = G_BUILD_VECTOR %zero(i16), %zero(i16)
    %shiftamt:_(i16) = G_CONSTANT i16 16
    %shiftamtvector:_(<2 x i16>) = G_BUILD_VECTOR %shiftamt(i16), %shiftamt(i16)
    %extend:_(<2 x i32>) = G_ZEXT %zerovector(<2 x i16>)
    %shl:_(<2 x i32>) = G_SHL %extend, %shiftamtvector(<2 x i16>)
    $vgpr0_vgpr1 = COPY %shl(<2 x i32>)
...

---
name: do_not_shl_s32_by_16_from_zext_s16
tracksRegLiveness: true
legalized: true

body:             |
  bb.0:
    liveins: $vgpr0
    ; GFX6-LABEL: name: do_not_shl_s32_by_16_from_zext_s16
    ; GFX6: liveins: $vgpr0
    ; GFX6-NEXT: {{  $}}
    ; GFX6-NEXT: %argument:_(i32) = COPY $vgpr0
    ; GFX6-NEXT: %truncate:_(i16) = G_TRUNC %argument(i32)
    ; GFX6-NEXT: %shiftamt:_(i16) = G_CONSTANT i16 16
    ; GFX6-NEXT: %extend:_(i32) = G_ZEXT %truncate(i16)
    ; GFX6-NEXT: %shl:_(i32) = G_SHL %extend, %shiftamt(i16)
    ; GFX6-NEXT: $vgpr0 = COPY %shl(i32)
    ;
    ; GFX9-LABEL: name: do_not_shl_s32_by_16_from_zext_s16
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: %argument:_(i32) = COPY $vgpr0
    ; GFX9-NEXT: %truncate:_(i16) = G_TRUNC %argument(i32)
    ; GFX9-NEXT: %shiftamt:_(i16) = G_CONSTANT i16 16
    ; GFX9-NEXT: %extend:_(i32) = G_ZEXT %truncate(i16)
    ; GFX9-NEXT: %shl:_(i32) = G_SHL %extend, %shiftamt(i16)
    ; GFX9-NEXT: $vgpr0 = COPY %shl(i32)
    %argument:_(i32) = COPY $vgpr0
    %truncate:_(i16) = G_TRUNC %argument(i32)
    %shiftamt:_(i16) = G_CONSTANT i16 16
    %extend:_(i32) = G_ZEXT %truncate(i16)
    %shl:_(i32) = G_SHL %extend, %shiftamt(i16)
    $vgpr0 = COPY %shl(i32)
...
