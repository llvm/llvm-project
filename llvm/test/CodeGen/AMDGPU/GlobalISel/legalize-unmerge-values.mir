# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-- -O0 -run-pass=legalizer -global-isel-abort=0 -o - %s | FileCheck %s

---
name: test_unmerge_s32_s64
body: |
  bb.0:
    ; CHECK-LABEL: name: test_unmerge_s32_s64
    ; CHECK: [[C:%[0-9]+]]:_(i64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[C]](i64)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[UV1]](i32)
    %0:_(i64) = G_CONSTANT i64 0
    %1:_(i32), %2:_(i32) = G_UNMERGE_VALUES %0(i64)
    $vgpr0 = COPY %1(i32)
    $vgpr1 = COPY %2(i32)
...

---
name: test_unmerge_s32_v2s32
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s32_v2s32
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<2 x i32>) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<2 x i32>)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[UV1]](i32)
    %0:_(<2 x i32>) = COPY $vgpr0_vgpr1
    %1:_(i32), %2:_(i32) = G_UNMERGE_VALUES %0(<2 x i32>)
    $vgpr0 = COPY %1(i32)
    $vgpr1 = COPY %2(i32)
...

---
name: test_unmerge_s32_v7s64
body: |
  bb.0:
    liveins:
    ; CHECK-LABEL: name: test_unmerge_s32_v7s64
    ; CHECK: [[DEF:%[0-9]+]]:_(<7 x i64>) = IMPLICIT_DEF
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32), [[UV3:%[0-9]+]]:_(i32), [[UV4:%[0-9]+]]:_(i32), [[UV5:%[0-9]+]]:_(i32), [[UV6:%[0-9]+]]:_(i32), [[UV7:%[0-9]+]]:_(i32), [[UV8:%[0-9]+]]:_(i32), [[UV9:%[0-9]+]]:_(i32), [[UV10:%[0-9]+]]:_(i32), [[UV11:%[0-9]+]]:_(i32), [[UV12:%[0-9]+]]:_(i32), [[UV13:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[DEF]](<7 x i64>)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[UV1]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[UV2]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[UV3]](i32)
    ; CHECK-NEXT: $vgpr4 = COPY [[UV4]](i32)
    ; CHECK-NEXT: $vgpr5 = COPY [[UV5]](i32)
    ; CHECK-NEXT: $vgpr6 = COPY [[UV6]](i32)
    ; CHECK-NEXT: $vgpr7 = COPY [[UV7]](i32)
    ; CHECK-NEXT: $vgpr8 = COPY [[UV8]](i32)
    ; CHECK-NEXT: $vgpr9 = COPY [[UV9]](i32)
    ; CHECK-NEXT: $vgpr10 = COPY [[UV10]](i32)
    ; CHECK-NEXT: $vgpr11 = COPY [[UV11]](i32)
    ; CHECK-NEXT: $vgpr12 = COPY [[UV12]](i32)
    ; CHECK-NEXT: $vgpr13 = COPY [[UV13]](i32)
    %0:_(<7 x i64>) = IMPLICIT_DEF
    %1:_(i32), %2:_(i32), %3:_(i32), %4:_(i32), %5:_(i32), %6:_(i32), %7:_(i32), %8:_(i32), %9:_(i32), %10:_(i32), %11:_(i32), %12:_(i32), %13:_(i32), %14:_(i32) = G_UNMERGE_VALUES %0(<7 x i64>)
    $vgpr0 = COPY %1(i32)
    $vgpr1 = COPY %2(i32)
    $vgpr2 = COPY %3(i32)
    $vgpr3 = COPY %4(i32)
    $vgpr4 = COPY %5(i32)
    $vgpr5 = COPY %6(i32)
    $vgpr6 = COPY %7(i32)
    $vgpr7 = COPY %8(i32)
    $vgpr8 = COPY %9(i32)
    $vgpr9 = COPY %10(i32)
    $vgpr10 = COPY %11(i32)
    $vgpr11 = COPY %12(i32)
    $vgpr12 = COPY %13(i32)
    $vgpr13 = COPY %14(i32)
...

---
name: test_unmerge_s16_v2s16
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s16_v2s16
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<2 x i16>) = COPY $vgpr0
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(i32) = G_BITCAST [[COPY]](<2 x i16>)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    %0:_(<2 x i16>) = COPY $vgpr0
    %1:_(i16), %2:_(i16) = G_UNMERGE_VALUES %0(<2 x i16>)
    %3:_(i32) = G_ANYEXT %1(i16)
    %4:_(i32) = G_ANYEXT %2(i16)
    $vgpr0 = COPY %3(i32)
    $vgpr1 = COPY %4(i32)
...

---
name: test_unmerge_s16_v3s16
body: |
  bb.0:
    ; CHECK-LABEL: name: test_unmerge_s16_v3s16
    ; CHECK: [[DEF:%[0-9]+]]:_(<4 x i16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(<2 x i16>), [[UV1:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[DEF]](<4 x i16>)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(i32) = G_BITCAST [[UV]](<2 x i16>)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST]], [[C]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[UV1]](<2 x i16>)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[BITCAST1]](i32)
    %0:_(<3 x i16>) = G_IMPLICIT_DEF
    %1:_(i16), %2:_(i16), %3:_(i16) = G_UNMERGE_VALUES %0(<3 x i16>)
    %4:_(i32) = G_ANYEXT %1(i16)
    %5:_(i32) = G_ANYEXT %2(i16)
    %6:_(i32) = G_ANYEXT %3(i16)
    $vgpr0 = COPY %4(i32)
    $vgpr1 = COPY %5(i32)
    $vgpr2 = COPY %6(i32)
...

---

name: test_unmerge_s16_v4s16
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s16_v4s16
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<4 x i16>) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(<2 x i16>), [[UV1:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[COPY]](<4 x i16>)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(i32) = G_BITCAST [[UV]](<2 x i16>)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST]], [[C]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[UV1]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST1]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[BITCAST1]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR1]](i32)
    %0:_(<4 x i16>) = COPY $vgpr0_vgpr1
    %1:_(i16), %2:_(i16), %3:_(i16), %4:_(i16) = G_UNMERGE_VALUES %0(<4 x i16>)
    %5:_(i32) = G_ANYEXT %1(i16)
    %6:_(i32) = G_ANYEXT %2(i16)
    %7:_(i32) = G_ANYEXT %3(i16)
    %8:_(i32) = G_ANYEXT %4(i16)
    $vgpr0 = COPY %5(i32)
    $vgpr1 = COPY %6(i32)
    $vgpr2 = COPY %7(i32)
    $vgpr3 = COPY %8(i32)
...

---
name: test_unmerge_s16_v6s16
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s16_v6s16
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<6 x i16>) = COPY $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(<2 x i16>), [[UV1:%[0-9]+]]:_(<2 x i16>), [[UV2:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[COPY]](<6 x i16>)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(i32) = G_BITCAST [[UV]](<2 x i16>)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST]], [[C]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[UV1]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST1]], [[C]](i32)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(i32) = G_BITCAST [[UV2]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST2]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[BITCAST]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[BITCAST1]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr4 = COPY [[BITCAST2]](i32)
    ; CHECK-NEXT: $vgpr5 = COPY [[LSHR2]](i32)
    %0:_(<6 x i16>) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(i16), %2:_(i16), %3:_(i16), %4:_(i16), %5:_(i16), %6:_(i16) = G_UNMERGE_VALUES %0(<6 x i16>)
    %7:_(i32) = G_ANYEXT %1(i16)
    %8:_(i32) = G_ANYEXT %2(i16)
    %9:_(i32) = G_ANYEXT %3(i16)
    %10:_(i32) = G_ANYEXT %4(i16)
    %11:_(i32) = G_ANYEXT %5(i16)
    %12:_(i32) = G_ANYEXT %6(i16)
    $vgpr0 = COPY %7(i32)
    $vgpr1 = COPY %8(i32)
    $vgpr2 = COPY %9(i32)
    $vgpr3 = COPY %10(i32)
    $vgpr4 = COPY %11(i32)
    $vgpr5 = COPY %12(i32)
...

---

name: test_unmerge_s8_s16
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s8_s16
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i16) = G_TRUNC %0(i32)
    %2:_(i8), %3:_(i8) = G_UNMERGE_VALUES %1(i16)
    %4:_(i32) = G_ANYEXT %2(i8)
    %5:_(i32) = G_ANYEXT %3(i8)
    $vgpr0 = COPY %4(i32)
    $vgpr1 = COPY %5(i32)
...

---
name: test_unmerge_s8_s32
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s8_s32
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 24
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C2]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR2]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i8), %2:_(i8), %3:_(i8), %4:_(i8) = G_UNMERGE_VALUES %0(i32)
    %5:_(i32) = G_ANYEXT %1(i8)
    %6:_(i32) = G_ANYEXT %2(i8)
    %7:_(i32) = G_ANYEXT %3(i8)
    %8:_(i32) = G_ANYEXT %4(i8)
    $vgpr0 = COPY %5(i32)
    $vgpr1 = COPY %6(i32)
    $vgpr2 = COPY %7(i32)
    $vgpr3 = COPY %8(i32)
...

---
name: test_unmerge_s8_s48
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s8_s48
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](i64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(i32) = G_AND [[UV]], [[C2]]
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[AND]], [[COPY1]](i32)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[LSHR]], [[COPY2]](i32)
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(i32) = G_AND [[UV1]], [[C2]]
    ; CHECK-NEXT: [[LSHR3:%[0-9]+]]:_(i32) = G_LSHR [[AND1]], [[C1]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR2]](i32)
    ; CHECK-NEXT: $vgpr4 = COPY [[UV1]](i32)
    ; CHECK-NEXT: $vgpr5 = COPY [[LSHR3]](i32)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i48) = G_TRUNC %0(i64)
    %2:_(i8), %3:_(i8), %4:_(i8), %5:_(i8), %6:_(i8), %7:_(i8) = G_UNMERGE_VALUES %1(i48)
    %8:_(i32) = G_ANYEXT %2(i8)
    %9:_(i32) = G_ANYEXT %3(i8)
    %10:_(i32) = G_ANYEXT %4(i8)
    %11:_(i32) = G_ANYEXT %5(i8)
    %12:_(i32) = G_ANYEXT %6(i8)
    %13:_(i32) = G_ANYEXT %7(i8)
    $vgpr0 = COPY %8(i32)
    $vgpr1 = COPY %9(i32)
    $vgpr2 = COPY %10(i32)
    $vgpr3 = COPY %11(i32)
    $vgpr4 = COPY %12(i32)
    $vgpr5 = COPY %13(i32)
...

---
name: test_unmerge_s16_s48
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s16_s48
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](i64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[UV1]](i32)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i48) = G_TRUNC %0(i64)
    %2:_(i16), %3:_(i16), %4:_(i16) = G_UNMERGE_VALUES %1(i48)
    %5:_(i32) = G_ANYEXT %2(i16)
    %6:_(i32) = G_ANYEXT %3(i16)
    %7:_(i32) = G_ANYEXT %4(i16)
    $vgpr0 = COPY %5(i32)
    $vgpr1 = COPY %6(i32)
    $vgpr2 = COPY %7(i32)
...

---
name: test_unmerge_s8_s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s8_s64
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](i64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C]](i32)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[UV1]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(i32) = G_AND [[UV]], [[C2]]
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[AND]], [[COPY1]](i32)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[LSHR3:%[0-9]+]]:_(i32) = G_LSHR [[LSHR]], [[COPY2]](i32)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(i32) = G_AND [[UV1]], [[C2]]
    ; CHECK-NEXT: [[LSHR4:%[0-9]+]]:_(i32) = G_LSHR [[AND1]], [[COPY3]](i32)
    ; CHECK-NEXT: [[LSHR5:%[0-9]+]]:_(i32) = G_LSHR [[LSHR1]], [[C1]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR2]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR3]](i32)
    ; CHECK-NEXT: $vgpr4 = COPY [[UV1]](i32)
    ; CHECK-NEXT: $vgpr5 = COPY [[LSHR4]](i32)
    ; CHECK-NEXT: $vgpr6 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr7 = COPY [[LSHR5]](i32)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i8), %2:_(i8), %3:_(i8), %4:_(i8), %5:_(i8), %6:_(i8), %7:_(i8), %8:_(i8) = G_UNMERGE_VALUES %0(i64)
    %9:_(i32) = G_ANYEXT %1(i8)
    %10:_(i32) = G_ANYEXT %2(i8)
    %11:_(i32) = G_ANYEXT %3(i8)
    %12:_(i32) = G_ANYEXT %4(i8)
    %13:_(i32) = G_ANYEXT %5(i8)
    %14:_(i32) = G_ANYEXT %6(i8)
    %15:_(i32) = G_ANYEXT %7(i8)
    %16:_(i32) = G_ANYEXT %8(i8)
    $vgpr0 = COPY %9(i32)
    $vgpr1 = COPY %10(i32)
    $vgpr2 = COPY %11(i32)
    $vgpr3 = COPY %12(i32)
    $vgpr4 = COPY %13(i32)
    $vgpr5 = COPY %14(i32)
    $vgpr6 = COPY %15(i32)
    $vgpr7 = COPY %16(i32)
...

---
name: test_unmerge_s8_p1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s8_p1
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](p1)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C]](i32)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[UV1]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(i32) = G_AND [[UV]], [[C2]]
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[AND]], [[COPY1]](i32)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[LSHR3:%[0-9]+]]:_(i32) = G_LSHR [[LSHR]], [[COPY2]](i32)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(i32) = G_AND [[UV1]], [[C2]]
    ; CHECK-NEXT: [[LSHR4:%[0-9]+]]:_(i32) = G_LSHR [[AND1]], [[COPY3]](i32)
    ; CHECK-NEXT: [[LSHR5:%[0-9]+]]:_(i32) = G_LSHR [[LSHR1]], [[C1]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR2]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR3]](i32)
    ; CHECK-NEXT: $vgpr4 = COPY [[UV1]](i32)
    ; CHECK-NEXT: $vgpr5 = COPY [[LSHR4]](i32)
    ; CHECK-NEXT: $vgpr6 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr7 = COPY [[LSHR5]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i8), %2:_(i8), %3:_(i8), %4:_(i8), %5:_(i8), %6:_(i8), %7:_(i8), %8:_(i8) = G_UNMERGE_VALUES %0(p1)
    %9:_(i32) = G_ANYEXT %1(i8)
    %10:_(i32) = G_ANYEXT %2(i8)
    %11:_(i32) = G_ANYEXT %3(i8)
    %12:_(i32) = G_ANYEXT %4(i8)
    %13:_(i32) = G_ANYEXT %5(i8)
    %14:_(i32) = G_ANYEXT %6(i8)
    %15:_(i32) = G_ANYEXT %7(i8)
    %16:_(i32) = G_ANYEXT %8(i8)
    $vgpr0 = COPY %9(i32)
    $vgpr1 = COPY %10(i32)
    $vgpr2 = COPY %11(i32)
    $vgpr3 = COPY %12(i32)
    $vgpr4 = COPY %13(i32)
    $vgpr5 = COPY %14(i32)
    $vgpr6 = COPY %15(i32)
    $vgpr7 = COPY %16(i32)
...

---
name: test_unmerge_s4_p1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s4_p1
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](p1)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C]](i32)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[UV1]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 4
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(i32) = G_AND [[UV]], [[C2]]
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[AND]], [[COPY1]](i32)
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY [[C3]](i32)
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(i32) = G_AND [[UV]], [[C2]]
    ; CHECK-NEXT: [[LSHR3:%[0-9]+]]:_(i32) = G_LSHR [[AND1]], [[COPY2]](i32)
    ; CHECK-NEXT: [[C4:%[0-9]+]]:_(i32) = G_CONSTANT i32 12
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY [[C4]](i32)
    ; CHECK-NEXT: [[AND2:%[0-9]+]]:_(i32) = G_AND [[UV]], [[C2]]
    ; CHECK-NEXT: [[LSHR4:%[0-9]+]]:_(i32) = G_LSHR [[AND2]], [[COPY3]](i32)
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[LSHR5:%[0-9]+]]:_(i32) = G_LSHR [[LSHR]], [[COPY4]](i32)
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY [[C3]](i32)
    ; CHECK-NEXT: [[LSHR6:%[0-9]+]]:_(i32) = G_LSHR [[LSHR]], [[COPY5]](i32)
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY [[C4]](i32)
    ; CHECK-NEXT: [[LSHR7:%[0-9]+]]:_(i32) = G_LSHR [[LSHR]], [[COPY6]](i32)
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i32) = COPY [[C1]](i32)
    ; CHECK-NEXT: [[AND3:%[0-9]+]]:_(i32) = G_AND [[UV1]], [[C2]]
    ; CHECK-NEXT: [[LSHR8:%[0-9]+]]:_(i32) = G_LSHR [[AND3]], [[COPY7]](i32)
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:_(i32) = COPY [[C3]](i32)
    ; CHECK-NEXT: [[AND4:%[0-9]+]]:_(i32) = G_AND [[UV1]], [[C2]]
    ; CHECK-NEXT: [[LSHR9:%[0-9]+]]:_(i32) = G_LSHR [[AND4]], [[COPY8]](i32)
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:_(i32) = COPY [[C4]](i32)
    ; CHECK-NEXT: [[AND5:%[0-9]+]]:_(i32) = G_AND [[UV1]], [[C2]]
    ; CHECK-NEXT: [[LSHR10:%[0-9]+]]:_(i32) = G_LSHR [[AND5]], [[COPY9]](i32)
    ; CHECK-NEXT: [[LSHR11:%[0-9]+]]:_(i32) = G_LSHR [[LSHR1]], [[C1]](i32)
    ; CHECK-NEXT: [[LSHR12:%[0-9]+]]:_(i32) = G_LSHR [[LSHR1]], [[C3]](i32)
    ; CHECK-NEXT: [[LSHR13:%[0-9]+]]:_(i32) = G_LSHR [[LSHR1]], [[C4]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR2]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR3]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR4]](i32)
    ; CHECK-NEXT: $vgpr4 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr5 = COPY [[LSHR5]](i32)
    ; CHECK-NEXT: $vgpr6 = COPY [[LSHR6]](i32)
    ; CHECK-NEXT: $vgpr7 = COPY [[LSHR7]](i32)
    ; CHECK-NEXT: $vgpr8 = COPY [[UV1]](i32)
    ; CHECK-NEXT: $vgpr9 = COPY [[LSHR8]](i32)
    ; CHECK-NEXT: $vgpr10 = COPY [[LSHR9]](i32)
    ; CHECK-NEXT: $vgpr11 = COPY [[LSHR10]](i32)
    ; CHECK-NEXT: $vgpr12 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr13 = COPY [[LSHR11]](i32)
    ; CHECK-NEXT: $vgpr14 = COPY [[LSHR12]](i32)
    ; CHECK-NEXT: $vgpr15 = COPY [[LSHR13]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i4), %2:_(i4), %3:_(i4), %4:_(i4), %5:_(i4), %6:_(i4), %7:_(i4), %8:_(i4), %9:_(i4), %10:_(i4), %11:_(i4), %12:_(i4), %13:_(i4), %14:_(i4), %15:_(i4), %16:_(i4) = G_UNMERGE_VALUES %0(p1)
    %17:_(i32) = G_ANYEXT %1(i4)
    %18:_(i32) = G_ANYEXT %2(i4)
    %19:_(i32) = G_ANYEXT %3(i4)
    %20:_(i32) = G_ANYEXT %4(i4)
    %21:_(i32) = G_ANYEXT %5(i4)
    %22:_(i32) = G_ANYEXT %6(i4)
    %23:_(i32) = G_ANYEXT %7(i4)
    %24:_(i32) = G_ANYEXT %8(i4)
    %25:_(i32) = G_ANYEXT %9(i4)
    %26:_(i32) = G_ANYEXT %10(i4)
    %27:_(i32) = G_ANYEXT %11(i4)
    %28:_(i32) = G_ANYEXT %12(i4)
    %29:_(i32) = G_ANYEXT %13(i4)
    %30:_(i32) = G_ANYEXT %14(i4)
    %31:_(i32) = G_ANYEXT %15(i4)
    %32:_(i32) = G_ANYEXT %16(i4)
    $vgpr0 = COPY %17(i32)
    $vgpr1 = COPY %18(i32)
    $vgpr2 = COPY %19(i32)
    $vgpr3 = COPY %20(i32)
    $vgpr4 = COPY %21(i32)
    $vgpr5 = COPY %22(i32)
    $vgpr6 = COPY %23(i32)
    $vgpr7 = COPY %24(i32)
    $vgpr8 = COPY %25(i32)
    $vgpr9 = COPY %26(i32)
    $vgpr10 = COPY %27(i32)
    $vgpr11 = COPY %28(i32)
    $vgpr12 = COPY %29(i32)
    $vgpr13 = COPY %30(i32)
    $vgpr14 = COPY %31(i32)
    $vgpr15 = COPY %32(i32)
...

---
name: test_unmerge_s16_p1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s16_p1
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](p1)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C]](i32)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[UV1]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[UV1]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR1]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i16), %2:_(i16), %3:_(i16), %4:_(i16) = G_UNMERGE_VALUES %0(p1)
    %5:_(i32) = G_ANYEXT %1(i16)
    %6:_(i32) = G_ANYEXT %2(i16)
    %7:_(i32) = G_ANYEXT %3(i16)
    %8:_(i32) = G_ANYEXT %4(i16)
    $vgpr0 = COPY %5(i32)
    $vgpr1 = COPY %6(i32)
    $vgpr2 = COPY %7(i32)
    $vgpr3 = COPY %8(i32)
...

---
name: test_unmerge_s32_p1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s32_p1
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p1) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](p1)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[UV1]](i32)
    %0:_(p1) = COPY $vgpr0_vgpr1
    %1:_(i32), %2:_(i32) = G_UNMERGE_VALUES %0(p1)
    $vgpr0 = COPY %1(i32)
    $vgpr1 = COPY %2(i32)
...

---
name: test_unmerge_s16_s32
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s16_s32
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i16), %2:_(i16) = G_UNMERGE_VALUES %0(i32)
    %3:_(i32) = G_ANYEXT %1(i16)
    %4:_(i32) = G_ANYEXT %2(i16)
    $vgpr0 = COPY %3(i32)
    $vgpr1 = COPY %4(i32)
...

---
name: test_unmerge_s16_p3
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s16_p3
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(i32) = G_PTRTOINT [[COPY]](p3)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[PTRTOINT]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[PTRTOINT]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    %0:_(p3) = COPY $vgpr0
    %1:_(i16), %2:_(i16) = G_UNMERGE_VALUES %0(p3)
    %3:_(i32) = G_ANYEXT %1(i16)
    %4:_(i32) = G_ANYEXT %2(i16)
    $vgpr0 = COPY %3(i32)
    $vgpr1 = COPY %4(i32)
...

---
name: test_unmerge_s8_p3
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s8_p3
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[PTRTOINT:%[0-9]+]]:_(i32) = G_PTRTOINT [[COPY]](p3)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[PTRTOINT]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[PTRTOINT]], [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 24
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[PTRTOINT]], [[C2]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[PTRTOINT]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR2]](i32)
    %0:_(p3) = COPY $vgpr0
    %1:_(i8), %2:_(i8), %3:_(i8), %4:_(i8) = G_UNMERGE_VALUES %0(p3)
    %5:_(i32) = G_ANYEXT %1(i8)
    %6:_(i32) = G_ANYEXT %2(i8)
    %7:_(i32) = G_ANYEXT %3(i8)
    %8:_(i32) = G_ANYEXT %4(i8)
    $vgpr0 = COPY %5(i32)
    $vgpr1 = COPY %6(i32)
    $vgpr2 = COPY %7(i32)
    $vgpr3 = COPY %8(i32)

...

---
name: test_unmerge_s16_s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s16_s64
    ; CHECK: liveins: $vgpr0_vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](i64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C]](i32)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[UV1]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[UV]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[UV1]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR1]](i32)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i16), %2:_(i16), %3:_(i16), %4:_(i16) = G_UNMERGE_VALUES %0(i64)
    %5:_(i32) = G_ANYEXT %1(i16)
    %6:_(i32) = G_ANYEXT %2(i16)
    %7:_(i32) = G_ANYEXT %3(i16)
    %8:_(i32) = G_ANYEXT %4(i16)
    $vgpr0 = COPY %5(i32)
    $vgpr1 = COPY %6(i32)
    $vgpr2 = COPY %7(i32)
    $vgpr3 = COPY %8(i32)
...

---
name: test_unmerge_s1_s3
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s1_s3
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 2
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C1]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR1]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i3) = G_TRUNC %0(i32)
    %2:_(i1), %3:_(i1), %4:_(i1) = G_UNMERGE_VALUES %1(i3)
    %5:_(i32) = G_ANYEXT %2(i1)
    %6:_(i32) = G_ANYEXT %3(i1)
    %7:_(i32) = G_ANYEXT %4(i1)
    $vgpr0 = COPY %5(i32)
    $vgpr1 = COPY %6(i32)
    $vgpr2 = COPY %7(i32)
...

---
name: test_unmerge_s1_s8
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s1_s8
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 2
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 3
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C2]](i32)
    ; CHECK-NEXT: [[C3:%[0-9]+]]:_(i32) = G_CONSTANT i32 4
    ; CHECK-NEXT: [[LSHR3:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C3]](i32)
    ; CHECK-NEXT: [[C4:%[0-9]+]]:_(i32) = G_CONSTANT i32 5
    ; CHECK-NEXT: [[LSHR4:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C4]](i32)
    ; CHECK-NEXT: [[C5:%[0-9]+]]:_(i32) = G_CONSTANT i32 6
    ; CHECK-NEXT: [[LSHR5:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C5]](i32)
    ; CHECK-NEXT: [[C6:%[0-9]+]]:_(i32) = G_CONSTANT i32 7
    ; CHECK-NEXT: [[LSHR6:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C6]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR2]](i32)
    ; CHECK-NEXT: $vgpr4 = COPY [[LSHR3]](i32)
    ; CHECK-NEXT: $vgpr5 = COPY [[LSHR4]](i32)
    ; CHECK-NEXT: $vgpr6 = COPY [[LSHR5]](i32)
    ; CHECK-NEXT: $vgpr7 = COPY [[LSHR6]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i8) = G_TRUNC %0(i32)
    %2:_(i1), %3:_(i1), %4:_(i1), %5:_(i1), %6:_(i1), %7:_(i1), %8:_(i1), %9:_(i1) = G_UNMERGE_VALUES %1(i8)
    %10:_(i32) = G_ANYEXT %2(i1)
    %11:_(i32) = G_ANYEXT %3(i1)
    %12:_(i32) = G_ANYEXT %4(i1)
    %13:_(i32) = G_ANYEXT %5(i1)
    %14:_(i32) = G_ANYEXT %6(i1)
    %15:_(i32) = G_ANYEXT %7(i1)
    %16:_(i32) = G_ANYEXT %8(i1)
    %17:_(i32) = G_ANYEXT %9(i1)
    $vgpr0 = COPY %10(i32)
    $vgpr1 = COPY %11(i32)
    $vgpr2 = COPY %12(i32)
    $vgpr3 = COPY %13(i32)
    $vgpr4 = COPY %14(i32)
    $vgpr5 = COPY %15(i32)
    $vgpr6 = COPY %16(i32)
    $vgpr7 = COPY %17(i32)
...

---

name: test_unmerge_s128_v2s128
body: |
  bb.0:
    liveins:  $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-LABEL: name: test_unmerge_s128_v2s128
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<2 x i128>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i128), [[UV1:%[0-9]+]]:_(i128) = G_UNMERGE_VALUES [[COPY]](<2 x i128>)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[UV]](i128)
    ; CHECK-NEXT: $vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[UV1]](i128)
    %0:_(<2 x i128>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    %1:_(i128), %2:_(i128) = G_UNMERGE_VALUES %0(<2 x i128>)
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(i128)
    $vgpr4_vgpr5_vgpr6_vgpr7 = COPY %2(i128)
...

---

name: test_unmerge_s128_s256
body: |
  bb.0:
    liveins:  $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-LABEL: name: test_unmerge_s128_s256
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i128), [[UV1:%[0-9]+]]:_(i128) = G_UNMERGE_VALUES [[COPY]](i256)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[UV]](i128)
    ; CHECK-NEXT: $vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[UV1]](i128)
    %0:_(i256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    %1:_(i128), %2:_(i128) = G_UNMERGE_VALUES %0(i256)
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1(i128)
    $vgpr4_vgpr5_vgpr6_vgpr7 = COPY %2(i128)
...

---

name: test_unmerge_s256_s512
body: |
  bb.0:
    liveins:  $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15

    ; CHECK-LABEL: name: test_unmerge_s256_s512
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i256), [[UV1:%[0-9]+]]:_(i256) = G_UNMERGE_VALUES [[COPY]](i512)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[UV]](i256)
    ; CHECK-NEXT: $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[UV1]](i256)
    %0:_(i512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i256), %2:_(i256) = G_UNMERGE_VALUES %0(i512)
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY %1(i256)
    $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY %2(i256)
...

---

name: test_unmerge_s256_v2s256
body: |
  bb.0:
    liveins:  $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15

    ; CHECK-LABEL: name: test_unmerge_s256_v2s256
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<2 x i256>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i256), [[UV1:%[0-9]+]]:_(i256) = G_UNMERGE_VALUES [[COPY]](<2 x i256>)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[UV]](i256)
    ; CHECK-NEXT: $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[UV1]](i256)
    %0:_(<2 x i256>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i256), %2:_(i256) = G_UNMERGE_VALUES %0(<2 x i256>)
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY %1(i256)
    $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY %2(i256)
...

---

name: test_unmerge_s512_s1024
body: |
  bb.0:
    liveins:  $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31

    ; CHECK-LABEL: name: test_unmerge_s512_s1024
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i1024) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i512), [[UV1:%[0-9]+]]:_(i512) = G_UNMERGE_VALUES [[COPY]](i1024)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[UV]](i512)
    ; CHECK-NEXT: $vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31 = COPY [[UV1]](i512)
    %0:_(i1024) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    %1:_(i512), %2:_(i512) = G_UNMERGE_VALUES %0(i1024)
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY %1(i512)
    $vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31 = COPY %2(i512)
...

---

name: test_unmerge_s512_v2s512
body: |
  bb.0:
    liveins:  $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31

    ; CHECK-LABEL: name: test_unmerge_s512_v2s512
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<2 x i512>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i512), [[UV1:%[0-9]+]]:_(i512) = G_UNMERGE_VALUES [[COPY]](<2 x i512>)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[UV]](i512)
    ; CHECK-NEXT: $vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31 = COPY [[UV1]](i512)
    %0:_(<2 x i512>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    %1:_(i512), %2:_(i512) = G_UNMERGE_VALUES %0(<2 x i512>)
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY %1(i512)
    $vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31 = COPY %2(i512)
...

---
name: test_unmerge_v2s1
body: |
  bb.0:
    ; CHECK-LABEL: name: test_unmerge_v2s1
    ; CHECK: [[DEF:%[0-9]+]]:_(<2 x i32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[DEF]](<2 x i32>)
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(i1) = G_TRUNC [[UV]](i32)
    ; CHECK-NEXT: [[TRUNC1:%[0-9]+]]:_(i1) = G_TRUNC [[UV1]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[TRUNC]](i1)
    ; CHECK-NEXT: S_NOP 0, implicit [[TRUNC1]](i1)
    %0:_(<2 x i1>) = G_IMPLICIT_DEF
    %1:_(i1), %2:_(i1) = G_UNMERGE_VALUES %0(<2 x i1>)
    S_NOP 0, implicit %1(i1)
    S_NOP 0, implicit %2(i1)
...

---
name: test_unmerge_s8_v4s8
body: |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_unmerge_s8_v4s8
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 24
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C2]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR1]](i32)
    ; CHECK-NEXT: $vgpr3 = COPY [[LSHR2]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(<4 x i8>) = G_BITCAST %0(i32)
    %2:_(i8), %3:_(i8), %4:_(i8), %5:_(i8) = G_UNMERGE_VALUES %1(<4 x i8>)
    %6:_(i32) = G_ANYEXT %2(i8)
    %7:_(i32) = G_ANYEXT %3(i8)
    %8:_(i32) = G_ANYEXT %4(i8)
    %9:_(i32) = G_ANYEXT %5(i8)
    $vgpr0 = COPY %6(i32)
    $vgpr1 = COPY %7(i32)
    $vgpr2 = COPY %8(i32)
    $vgpr3 = COPY %9(i32)
...

---
name: test_unmerge_s8_v3s8
body: |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_unmerge_s8_v3s8
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C1]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    ; CHECK-NEXT: $vgpr2 = COPY [[LSHR1]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i24) = G_TRUNC %0(i32)
    %2:_(<3 x i8>) = G_BITCAST %1(i24)
    %3:_(i8), %4:_(i8), %5:_(i8) = G_UNMERGE_VALUES %2(<3 x i8>)
    %6:_(i32) = G_ANYEXT %3(i8)
    %7:_(i32) = G_ANYEXT %4(i8)
    %8:_(i32) = G_ANYEXT %5(i8)
    $vgpr0 = COPY %6(i32)
    $vgpr1 = COPY %7(i32)
    $vgpr2 = COPY %8(i32)
...

---
name: test_unmerge_s8_v2s8
body: |
  bb.0:
    liveins: $vgpr0

    ; CHECK-LABEL: name: test_unmerge_s8_v2s8
    ; CHECK: liveins: $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[COPY]], [[C]](i32)
    ; CHECK-NEXT: $vgpr0 = COPY [[COPY]](i32)
    ; CHECK-NEXT: $vgpr1 = COPY [[LSHR]](i32)
    %0:_(i32) = COPY $vgpr0
    %1:_(i16) = G_TRUNC %0(i32)
    %2:_(<2 x i8>) = G_BITCAST %1(i16)
    %3:_(i8), %4:_(i8) = G_UNMERGE_VALUES %2(<2 x i8>)
    %5:_(i32) = G_ANYEXT %3(i8)
    %6:_(i32) = G_ANYEXT %4(i8)
    $vgpr0 = COPY %5(i32)
    $vgpr1 = COPY %6(i32)

...

---
name: test_unmerge_v3s32_v12s32
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5, $vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11

    ; CHECK-LABEL: name: test_unmerge_v3s32_v12s32
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5, $vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<6 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<6 x i32>) = COPY $vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(<3 x i32>), [[UV1:%[0-9]+]]:_(<3 x i32>) = G_UNMERGE_VALUES [[COPY]](<6 x i32>)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(<3 x i32>), [[UV3:%[0-9]+]]:_(<3 x i32>) = G_UNMERGE_VALUES [[COPY1]](<6 x i32>)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[UV]](<3 x i32>)
    ; CHECK-NEXT: $vgpr3_vgpr4_vgpr5 = COPY [[UV1]](<3 x i32>)
    ; CHECK-NEXT: $vgpr6_vgpr7_vgpr8 = COPY [[UV2]](<3 x i32>)
    ; CHECK-NEXT: $vgpr9_vgpr10_vgpr11 = COPY [[UV3]](<3 x i32>)
    %0:_(<6 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5
    %1:_(<6 x i32>) = COPY $vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
    %2:_(<12 x i32>) = G_CONCAT_VECTORS %0(<6 x i32>), %1(<6 x i32>)
    %3:_(<3 x i32>), %4:_(<3 x i32>), %5:_(<3 x i32>), %6:_(<3 x i32>) = G_UNMERGE_VALUES %2(<12 x i32>)
    $vgpr0_vgpr1_vgpr2 = COPY %3(<3 x i32>)
    $vgpr3_vgpr4_vgpr5 = COPY %4(<3 x i32>)
    $vgpr6_vgpr7_vgpr8 = COPY %5(<3 x i32>)
    $vgpr9_vgpr10_vgpr11 = COPY %6(<3 x i32>)

...

---
name: test_unmerge_v3s8_v12s8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2

    ; CHECK-LABEL: name: test_unmerge_v3s8_v12s8
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(i32), [[UV1:%[0-9]+]]:_(i32), [[UV2:%[0-9]+]]:_(i32) = G_UNMERGE_VALUES [[COPY]](<3 x i32>)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 8
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C]](i32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C1]](i32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(i32) = G_CONSTANT i32 24
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[UV]], [[C2]](i32)
    ; CHECK-NEXT: [[LSHR3:%[0-9]+]]:_(i32) = G_LSHR [[UV1]], [[C]](i32)
    ; CHECK-NEXT: [[LSHR4:%[0-9]+]]:_(i32) = G_LSHR [[UV1]], [[C1]](i32)
    ; CHECK-NEXT: [[LSHR5:%[0-9]+]]:_(i32) = G_LSHR [[UV1]], [[C2]](i32)
    ; CHECK-NEXT: [[LSHR6:%[0-9]+]]:_(i32) = G_LSHR [[UV2]], [[C]](i32)
    ; CHECK-NEXT: [[LSHR7:%[0-9]+]]:_(i32) = G_LSHR [[UV2]], [[C1]](i32)
    ; CHECK-NEXT: [[LSHR8:%[0-9]+]]:_(i32) = G_LSHR [[UV2]], [[C2]](i32)
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[UV]](i32), [[LSHR]](i32), [[LSHR1]](i32)
    ; CHECK-NEXT: [[BUILD_VECTOR1:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[LSHR2]](i32), [[UV1]](i32), [[LSHR3]](i32)
    ; CHECK-NEXT: [[BUILD_VECTOR2:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[LSHR4]](i32), [[LSHR5]](i32), [[UV2]](i32)
    ; CHECK-NEXT: [[BUILD_VECTOR3:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[LSHR6]](i32), [[LSHR7]](i32), [[LSHR8]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x i32>)
    ; CHECK-NEXT: $vgpr3_vgpr4_vgpr5 = COPY [[BUILD_VECTOR1]](<3 x i32>)
    ; CHECK-NEXT: $vgpr6_vgpr7_vgpr8 = COPY [[BUILD_VECTOR2]](<3 x i32>)
    ; CHECK-NEXT: $vgpr9_vgpr10_vgpr11 = COPY [[BUILD_VECTOR3]](<3 x i32>)
    %0:_(<3 x i32>) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(<12 x i8>) = G_BITCAST %0(<3 x i32>)
    %2:_(<3 x i8>), %3:_(<3 x i8>), %4:_(<3 x i8>), %5:_(<3 x i8>) = G_UNMERGE_VALUES %1(<12 x i8>)
    %6:_(<3 x i32>) = G_ANYEXT %2(<3 x i8>)
    %7:_(<3 x i32>) = G_ANYEXT %3(<3 x i8>)
    %8:_(<3 x i32>) = G_ANYEXT %4(<3 x i8>)
    %9:_(<3 x i32>) = G_ANYEXT %5(<3 x i8>)
    $vgpr0_vgpr1_vgpr2 = COPY %6(<3 x i32>)
    $vgpr3_vgpr4_vgpr5 = COPY %7(<3 x i32>)
    $vgpr6_vgpr7_vgpr8 = COPY %8(<3 x i32>)
    $vgpr9_vgpr10_vgpr11 = COPY %9(<3 x i32>)

...

---
name: test_unmerge_v3s16_v12s16
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5

    ; CHECK-LABEL: name: test_unmerge_v3s16_v12s16
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<12 x i16>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(<2 x i16>), [[UV1:%[0-9]+]]:_(<2 x i16>), [[UV2:%[0-9]+]]:_(<2 x i16>), [[UV3:%[0-9]+]]:_(<2 x i16>), [[UV4:%[0-9]+]]:_(<2 x i16>), [[UV5:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[COPY]](<12 x i16>)
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:_(i32) = G_BITCAST [[UV]](<2 x i16>)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(i32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST]], [[C]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[UV1]](<2 x i16>)
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[BITCAST]](i32), [[LSHR]](i32), [[BITCAST1]](i32)
    ; CHECK-NEXT: [[UV6:%[0-9]+]]:_(<2 x i16>), [[UV7:%[0-9]+]]:_(<2 x i16>), [[UV8:%[0-9]+]]:_(<2 x i16>), [[UV9:%[0-9]+]]:_(<2 x i16>), [[UV10:%[0-9]+]]:_(<2 x i16>), [[UV11:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[COPY]](<12 x i16>)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:_(i32) = G_BITCAST [[UV7]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST2]], [[C]](i32)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:_(i32) = G_BITCAST [[UV8]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR2:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST3]], [[C]](i32)
    ; CHECK-NEXT: [[BUILD_VECTOR1:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[LSHR1]](i32), [[BITCAST3]](i32), [[LSHR2]](i32)
    ; CHECK-NEXT: [[UV12:%[0-9]+]]:_(<2 x i16>), [[UV13:%[0-9]+]]:_(<2 x i16>), [[UV14:%[0-9]+]]:_(<2 x i16>), [[UV15:%[0-9]+]]:_(<2 x i16>), [[UV16:%[0-9]+]]:_(<2 x i16>), [[UV17:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[COPY]](<12 x i16>)
    ; CHECK-NEXT: [[BITCAST4:%[0-9]+]]:_(i32) = G_BITCAST [[UV15]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR3:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST4]], [[C]](i32)
    ; CHECK-NEXT: [[BITCAST5:%[0-9]+]]:_(i32) = G_BITCAST [[UV16]](<2 x i16>)
    ; CHECK-NEXT: [[BUILD_VECTOR2:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[BITCAST4]](i32), [[LSHR3]](i32), [[BITCAST5]](i32)
    ; CHECK-NEXT: [[UV18:%[0-9]+]]:_(<2 x i16>), [[UV19:%[0-9]+]]:_(<2 x i16>), [[UV20:%[0-9]+]]:_(<2 x i16>), [[UV21:%[0-9]+]]:_(<2 x i16>), [[UV22:%[0-9]+]]:_(<2 x i16>), [[UV23:%[0-9]+]]:_(<2 x i16>) = G_UNMERGE_VALUES [[COPY]](<12 x i16>)
    ; CHECK-NEXT: [[BITCAST6:%[0-9]+]]:_(i32) = G_BITCAST [[UV22]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR4:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST6]], [[C]](i32)
    ; CHECK-NEXT: [[BITCAST7:%[0-9]+]]:_(i32) = G_BITCAST [[UV23]](<2 x i16>)
    ; CHECK-NEXT: [[LSHR5:%[0-9]+]]:_(i32) = G_LSHR [[BITCAST7]], [[C]](i32)
    ; CHECK-NEXT: [[BUILD_VECTOR3:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[LSHR4]](i32), [[BITCAST7]](i32), [[LSHR5]](i32)
    ; CHECK-NEXT: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x i32>)
    ; CHECK-NEXT: $vgpr3_vgpr4_vgpr5 = COPY [[BUILD_VECTOR1]](<3 x i32>)
    ; CHECK-NEXT: $vgpr6_vgpr7_vgpr8 = COPY [[BUILD_VECTOR2]](<3 x i32>)
    ; CHECK-NEXT: $vgpr9_vgpr10_vgpr11 = COPY [[BUILD_VECTOR3]](<3 x i32>)
    %0:_(<12 x i16>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5
    %1:_(<3 x i16>), %2:_(<3 x i16>), %3:_(<3 x i16>), %4:_(<3 x i16>) = G_UNMERGE_VALUES %0(<12 x i16>)
    %5:_(<3 x i32>) = G_ANYEXT %1(<3 x i16>)
    %6:_(<3 x i32>) = G_ANYEXT %2(<3 x i16>)
    %7:_(<3 x i32>) = G_ANYEXT %3(<3 x i16>)
    %8:_(<3 x i32>) = G_ANYEXT %4(<3 x i16>)
    $vgpr0_vgpr1_vgpr2 = COPY %5(<3 x i32>)
    $vgpr3_vgpr4_vgpr5 = COPY %6(<3 x i32>)
    $vgpr6_vgpr7_vgpr8 = COPY %7(<3 x i32>)
    $vgpr9_vgpr10_vgpr11 = COPY %8(<3 x i32>)

...
