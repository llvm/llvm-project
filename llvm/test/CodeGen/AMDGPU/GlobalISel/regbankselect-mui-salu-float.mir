# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass=regbankselect %s -verify-machineinstrs -o - | FileCheck %s -check-prefixes=OLD_RBS_GFX10
# RUN: llc -mtriple=amdgcn -mcpu=gfx1200 -run-pass=regbankselect %s -verify-machineinstrs -o - | FileCheck %s -check-prefixes=OLD_RBS_GFX12
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass="amdgpu-regbankselect,amdgpu-regbanklegalize" %s -verify-machineinstrs -o - | FileCheck %s -check-prefixes=NEW_RBS_GFX10
# RUN: llc -mtriple=amdgcn -mcpu=gfx1200 -run-pass="amdgpu-regbankselect,amdgpu-regbanklegalize" %s -verify-machineinstrs -o - | FileCheck %s -check-prefixes=NEW_RBS_GFX12

---
name: salu_float
legalized: true
body: |
  bb.0:
    liveins: $sgpr0, $sgpr1, $sgpr2, $vgpr0, $vgpr1

    ; OLD_RBS_GFX10-LABEL: name: salu_float
    ; OLD_RBS_GFX10: liveins: $sgpr0, $sgpr1, $sgpr2, $vgpr0, $vgpr1
    ; OLD_RBS_GFX10-NEXT: {{  $}}
    ; OLD_RBS_GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; OLD_RBS_GFX10-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; OLD_RBS_GFX10-NEXT: [[COPY2:%[0-9]+]]:sgpr(i32) = COPY $sgpr2
    ; OLD_RBS_GFX10-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; OLD_RBS_GFX10-NEXT: [[COPY4:%[0-9]+]]:vgpr(i32) = COPY $vgpr1
    ; OLD_RBS_GFX10-NEXT: [[MV:%[0-9]+]]:vgpr(p1) = G_MERGE_VALUES [[COPY3]](i32), [[COPY4]](i32)
    ; OLD_RBS_GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; OLD_RBS_GFX10-NEXT: [[BITCAST1:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; OLD_RBS_GFX10-NEXT: [[COPY5:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST]](f32)
    ; OLD_RBS_GFX10-NEXT: [[COPY6:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST1]](f32)
    ; OLD_RBS_GFX10-NEXT: [[FADD:%[0-9]+]]:vgpr(f32) = G_FADD [[COPY5]], [[COPY6]]
    ; OLD_RBS_GFX10-NEXT: [[FPTOUI:%[0-9]+]]:vgpr(i32) = G_FPTOUI [[FADD]](f32)
    ; OLD_RBS_GFX10-NEXT: [[COPY7:%[0-9]+]]:vgpr(i32) = COPY [[COPY2]](i32)
    ; OLD_RBS_GFX10-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[FPTOUI]], [[COPY7]]
    ; OLD_RBS_GFX10-NEXT: G_STORE [[ADD]](i32), [[MV]](p1) :: (store (i32), addrspace 1)
    ; OLD_RBS_GFX10-NEXT: S_ENDPGM 0
    ;
    ; OLD_RBS_GFX12-LABEL: name: salu_float
    ; OLD_RBS_GFX12: liveins: $sgpr0, $sgpr1, $sgpr2, $vgpr0, $vgpr1
    ; OLD_RBS_GFX12-NEXT: {{  $}}
    ; OLD_RBS_GFX12-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; OLD_RBS_GFX12-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; OLD_RBS_GFX12-NEXT: [[COPY2:%[0-9]+]]:sgpr(i32) = COPY $sgpr2
    ; OLD_RBS_GFX12-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; OLD_RBS_GFX12-NEXT: [[COPY4:%[0-9]+]]:vgpr(i32) = COPY $vgpr1
    ; OLD_RBS_GFX12-NEXT: [[MV:%[0-9]+]]:vgpr(p1) = G_MERGE_VALUES [[COPY3]](i32), [[COPY4]](i32)
    ; OLD_RBS_GFX12-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; OLD_RBS_GFX12-NEXT: [[BITCAST1:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; OLD_RBS_GFX12-NEXT: [[FADD:%[0-9]+]]:sgpr(f32) = G_FADD [[BITCAST]], [[BITCAST1]]
    ; OLD_RBS_GFX12-NEXT: [[FPTOUI:%[0-9]+]]:sgpr(i32) = G_FPTOUI [[FADD]](f32)
    ; OLD_RBS_GFX12-NEXT: [[ADD:%[0-9]+]]:sgpr(i32) = G_ADD [[FPTOUI]], [[COPY2]]
    ; OLD_RBS_GFX12-NEXT: [[COPY5:%[0-9]+]]:vgpr(i32) = COPY [[ADD]](i32)
    ; OLD_RBS_GFX12-NEXT: G_STORE [[COPY5]](i32), [[MV]](p1) :: (store (i32), addrspace 1)
    ; OLD_RBS_GFX12-NEXT: S_ENDPGM 0
    ;
    ; NEW_RBS_GFX10-LABEL: name: salu_float
    ; NEW_RBS_GFX10: liveins: $sgpr0, $sgpr1, $sgpr2, $vgpr0, $vgpr1
    ; NEW_RBS_GFX10-NEXT: {{  $}}
    ; NEW_RBS_GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; NEW_RBS_GFX10-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; NEW_RBS_GFX10-NEXT: [[COPY2:%[0-9]+]]:sgpr(i32) = COPY $sgpr2
    ; NEW_RBS_GFX10-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; NEW_RBS_GFX10-NEXT: [[COPY4:%[0-9]+]]:vgpr(i32) = COPY $vgpr1
    ; NEW_RBS_GFX10-NEXT: [[MV:%[0-9]+]]:vgpr(p1) = G_MERGE_VALUES [[COPY3]](i32), [[COPY4]](i32)
    ; NEW_RBS_GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; NEW_RBS_GFX10-NEXT: [[BITCAST1:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; NEW_RBS_GFX10-NEXT: [[COPY5:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST]](f32)
    ; NEW_RBS_GFX10-NEXT: [[COPY6:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST1]](f32)
    ; NEW_RBS_GFX10-NEXT: [[FADD:%[0-9]+]]:vgpr(f32) = G_FADD [[COPY5]], [[COPY6]]
    ; NEW_RBS_GFX10-NEXT: [[FPTOUI:%[0-9]+]]:vgpr(i32) = G_FPTOUI [[FADD]](f32)
    ; NEW_RBS_GFX10-NEXT: [[AMDGPU_READANYLANE:%[0-9]+]]:sgpr(i32) = G_AMDGPU_READANYLANE [[FPTOUI]]
    ; NEW_RBS_GFX10-NEXT: [[ADD:%[0-9]+]]:sgpr(i32) = G_ADD [[AMDGPU_READANYLANE]], [[COPY2]]
    ; NEW_RBS_GFX10-NEXT: [[COPY7:%[0-9]+]]:vgpr(i32) = COPY [[ADD]](i32)
    ; NEW_RBS_GFX10-NEXT: G_STORE [[COPY7]](i32), [[MV]](p1) :: (store (i32), addrspace 1)
    ; NEW_RBS_GFX10-NEXT: S_ENDPGM 0
    ;
    ; NEW_RBS_GFX12-LABEL: name: salu_float
    ; NEW_RBS_GFX12: liveins: $sgpr0, $sgpr1, $sgpr2, $vgpr0, $vgpr1
    ; NEW_RBS_GFX12-NEXT: {{  $}}
    ; NEW_RBS_GFX12-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; NEW_RBS_GFX12-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; NEW_RBS_GFX12-NEXT: [[COPY2:%[0-9]+]]:sgpr(i32) = COPY $sgpr2
    ; NEW_RBS_GFX12-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; NEW_RBS_GFX12-NEXT: [[COPY4:%[0-9]+]]:vgpr(i32) = COPY $vgpr1
    ; NEW_RBS_GFX12-NEXT: [[MV:%[0-9]+]]:vgpr(p1) = G_MERGE_VALUES [[COPY3]](i32), [[COPY4]](i32)
    ; NEW_RBS_GFX12-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; NEW_RBS_GFX12-NEXT: [[BITCAST1:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; NEW_RBS_GFX12-NEXT: [[FADD:%[0-9]+]]:sgpr(f32) = G_FADD [[BITCAST]], [[BITCAST1]]
    ; NEW_RBS_GFX12-NEXT: [[FPTOUI:%[0-9]+]]:sgpr(i32) = G_FPTOUI [[FADD]](f32)
    ; NEW_RBS_GFX12-NEXT: [[ADD:%[0-9]+]]:sgpr(i32) = G_ADD [[FPTOUI]], [[COPY2]]
    ; NEW_RBS_GFX12-NEXT: [[COPY5:%[0-9]+]]:vgpr(i32) = COPY [[ADD]](i32)
    ; NEW_RBS_GFX12-NEXT: G_STORE [[COPY5]](i32), [[MV]](p1) :: (store (i32), addrspace 1)
    ; NEW_RBS_GFX12-NEXT: S_ENDPGM 0
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $sgpr1
    %2:_(i32) = COPY $sgpr2
    %3:_(i32) = COPY $vgpr0
    %4:_(i32) = COPY $vgpr1
    %5:_(p1) = G_MERGE_VALUES %3(i32), %4(i32)
    %6:_(f32) = G_BITCAST %0(i32)
    %7:_(f32) = G_BITCAST %1(i32)
    %8:_(f32) = G_FADD %6, %7
    %9:_(i32) = G_FPTOUI %8(f32)
    %10:_(i32) = G_ADD %9, %2
    G_STORE %10(i32), %5(p1) :: (store (i32), addrspace 1)
    S_ENDPGM 0
...
