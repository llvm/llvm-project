# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=gfx1150 -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX1150 %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx1200 -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX1150 %s

---
name:            f32_olt
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_olt
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_LT_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(olt), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_oeq
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_oeq
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_EQ_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(oeq), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_ole
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_ole
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_LE_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(ole), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_ogt
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_ogt
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_GT_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(ogt), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_one
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_one
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_LG_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(one), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_oge
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_oge
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_GE_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(oge), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_ord
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_ord
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_O_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(ord), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_uno
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_uno
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_U_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(uno), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_ult
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_ult
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NGE_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(ult), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_ueq
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_ueq
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NLG_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(ueq), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_ule
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_ule
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NGT_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(ule), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_ugt
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_ugt
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NLE_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(ugt), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_une
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_une
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NEQ_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(une), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f32_uge
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f32_uge
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NLT_F32 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(i32) = G_FCMP floatpred(uge), %2(f32), %3
    $sgpr0 = COPY %4(i32)

...
---
name:            f16_olt
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_olt
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_LT_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(olt), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_oeq
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_oeq
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_EQ_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(oeq), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_ole
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_ole
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_LE_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(ole), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_ogt
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_ogt
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_GT_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(ogt), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_one
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_one
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_LG_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(one), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_oge
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_oge
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_GE_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(oge), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_ord
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_ord
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_O_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(ord), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_uno
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_uno
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_U_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(uno), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_ult
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_ult
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NGE_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(ult), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_ueq
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_ueq
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NLG_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(ueq), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_ule
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_ule
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NGT_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(ule), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_ugt
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_ugt
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NLE_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(ugt), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_une
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_une
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NEQ_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(une), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
---
name:            f16_uge
legalized:       true
regBankSelected: true
body:             |
  bb.1.entry:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: f16_uge
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: S_CMP_NLT_F16 [[COPY]], [[COPY1]], implicit-def $scc, implicit $mode
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $scc
    ; GFX1150-NEXT: $sgpr0 = COPY [[COPY2]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(i32) = G_FCMP floatpred(uge), %4(f16), %5
    $sgpr0 = COPY %6(i32)

...
