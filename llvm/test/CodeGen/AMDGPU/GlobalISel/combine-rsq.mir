# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass=amdgpu-postlegalizer-combiner -verify-machineinstrs %s -o - | FileCheck -check-prefix=GCN %s

---
name:            rcp_sqrt_test_f32
body:             |
  bb.0:
    liveins: $sgpr0

    ; GCN-LABEL: name: rcp_sqrt_test_f32
    ; GCN: liveins: $sgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; GCN-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; GCN-NEXT: [[FSQRT:%[0-9]+]]:_(f32) = G_FSQRT [[BITCAST]]
    ; GCN-NEXT: [[INT:%[0-9]+]]:_(f32) = afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), [[FSQRT]](f32)
    ; GCN-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[INT]](f32)
    ; GCN-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG implicit $vgpr0
    %0:_(i32) = COPY $sgpr0
    %1:_(f32) = G_BITCAST %0(i32)
    %2:_(f32) = G_FSQRT %1
    %3:_(f32) = afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), %2(f32)
    %4:_(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)
    SI_RETURN_TO_EPILOG implicit $vgpr0

...

---
name:            contract_afn_rcp_contract_sqrt_test_f32
body:             |
  bb.0:
    liveins: $sgpr0

    ; GCN-LABEL: name: contract_afn_rcp_contract_sqrt_test_f32
    ; GCN: liveins: $sgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; GCN-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; GCN-NEXT: [[INT:%[0-9]+]]:_(f32) = contract afn G_INTRINSIC intrinsic(@llvm.amdgcn.rsq), [[BITCAST]](f32)
    ; GCN-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[INT]](f32)
    ; GCN-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG implicit $vgpr0
    %0:_(i32) = COPY $sgpr0
    %1:_(f32) = G_BITCAST %0(i32)
    %2:_(f32) = contract G_FSQRT %1
    %3:_(f32) = contract afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), %2(f32)
    %4:_(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)
    SI_RETURN_TO_EPILOG implicit $vgpr0

...

---
name:            sqrt_rcp_test_f32
body:             |
  bb.0:
    liveins: $sgpr0

    ; GCN-LABEL: name: sqrt_rcp_test_f32
    ; GCN: liveins: $sgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; GCN-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; GCN-NEXT: [[INT:%[0-9]+]]:_(f32) = afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), [[BITCAST]](f32)
    ; GCN-NEXT: [[FSQRT:%[0-9]+]]:_(f32) = G_FSQRT [[INT]]
    ; GCN-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[FSQRT]](f32)
    ; GCN-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG implicit $vgpr0
    %0:_(i32) = COPY $sgpr0
    %1:_(f32) = G_BITCAST %0(i32)
    %2:_(f32) = afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), %1(f32)
    %3:_(f32) = G_FSQRT %2
    %4:_(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)
    SI_RETURN_TO_EPILOG implicit $vgpr0

...

---
name:            afn_rcp_afn_amdgcn_sqrt_test_f32
body:             |
  bb.0:
    liveins: $sgpr0

    ; GCN-LABEL: name: afn_rcp_afn_amdgcn_sqrt_test_f32
    ; GCN: liveins: $sgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; GCN-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; GCN-NEXT: [[INT:%[0-9]+]]:_(f32) = afn G_INTRINSIC intrinsic(@llvm.amdgcn.sqrt), [[BITCAST]](f32)
    ; GCN-NEXT: [[INT1:%[0-9]+]]:_(f32) = afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), [[INT]](f32)
    ; GCN-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[INT1]](f32)
    ; GCN-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG implicit $vgpr0
    %0:_(i32) = COPY $sgpr0
    %1:_(f32) = G_BITCAST %0(i32)
    %2:_(f32) = afn G_INTRINSIC intrinsic(@llvm.amdgcn.sqrt), %1(f32)
    %3:_(f32) = afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), %2(f32)
    %4:_(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)
    SI_RETURN_TO_EPILOG implicit $vgpr0

...

---
name:            afn_contract_rcp_afn_contract_amdgcn_sqrt_test_f32
body:             |
  bb.0:
    liveins: $sgpr0

    ; GCN-LABEL: name: afn_contract_rcp_afn_contract_amdgcn_sqrt_test_f32
    ; GCN: liveins: $sgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; GCN-NEXT: [[BITCAST:%[0-9]+]]:_(f32) = G_BITCAST [[COPY]](i32)
    ; GCN-NEXT: [[INT:%[0-9]+]]:_(f32) = contract afn G_INTRINSIC intrinsic(@llvm.amdgcn.sqrt), [[BITCAST]](f32)
    ; GCN-NEXT: [[INT1:%[0-9]+]]:_(f32) = contract afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), [[INT]](f32)
    ; GCN-NEXT: [[BITCAST1:%[0-9]+]]:_(i32) = G_BITCAST [[INT1]](f32)
    ; GCN-NEXT: $vgpr0 = COPY [[BITCAST1]](i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG implicit $vgpr0
    %0:_(i32) = COPY $sgpr0
    %1:_(f32) = G_BITCAST %0(i32)
    %2:_(f32) = contract afn G_INTRINSIC intrinsic(@llvm.amdgcn.sqrt), %1(f32)
    %3:_(f32) = contract afn G_INTRINSIC intrinsic(@llvm.amdgcn.rcp), %2(f32)
    %4:_(i32) = G_BITCAST %3(f32)
    $vgpr0 = COPY %4(i32)
    SI_RETURN_TO_EPILOG implicit $vgpr0

...

---
name:            rsq_test_f16
body:             |
  bb.0:
    liveins: $sgpr0

    ; GCN-LABEL: name: rsq_test_f16
    ; GCN: liveins: $sgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; GCN-NEXT: [[TRUNC:%[0-9]+]]:_(i16) = G_TRUNC [[COPY]](i32)
    ; GCN-NEXT: [[BITCAST:%[0-9]+]]:_(f16) = G_BITCAST [[TRUNC]](i16)
    ; GCN-NEXT: %sqrt:_(f16) = G_FSQRT [[BITCAST]]
    ; GCN-NEXT: %one:_(f16) = contract G_FCONSTANT half 0xH3C00
    ; GCN-NEXT: %rsq:_(f16) = contract G_FDIV %one, %sqrt
    ; GCN-NEXT: [[BITCAST1:%[0-9]+]]:_(i16) = G_BITCAST %rsq(f16)
    ; GCN-NEXT: %ext:_(i32) = G_ANYEXT [[BITCAST1]](i16)
    ; GCN-NEXT: $vgpr0 = COPY %ext(i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG implicit $vgpr0
    %0:_(i32) = COPY $sgpr0
    %1:_(i16) = G_TRUNC %0(i32)
    %2:_(f16) = G_BITCAST %1(i16)
    %sqrt:_(f16) = G_FSQRT %2
    %one:_(f16) = contract G_FCONSTANT half 0xH3C00
    %rsq:_(f16) = contract G_FDIV %one, %sqrt
    %6:_(i16) = G_BITCAST %rsq(f16)
    %ext:_(i32) = G_ANYEXT %6(i16)
    $vgpr0 = COPY %ext(i32)
    SI_RETURN_TO_EPILOG implicit $vgpr0

...

---
name:            neg_rsq_test_f16
body:             |
  bb.0:
    liveins: $sgpr0

    ; GCN-LABEL: name: neg_rsq_test_f16
    ; GCN: liveins: $sgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $sgpr0
    ; GCN-NEXT: [[TRUNC:%[0-9]+]]:_(i16) = G_TRUNC [[COPY]](i32)
    ; GCN-NEXT: [[BITCAST:%[0-9]+]]:_(f16) = G_BITCAST [[TRUNC]](i16)
    ; GCN-NEXT: %sqrt:_(f16) = G_FSQRT [[BITCAST]]
    ; GCN-NEXT: %one:_(f16) = contract G_FCONSTANT half 0xHBC00
    ; GCN-NEXT: %rsq:_(f16) = contract G_FDIV %one, %sqrt
    ; GCN-NEXT: [[BITCAST1:%[0-9]+]]:_(i16) = G_BITCAST %rsq(f16)
    ; GCN-NEXT: %ext:_(i32) = G_ANYEXT [[BITCAST1]](i16)
    ; GCN-NEXT: $vgpr0 = COPY %ext(i32)
    ; GCN-NEXT: SI_RETURN_TO_EPILOG implicit $vgpr0
    %0:_(i32) = COPY $sgpr0
    %1:_(i16) = G_TRUNC %0(i32)
    %2:_(f16) = G_BITCAST %1(i16)
    %sqrt:_(f16) = G_FSQRT %2
    %one:_(f16) = contract G_FCONSTANT half 0xHBC00
    %rsq:_(f16) = contract G_FDIV %one, %sqrt
    %6:_(i16) = G_BITCAST %rsq(f16)
    %ext:_(i32) = G_ANYEXT %6(i16)
    $vgpr0 = COPY %ext(i32)
    SI_RETURN_TO_EPILOG implicit $vgpr0

...
