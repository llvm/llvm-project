# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-fast | FileCheck %s
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-greedy | FileCheck %s

--- |
  define void @exp_s() {
    call void @llvm.amdgcn.exp.f32(i32 0, i32 0, float 1.0, float 1.0, float 1.0, float 1.0, i1 0, i1 0)
    ret void
  }
  define void @exp_v() {
    call void @llvm.amdgcn.exp.f32(i32 0, i32 0, float 1.0, float 1.0, float 1.0, float 1.0, i1 0, i1 0)
    ret void
  }

  declare void @llvm.amdgcn.exp.f32(i32, i32, float, float, float, float, i1, i1)
...

---
name: exp_s
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1, $sgpr2, $sgpr3
    ; CHECK-LABEL: name: exp_s
    ; CHECK: liveins: $sgpr0, $sgpr1, $sgpr2, $sgpr3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:sgpr(i32) = COPY $sgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:sgpr(i32) = COPY $sgpr3
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY2]](i32)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY3]](i32)
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST]](f32)
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST1]](f32)
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST2]](f32)
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST3]](f32)
    ; CHECK-NEXT: G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.amdgcn.exp), 0, 0, [[COPY4]](f32), [[COPY5]](f32), [[COPY6]](f32), [[COPY7]](f32), 0, 0
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $sgpr1
    %2:_(i32) = COPY $sgpr2
    %3:_(i32) = COPY $sgpr3
    %4:_(f32) = G_BITCAST %0(i32)
    %5:_(f32) = G_BITCAST %1(i32)
    %6:_(f32) = G_BITCAST %2(i32)
    %7:_(f32) = G_BITCAST %3(i32)
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.amdgcn.exp), 0, 0, %4(f32), %5(f32), %6(f32), %7(f32), 0, 0
...
---
name: exp_v
legalized: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3
    ; CHECK-LABEL: name: exp_v
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:vgpr(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:vgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[BITCAST2:%[0-9]+]]:vgpr(f32) = G_BITCAST [[COPY2]](i32)
    ; CHECK-NEXT: [[BITCAST3:%[0-9]+]]:vgpr(f32) = G_BITCAST [[COPY3]](i32)
    ; CHECK-NEXT: G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.amdgcn.exp), 0, 0, [[BITCAST]](f32), [[BITCAST1]](f32), [[BITCAST2]](f32), [[BITCAST3]](f32), 0, 0
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(f32) = G_BITCAST %0(i32)
    %5:_(f32) = G_BITCAST %1(i32)
    %6:_(f32) = G_BITCAST %2(i32)
    %7:_(f32) = G_BITCAST %3(i32)
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.amdgcn.exp), 0, 0, %4(f32), %5(f32), %6(f32), %7(f32), 0, 0
...
