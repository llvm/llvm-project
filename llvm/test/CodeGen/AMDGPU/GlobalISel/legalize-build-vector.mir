# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -run-pass=legalizer %s -o - | FileCheck %s

---
name: legal_v2s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; CHECK-LABEL: name: legal_v2s32
    ; CHECK: liveins: $vgpr0, $vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<2 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(<2 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32)
    S_NOP 0, implicit %2(<2 x i32>)
...
---
name: legal_v3s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2
    ; CHECK-LABEL: name: legal_v3s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<3 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(<3 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32)
    S_NOP 0, implicit %3(<3 x i32>)
...
---
name: legal_v4s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3
    ; CHECK-LABEL: name: legal_v4s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<4 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(<4 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32)
    S_NOP 0, implicit %4(<4 x i32>)
...
---
name: legal_v5s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4
    ; CHECK-LABEL: name: legal_v5s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<5 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<5 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(<5 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32)
    S_NOP 0, implicit %5(<5 x i32>)
...
---
name: legal_v6s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5
    ; CHECK-LABEL: name: legal_v6s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<6 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<6 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(<6 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32)
    S_NOP 0, implicit %6(<6 x i32>)
...
---
name: legal_v7s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6
    ; CHECK-LABEL: name: legal_v7s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY $vgpr6
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<7 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32), [[COPY6]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<7 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(i32) = COPY $vgpr6
    %7:_(<7 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32), %6(i32)
    S_NOP 0, implicit %7(<7 x i32>)
...
---
name: legal_v8s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7
    ; CHECK-LABEL: name: legal_v8s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY $vgpr6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i32) = COPY $vgpr7
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<8 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32), [[COPY6]](i32), [[COPY7]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<8 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(i32) = COPY $vgpr6
    %7:_(i32) = COPY $vgpr7
    %8:_(<8 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32), %6(i32), %7(i32)
    S_NOP 0, implicit %8(<8 x i32>)
...
---
name: legal_v9s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8
    ; CHECK-LABEL: name: legal_v9s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY $vgpr6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i32) = COPY $vgpr7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:_(i32) = COPY $vgpr8
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<9 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32), [[COPY6]](i32), [[COPY7]](i32), [[COPY8]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<9 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(i32) = COPY $vgpr6
    %7:_(i32) = COPY $vgpr7
    %8:_(i32) = COPY $vgpr8
    %9:_(<9 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32), %6(i32), %7(i32), %8(i32)
    S_NOP 0, implicit %9(<9 x i32>)
...
---
name: legal_v10s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9
    ; CHECK-LABEL: name: legal_v10s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY $vgpr6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i32) = COPY $vgpr7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:_(i32) = COPY $vgpr8
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:_(i32) = COPY $vgpr9
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<10 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32), [[COPY6]](i32), [[COPY7]](i32), [[COPY8]](i32), [[COPY9]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<10 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(i32) = COPY $vgpr6
    %7:_(i32) = COPY $vgpr7
    %8:_(i32) = COPY $vgpr8
    %9:_(i32) = COPY $vgpr9
    %10:_(<10 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32), %6(i32), %7(i32), %8(i32), %9(i32)
    S_NOP 0, implicit %10(<10 x i32>)
...
---
name: legal_v11s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10
    ; CHECK-LABEL: name: legal_v11s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY $vgpr6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i32) = COPY $vgpr7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:_(i32) = COPY $vgpr8
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:_(i32) = COPY $vgpr9
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:_(i32) = COPY $vgpr10
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<11 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32), [[COPY6]](i32), [[COPY7]](i32), [[COPY8]](i32), [[COPY9]](i32), [[COPY10]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<11 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(i32) = COPY $vgpr6
    %7:_(i32) = COPY $vgpr7
    %8:_(i32) = COPY $vgpr8
    %9:_(i32) = COPY $vgpr9
    %10:_(i32) = COPY $vgpr10
    %11:_(<11 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32), %6(i32), %7(i32), %8(i32), %9(i32), %10(i32)
    S_NOP 0, implicit %11(<11 x i32>)
...
---
name: legal_v12s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10, $vgpr11
    ; CHECK-LABEL: name: legal_v12s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10, $vgpr11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY $vgpr6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i32) = COPY $vgpr7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:_(i32) = COPY $vgpr8
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:_(i32) = COPY $vgpr9
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:_(i32) = COPY $vgpr10
    ; CHECK-NEXT: [[COPY11:%[0-9]+]]:_(i32) = COPY $vgpr11
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<12 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32), [[COPY6]](i32), [[COPY7]](i32), [[COPY8]](i32), [[COPY9]](i32), [[COPY10]](i32), [[COPY11]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<12 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(i32) = COPY $vgpr6
    %7:_(i32) = COPY $vgpr7
    %8:_(i32) = COPY $vgpr8
    %9:_(i32) = COPY $vgpr9
    %10:_(i32) = COPY $vgpr10
    %11:_(i32) = COPY $vgpr11
    %12:_(<12 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32), %6(i32), %7(i32), %8(i32), %9(i32), %10(i32), %11(i32)
    S_NOP 0, implicit %12(<12 x i32>)
...
---
name: legal_v16s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10, $vgpr11, $vgpr12, $vgpr13, $vgpr14, $vgpr15
    ; CHECK-LABEL: name: legal_v16s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10, $vgpr11, $vgpr12, $vgpr13, $vgpr14, $vgpr15
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY $vgpr6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i32) = COPY $vgpr7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:_(i32) = COPY $vgpr8
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:_(i32) = COPY $vgpr9
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:_(i32) = COPY $vgpr10
    ; CHECK-NEXT: [[COPY11:%[0-9]+]]:_(i32) = COPY $vgpr11
    ; CHECK-NEXT: [[COPY12:%[0-9]+]]:_(i32) = COPY $vgpr12
    ; CHECK-NEXT: [[COPY13:%[0-9]+]]:_(i32) = COPY $vgpr13
    ; CHECK-NEXT: [[COPY14:%[0-9]+]]:_(i32) = COPY $vgpr14
    ; CHECK-NEXT: [[COPY15:%[0-9]+]]:_(i32) = COPY $vgpr15
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<16 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32), [[COPY6]](i32), [[COPY7]](i32), [[COPY8]](i32), [[COPY9]](i32), [[COPY10]](i32), [[COPY11]](i32), [[COPY12]](i32), [[COPY13]](i32), [[COPY14]](i32), [[COPY15]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<16 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(i32) = COPY $vgpr6
    %7:_(i32) = COPY $vgpr7
    %8:_(i32) = COPY $vgpr8
    %9:_(i32) = COPY $vgpr9
    %10:_(i32) = COPY $vgpr10
    %11:_(i32) = COPY $vgpr11
    %12:_(i32) = COPY $vgpr12
    %13:_(i32) = COPY $vgpr13
    %14:_(i32) = COPY $vgpr14
    %15:_(i32) = COPY $vgpr15
    %16:_(<16 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32), %6(i32), %7(i32), %8(i32), %9(i32), %10(i32), %11(i32), %12(i32), %13(i32), %14(i32), %15(i32)
    S_NOP 0, implicit %16(<16 x i32>)
...
---
name: legal_v32s32
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10, $vgpr11, $vgpr12, $vgpr13, $vgpr14, $vgpr15, $vgpr16, $vgpr17, $vgpr18, $vgpr19, $vgpr20, $vgpr21, $vgpr22, $vgpr23, $vgpr24, $vgpr25, $vgpr26, $vgpr27, $vgpr28, $vgpr29, $vgpr30, $vgpr31
    ; CHECK-LABEL: name: legal_v32s32
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10, $vgpr11, $vgpr12, $vgpr13, $vgpr14, $vgpr15, $vgpr16, $vgpr17, $vgpr18, $vgpr19, $vgpr20, $vgpr21, $vgpr22, $vgpr23, $vgpr24, $vgpr25, $vgpr26, $vgpr27, $vgpr28, $vgpr29, $vgpr30, $vgpr31
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i32) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i32) = COPY $vgpr2
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i32) = COPY $vgpr3
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i32) = COPY $vgpr4
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i32) = COPY $vgpr5
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i32) = COPY $vgpr6
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i32) = COPY $vgpr7
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:_(i32) = COPY $vgpr8
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:_(i32) = COPY $vgpr9
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:_(i32) = COPY $vgpr10
    ; CHECK-NEXT: [[COPY11:%[0-9]+]]:_(i32) = COPY $vgpr11
    ; CHECK-NEXT: [[COPY12:%[0-9]+]]:_(i32) = COPY $vgpr12
    ; CHECK-NEXT: [[COPY13:%[0-9]+]]:_(i32) = COPY $vgpr13
    ; CHECK-NEXT: [[COPY14:%[0-9]+]]:_(i32) = COPY $vgpr14
    ; CHECK-NEXT: [[COPY15:%[0-9]+]]:_(i32) = COPY $vgpr15
    ; CHECK-NEXT: [[COPY16:%[0-9]+]]:_(i32) = COPY $vgpr16
    ; CHECK-NEXT: [[COPY17:%[0-9]+]]:_(i32) = COPY $vgpr17
    ; CHECK-NEXT: [[COPY18:%[0-9]+]]:_(i32) = COPY $vgpr18
    ; CHECK-NEXT: [[COPY19:%[0-9]+]]:_(i32) = COPY $vgpr19
    ; CHECK-NEXT: [[COPY20:%[0-9]+]]:_(i32) = COPY $vgpr20
    ; CHECK-NEXT: [[COPY21:%[0-9]+]]:_(i32) = COPY $vgpr21
    ; CHECK-NEXT: [[COPY22:%[0-9]+]]:_(i32) = COPY $vgpr22
    ; CHECK-NEXT: [[COPY23:%[0-9]+]]:_(i32) = COPY $vgpr23
    ; CHECK-NEXT: [[COPY24:%[0-9]+]]:_(i32) = COPY $vgpr24
    ; CHECK-NEXT: [[COPY25:%[0-9]+]]:_(i32) = COPY $vgpr25
    ; CHECK-NEXT: [[COPY26:%[0-9]+]]:_(i32) = COPY $vgpr26
    ; CHECK-NEXT: [[COPY27:%[0-9]+]]:_(i32) = COPY $vgpr27
    ; CHECK-NEXT: [[COPY28:%[0-9]+]]:_(i32) = COPY $vgpr28
    ; CHECK-NEXT: [[COPY29:%[0-9]+]]:_(i32) = COPY $vgpr29
    ; CHECK-NEXT: [[COPY30:%[0-9]+]]:_(i32) = COPY $vgpr30
    ; CHECK-NEXT: [[COPY31:%[0-9]+]]:_(i32) = COPY $vgpr31
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<32 x i32>) = G_BUILD_VECTOR [[COPY]](i32), [[COPY1]](i32), [[COPY2]](i32), [[COPY3]](i32), [[COPY4]](i32), [[COPY5]](i32), [[COPY6]](i32), [[COPY7]](i32), [[COPY8]](i32), [[COPY9]](i32), [[COPY10]](i32), [[COPY11]](i32), [[COPY12]](i32), [[COPY13]](i32), [[COPY14]](i32), [[COPY15]](i32), [[COPY16]](i32), [[COPY17]](i32), [[COPY18]](i32), [[COPY19]](i32), [[COPY20]](i32), [[COPY21]](i32), [[COPY22]](i32), [[COPY23]](i32), [[COPY24]](i32), [[COPY25]](i32), [[COPY26]](i32), [[COPY27]](i32), [[COPY28]](i32), [[COPY29]](i32), [[COPY30]](i32), [[COPY31]](i32)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<32 x i32>)
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr1
    %2:_(i32) = COPY $vgpr2
    %3:_(i32) = COPY $vgpr3
    %4:_(i32) = COPY $vgpr4
    %5:_(i32) = COPY $vgpr5
    %6:_(i32) = COPY $vgpr6
    %7:_(i32) = COPY $vgpr7
    %8:_(i32) = COPY $vgpr8
    %9:_(i32) = COPY $vgpr9
    %10:_(i32) = COPY $vgpr10
    %11:_(i32) = COPY $vgpr11
    %12:_(i32) = COPY $vgpr12
    %13:_(i32) = COPY $vgpr13
    %14:_(i32) = COPY $vgpr14
    %15:_(i32) = COPY $vgpr15
    %16:_(i32) = COPY $vgpr16
    %17:_(i32) = COPY $vgpr17
    %18:_(i32) = COPY $vgpr18
    %19:_(i32) = COPY $vgpr19
    %20:_(i32) = COPY $vgpr20
    %21:_(i32) = COPY $vgpr21
    %22:_(i32) = COPY $vgpr22
    %23:_(i32) = COPY $vgpr23
    %24:_(i32) = COPY $vgpr24
    %25:_(i32) = COPY $vgpr25
    %26:_(i32) = COPY $vgpr26
    %27:_(i32) = COPY $vgpr27
    %28:_(i32) = COPY $vgpr28
    %29:_(i32) = COPY $vgpr29
    %30:_(i32) = COPY $vgpr30
    %31:_(i32) = COPY $vgpr31
    %32:_(<32 x i32>) = G_BUILD_VECTOR %0(i32), %1(i32), %2(i32), %3(i32), %4(i32), %5(i32), %6(i32), %7(i32), %8(i32), %9(i32), %10(i32), %11(i32), %12(i32), %13(i32), %14(i32), %15(i32), %16(i32), %17(i32), %18(i32), %19(i32), %20(i32), %21(i32), %22(i32), %23(i32), %24(i32), %25(i32), %26(i32), %27(i32), %28(i32), %29(i32), %30(i32), %31(i32)
    S_NOP 0, implicit %32(<32 x i32>)
...
---
name: legal_v2s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; CHECK-LABEL: name: legal_v2s64
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i64) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x i64>) = G_BUILD_VECTOR [[COPY]](i64), [[COPY1]](i64)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<2 x i64>)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(<2 x i64>) = G_BUILD_VECTOR %0(i64), %1(i64)
    S_NOP 0, implicit %2(<2 x i64>)
...
---
name: legal_v3s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5
    ; CHECK-LABEL: name: legal_v3s64
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i64) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i64) = COPY $vgpr4_vgpr5
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x i64>) = G_BUILD_VECTOR [[COPY]](i64), [[COPY1]](i64), [[COPY2]](i64)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<3 x i64>)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i64) = COPY $vgpr4_vgpr5
    %3:_(<3 x i64>) = G_BUILD_VECTOR %0(i64), %1(i64), %2(i64)
    S_NOP 0, implicit %3(<3 x i64>)
...
---
name: legal_v4s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7
    ; CHECK-LABEL: name: legal_v4s64
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i64) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i64) = COPY $vgpr4_vgpr5
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i64) = COPY $vgpr6_vgpr7
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x i64>) = G_BUILD_VECTOR [[COPY]](i64), [[COPY1]](i64), [[COPY2]](i64), [[COPY3]](i64)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<4 x i64>)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i64) = COPY $vgpr4_vgpr5
    %3:_(i64) = COPY $vgpr6_vgpr7
    %4:_(<4 x i64>) = G_BUILD_VECTOR %0(i64), %1(i64), %2(i64), %3(i64)
    S_NOP 0, implicit %4(<4 x i64>)
...
---
name: legal_v5s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9
    ; CHECK-LABEL: name: legal_v5s64
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i64) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i64) = COPY $vgpr4_vgpr5
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i64) = COPY $vgpr6_vgpr7
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i64) = COPY $vgpr8_vgpr9
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<5 x i64>) = G_BUILD_VECTOR [[COPY]](i64), [[COPY1]](i64), [[COPY2]](i64), [[COPY3]](i64), [[COPY4]](i64)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<5 x i64>)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i64) = COPY $vgpr4_vgpr5
    %3:_(i64) = COPY $vgpr6_vgpr7
    %4:_(i64) = COPY $vgpr8_vgpr9
    %5:_(<5 x i64>) = G_BUILD_VECTOR %0(i64), %1(i64), %2(i64), %3(i64), %4(i64)
    S_NOP 0, implicit %5(<5 x i64>)
...
---
name: legal_v6s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9, $vgpr10_vgpr11
    ; CHECK-LABEL: name: legal_v6s64
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9, $vgpr10_vgpr11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i64) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i64) = COPY $vgpr4_vgpr5
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i64) = COPY $vgpr6_vgpr7
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i64) = COPY $vgpr8_vgpr9
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i64) = COPY $vgpr10_vgpr11
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<6 x i64>) = G_BUILD_VECTOR [[COPY]](i64), [[COPY1]](i64), [[COPY2]](i64), [[COPY3]](i64), [[COPY4]](i64), [[COPY5]](i64)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<6 x i64>)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i64) = COPY $vgpr4_vgpr5
    %3:_(i64) = COPY $vgpr6_vgpr7
    %4:_(i64) = COPY $vgpr8_vgpr9
    %5:_(i64) = COPY $vgpr10_vgpr11
    %6:_(<6 x i64>) = G_BUILD_VECTOR %0(i64), %1(i64), %2(i64), %3(i64), %4(i64), %5(i64)
    S_NOP 0, implicit %6(<6 x i64>)
...
---
name: legal_v7s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9, $vgpr10_vgpr11, $vgpr12_vgpr13
    ; CHECK-LABEL: name: legal_v7s64
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9, $vgpr10_vgpr11, $vgpr12_vgpr13
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i64) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i64) = COPY $vgpr4_vgpr5
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i64) = COPY $vgpr6_vgpr7
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i64) = COPY $vgpr8_vgpr9
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i64) = COPY $vgpr10_vgpr11
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i64) = COPY $vgpr12_vgpr13
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<7 x i64>) = G_BUILD_VECTOR [[COPY]](i64), [[COPY1]](i64), [[COPY2]](i64), [[COPY3]](i64), [[COPY4]](i64), [[COPY5]](i64), [[COPY6]](i64)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<7 x i64>)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i64) = COPY $vgpr4_vgpr5
    %3:_(i64) = COPY $vgpr6_vgpr7
    %4:_(i64) = COPY $vgpr8_vgpr9
    %5:_(i64) = COPY $vgpr10_vgpr11
    %6:_(i64) = COPY $vgpr12_vgpr13
    %7:_(<7 x i64>) = G_BUILD_VECTOR %0(i64), %1(i64), %2(i64), %3(i64), %4(i64), %5(i64), %6(i64)
    S_NOP 0, implicit %7(<7 x i64>)
...
---
name: legal_v8s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9, $vgpr10_vgpr11, $vgpr12_vgpr13, $vgpr14_vgpr15
    ; CHECK-LABEL: name: legal_v8s64
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9, $vgpr10_vgpr11, $vgpr12_vgpr13, $vgpr14_vgpr15
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i64) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i64) = COPY $vgpr4_vgpr5
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i64) = COPY $vgpr6_vgpr7
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i64) = COPY $vgpr8_vgpr9
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i64) = COPY $vgpr10_vgpr11
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i64) = COPY $vgpr12_vgpr13
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i64) = COPY $vgpr14_vgpr15
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<8 x i64>) = G_BUILD_VECTOR [[COPY]](i64), [[COPY1]](i64), [[COPY2]](i64), [[COPY3]](i64), [[COPY4]](i64), [[COPY5]](i64), [[COPY6]](i64), [[COPY7]](i64)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<8 x i64>)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i64) = COPY $vgpr4_vgpr5
    %3:_(i64) = COPY $vgpr6_vgpr7
    %4:_(i64) = COPY $vgpr8_vgpr9
    %5:_(i64) = COPY $vgpr10_vgpr11
    %6:_(i64) = COPY $vgpr12_vgpr13
    %7:_(i64) = COPY $vgpr14_vgpr15
    %8:_(<8 x i64>) = G_BUILD_VECTOR %0(i64), %1(i64), %2(i64), %3(i64), %4(i64), %5(i64), %6(i64), %7(i64)
    S_NOP 0, implicit %8(<8 x i64>)
...

---
name: legal_v16s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9, $vgpr10_vgpr11, $vgpr12_vgpr13, $vgpr14_vgpr15, $vgpr16_vgpr17, $vgpr18_vgpr19, $vgpr20_vgpr21, $vgpr22_vgpr23, $vgpr24_vgpr25, $vgpr26_vgpr27, $vgpr28_vgpr29, $vgpr30_vgpr31
    ; CHECK-LABEL: name: legal_v16s64
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3, $vgpr4_vgpr5, $vgpr6_vgpr7, $vgpr8_vgpr9, $vgpr10_vgpr11, $vgpr12_vgpr13, $vgpr14_vgpr15, $vgpr16_vgpr17, $vgpr18_vgpr19, $vgpr20_vgpr21, $vgpr22_vgpr23, $vgpr24_vgpr25, $vgpr26_vgpr27, $vgpr28_vgpr29, $vgpr30_vgpr31
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i64) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i64) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i64) = COPY $vgpr4_vgpr5
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i64) = COPY $vgpr6_vgpr7
    ; CHECK-NEXT: [[COPY4:%[0-9]+]]:_(i64) = COPY $vgpr8_vgpr9
    ; CHECK-NEXT: [[COPY5:%[0-9]+]]:_(i64) = COPY $vgpr10_vgpr11
    ; CHECK-NEXT: [[COPY6:%[0-9]+]]:_(i64) = COPY $vgpr12_vgpr13
    ; CHECK-NEXT: [[COPY7:%[0-9]+]]:_(i64) = COPY $vgpr14_vgpr15
    ; CHECK-NEXT: [[COPY8:%[0-9]+]]:_(i64) = COPY $vgpr16_vgpr17
    ; CHECK-NEXT: [[COPY9:%[0-9]+]]:_(i64) = COPY $vgpr18_vgpr19
    ; CHECK-NEXT: [[COPY10:%[0-9]+]]:_(i64) = COPY $vgpr20_vgpr21
    ; CHECK-NEXT: [[COPY11:%[0-9]+]]:_(i64) = COPY $vgpr22_vgpr23
    ; CHECK-NEXT: [[COPY12:%[0-9]+]]:_(i64) = COPY $vgpr24_vgpr25
    ; CHECK-NEXT: [[COPY13:%[0-9]+]]:_(i64) = COPY $vgpr26_vgpr27
    ; CHECK-NEXT: [[COPY14:%[0-9]+]]:_(i64) = COPY $vgpr28_vgpr29
    ; CHECK-NEXT: [[COPY15:%[0-9]+]]:_(i64) = COPY $vgpr30_vgpr31
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<16 x i64>) = G_BUILD_VECTOR [[COPY]](i64), [[COPY1]](i64), [[COPY2]](i64), [[COPY3]](i64), [[COPY4]](i64), [[COPY5]](i64), [[COPY6]](i64), [[COPY7]](i64), [[COPY8]](i64), [[COPY9]](i64), [[COPY10]](i64), [[COPY11]](i64), [[COPY12]](i64), [[COPY13]](i64), [[COPY14]](i64), [[COPY15]](i64)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<16 x i64>)
    %0:_(i64) = COPY $vgpr0_vgpr1
    %1:_(i64) = COPY $vgpr2_vgpr3
    %2:_(i64) = COPY $vgpr4_vgpr5
    %3:_(i64) = COPY $vgpr6_vgpr7
    %4:_(i64) = COPY $vgpr8_vgpr9
    %5:_(i64) = COPY $vgpr10_vgpr11
    %6:_(i64) = COPY $vgpr12_vgpr13
    %7:_(i64) = COPY $vgpr14_vgpr15
    %8:_(i64) = COPY $vgpr16_vgpr17
    %9:_(i64) = COPY $vgpr18_vgpr19
    %10:_(i64) = COPY $vgpr20_vgpr21
    %11:_(i64) = COPY $vgpr22_vgpr23
    %12:_(i64) = COPY $vgpr24_vgpr25
    %13:_(i64) = COPY $vgpr26_vgpr27
    %14:_(i64) = COPY $vgpr28_vgpr29
    %15:_(i64) = COPY $vgpr30_vgpr31
    %16:_(<16 x i64>) = G_BUILD_VECTOR %0(i64), %1(i64), %2(i64), %3(i64), %4(i64), %5(i64), %6(i64), %7(i64), %8(i64), %9(i64), %10(i64), %11(i64), %12(i64), %13(i64), %14(i64), %15(i64)
    S_NOP 0, implicit %16(<16 x i64>)
...

---
name: legal_v2s128
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3, $vgpr4_vgpr5_vgpr6_vgpr7

    ; CHECK-LABEL: name: legal_v2s128
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3, $vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i128) = COPY $vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x i128>) = G_BUILD_VECTOR [[COPY]](i128), [[COPY1]](i128)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<2 x i128>)
    %0:_(i128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(i128) = COPY $vgpr4_vgpr5_vgpr6_vgpr7
    %2:_(<2 x i128>) = G_BUILD_VECTOR %0(i128), %1(i128)
    S_NOP 0, implicit %2(<2 x i128>)
...

---
name: legal_v2p3
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; CHECK-LABEL: name: legal_v2p3
    ; CHECK: liveins: $vgpr0, $vgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p3) = COPY $vgpr1
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x p3>) = G_BUILD_VECTOR [[COPY]](p3), [[COPY1]](p3)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<2 x p3>)
    %0:_(p3) = COPY $vgpr0
    %1:_(p3) = COPY $vgpr1
    %2:_(<2 x p3>) = G_BUILD_VECTOR %0(p3), %1(p3)
    S_NOP 0, implicit %2(<2 x p3>)
...
---
name: legal_v3p3
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2
    ; CHECK-LABEL: name: legal_v3p3
    ; CHECK: liveins: $vgpr0, $vgpr1, $vgpr2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p3) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p3) = COPY $vgpr1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(p3) = COPY $vgpr2
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x p3>) = G_BUILD_VECTOR [[COPY]](p3), [[COPY1]](p3), [[COPY2]](p3)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<3 x p3>)
    %0:_(p3) = COPY $vgpr0
    %1:_(p3) = COPY $vgpr1
    %2:_(p3) = COPY $vgpr2
    %3:_(<3 x p3>) = G_BUILD_VECTOR %0(p3), %1(p3), %2(p3)
    S_NOP 0, implicit %3(<3 x p3>)
...

---
name: legal_v2p0
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; CHECK-LABEL: name: legal_v2p0
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p0) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x p0>) = G_BUILD_VECTOR [[COPY]](p0), [[COPY1]](p0)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<2 x p0>)
    %0:_(p0) = COPY $vgpr0_vgpr1
    %1:_(p0) = COPY $vgpr2_vgpr3
    %2:_(<2 x p0>) = G_BUILD_VECTOR %0(p0), %1(p0)
    S_NOP 0, implicit %2(<2 x p0>)
...

---
name: legal_v2p999
body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; CHECK-LABEL: name: legal_v2p999
    ; CHECK: liveins: $vgpr0_vgpr1, $vgpr2_vgpr3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p999) = COPY $vgpr0_vgpr1
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(p999) = COPY $vgpr2_vgpr3
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x p999>) = G_BUILD_VECTOR [[COPY]](p999), [[COPY1]](p999)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<2 x p999>)
    %0:_(p999) = COPY $vgpr0_vgpr1
    %1:_(p999) = COPY $vgpr2_vgpr3
    %2:_(<2 x p999>) = G_BUILD_VECTOR %0(p999), %1(p999)
    S_NOP 0, implicit %2(<2 x p999>)
...

---
name: legal_v2s256
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7, $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15

    ; CHECK-LABEL: name: legal_v2s256
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7, $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i256) = COPY $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x i256>) = G_BUILD_VECTOR [[COPY]](i256), [[COPY1]](i256)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<2 x i256>)
    %0:_(i256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    %1:_(i256) = COPY $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %2:_(<2 x i256>) = G_BUILD_VECTOR %0(i256), %1(i256)
    S_NOP 0, implicit %2(<2 x i256>)
...

---
name: legal_v4s128
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3, $vgpr4_vgpr5_vgpr6_vgpr7, $vgpr8_vgpr9_vgpr10, $vgpr11_vgpr12_vgpr13_vgpr14_vgpr15

    ; CHECK-LABEL: name: legal_v4s128
    ; CHECK: liveins: $vgpr0_vgpr1_vgpr2_vgpr3, $vgpr4_vgpr5_vgpr6_vgpr7, $vgpr8_vgpr9_vgpr10, $vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(i128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(i128) = COPY $vgpr4_vgpr5_vgpr6_vgpr7
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:_(i128) = COPY $vgpr8_vgpr9_vgpr10_vgpr11
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:_(i128) = COPY $vgpr12_vgpr13_vgpr14_vgpr15
    ; CHECK-NEXT: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x i128>) = G_BUILD_VECTOR [[COPY]](i128), [[COPY1]](i128), [[COPY2]](i128), [[COPY3]](i128)
    ; CHECK-NEXT: S_NOP 0, implicit [[BUILD_VECTOR]](<4 x i128>)
    %0:_(i128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(i128) = COPY $vgpr4_vgpr5_vgpr6_vgpr7
    %2:_(i128) = COPY $vgpr8_vgpr9_vgpr10_vgpr11
    %3:_(i128) = COPY $vgpr12_vgpr13_vgpr14_vgpr15
    %4:_(<4 x i128>) = G_BUILD_VECTOR %0(i128), %1(i128), %2(i128), %3(i128)
    S_NOP 0, implicit %4(<4 x i128>)
...
