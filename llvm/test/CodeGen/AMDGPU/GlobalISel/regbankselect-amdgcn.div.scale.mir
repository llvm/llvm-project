# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-fast | FileCheck %s
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-greedy | FileCheck %s

---
name: div_scale_ss
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $sgpr1
    ; CHECK-LABEL: name: div_scale_ss
    ; CHECK: liveins: $sgpr0, $sgpr1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr1
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST]](f32)
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST1]](f32)
    ; CHECK-NEXT: [[INT:%[0-9]+]]:vgpr(f32), [[INT1:%[0-9]+]]:vcc(f1) = G_INTRINSIC intrinsic(@llvm.amdgcn.div.scale), [[COPY2]](f32), [[COPY3]](f32), 0
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $sgpr1
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_BITCAST %1(i32)
    %4:_(f32), %5:_(f1) = G_INTRINSIC intrinsic(@llvm.amdgcn.div.scale), %2(f32), %3(f32), 0
...

---
name: div_scale_sv
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0
    ; CHECK-LABEL: name: div_scale_sv
    ; CHECK: liveins: $sgpr0, $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:vgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST]](f32)
    ; CHECK-NEXT: [[INT:%[0-9]+]]:vgpr(f32), [[INT1:%[0-9]+]]:vcc(f1) = G_INTRINSIC intrinsic(@llvm.amdgcn.div.scale), [[COPY2]](f32), [[BITCAST1]](f32), 0
    %0:_(i32) = COPY $sgpr0
    %1:_(i32) = COPY $vgpr0
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_BITCAST %1(i32)
    %4:_(f32), %5:_(f1) = G_INTRINSIC intrinsic(@llvm.amdgcn.div.scale), %2(f32), %3(f32), 0
...

---
name: div_scale_vs
legalized: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0
    ; CHECK-LABEL: name: div_scale_vs
    ; CHECK: liveins: $sgpr0, $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:vgpr(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vgpr(f32) = COPY [[BITCAST1]](f32)
    ; CHECK-NEXT: [[INT:%[0-9]+]]:vgpr(f32), [[INT1:%[0-9]+]]:vcc(f1) = G_INTRINSIC intrinsic(@llvm.amdgcn.div.scale), [[BITCAST]](f32), [[COPY2]](f32), 0
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $sgpr0
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_BITCAST %1(i32)
    %4:_(f32), %5:_(f1) = G_INTRINSIC intrinsic(@llvm.amdgcn.div.scale), %2(f32), %3(f32), 0
...

---
name: div_scale_vv
legalized: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr0
    ; CHECK-LABEL: name: div_scale_vv
    ; CHECK: liveins: $vgpr0, $vgpr0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; CHECK-NEXT: [[BITCAST:%[0-9]+]]:vgpr(f32) = G_BITCAST [[COPY]](i32)
    ; CHECK-NEXT: [[BITCAST1:%[0-9]+]]:vgpr(f32) = G_BITCAST [[COPY1]](i32)
    ; CHECK-NEXT: [[INT:%[0-9]+]]:vgpr(f32), [[INT1:%[0-9]+]]:vcc(f1) = G_INTRINSIC intrinsic(@llvm.amdgcn.div.scale), [[BITCAST]](f32), [[BITCAST1]](f32), 0
    %0:_(i32) = COPY $vgpr0
    %1:_(i32) = COPY $vgpr0
    %2:_(f32) = G_BITCAST %0(i32)
    %3:_(f32) = G_BITCAST %1(i32)
    %4:_(f32), %5:_(f1) = G_INTRINSIC intrinsic(@llvm.amdgcn.div.scale), %2(f32), %3(f32), 0
...
