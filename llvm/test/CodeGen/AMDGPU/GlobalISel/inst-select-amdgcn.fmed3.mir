# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=tahiti -run-pass=instruction-select -verify-machineinstrs %s -o -  | FileCheck -check-prefix=GCN %s

---
name: fmed3_s32_vvvv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2

    ; GCN-LABEL: name: fmed3_s32_vvvv
    ; GCN: liveins: $vgpr0, $vgpr1, $vgpr2
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY $vgpr2
    ; GCN-NEXT: [[V_MED3_F32_e64_:%[0-9]+]]:vgpr_32 = V_MED3_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, [[COPY2]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MED3_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr1
    %2:vgpr(i32) = COPY $vgpr2
    %3:vgpr(f32) = G_BITCAST %0(i32)
    %4:vgpr(f32) = G_BITCAST %1(i32)
    %5:vgpr(f32) = G_BITCAST %2(i32)
    %6:vgpr(f32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %3(f32), %4(f32), %5(f32)
    %7:vgpr(i32) = G_BITCAST %6(f32)
    S_ENDPGM 0, implicit %7(i32)
...

---
name: fmed3_s32_vsvv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0, $vgpr1

    ; GCN-LABEL: name: fmed3_s32_vsvv
    ; GCN: liveins: $sgpr0, $vgpr0, $vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GCN-NEXT: [[V_MED3_F32_e64_:%[0-9]+]]:vgpr_32 = V_MED3_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, [[COPY2]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MED3_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:vgpr(i32) = COPY $vgpr1
    %3:sgpr(f32) = G_BITCAST %0(i32)
    %4:vgpr(f32) = G_BITCAST %1(i32)
    %5:vgpr(f32) = G_BITCAST %2(i32)
    %6:vgpr(f32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %3(f32), %4(f32), %5(f32)
    %7:vgpr(i32) = G_BITCAST %6(f32)
    S_ENDPGM 0, implicit %7(i32)
...

---
name: fmed3_s32_vvsv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0, $vgpr1

    ; GCN-LABEL: name: fmed3_s32_vvsv
    ; GCN: liveins: $sgpr0, $vgpr0, $vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY $vgpr1
    ; GCN-NEXT: [[V_MED3_F32_e64_:%[0-9]+]]:vgpr_32 = V_MED3_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, [[COPY2]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MED3_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:sgpr(i32) = COPY $sgpr0
    %2:vgpr(i32) = COPY $vgpr1
    %3:vgpr(f32) = G_BITCAST %0(i32)
    %4:sgpr(f32) = G_BITCAST %1(i32)
    %5:vgpr(f32) = G_BITCAST %2(i32)
    %6:vgpr(f32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %3(f32), %4(f32), %5(f32)
    %7:vgpr(i32) = G_BITCAST %6(f32)
    S_ENDPGM 0, implicit %7(i32)
...

---
name: fmed3_s32_vvvs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0, $vgpr1

    ; GCN-LABEL: name: fmed3_s32_vvvs
    ; GCN: liveins: $sgpr0, $vgpr0, $vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[V_MED3_F32_e64_:%[0-9]+]]:vgpr_32 = V_MED3_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, [[COPY2]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MED3_F32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:sgpr(i32) = COPY $sgpr0
    %3:vgpr(f32) = G_BITCAST %0(i32)
    %4:vgpr(f32) = G_BITCAST %1(i32)
    %5:sgpr(f32) = G_BITCAST %2(i32)
    %6:vgpr(f32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %3(f32), %4(f32), %5(f32)
    %7:vgpr(i32) = G_BITCAST %6(f32)
    S_ENDPGM 0, implicit %7(i32)
...


# Same SGPR used, so doesn't violate the constant bus restriction.
---
name: fmed3_s32_vssv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0

    ; GCN-LABEL: name: fmed3_s32_vssv
    ; GCN: liveins: $sgpr0, $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[V_MED3_F32_e64_:%[0-9]+]]:vgpr_32 = V_MED3_F32_e64 0, [[COPY]], 0, [[COPY]], 0, [[COPY1]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MED3_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %0(i32)
    %4:vgpr(f32) = G_BITCAST %1(i32)
    %5:vgpr(f32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %2(f32), %3(f32), %4(f32)
    %6:vgpr(i32) = G_BITCAST %5(f32)
    S_ENDPGM 0, implicit %6(i32)
...

---
name: fmed3_s32_vsvs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0

    ; GCN-LABEL: name: fmed3_s32_vsvs
    ; GCN: liveins: $sgpr0, $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[V_MED3_F32_e64_:%[0-9]+]]:vgpr_32 = V_MED3_F32_e64 0, [[COPY]], 0, [[COPY1]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MED3_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:vgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(f32) = G_BITCAST %0(i32)
    %5:vgpr(f32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %2(f32), %3(f32), %4(f32)
    %6:vgpr(i32) = G_BITCAST %5(f32)
    S_ENDPGM 0, implicit %6(i32)
...

---
name: fmed3_s32_vvss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0

    ; GCN-LABEL: name: fmed3_s32_vvss
    ; GCN: liveins: $sgpr0, $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GCN-NEXT: [[V_MED3_F32_e64_:%[0-9]+]]:vgpr_32 = V_MED3_F32_e64 0, [[COPY1]], 0, [[COPY]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MED3_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:vgpr(i32) = COPY $vgpr0
    %2:vgpr(f32) = G_BITCAST %1(i32)
    %3:sgpr(f32) = G_BITCAST %0(i32)
    %4:sgpr(f32) = G_BITCAST %0(i32)
    %5:vgpr(f32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %2(f32), %3(f32), %4(f32)
    %6:vgpr(i32) = G_BITCAST %5(f32)
    S_ENDPGM 0, implicit %6(i32)
...

---
name: fmed3_s32_vsss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0, $vgpr0

    ; GCN-LABEL: name: fmed3_s32_vsss
    ; GCN: liveins: $sgpr0, $vgpr0
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GCN-NEXT: [[V_MED3_F32_e64_:%[0-9]+]]:vgpr_32 = V_MED3_F32_e64 0, [[COPY]], 0, [[COPY]], 0, [[COPY]], 0, 0, implicit $mode, implicit $exec
    ; GCN-NEXT: S_ENDPGM 0, implicit [[V_MED3_F32_e64_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(f32) = G_BITCAST %0(i32)
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %0(i32)
    %4:vgpr(f32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %1(f32), %2(f32), %3(f32)
    %5:vgpr(i32) = G_BITCAST %4(f32)
    S_ENDPGM 0, implicit %5(i32)
...


# FIXME: This should probably have been fixed by RegBankSelect, but we should fail to select it.
# ---
# name: fmed3_s32_vssv_constant_bus_violation
# legalized: true
# regBankSelected: true
# tracksRegLiveness: true

# body: |
#   bb.0:
#     liveins: $sgpr0, $sgpr1, $vgpr0

#     %0:sgpr(s32) = COPY $sgpr0
#     %1:sgpr(s32) = COPY $sgpr1
#     %2:vgpr(s32) = COPY $vgpr0
#     %3:vgpr(s32) = G_INTRINSIC intrinsic(@llvm.amdgcn.fmed3), %0, %1, %2
#     S_ENDPGM 0, implicit %3
# ...
