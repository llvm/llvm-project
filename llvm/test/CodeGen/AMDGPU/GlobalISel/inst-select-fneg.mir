# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=tahiti -run-pass=instruction-select -global-isel-abort=0 -verify-machineinstrs -o - %s | FileCheck -check-prefix=SI %s
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=instruction-select -global-isel-abort=0 -verify-machineinstrs -o - %s | FileCheck -check-prefix=VI %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx900 -run-pass=instruction-select -global-isel-abort=0 -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX9 %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass=instruction-select -global-isel-abort=0 -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX10 %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx1100 -run-pass=instruction-select -global-isel-abort=0 -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX10 %s

---
name: fneg_s32_ss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0
    ; SI-LABEL: name: fneg_s32_ss
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; SI-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; SI-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; VI-LABEL: name: fneg_s32_ss
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; VI-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; VI-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; GFX9-LABEL: name: fneg_s32_ss
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX9-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; GFX10-LABEL: name: fneg_s32_ss
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX10-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(f32) = G_BITCAST %0(i32)
    %2:sgpr(f32) = G_FNEG %1
    %3:sgpr(i32) = G_BITCAST %2(f32)
    $sgpr0 = COPY %3(i32)
...

---
name: fneg_s32_vv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0
    ; SI-LABEL: name: fneg_s32_vv
    ; SI: liveins: $vgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; SI-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; VI-LABEL: name: fneg_s32_vv
    ; VI: liveins: $vgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; VI-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; GFX9-LABEL: name: fneg_s32_vv
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX9-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; GFX10-LABEL: name: fneg_s32_vv
    ; GFX10: liveins: $vgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX10-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(f32) = G_BITCAST %0(i32)
    %2:vgpr(f32) = G_FNEG %1
    %3:vgpr(i32) = G_BITCAST %2(f32)
    $vgpr0 = COPY %3(i32)
...

---
name: fneg_s32_vs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0
    ; SI-LABEL: name: fneg_s32_vs
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; SI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; SI-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(f32) = G_FNEG [[BITCAST]]
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[FNEG]](f32)
    ; SI-NEXT: $vgpr0 = COPY [[COPY1]](i32)
    ;
    ; VI-LABEL: name: fneg_s32_vs
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; VI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; VI-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(f32) = G_FNEG [[BITCAST]]
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[FNEG]](f32)
    ; VI-NEXT: $vgpr0 = COPY [[COPY1]](i32)
    ;
    ; GFX9-LABEL: name: fneg_s32_vs
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX9-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; GFX9-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(f32) = G_FNEG [[BITCAST]]
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[FNEG]](f32)
    ; GFX9-NEXT: $vgpr0 = COPY [[COPY1]](i32)
    ;
    ; GFX10-LABEL: name: fneg_s32_vs
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; GFX10-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(f32) = G_FNEG [[BITCAST]]
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[FNEG]](f32)
    ; GFX10-NEXT: $vgpr0 = COPY [[COPY1]](i32)
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(f32) = G_BITCAST %0(i32)
    %2:vgpr(f32) = G_FNEG %1
    %3:vgpr(i32) = G_BITCAST %2(f32)
    $vgpr0 = COPY %3(i32)
...

---
name: fneg_s16_ss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0
    ; SI-LABEL: name: fneg_s16_ss
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; SI-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; SI-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; VI-LABEL: name: fneg_s16_ss
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; VI-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; VI-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; GFX9-LABEL: name: fneg_s16_ss
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; GFX9-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX9-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; GFX10-LABEL: name: fneg_s16_ss
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; GFX10-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX10-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(f16) = G_BITCAST %1(i16)
    %3:sgpr(f16) = G_FNEG %2
    %4:sgpr(i16) = G_BITCAST %3(f16)
    %5:sgpr(i32) = G_ANYEXT %4(i16)
    $sgpr0 = COPY %5(i32)
...

---
name: fneg_s16_vv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0
    ; SI-LABEL: name: fneg_s16_vv
    ; SI: liveins: $vgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; SI-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; VI-LABEL: name: fneg_s16_vv
    ; VI: liveins: $vgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; VI-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; GFX9-LABEL: name: fneg_s16_vv
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX9-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; GFX10-LABEL: name: fneg_s16_vv
    ; GFX10: liveins: $vgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX10-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i16) = G_TRUNC %0(i32)
    %2:vgpr(f16) = G_BITCAST %1(i16)
    %3:vgpr(f16) = G_FNEG %2
    %4:vgpr(i16) = G_BITCAST %3(f16)
    %5:vgpr(i32) = G_ANYEXT %4(i16)
    $vgpr0 = COPY %5(i32)
...

---
name: fneg_s16_vs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0

    ; SI-LABEL: name: fneg_s16_vs
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; SI-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i16) = G_TRUNC [[COPY]](i32)
    ; SI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f16) = G_BITCAST [[TRUNC]](i16)
    ; SI-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(f16) = G_FNEG [[BITCAST]]
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i16) = COPY [[FNEG]](f16)
    ; SI-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[COPY1]](i16)
    ; SI-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    ;
    ; VI-LABEL: name: fneg_s16_vs
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; VI-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i16) = G_TRUNC [[COPY]](i32)
    ; VI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f16) = G_BITCAST [[TRUNC]](i16)
    ; VI-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(f16) = G_FNEG [[BITCAST]]
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i16) = COPY [[FNEG]](f16)
    ; VI-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[COPY1]](i16)
    ; VI-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    ;
    ; GFX9-LABEL: name: fneg_s16_vs
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX9-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i16) = G_TRUNC [[COPY]](i32)
    ; GFX9-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f16) = G_BITCAST [[TRUNC]](i16)
    ; GFX9-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(f16) = G_FNEG [[BITCAST]]
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i16) = COPY [[FNEG]](f16)
    ; GFX9-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[COPY1]](i16)
    ; GFX9-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    ;
    ; GFX10-LABEL: name: fneg_s16_vs
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX10-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i16) = G_TRUNC [[COPY]](i32)
    ; GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f16) = G_BITCAST [[TRUNC]](i16)
    ; GFX10-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(f16) = G_FNEG [[BITCAST]]
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i16) = COPY [[FNEG]](f16)
    ; GFX10-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[COPY1]](i16)
    ; GFX10-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(f16) = G_BITCAST %1(i16)
    %3:vgpr(f16) = G_FNEG %2
    %4:vgpr(i16) = G_BITCAST %3(f16)
    %5:vgpr(i32) = G_ANYEXT %4(i16)
    $vgpr0 = COPY %5(i32)
...

---
name: fneg_v2s16_ss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1
    ; SI-LABEL: name: fneg_v2s16_ss
    ; SI: liveins: $sgpr0_sgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; SI-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; SI-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; VI-LABEL: name: fneg_v2s16_ss
    ; VI: liveins: $sgpr0_sgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; VI-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; VI-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; GFX9-LABEL: name: fneg_v2s16_ss
    ; GFX9: liveins: $sgpr0_sgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; GFX9-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX9-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    ;
    ; GFX10-LABEL: name: fneg_v2s16_ss
    ; GFX10: liveins: $sgpr0_sgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; GFX10-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX10-NEXT: $sgpr0 = COPY [[S_XOR_B32_]]
    %0:sgpr(<2 x i16>) = COPY $sgpr0
    %1:sgpr(<2 x f16>) = G_BITCAST %0(<2 x i16>)
    %2:sgpr(<2 x f16>) = G_FNEG %1
    %3:sgpr(<2 x i16>) = G_BITCAST %2(<2 x f16>)
    $sgpr0 = COPY %3(<2 x i16>)
...

---
name: fneg_v2s16_vv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0
    ; SI-LABEL: name: fneg_v2s16_vv
    ; SI: liveins: $vgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; SI-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; VI-LABEL: name: fneg_v2s16_vv
    ; VI: liveins: $vgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; VI-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; GFX9-LABEL: name: fneg_v2s16_vv
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX9-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; GFX10-LABEL: name: fneg_v2s16_vv
    ; GFX10: liveins: $vgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX10-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    %0:vgpr(<2 x i16>) = COPY $vgpr0
    %1:vgpr(<2 x f16>) = G_BITCAST %0(<2 x i16>)
    %2:vgpr(<2 x f16>) = G_FNEG %1
    %3:vgpr(<2 x i16>) = G_BITCAST %2(<2 x f16>)
    $vgpr0 = COPY %3(<2 x i16>)
...

---
name: fneg_v2s16_vs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0
    ; SI-LABEL: name: fneg_v2s16_vs
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sgpr(<2 x i16>) = COPY $sgpr0
    ; SI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(<2 x f16>) = G_BITCAST [[COPY]](<2 x i16>)
    ; SI-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(<2 x f16>) = G_FNEG [[BITCAST]]
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(<2 x i16>) = COPY [[FNEG]](<2 x f16>)
    ; SI-NEXT: $vgpr0 = COPY [[COPY1]](<2 x i16>)
    ;
    ; VI-LABEL: name: fneg_v2s16_vs
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sgpr(<2 x i16>) = COPY $sgpr0
    ; VI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(<2 x f16>) = G_BITCAST [[COPY]](<2 x i16>)
    ; VI-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(<2 x f16>) = G_FNEG [[BITCAST]]
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(<2 x i16>) = COPY [[FNEG]](<2 x f16>)
    ; VI-NEXT: $vgpr0 = COPY [[COPY1]](<2 x i16>)
    ;
    ; GFX9-LABEL: name: fneg_v2s16_vs
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sgpr(<2 x i16>) = COPY $sgpr0
    ; GFX9-NEXT: [[BITCAST:%[0-9]+]]:sgpr(<2 x f16>) = G_BITCAST [[COPY]](<2 x i16>)
    ; GFX9-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(<2 x f16>) = G_FNEG [[BITCAST]]
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(<2 x i16>) = COPY [[FNEG]](<2 x f16>)
    ; GFX9-NEXT: $vgpr0 = COPY [[COPY1]](<2 x i16>)
    ;
    ; GFX10-LABEL: name: fneg_v2s16_vs
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(<2 x i16>) = COPY $sgpr0
    ; GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(<2 x f16>) = G_BITCAST [[COPY]](<2 x i16>)
    ; GFX10-NEXT: [[FNEG:%[0-9]+]]:vgpr_32(<2 x f16>) = G_FNEG [[BITCAST]]
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(<2 x i16>) = COPY [[FNEG]](<2 x f16>)
    ; GFX10-NEXT: $vgpr0 = COPY [[COPY1]](<2 x i16>)
    %0:sgpr(<2 x i16>) = COPY $sgpr0
    %1:sgpr(<2 x f16>) = G_BITCAST %0(<2 x i16>)
    %2:vgpr(<2 x f16>) = G_FNEG %1
    %3:vgpr(<2 x i16>) = G_BITCAST %2(<2 x f16>)
    $vgpr0 = COPY %3(<2 x i16>)
...

---
name: fneg_s64_ss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1
    ; SI-LABEL: name: fneg_s64_ss
    ; SI: liveins: $sgpr0_sgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; SI-NEXT: [[COPY1:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; SI-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; SI-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[S_XOR_B32_]]
    ; SI-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; SI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY3]], %subreg.sub0, [[COPY2]], %subreg.sub1
    ; SI-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; VI-LABEL: name: fneg_s64_ss
    ; VI: liveins: $sgpr0_sgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; VI-NEXT: [[COPY1:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; VI-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; VI-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[S_XOR_B32_]]
    ; VI-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; VI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY3]], %subreg.sub0, [[COPY2]], %subreg.sub1
    ; VI-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; GFX9-LABEL: name: fneg_s64_ss
    ; GFX9: liveins: $sgpr0_sgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; GFX9-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX9-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[S_XOR_B32_]]
    ; GFX9-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; GFX9-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY3]], %subreg.sub0, [[COPY2]], %subreg.sub1
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; GFX10-LABEL: name: fneg_s64_ss
    ; GFX10: liveins: $sgpr0_sgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; GFX10-NEXT: [[S_XOR_B32_:%[0-9]+]]:sreg_32 = S_XOR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX10-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[S_XOR_B32_]]
    ; GFX10-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; GFX10-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY3]], %subreg.sub0, [[COPY2]], %subreg.sub1
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:sgpr(f64) = G_BITCAST %0(i64)
    %2:sgpr(f64) = G_FNEG %1
    %3:sgpr(i64) = G_BITCAST %2(f64)
    S_ENDPGM 0, implicit %3(i64)
...

---
name: fneg_s64_vv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; SI-LABEL: name: fneg_s64_vv
    ; SI: liveins: $vgpr0_vgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; SI-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; SI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_XOR_B32_e64_]], %subreg.sub1
    ; SI-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; VI-LABEL: name: fneg_s64_vv
    ; VI: liveins: $vgpr0_vgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; VI-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; VI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_XOR_B32_e64_]], %subreg.sub1
    ; VI-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; GFX9-LABEL: name: fneg_s64_vv
    ; GFX9: liveins: $vgpr0_vgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; GFX9-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; GFX9-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_XOR_B32_e64_]], %subreg.sub1
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; GFX10-LABEL: name: fneg_s64_vv
    ; GFX10: liveins: $vgpr0_vgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; GFX10-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; GFX10-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_XOR_B32_e64_]], %subreg.sub1
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(f64) = G_BITCAST %0(i64)
    %2:vgpr(f64) = G_FNEG %1
    %3:vgpr(i64) = G_BITCAST %2(f64)
    S_ENDPGM 0, implicit %3(i64)
...

---
name: fneg_s64_vs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1
    ; SI-LABEL: name: fneg_s64_vs
    ; SI: liveins: $sgpr0_sgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; SI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f64) = G_BITCAST [[COPY]](i64)
    ; SI-NEXT: [[FNEG:%[0-9]+]]:vreg_64(f64) = G_FNEG [[BITCAST]]
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vreg_64(i64) = COPY [[FNEG]](f64)
    ; SI-NEXT: S_ENDPGM 0, implicit [[COPY1]](i64)
    ;
    ; VI-LABEL: name: fneg_s64_vs
    ; VI: liveins: $sgpr0_sgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; VI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f64) = G_BITCAST [[COPY]](i64)
    ; VI-NEXT: [[FNEG:%[0-9]+]]:vreg_64(f64) = G_FNEG [[BITCAST]]
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vreg_64(i64) = COPY [[FNEG]](f64)
    ; VI-NEXT: S_ENDPGM 0, implicit [[COPY1]](i64)
    ;
    ; GFX9-LABEL: name: fneg_s64_vs
    ; GFX9: liveins: $sgpr0_sgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX9-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f64) = G_BITCAST [[COPY]](i64)
    ; GFX9-NEXT: [[FNEG:%[0-9]+]]:vreg_64(f64) = G_FNEG [[BITCAST]]
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vreg_64(i64) = COPY [[FNEG]](f64)
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[COPY1]](i64)
    ;
    ; GFX10-LABEL: name: fneg_s64_vs
    ; GFX10: liveins: $sgpr0_sgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f64) = G_BITCAST [[COPY]](i64)
    ; GFX10-NEXT: [[FNEG:%[0-9]+]]:vreg_64(f64) = G_FNEG [[BITCAST]]
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vreg_64(i64) = COPY [[FNEG]](f64)
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[COPY1]](i64)
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:sgpr(f64) = G_BITCAST %0(i64)
    %2:vgpr(f64) = G_FNEG %1
    %3:vgpr(i64) = G_BITCAST %2(f64)
    S_ENDPGM 0, implicit %3(i64)

...

---
name: fneg_fabs_s32_ss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1
    ; SI-LABEL: name: fneg_fabs_s32_ss
    ; SI: liveins: $sgpr0_sgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; SI-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; SI-NEXT: S_ENDPGM 0, implicit [[S_OR_B32_]]
    ;
    ; VI-LABEL: name: fneg_fabs_s32_ss
    ; VI: liveins: $sgpr0_sgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; VI-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; VI-NEXT: S_ENDPGM 0, implicit [[S_OR_B32_]]
    ;
    ; GFX9-LABEL: name: fneg_fabs_s32_ss
    ; GFX9: liveins: $sgpr0_sgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[S_OR_B32_]]
    ;
    ; GFX10-LABEL: name: fneg_fabs_s32_ss
    ; GFX10: liveins: $sgpr0_sgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[S_OR_B32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(f32) = G_BITCAST %0(i32)
    %2:sgpr(f32) = G_FABS %1
    %3:sgpr(f32) = G_FNEG %2
    %4:sgpr(i32) = G_BITCAST %3(f32)
    S_ENDPGM 0, implicit %4(i32)
...

---
name: fneg_fabs_s32_vv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0
    ; SI-LABEL: name: fneg_fabs_s32_vv
    ; SI: liveins: $vgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; SI-NEXT: S_ENDPGM 0, implicit [[V_XOR_B32_e64_]]
    ;
    ; VI-LABEL: name: fneg_fabs_s32_vv
    ; VI: liveins: $vgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; VI-NEXT: S_ENDPGM 0, implicit [[V_XOR_B32_e64_]]
    ;
    ; GFX9-LABEL: name: fneg_fabs_s32_vv
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[V_XOR_B32_e64_]]
    ;
    ; GFX10-LABEL: name: fneg_fabs_s32_vv
    ; GFX10: liveins: $vgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[V_XOR_B32_e64_]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(f32) = G_BITCAST %0(i32)
    %2:vgpr(f32) = G_FABS %1
    %3:vgpr(f32) = G_BITCAST %0(i32)
    %4:vgpr(f32) = G_FNEG %3
    %5:vgpr(i32) = G_BITCAST %4(f32)
    S_ENDPGM 0, implicit %5(i32)
...

---
name: fneg_fabs_s32_vs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0
    ; SI-LABEL: name: fneg_fabs_s32_vs
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; SI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; SI-NEXT: [[FABS:%[0-9]+]]:vgpr_32(f32) = G_FABS [[BITCAST]]
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i16) = S_MOV_B32 2147483648
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(f32) = V_XOR_B32_e64 [[S_MOV_B32_]](i16), [[FABS]](f32), implicit $exec
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[V_XOR_B32_e64_]](f32)
    ; SI-NEXT: S_ENDPGM 0, implicit [[COPY1]](i32)
    ;
    ; VI-LABEL: name: fneg_fabs_s32_vs
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; VI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; VI-NEXT: [[FABS:%[0-9]+]]:vgpr_32(f32) = G_FABS [[BITCAST]]
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i16) = S_MOV_B32 2147483648
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(f32) = V_XOR_B32_e64 [[S_MOV_B32_]](i16), [[FABS]](f32), implicit $exec
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[V_XOR_B32_e64_]](f32)
    ; VI-NEXT: S_ENDPGM 0, implicit [[COPY1]](i32)
    ;
    ; GFX9-LABEL: name: fneg_fabs_s32_vs
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX9-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; GFX9-NEXT: [[FABS:%[0-9]+]]:vgpr_32(f32) = G_FABS [[BITCAST]]
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i16) = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(f32) = V_XOR_B32_e64 [[S_MOV_B32_]](i16), [[FABS]](f32), implicit $exec
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[V_XOR_B32_e64_]](f32)
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[COPY1]](i32)
    ;
    ; GFX10-LABEL: name: fneg_fabs_s32_vs
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f32) = G_BITCAST [[COPY]](i32)
    ; GFX10-NEXT: [[FABS:%[0-9]+]]:vgpr_32(f32) = G_FABS [[BITCAST]]
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i16) = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(f32) = V_XOR_B32_e64 [[S_MOV_B32_]](i16), [[FABS]](f32), implicit $exec
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[V_XOR_B32_e64_]](f32)
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[COPY1]](i32)
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(f32) = G_BITCAST %0(i32)
    %2:vgpr(f32) = G_FABS %1
    %3:vgpr(f32) = G_FNEG %2
    %4:vgpr(i32) = G_BITCAST %3(f32)
    S_ENDPGM 0, implicit %4(i32)
...

---
name: fneg_fabs_s16_ss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0
    ; SI-LABEL: name: fneg_fabs_s16_ss
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; SI-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; SI-NEXT: $sgpr0 = COPY [[S_OR_B32_]]
    ;
    ; VI-LABEL: name: fneg_fabs_s16_ss
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; VI-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; VI-NEXT: $sgpr0 = COPY [[S_OR_B32_]]
    ;
    ; GFX9-LABEL: name: fneg_fabs_s16_ss
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; GFX9-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX9-NEXT: $sgpr0 = COPY [[S_OR_B32_]]
    ;
    ; GFX10-LABEL: name: fneg_fabs_s16_ss
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; GFX10-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX10-NEXT: $sgpr0 = COPY [[S_OR_B32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(f16) = G_BITCAST %1(i16)
    %3:sgpr(f16) = G_FABS %2
    %4:sgpr(f16) = G_FNEG %3
    %5:sgpr(i16) = G_BITCAST %4(f16)
    %6:sgpr(i32) = G_ANYEXT %5(i16)
    $sgpr0 = COPY %6(i32)
...

---
name: fneg_fabs_s16_vv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0
    ; SI-LABEL: name: fneg_fabs_s16_vv
    ; SI: liveins: $vgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; SI-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; SI-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY [[V_OR_B32_e64_]]
    ; SI-NEXT: $vgpr0 = COPY [[COPY1]]
    ;
    ; VI-LABEL: name: fneg_fabs_s16_vv
    ; VI: liveins: $vgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; VI-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; VI-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY [[V_OR_B32_e64_]]
    ; VI-NEXT: $vgpr0 = COPY [[COPY1]]
    ;
    ; GFX9-LABEL: name: fneg_fabs_s16_vv
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; GFX9-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY [[V_OR_B32_e64_]]
    ; GFX9-NEXT: $vgpr0 = COPY [[COPY1]]
    ;
    ; GFX10-LABEL: name: fneg_fabs_s16_vv
    ; GFX10: liveins: $vgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 32768
    ; GFX10-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY [[V_OR_B32_e64_]]
    ; GFX10-NEXT: $vgpr0 = COPY [[COPY1]]
    %0:vgpr(i32) = COPY $vgpr0
    %1:vgpr(i16) = G_TRUNC %0(i32)
    %2:vgpr(f16) = G_BITCAST %1(i16)
    %3:vgpr(f16) = G_FABS %2
    %4:vgpr(f16) = G_FNEG %3
    %5:vgpr(i16) = G_BITCAST %4(f16)
    %6:sgpr(i32) = G_ANYEXT %5(i16)
    $vgpr0 = COPY %6(i32)
...

---
name: fneg_fabs_s16_vs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0

    ; SI-LABEL: name: fneg_fabs_s16_vs
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; SI-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i16) = G_TRUNC [[COPY]](i32)
    ; SI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f16) = G_BITCAST [[TRUNC]](i16)
    ; SI-NEXT: [[FNEG:%[0-9]+]]:sgpr(f16) = G_FNEG [[BITCAST]]
    ; SI-NEXT: [[FNEG1:%[0-9]+]]:vgpr_32(f16) = G_FNEG [[FNEG]]
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i16) = COPY [[FNEG1]](f16)
    ; SI-NEXT: [[COPY2:%[0-9]+]]:sreg_32(i32) = COPY [[COPY1]](i16)
    ; SI-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    ;
    ; VI-LABEL: name: fneg_fabs_s16_vs
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; VI-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i16) = G_TRUNC [[COPY]](i32)
    ; VI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f16) = G_BITCAST [[TRUNC]](i16)
    ; VI-NEXT: [[FNEG:%[0-9]+]]:sgpr(f16) = G_FNEG [[BITCAST]]
    ; VI-NEXT: [[FNEG1:%[0-9]+]]:vgpr_32(f16) = G_FNEG [[FNEG]]
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i16) = COPY [[FNEG1]](f16)
    ; VI-NEXT: [[COPY2:%[0-9]+]]:sreg_32(i32) = COPY [[COPY1]](i16)
    ; VI-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    ;
    ; GFX9-LABEL: name: fneg_fabs_s16_vs
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX9-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i16) = G_TRUNC [[COPY]](i32)
    ; GFX9-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f16) = G_BITCAST [[TRUNC]](i16)
    ; GFX9-NEXT: [[FNEG:%[0-9]+]]:sgpr(f16) = G_FNEG [[BITCAST]]
    ; GFX9-NEXT: [[FNEG1:%[0-9]+]]:vgpr_32(f16) = G_FNEG [[FNEG]]
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i16) = COPY [[FNEG1]](f16)
    ; GFX9-NEXT: [[COPY2:%[0-9]+]]:sreg_32(i32) = COPY [[COPY1]](i16)
    ; GFX9-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    ;
    ; GFX10-LABEL: name: fneg_fabs_s16_vs
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; GFX10-NEXT: [[TRUNC:%[0-9]+]]:sgpr(i16) = G_TRUNC [[COPY]](i32)
    ; GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f16) = G_BITCAST [[TRUNC]](i16)
    ; GFX10-NEXT: [[FNEG:%[0-9]+]]:sgpr(f16) = G_FNEG [[BITCAST]]
    ; GFX10-NEXT: [[FNEG1:%[0-9]+]]:vgpr_32(f16) = G_FNEG [[FNEG]]
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i16) = COPY [[FNEG1]](f16)
    ; GFX10-NEXT: [[COPY2:%[0-9]+]]:sreg_32(i32) = COPY [[COPY1]](i16)
    ; GFX10-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(f16) = G_BITCAST %1(i16)
    %3:sgpr(f16) = G_FNEG %2
    %4:vgpr(f16) = G_FNEG %3
    %5:vgpr(i16) = G_BITCAST %4(f16)
    %6:sgpr(i32) = G_ANYEXT %5(i16)
    $vgpr0 = COPY %6(i32)
...

---
name: fneg_fabs_v2s16_ss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1
    ; SI-LABEL: name: fneg_fabs_v2s16_ss
    ; SI: liveins: $sgpr0_sgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; SI-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; SI-NEXT: $sgpr0 = COPY [[S_OR_B32_]]
    ;
    ; VI-LABEL: name: fneg_fabs_v2s16_ss
    ; VI: liveins: $sgpr0_sgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; VI-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; VI-NEXT: $sgpr0 = COPY [[S_OR_B32_]]
    ;
    ; GFX9-LABEL: name: fneg_fabs_v2s16_ss
    ; GFX9: liveins: $sgpr0_sgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; GFX9-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX9-NEXT: $sgpr0 = COPY [[S_OR_B32_]]
    ;
    ; GFX10-LABEL: name: fneg_fabs_v2s16_ss
    ; GFX10: liveins: $sgpr0_sgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; GFX10-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX10-NEXT: $sgpr0 = COPY [[S_OR_B32_]]
    %0:sgpr(<2 x i16>) = COPY $sgpr0
    %1:sgpr(<2 x f16>) = G_BITCAST %0(<2 x i16>)
    %2:sgpr(<2 x f16>) = G_FABS %1
    %3:sgpr(<2 x f16>) = G_FNEG %2
    %4:sgpr(<2 x i16>) = G_BITCAST %3(<2 x f16>)
    $sgpr0 = COPY %4(<2 x i16>)
...

---
name: fneg_fabs_v2s16_vv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0
    ; SI-LABEL: name: fneg_fabs_v2s16_vv
    ; SI: liveins: $vgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; SI-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; VI-LABEL: name: fneg_fabs_v2s16_vv
    ; VI: liveins: $vgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; VI-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; GFX9-LABEL: name: fneg_fabs_v2s16_vv
    ; GFX9: liveins: $vgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX9-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    ;
    ; GFX10-LABEL: name: fneg_fabs_v2s16_vv
    ; GFX10: liveins: $vgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:vgpr_32 = COPY $vgpr0
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147516416
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32 = V_XOR_B32_e64 [[S_MOV_B32_]], [[COPY]], implicit $exec
    ; GFX10-NEXT: $vgpr0 = COPY [[V_XOR_B32_e64_]]
    %0:vgpr(<2 x i16>) = COPY $vgpr0
    %1:vgpr(<2 x f16>) = G_BITCAST %0(<2 x i16>)
    %2:vgpr(<2 x f16>) = G_FABS %1
    %3:vgpr(<2 x f16>) = G_BITCAST %0(<2 x i16>)
    %4:vgpr(<2 x f16>) = G_FNEG %3
    %5:vgpr(<2 x i16>) = G_BITCAST %4(<2 x f16>)
    $vgpr0 = COPY %5(<2 x i16>)
...

---
name: fneg_fabs_v2s16_vs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0
    ; SI-LABEL: name: fneg_fabs_v2s16_vs
    ; SI: liveins: $sgpr0
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sgpr(<2 x i16>) = COPY $sgpr0
    ; SI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(<2 x f16>) = G_BITCAST [[COPY]](<2 x i16>)
    ; SI-NEXT: [[FABS:%[0-9]+]]:vgpr_32(<2 x f16>) = G_FABS [[BITCAST]]
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i16) = S_MOV_B32 2147516416
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(<2 x f16>) = V_XOR_B32_e64 [[S_MOV_B32_]](i16), [[FABS]](<2 x f16>), implicit $exec
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(<2 x i16>) = COPY [[V_XOR_B32_e64_]](<2 x f16>)
    ; SI-NEXT: $vgpr0 = COPY [[COPY1]](<2 x i16>)
    ;
    ; VI-LABEL: name: fneg_fabs_v2s16_vs
    ; VI: liveins: $sgpr0
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sgpr(<2 x i16>) = COPY $sgpr0
    ; VI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(<2 x f16>) = G_BITCAST [[COPY]](<2 x i16>)
    ; VI-NEXT: [[FABS:%[0-9]+]]:vgpr_32(<2 x f16>) = G_FABS [[BITCAST]]
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i16) = S_MOV_B32 2147516416
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(<2 x f16>) = V_XOR_B32_e64 [[S_MOV_B32_]](i16), [[FABS]](<2 x f16>), implicit $exec
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(<2 x i16>) = COPY [[V_XOR_B32_e64_]](<2 x f16>)
    ; VI-NEXT: $vgpr0 = COPY [[COPY1]](<2 x i16>)
    ;
    ; GFX9-LABEL: name: fneg_fabs_v2s16_vs
    ; GFX9: liveins: $sgpr0
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sgpr(<2 x i16>) = COPY $sgpr0
    ; GFX9-NEXT: [[BITCAST:%[0-9]+]]:sgpr(<2 x f16>) = G_BITCAST [[COPY]](<2 x i16>)
    ; GFX9-NEXT: [[FABS:%[0-9]+]]:vgpr_32(<2 x f16>) = G_FABS [[BITCAST]]
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i16) = S_MOV_B32 2147516416
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(<2 x f16>) = V_XOR_B32_e64 [[S_MOV_B32_]](i16), [[FABS]](<2 x f16>), implicit $exec
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(<2 x i16>) = COPY [[V_XOR_B32_e64_]](<2 x f16>)
    ; GFX9-NEXT: $vgpr0 = COPY [[COPY1]](<2 x i16>)
    ;
    ; GFX10-LABEL: name: fneg_fabs_v2s16_vs
    ; GFX10: liveins: $sgpr0
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(<2 x i16>) = COPY $sgpr0
    ; GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(<2 x f16>) = G_BITCAST [[COPY]](<2 x i16>)
    ; GFX10-NEXT: [[FABS:%[0-9]+]]:vgpr_32(<2 x f16>) = G_FABS [[BITCAST]]
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i16) = S_MOV_B32 2147516416
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(<2 x f16>) = V_XOR_B32_e64 [[S_MOV_B32_]](i16), [[FABS]](<2 x f16>), implicit $exec
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(<2 x i16>) = COPY [[V_XOR_B32_e64_]](<2 x f16>)
    ; GFX10-NEXT: $vgpr0 = COPY [[COPY1]](<2 x i16>)
    %0:sgpr(<2 x i16>) = COPY $sgpr0
    %1:sgpr(<2 x f16>) = G_BITCAST %0(<2 x i16>)
    %2:vgpr(<2 x f16>) = G_FABS %1
    %3:vgpr(<2 x f16>) = G_FNEG %2
    %4:vgpr(<2 x i16>) = G_BITCAST %3(<2 x f16>)
    $vgpr0 = COPY %4(<2 x i16>)
...

---
name: fneg_fabs_s64_ss
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1
    ; SI-LABEL: name: fneg_fabs_s64_ss
    ; SI: liveins: $sgpr0_sgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; SI-NEXT: [[COPY1:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; SI-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; SI-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[S_OR_B32_]]
    ; SI-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; SI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY3]], %subreg.sub0, [[COPY2]], %subreg.sub1
    ; SI-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; VI-LABEL: name: fneg_fabs_s64_ss
    ; VI: liveins: $sgpr0_sgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; VI-NEXT: [[COPY1:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; VI-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; VI-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[S_OR_B32_]]
    ; VI-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; VI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY3]], %subreg.sub0, [[COPY2]], %subreg.sub1
    ; VI-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; GFX9-LABEL: name: fneg_fabs_s64_ss
    ; GFX9: liveins: $sgpr0_sgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; GFX9-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX9-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[S_OR_B32_]]
    ; GFX9-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; GFX9-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY3]], %subreg.sub0, [[COPY2]], %subreg.sub1
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; GFX10-LABEL: name: fneg_fabs_s64_ss
    ; GFX10: liveins: $sgpr0_sgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sreg_64 = COPY $sgpr0_sgpr1
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:sreg_32_xm0 = COPY [[COPY]].sub1
    ; GFX10-NEXT: [[S_OR_B32_:%[0-9]+]]:sreg_32 = S_OR_B32 [[COPY1]], [[S_MOV_B32_]], implicit-def dead $scc
    ; GFX10-NEXT: [[COPY2:%[0-9]+]]:sreg_32_xm0 = COPY [[S_OR_B32_]]
    ; GFX10-NEXT: [[COPY3:%[0-9]+]]:sreg_32_xexec_hi_and_sreg_32_xm0 = COPY [[COPY]].sub0
    ; GFX10-NEXT: [[REG_SEQUENCE:%[0-9]+]]:sreg_64 = REG_SEQUENCE [[COPY3]], %subreg.sub0, [[COPY2]], %subreg.sub1
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:sgpr(f64) = G_BITCAST %0(i64)
    %2:sgpr(f64) = G_FABS %1
    %3:sgpr(f64) = G_FNEG %2
    %4:sgpr(i64) = G_BITCAST %3(f64)
    S_ENDPGM 0, implicit %4(i64)
...

---
name: fneg_fabs_s64_vv
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; SI-LABEL: name: fneg_fabs_s64_vv
    ; SI: liveins: $vgpr0_vgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; SI-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; SI-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; SI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_OR_B32_e64_]], %subreg.sub1
    ; SI-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; VI-LABEL: name: fneg_fabs_s64_vv
    ; VI: liveins: $vgpr0_vgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; VI-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; VI-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; VI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_OR_B32_e64_]], %subreg.sub1
    ; VI-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; GFX9-LABEL: name: fneg_fabs_s64_vv
    ; GFX9: liveins: $vgpr0_vgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; GFX9-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; GFX9-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_OR_B32_e64_]], %subreg.sub1
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    ;
    ; GFX10-LABEL: name: fneg_fabs_s64_vv
    ; GFX10: liveins: $vgpr0_vgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub1
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32 = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[V_OR_B32_e64_:%[0-9]+]]:vgpr_32 = V_OR_B32_e64 [[S_MOV_B32_]], [[COPY1]], implicit $exec
    ; GFX10-NEXT: [[COPY2:%[0-9]+]]:vgpr_32 = COPY [[COPY]].sub0
    ; GFX10-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64 = REG_SEQUENCE [[COPY2]], %subreg.sub0, [[V_OR_B32_e64_]], %subreg.sub1
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[REG_SEQUENCE]]
    %0:vgpr(i64) = COPY $vgpr0_vgpr1
    %1:vgpr(f64) = G_BITCAST %0(i64)
    %2:vgpr(f64) = G_FABS %1
    %3:vgpr(f64) = G_FNEG %2
    %4:vgpr(i64) = G_BITCAST %3(f64)
    S_ENDPGM 0, implicit %4(i64)
...

---
name: fneg_fabs_s64_vs
legalized: true
regBankSelected: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1
    ; SI-LABEL: name: fneg_fabs_s64_vs
    ; SI: liveins: $sgpr0_sgpr1
    ; SI-NEXT: {{  $}}
    ; SI-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; SI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f64) = G_BITCAST [[COPY]](i64)
    ; SI-NEXT: [[FABS:%[0-9]+]]:vreg_64(f64) = G_FABS [[BITCAST]]
    ; SI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[FABS]].sub1(f64)
    ; SI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i32) = S_MOV_B32 2147483648
    ; SI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(i16) = V_XOR_B32_e64 [[S_MOV_B32_]](i32), [[COPY1]](i32), implicit $exec
    ; SI-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[FABS]].sub0(f64)
    ; SI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64(f64) = REG_SEQUENCE [[COPY2]](i32), %subreg.sub0, [[V_XOR_B32_e64_]](i16), %subreg.sub1
    ; SI-NEXT: [[COPY3:%[0-9]+]]:vreg_64(i64) = COPY [[REG_SEQUENCE]](f64)
    ; SI-NEXT: S_ENDPGM 0, implicit [[COPY3]](i64)
    ;
    ; VI-LABEL: name: fneg_fabs_s64_vs
    ; VI: liveins: $sgpr0_sgpr1
    ; VI-NEXT: {{  $}}
    ; VI-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; VI-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f64) = G_BITCAST [[COPY]](i64)
    ; VI-NEXT: [[FABS:%[0-9]+]]:vreg_64(f64) = G_FABS [[BITCAST]]
    ; VI-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[FABS]].sub1(f64)
    ; VI-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i32) = S_MOV_B32 2147483648
    ; VI-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(i16) = V_XOR_B32_e64 [[S_MOV_B32_]](i32), [[COPY1]](i32), implicit $exec
    ; VI-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[FABS]].sub0(f64)
    ; VI-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64(f64) = REG_SEQUENCE [[COPY2]](i32), %subreg.sub0, [[V_XOR_B32_e64_]](i16), %subreg.sub1
    ; VI-NEXT: [[COPY3:%[0-9]+]]:vreg_64(i64) = COPY [[REG_SEQUENCE]](f64)
    ; VI-NEXT: S_ENDPGM 0, implicit [[COPY3]](i64)
    ;
    ; GFX9-LABEL: name: fneg_fabs_s64_vs
    ; GFX9: liveins: $sgpr0_sgpr1
    ; GFX9-NEXT: {{  $}}
    ; GFX9-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX9-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f64) = G_BITCAST [[COPY]](i64)
    ; GFX9-NEXT: [[FABS:%[0-9]+]]:vreg_64(f64) = G_FABS [[BITCAST]]
    ; GFX9-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[FABS]].sub1(f64)
    ; GFX9-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i32) = S_MOV_B32 2147483648
    ; GFX9-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(i16) = V_XOR_B32_e64 [[S_MOV_B32_]](i32), [[COPY1]](i32), implicit $exec
    ; GFX9-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[FABS]].sub0(f64)
    ; GFX9-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64(f64) = REG_SEQUENCE [[COPY2]](i32), %subreg.sub0, [[V_XOR_B32_e64_]](i16), %subreg.sub1
    ; GFX9-NEXT: [[COPY3:%[0-9]+]]:vreg_64(i64) = COPY [[REG_SEQUENCE]](f64)
    ; GFX9-NEXT: S_ENDPGM 0, implicit [[COPY3]](i64)
    ;
    ; GFX10-LABEL: name: fneg_fabs_s64_vs
    ; GFX10: liveins: $sgpr0_sgpr1
    ; GFX10-NEXT: {{  $}}
    ; GFX10-NEXT: [[COPY:%[0-9]+]]:sgpr(i64) = COPY $sgpr0_sgpr1
    ; GFX10-NEXT: [[BITCAST:%[0-9]+]]:sgpr(f64) = G_BITCAST [[COPY]](i64)
    ; GFX10-NEXT: [[FABS:%[0-9]+]]:vreg_64(f64) = G_FABS [[BITCAST]]
    ; GFX10-NEXT: [[COPY1:%[0-9]+]]:vgpr_32(i32) = COPY [[FABS]].sub1(f64)
    ; GFX10-NEXT: [[S_MOV_B32_:%[0-9]+]]:sreg_32(i32) = S_MOV_B32 2147483648
    ; GFX10-NEXT: [[V_XOR_B32_e64_:%[0-9]+]]:vgpr_32(i16) = V_XOR_B32_e64 [[S_MOV_B32_]](i32), [[COPY1]](i32), implicit $exec
    ; GFX10-NEXT: [[COPY2:%[0-9]+]]:vgpr_32(i32) = COPY [[FABS]].sub0(f64)
    ; GFX10-NEXT: [[REG_SEQUENCE:%[0-9]+]]:vreg_64(f64) = REG_SEQUENCE [[COPY2]](i32), %subreg.sub0, [[V_XOR_B32_e64_]](i16), %subreg.sub1
    ; GFX10-NEXT: [[COPY3:%[0-9]+]]:vreg_64(i64) = COPY [[REG_SEQUENCE]](f64)
    ; GFX10-NEXT: S_ENDPGM 0, implicit [[COPY3]](i64)
    %0:sgpr(i64) = COPY $sgpr0_sgpr1
    %1:sgpr(f64) = G_BITCAST %0(i64)
    %2:vgpr(f64) = G_FABS %1
    %3:vgpr(f64) = G_FNEG %2
    %4:vgpr(i64) = G_BITCAST %3(f64)
    S_ENDPGM 0, implicit %4(i64)
...
