# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-fast | FileCheck -check-prefix=WAVE64 %s
# RUN: llc -mtriple=amdgcn -mcpu=fiji -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-greedy | FileCheck -check-prefix=WAVE64 %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-fast | FileCheck -check-prefix=WAVE32 %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -run-pass=regbankselect %s -verify-machineinstrs -o - -regbankselect-greedy | FileCheck -check-prefix=WAVE32 %s


---
name: extract_vector_elt_v16s32_ss
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $sgpr16

    ; WAVE64-LABEL: name: extract_vector_elt_v16s32_ss
    ; WAVE64: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $sgpr16
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:sgpr(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr16
    ; WAVE64-NEXT: [[EVEC:%[0-9]+]]:sgpr(i32) = G_EXTRACT_VECTOR_ELT [[COPY]](<16 x i32>), [[COPY1]](i32)
    ; WAVE64-NEXT: $vgpr0 = COPY [[EVEC]](i32)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v16s32_ss
    ; WAVE32: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $sgpr16
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr16
    ; WAVE32-NEXT: [[EVEC:%[0-9]+]]:sgpr(i32) = G_EXTRACT_VECTOR_ELT [[COPY]](<16 x i32>), [[COPY1]](i32)
    ; WAVE32-NEXT: $vgpr0 = COPY [[EVEC]](i32)
    %0:_(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    %1:_(i32) = COPY $sgpr16
    %2:_(i32) = G_EXTRACT_VECTOR_ELT %0(<16 x i32>), %1(i32)
    $vgpr0 = COPY %2(i32)
...

---
name: extract_vector_elt_v16s32_sv
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0

    ; WAVE64-LABEL: name: extract_vector_elt_v16s32_sv
    ; WAVE64: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:sgpr(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE64-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE64-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C7]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE64-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE64-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C8]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE64-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE64-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C9]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE64-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE64-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C10]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE64-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE64-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C11]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE64-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE64-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C12]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE64-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE64-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C13]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE64-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE64-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C14]]
    ; WAVE64-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE64-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v16s32_sv
    ; WAVE32: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE32-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE32-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C7]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE32-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE32-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C8]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE32-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE32-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C9]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE32-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE32-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C10]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE32-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE32-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C11]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE32-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE32-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C12]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE32-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE32-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C13]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE32-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE32-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C14]]
    ; WAVE32-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    %0:_(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    %1:_(i32) = COPY $vgpr0
    %2:_(i32) = G_EXTRACT_VECTOR_ELT %0(<16 x i32>), %1(i32)
    $vgpr0 = COPY %2(i32)
...

---
name: extract_vector_elt_v16s32_vs
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $sgpr0

    ; WAVE64-LABEL: name: extract_vector_elt_v16s32_vs
    ; WAVE64: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $sgpr0
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE64-NEXT: [[EVEC:%[0-9]+]]:vgpr(i32) = G_EXTRACT_VECTOR_ELT [[COPY]](<16 x i32>), [[COPY1]](i32)
    ; WAVE64-NEXT: $vgpr0 = COPY [[EVEC]](i32)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v16s32_vs
    ; WAVE32: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE32-NEXT: [[EVEC:%[0-9]+]]:vgpr(i32) = G_EXTRACT_VECTOR_ELT [[COPY]](<16 x i32>), [[COPY1]](i32)
    ; WAVE32-NEXT: $vgpr0 = COPY [[EVEC]](i32)
    %0:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i32) = COPY $sgpr0
    %2:_(i32) = G_EXTRACT_VECTOR_ELT %0(<16 x i32>), %1(i32)
    $vgpr0 = COPY %2(i32)
...

---
name: extract_vector_elt_v16s32_vv
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16

    ; WAVE64-LABEL: name: extract_vector_elt_v16s32_vv
    ; WAVE64: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE64-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE64-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C7]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE64-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE64-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C8]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE64-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE64-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C9]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE64-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE64-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C10]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE64-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE64-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C11]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE64-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE64-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C12]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE64-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE64-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C13]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE64-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE64-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C14]]
    ; WAVE64-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE64-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v16s32_vv
    ; WAVE32: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE32-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE32-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C7]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE32-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE32-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C8]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE32-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE32-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C9]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE32-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE32-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C10]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE32-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE32-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C11]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE32-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE32-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C12]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE32-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE32-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C13]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE32-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE32-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C14]]
    ; WAVE32-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY2]](i32)
    %0:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i32) = COPY $vgpr16
    %2:_(i32) = G_EXTRACT_VECTOR_ELT %0(<16 x i32>), %1(i32)
    $vgpr0 = COPY %2(i32)
...

---
name: extract_vector_elt_v8s64_ss
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $sgpr16

    ; WAVE64-LABEL: name: extract_vector_elt_v8s64_ss
    ; WAVE64: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $sgpr16
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:sgpr(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr16
    ; WAVE64-NEXT: [[EVEC:%[0-9]+]]:sgpr(i64) = G_EXTRACT_VECTOR_ELT [[COPY]](<8 x i64>), [[COPY1]](i32)
    ; WAVE64-NEXT: $sgpr0_sgpr1 = COPY [[EVEC]](i64)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v8s64_ss
    ; WAVE32: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $sgpr16
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr16
    ; WAVE32-NEXT: [[EVEC:%[0-9]+]]:sgpr(i64) = G_EXTRACT_VECTOR_ELT [[COPY]](<8 x i64>), [[COPY1]](i32)
    ; WAVE32-NEXT: $sgpr0_sgpr1 = COPY [[EVEC]](i64)
    %0:_(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    %1:_(i32) = COPY $sgpr16
    %2:_(i64) = G_EXTRACT_VECTOR_ELT %0(<8 x i64>), %1(i32)
    $sgpr0_sgpr1 = COPY %2(i64)
...

---
name: extract_vector_elt_v8s64_vs
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $sgpr0

    ; WAVE64-LABEL: name: extract_vector_elt_v8s64_vs
    ; WAVE64: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $sgpr0
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:vgpr(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE64-NEXT: [[BITCAST:%[0-9]+]]:vgpr(<16 x i32>) = G_BITCAST [[COPY]](<8 x i64>)
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[SHL:%[0-9]+]]:sgpr(i32) = G_SHL [[COPY1]], [[C]](i32)
    ; WAVE64-NEXT: [[ADD:%[0-9]+]]:sgpr(i32) = G_ADD [[SHL]], [[C]]
    ; WAVE64-NEXT: [[EVEC:%[0-9]+]]:vgpr(i32) = G_EXTRACT_VECTOR_ELT [[BITCAST]](<16 x i32>), [[SHL]](i32)
    ; WAVE64-NEXT: [[EVEC1:%[0-9]+]]:vgpr(i32) = G_EXTRACT_VECTOR_ELT [[BITCAST]](<16 x i32>), [[ADD]](i32)
    ; WAVE64-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[EVEC]](i32), [[EVEC1]](i32)
    ; WAVE64-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v8s64_vs
    ; WAVE32: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $sgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:sgpr(i32) = COPY $sgpr0
    ; WAVE32-NEXT: [[BITCAST:%[0-9]+]]:vgpr(<16 x i32>) = G_BITCAST [[COPY]](<8 x i64>)
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[SHL:%[0-9]+]]:sgpr(i32) = G_SHL [[COPY1]], [[C]](i32)
    ; WAVE32-NEXT: [[ADD:%[0-9]+]]:sgpr(i32) = G_ADD [[SHL]], [[C]]
    ; WAVE32-NEXT: [[EVEC:%[0-9]+]]:vgpr(i32) = G_EXTRACT_VECTOR_ELT [[BITCAST]](<16 x i32>), [[SHL]](i32)
    ; WAVE32-NEXT: [[EVEC1:%[0-9]+]]:vgpr(i32) = G_EXTRACT_VECTOR_ELT [[BITCAST]](<16 x i32>), [[ADD]](i32)
    ; WAVE32-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[EVEC]](i32), [[EVEC1]](i32)
    ; WAVE32-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    %0:_(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i32) = COPY $sgpr0
    %2:_(i64) = G_EXTRACT_VECTOR_ELT %0(<8 x i64>), %1(i32)
    $vgpr0_vgpr1 = COPY %2(i64)
...

---
name: extract_vector_elt_v8s64_sv
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0

    ; WAVE64-LABEL: name: extract_vector_elt_v8s64_sv
    ; WAVE64: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:sgpr(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<8 x i64>)
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV2]], [[UV]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV3]], [[UV1]]
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV4]], [[SELECT]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV5]], [[SELECT1]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV6]], [[SELECT2]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV7]], [[SELECT3]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV8]], [[SELECT4]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV9]], [[SELECT5]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV10]], [[SELECT6]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV11]], [[SELECT7]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV12]], [[SELECT8]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV13]], [[SELECT9]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV14]], [[SELECT10]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV15]], [[SELECT11]]
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[SELECT12]](i32)
    ; WAVE64-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT13]](i32)
    ; WAVE64-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[COPY2]](i32), [[COPY3]](i32)
    ; WAVE64-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v8s64_sv
    ; WAVE32: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<8 x i64>)
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV2]], [[UV]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV3]], [[UV1]]
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV4]], [[SELECT]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV5]], [[SELECT1]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV6]], [[SELECT2]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV7]], [[SELECT3]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV8]], [[SELECT4]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV9]], [[SELECT5]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV10]], [[SELECT6]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV11]], [[SELECT7]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV12]], [[SELECT8]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV13]], [[SELECT9]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV14]], [[SELECT10]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV15]], [[SELECT11]]
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[SELECT12]](i32)
    ; WAVE32-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT13]](i32)
    ; WAVE32-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[COPY2]](i32), [[COPY3]](i32)
    ; WAVE32-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    %0:_(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    %1:_(i32) = COPY $vgpr0
    %2:_(i64) = G_EXTRACT_VECTOR_ELT %0(<8 x i64>), %1(i32)
    $vgpr0_vgpr1 = COPY %2(i64)
...

---
name: extract_vector_elt_v8s64_vv
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16

    ; WAVE64-LABEL: name: extract_vector_elt_v8s64_vv
    ; WAVE64: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:vgpr(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<8 x i64>)
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV2]], [[UV]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV3]], [[UV1]]
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV4]], [[SELECT]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV5]], [[SELECT1]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV6]], [[SELECT2]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV7]], [[SELECT3]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV8]], [[SELECT4]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV9]], [[SELECT5]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV10]], [[SELECT6]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV11]], [[SELECT7]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV12]], [[SELECT8]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV13]], [[SELECT9]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV14]], [[SELECT10]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV15]], [[SELECT11]]
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[SELECT12]](i32)
    ; WAVE64-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT13]](i32)
    ; WAVE64-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[COPY2]](i32), [[COPY3]](i32)
    ; WAVE64-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v8s64_vv
    ; WAVE32: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<8 x i64>)
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV2]], [[UV]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV3]], [[UV1]]
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV4]], [[SELECT]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV5]], [[SELECT1]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV6]], [[SELECT2]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV7]], [[SELECT3]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV8]], [[SELECT4]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV9]], [[SELECT5]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV10]], [[SELECT6]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV11]], [[SELECT7]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV12]], [[SELECT8]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV13]], [[SELECT9]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[COPY1]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV14]], [[SELECT10]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV15]], [[SELECT11]]
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[SELECT12]](i32)
    ; WAVE32-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT13]](i32)
    ; WAVE32-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[COPY2]](i32), [[COPY3]](i32)
    ; WAVE32-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    %0:_(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i32) = COPY $vgpr16
    %2:_(i64) = G_EXTRACT_VECTOR_ELT %0(<8 x i64>), %1(i32)
    $vgpr0_vgpr1 = COPY %2(i64)
...

---
name: extract_vector_elt_v16s32_vv_idx_add1
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16

    ; WAVE64-LABEL: name: extract_vector_elt_v16s32_vv_idx_add1
    ; WAVE64: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE64-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE64-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE64-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE64-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C8]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE64-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE64-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C9]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE64-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE64-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C10]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE64-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE64-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C11]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE64-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE64-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C12]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE64-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE64-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C13]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE64-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE64-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C14]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE64-NEXT: [[C15:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE64-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C15]]
    ; WAVE64-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE64-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE64-NEXT: $vgpr0 = COPY [[COPY3]](i32)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v16s32_vv_idx_add1
    ; WAVE32: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE32-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE32-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE32-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE32-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C8]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE32-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE32-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C9]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE32-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE32-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C10]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE32-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE32-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C11]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE32-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE32-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C12]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE32-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE32-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C13]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE32-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE32-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C14]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE32-NEXT: [[C15:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE32-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C15]]
    ; WAVE32-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE32-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY3]](i32)
    %0:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i32) = COPY $vgpr16
    %2:_(i32) = G_CONSTANT i32 1
    %3:_(i32) = G_ADD %1, %2
    %4:_(i32) = G_EXTRACT_VECTOR_ELT %0(<16 x i32>), %3(i32)
    $vgpr0 = COPY %4(i32)
...

---
name: extract_vector_elt_v16s32_vv_idx_addm1
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16

    ; WAVE64-LABEL: name: extract_vector_elt_v16s32_vv_idx_addm1
    ; WAVE64: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 -1
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE64-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE64-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE64-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE64-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C8]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE64-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE64-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C9]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE64-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE64-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C10]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE64-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE64-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C11]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE64-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE64-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C12]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE64-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE64-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C13]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE64-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE64-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C14]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE64-NEXT: [[C15:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE64-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C15]]
    ; WAVE64-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE64-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE64-NEXT: $vgpr0 = COPY [[COPY3]](i32)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v16s32_vv_idx_addm1
    ; WAVE32: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 -1
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE32-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE32-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE32-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE32-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C8]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE32-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE32-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C9]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE32-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE32-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C10]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE32-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE32-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C11]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE32-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE32-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C12]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE32-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE32-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C13]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE32-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE32-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C14]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE32-NEXT: [[C15:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE32-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C15]]
    ; WAVE32-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE32-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY3]](i32)
    %0:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i32) = COPY $vgpr16
    %2:_(i32) = G_CONSTANT i32 -1
    %3:_(i32) = G_ADD %1, %2
    %4:_(i32) = G_EXTRACT_VECTOR_ELT %0(<16 x i32>), %3(i32)
    $vgpr0 = COPY %4(i32)
...

---
name: extract_vector_elt_v16s32_vv_idx_add16
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16

    ; WAVE64-LABEL: name: extract_vector_elt_v16s32_vv_idx_add16
    ; WAVE64: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 16
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE64-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE64-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE64-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE64-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C8]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE64-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE64-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C9]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE64-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE64-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C10]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE64-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE64-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C11]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE64-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE64-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C12]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE64-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE64-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C13]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE64-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE64-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C14]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE64-NEXT: [[C15:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE64-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C15]]
    ; WAVE64-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE64-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE64-NEXT: $vgpr0 = COPY [[COPY3]](i32)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v16s32_vv_idx_add16
    ; WAVE32: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 16
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE32-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE32-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE32-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE32-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C8]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE32-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE32-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C9]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE32-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE32-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C10]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE32-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE32-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C11]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE32-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE32-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C12]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE32-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE32-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C13]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE32-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE32-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C14]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE32-NEXT: [[C15:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE32-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C15]]
    ; WAVE32-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE32-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY3]](i32)
    %0:_(<16 x i32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i32) = COPY $vgpr16
    %2:_(i32) = G_CONSTANT i32 16
    %3:_(i32) = G_ADD %1, %2
    %4:_(i32) = G_EXTRACT_VECTOR_ELT %0(<16 x i32>), %3(i32)
    $vgpr0 = COPY %4(i32)
...

---
name: extract_vector_elt_v8s64_vv_idx_add1
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16

    ; WAVE64-LABEL: name: extract_vector_elt_v8s64_vv_idx_add1
    ; WAVE64: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:vgpr(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE64-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<8 x i64>)
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV2]], [[UV]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV3]], [[UV1]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV4]], [[SELECT]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV5]], [[SELECT1]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV6]], [[SELECT2]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV7]], [[SELECT3]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV8]], [[SELECT4]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV9]], [[SELECT5]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV10]], [[SELECT6]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV11]], [[SELECT7]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV12]], [[SELECT8]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV13]], [[SELECT9]]
    ; WAVE64-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV14]], [[SELECT10]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV15]], [[SELECT11]]
    ; WAVE64-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT12]](i32)
    ; WAVE64-NEXT: [[COPY4:%[0-9]+]]:vgpr(i32) = COPY [[SELECT13]](i32)
    ; WAVE64-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[COPY3]](i32), [[COPY4]](i32)
    ; WAVE64-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v8s64_vv_idx_add1
    ; WAVE32: liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15, $vgpr16
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:vgpr(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr16
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE32-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<8 x i64>)
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV2]], [[UV]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV3]], [[UV1]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV4]], [[SELECT]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV5]], [[SELECT1]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV6]], [[SELECT2]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV7]], [[SELECT3]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV8]], [[SELECT4]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV9]], [[SELECT5]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV10]], [[SELECT6]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV11]], [[SELECT7]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV12]], [[SELECT8]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV13]], [[SELECT9]]
    ; WAVE32-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV14]], [[SELECT10]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV15]], [[SELECT11]]
    ; WAVE32-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT12]](i32)
    ; WAVE32-NEXT: [[COPY4:%[0-9]+]]:vgpr(i32) = COPY [[SELECT13]](i32)
    ; WAVE32-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[COPY3]](i32), [[COPY4]](i32)
    ; WAVE32-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    %0:_(<8 x i64>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(i32) = COPY $vgpr16
    %2:_(i32) = G_CONSTANT i32 1
    %3:_(i32) = G_ADD %1, %2
    %4:_(i64) = G_EXTRACT_VECTOR_ELT %0(<8 x i64>), %3(i32)
    $vgpr0_vgpr1 = COPY %4(i64)
...

---
name: extract_vector_elt_v16s32_sv_idx_add1
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0

    ; WAVE64-LABEL: name: extract_vector_elt_v16s32_sv_idx_add1
    ; WAVE64: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:sgpr(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE64-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE64-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE64-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE64-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C8]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE64-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE64-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C9]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE64-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE64-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C10]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE64-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE64-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C11]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE64-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE64-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C12]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE64-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE64-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C13]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE64-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE64-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C14]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE64-NEXT: [[C15:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE64-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C15]]
    ; WAVE64-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE64-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE64-NEXT: $vgpr0 = COPY [[COPY3]](i32)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v16s32_sv_idx_add1
    ; WAVE32: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE32-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<16 x i32>)
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV1]], [[UV]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV2]], [[SELECT]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV3]], [[SELECT1]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV4]], [[SELECT2]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV5]], [[SELECT3]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV6]], [[SELECT4]]
    ; WAVE32-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV7]], [[SELECT5]]
    ; WAVE32-NEXT: [[C8:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 8
    ; WAVE32-NEXT: [[ICMP7:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C8]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP7]](i1), [[UV8]], [[SELECT6]]
    ; WAVE32-NEXT: [[C9:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 9
    ; WAVE32-NEXT: [[ICMP8:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C9]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP8]](i1), [[UV9]], [[SELECT7]]
    ; WAVE32-NEXT: [[C10:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 10
    ; WAVE32-NEXT: [[ICMP9:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C10]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP9]](i1), [[UV10]], [[SELECT8]]
    ; WAVE32-NEXT: [[C11:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 11
    ; WAVE32-NEXT: [[ICMP10:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C11]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP10]](i1), [[UV11]], [[SELECT9]]
    ; WAVE32-NEXT: [[C12:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 12
    ; WAVE32-NEXT: [[ICMP11:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C12]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP11]](i1), [[UV12]], [[SELECT10]]
    ; WAVE32-NEXT: [[C13:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 13
    ; WAVE32-NEXT: [[ICMP12:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C13]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP12]](i1), [[UV13]], [[SELECT11]]
    ; WAVE32-NEXT: [[C14:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 14
    ; WAVE32-NEXT: [[ICMP13:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C14]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP13]](i1), [[UV14]], [[SELECT12]]
    ; WAVE32-NEXT: [[C15:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 15
    ; WAVE32-NEXT: [[ICMP14:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C15]]
    ; WAVE32-NEXT: [[SELECT14:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP14]](i1), [[UV15]], [[SELECT13]]
    ; WAVE32-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT14]](i32)
    ; WAVE32-NEXT: $vgpr0 = COPY [[COPY3]](i32)
    %0:_(<16 x i32>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    %1:_(i32) = COPY $vgpr0
    %2:_(i32) = G_CONSTANT i32 1
    %3:_(i32) = G_ADD %1, %2
    %4:_(i32) = G_EXTRACT_VECTOR_ELT %0(<16 x i32>), %3(i32)
    $vgpr0 = COPY %4(i32)
...

---
name: extract_vector_elt_v8s64_sv_add1
legalized: true
tracksRegLiveness: true

body: |
  bb.0:
    liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0

    ; WAVE64-LABEL: name: extract_vector_elt_v8s64_sv_add1
    ; WAVE64: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0
    ; WAVE64-NEXT: {{  $}}
    ; WAVE64-NEXT: [[COPY:%[0-9]+]]:sgpr(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE64-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE64-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE64-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE64-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<8 x i64>)
    ; WAVE64-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE64-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE64-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV2]], [[UV]]
    ; WAVE64-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV3]], [[UV1]]
    ; WAVE64-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE64-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE64-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV4]], [[SELECT]]
    ; WAVE64-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV5]], [[SELECT1]]
    ; WAVE64-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE64-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE64-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV6]], [[SELECT2]]
    ; WAVE64-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV7]], [[SELECT3]]
    ; WAVE64-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE64-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE64-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV8]], [[SELECT4]]
    ; WAVE64-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV9]], [[SELECT5]]
    ; WAVE64-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE64-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE64-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV10]], [[SELECT6]]
    ; WAVE64-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV11]], [[SELECT7]]
    ; WAVE64-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE64-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE64-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV12]], [[SELECT8]]
    ; WAVE64-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV13]], [[SELECT9]]
    ; WAVE64-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE64-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE64-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV14]], [[SELECT10]]
    ; WAVE64-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV15]], [[SELECT11]]
    ; WAVE64-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT12]](i32)
    ; WAVE64-NEXT: [[COPY4:%[0-9]+]]:vgpr(i32) = COPY [[SELECT13]](i32)
    ; WAVE64-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[COPY3]](i32), [[COPY4]](i32)
    ; WAVE64-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    ;
    ; WAVE32-LABEL: name: extract_vector_elt_v8s64_sv_add1
    ; WAVE32: liveins: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15, $vgpr0
    ; WAVE32-NEXT: {{  $}}
    ; WAVE32-NEXT: [[COPY:%[0-9]+]]:sgpr(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    ; WAVE32-NEXT: [[COPY1:%[0-9]+]]:vgpr(i32) = COPY $vgpr0
    ; WAVE32-NEXT: [[C:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[COPY2:%[0-9]+]]:vgpr(i32) = COPY [[C]](i32)
    ; WAVE32-NEXT: [[ADD:%[0-9]+]]:vgpr(i32) = G_ADD [[COPY1]], [[COPY2]]
    ; WAVE32-NEXT: [[UV:%[0-9]+]]:vgpr(i32), [[UV1:%[0-9]+]]:vgpr(i32), [[UV2:%[0-9]+]]:vgpr(i32), [[UV3:%[0-9]+]]:vgpr(i32), [[UV4:%[0-9]+]]:vgpr(i32), [[UV5:%[0-9]+]]:vgpr(i32), [[UV6:%[0-9]+]]:vgpr(i32), [[UV7:%[0-9]+]]:vgpr(i32), [[UV8:%[0-9]+]]:vgpr(i32), [[UV9:%[0-9]+]]:vgpr(i32), [[UV10:%[0-9]+]]:vgpr(i32), [[UV11:%[0-9]+]]:vgpr(i32), [[UV12:%[0-9]+]]:vgpr(i32), [[UV13:%[0-9]+]]:vgpr(i32), [[UV14:%[0-9]+]]:vgpr(i32), [[UV15:%[0-9]+]]:vgpr(i32) = G_UNMERGE_VALUES [[COPY]](<8 x i64>)
    ; WAVE32-NEXT: [[C1:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 1
    ; WAVE32-NEXT: [[ICMP:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C1]]
    ; WAVE32-NEXT: [[SELECT:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV2]], [[UV]]
    ; WAVE32-NEXT: [[SELECT1:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP]](i1), [[UV3]], [[UV1]]
    ; WAVE32-NEXT: [[C2:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 2
    ; WAVE32-NEXT: [[ICMP1:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C2]]
    ; WAVE32-NEXT: [[SELECT2:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV4]], [[SELECT]]
    ; WAVE32-NEXT: [[SELECT3:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP1]](i1), [[UV5]], [[SELECT1]]
    ; WAVE32-NEXT: [[C3:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 3
    ; WAVE32-NEXT: [[ICMP2:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C3]]
    ; WAVE32-NEXT: [[SELECT4:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV6]], [[SELECT2]]
    ; WAVE32-NEXT: [[SELECT5:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP2]](i1), [[UV7]], [[SELECT3]]
    ; WAVE32-NEXT: [[C4:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 4
    ; WAVE32-NEXT: [[ICMP3:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C4]]
    ; WAVE32-NEXT: [[SELECT6:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV8]], [[SELECT4]]
    ; WAVE32-NEXT: [[SELECT7:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP3]](i1), [[UV9]], [[SELECT5]]
    ; WAVE32-NEXT: [[C5:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 5
    ; WAVE32-NEXT: [[ICMP4:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C5]]
    ; WAVE32-NEXT: [[SELECT8:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV10]], [[SELECT6]]
    ; WAVE32-NEXT: [[SELECT9:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP4]](i1), [[UV11]], [[SELECT7]]
    ; WAVE32-NEXT: [[C6:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 6
    ; WAVE32-NEXT: [[ICMP5:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C6]]
    ; WAVE32-NEXT: [[SELECT10:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV12]], [[SELECT8]]
    ; WAVE32-NEXT: [[SELECT11:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP5]](i1), [[UV13]], [[SELECT9]]
    ; WAVE32-NEXT: [[C7:%[0-9]+]]:sgpr(i32) = G_CONSTANT i32 7
    ; WAVE32-NEXT: [[ICMP6:%[0-9]+]]:vcc(i1) = G_ICMP intpred(eq), [[ADD]](i32), [[C7]]
    ; WAVE32-NEXT: [[SELECT12:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV14]], [[SELECT10]]
    ; WAVE32-NEXT: [[SELECT13:%[0-9]+]]:vgpr(i32) = G_SELECT [[ICMP6]](i1), [[UV15]], [[SELECT11]]
    ; WAVE32-NEXT: [[COPY3:%[0-9]+]]:vgpr(i32) = COPY [[SELECT12]](i32)
    ; WAVE32-NEXT: [[COPY4:%[0-9]+]]:vgpr(i32) = COPY [[SELECT13]](i32)
    ; WAVE32-NEXT: [[MV:%[0-9]+]]:vgpr(i64) = G_MERGE_VALUES [[COPY3]](i32), [[COPY4]](i32)
    ; WAVE32-NEXT: $vgpr0_vgpr1 = COPY [[MV]](i64)
    %0:_(<8 x i64>) = COPY $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7_sgpr8_sgpr9_sgpr10_sgpr11_sgpr12_sgpr13_sgpr14_sgpr15
    %1:_(i32) = COPY $vgpr0
    %2:_(i32) = G_CONSTANT i32 1
    %3:_(i32) = G_ADD %1, %2
    %4:_(i64) = G_EXTRACT_VECTOR_ELT %0(<8 x i64>), %3(i32)
    $vgpr0_vgpr1 = COPY %4(i64)
...
