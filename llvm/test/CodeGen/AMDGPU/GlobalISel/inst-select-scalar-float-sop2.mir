# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=gfx1150 -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX1150 %s
# RUN: llc -mtriple=amdgcn -mcpu=gfx1200 -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck -check-prefix=GFX1150 %s

---
name:            fadd_f32
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fadd_f32
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_ADD_F32_:%[0-9]+]]:sreg_32 = nofpexcept S_ADD_F32 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_ADD_F32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(f32) = G_FADD %2, %3
    %5:sgpr(i32) = G_BITCAST %4(f32)
    $sgpr0 = COPY %5(i32)

...
---
name:            fsub_f32
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fsub_f32
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_SUB_F32_:%[0-9]+]]:sreg_32 = nofpexcept S_SUB_F32 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_SUB_F32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(f32) = G_FSUB %2, %3
    %5:sgpr(i32) = G_BITCAST %4(f32)
    $sgpr0 = COPY %5(i32)

...
---
name:            fmul_f32
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fmul_f32
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_MUL_F32_:%[0-9]+]]:sreg_32 = nofpexcept S_MUL_F32 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_MUL_F32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(f32) = G_FMUL %2, %3
    %5:sgpr(i32) = G_BITCAST %4(f32)
    $sgpr0 = COPY %5(i32)

...
---
name:            fmin_f32
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fmin_f32
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_MIN_F32_:%[0-9]+]]:sreg_32 = nofpexcept S_MIN_F32 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_MIN_F32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(f32) = G_FMINNUM %2, %3
    %5:sgpr(i32) = G_BITCAST %4(f32)
    $sgpr0 = COPY %5(i32)

...
---
name:            fmax_f32
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fmax_f32
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_MAX_F32_:%[0-9]+]]:sreg_32 = nofpexcept S_MAX_F32 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_MAX_F32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(f32) = G_FMAXNUM %2, %3
    %5:sgpr(i32) = G_BITCAST %4(f32)
    $sgpr0 = COPY %5(i32)

...
---
name:            fadd_f16
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fadd_f16
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_ADD_F16_:%[0-9]+]]:sreg_32 = nofpexcept S_ADD_F16 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_ADD_F16_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(f16) = G_FADD %4, %5
    %7:sgpr(i16) = G_BITCAST %6(f16)
    %8:sgpr(i32) = G_ANYEXT %7(i16)
    $sgpr0 = COPY %8(i32)

...
---
name:            fsub_f16
legalized:       true
regBankSelected: true
body:             |
 bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fsub_f16
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_SUB_F16_:%[0-9]+]]:sreg_32 = nofpexcept S_SUB_F16 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_SUB_F16_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(f16) = G_FSUB %4, %5
    %7:sgpr(i16) = G_BITCAST %6(f16)
    %8:sgpr(i32) = G_ANYEXT %7(i16)
    $sgpr0 = COPY %8(i32)

...
---
name:            fmul_f16
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fmul_f16
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_MUL_F16_:%[0-9]+]]:sreg_32 = nofpexcept S_MUL_F16 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_MUL_F16_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(f16) = G_FMUL %4, %5
    %7:sgpr(i16) = G_BITCAST %6(f16)
    %8:sgpr(i32) = G_ANYEXT %7(i16)
    $sgpr0 = COPY %8(i32)

...
---
name:            fmin_f16
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fmin_f16
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_MIN_F16_:%[0-9]+]]:sreg_32 = nofpexcept S_MIN_F16 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_MIN_F16_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(f16) = G_FMINNUM %4, %5
    %7:sgpr(i16) = G_BITCAST %6(f16)
    %8:sgpr(i32) = G_ANYEXT %7(i16)
    $sgpr0 = COPY %8(i32)

...
---
name:            fmax_f16
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: fmax_f16
    ; GFX1150: liveins: $sgpr0, $sgpr1
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(f16) = G_BITCAST %1(i16)
    %5:sgpr(f16) = G_BITCAST %3(i16)
    %6:sgpr(f16) = G_FMAXNUM %4, %5
    %7:sgpr(i16) = G_BITCAST %6(f16)
    %8:sgpr(i32) = G_ANYEXT %7(i16)

...
---
name:            s_cvt_pkrtz_v2f16_f32
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1

    ; GFX1150-LABEL: name: s_cvt_pkrtz_v2f16_f32
    ; GFX1150: liveins: $sgpr0, $sgpr1
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[S_CVT_PK_RTZ_F16_F32_:%[0-9]+]]:sreg_32 = nofpexcept S_CVT_PK_RTZ_F16_F32 [[COPY]], [[COPY1]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_CVT_PK_RTZ_F16_F32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(f32) = G_BITCAST %0(i32)
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(<2 x f16>) = G_INTRINSIC intrinsic(@llvm.amdgcn.cvt.pkrtz), %2(f32), %3(f32)
    %5:sgpr(<2 x i16>) = G_BITCAST %4(<2 x f16>)
    $sgpr0 = COPY %5(<2 x i16>)

...
---
name:            fmac_f32
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1, $sgpr2

    ; GFX1150-LABEL: name: fmac_f32
    ; GFX1150: liveins: $sgpr0, $sgpr1, $sgpr2
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $sgpr2
    ; GFX1150-NEXT: [[S_FMAC_F32_:%[0-9]+]]:sreg_32 = nofpexcept S_FMAC_F32 [[COPY1]], [[COPY2]], [[COPY]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_FMAC_F32_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i32) = COPY $sgpr1
    %2:sgpr(i32) = COPY $sgpr2
    %3:sgpr(f32) = G_BITCAST %1(i32)
    %4:sgpr(f32) = G_BITCAST %2(i32)
    %5:sgpr(f32) = G_BITCAST %0(i32)
    %6:sgpr(f32) = G_FMA %3, %4, %5
    %7:sgpr(i32) = G_BITCAST %6(f32)
    $sgpr0 = COPY %7(i32)

...
---
name:            fmac_f16
legalized:       true
regBankSelected: true
body:             |
  bb.0:
    liveins: $sgpr0, $sgpr1, $sgpr2

    ; GFX1150-LABEL: name: fmac_f16
    ; GFX1150: liveins: $sgpr0, $sgpr1, $sgpr2
    ; GFX1150-NEXT: {{  $}}
    ; GFX1150-NEXT: [[COPY:%[0-9]+]]:sreg_32 = COPY $sgpr0
    ; GFX1150-NEXT: [[COPY1:%[0-9]+]]:sreg_32 = COPY $sgpr1
    ; GFX1150-NEXT: [[COPY2:%[0-9]+]]:sreg_32 = COPY $sgpr2
    ; GFX1150-NEXT: [[S_FMAC_F16_:%[0-9]+]]:sreg_32 = nofpexcept S_FMAC_F16 [[COPY1]], [[COPY2]], [[COPY]], implicit $mode
    ; GFX1150-NEXT: $sgpr0 = COPY [[S_FMAC_F16_]]
    %0:sgpr(i32) = COPY $sgpr0
    %1:sgpr(i16) = G_TRUNC %0(i32)
    %2:sgpr(i32) = COPY $sgpr1
    %3:sgpr(i16) = G_TRUNC %2(i32)
    %4:sgpr(i32) = COPY $sgpr2
    %5:sgpr(i16) = G_TRUNC %4(i32)
    %6:sgpr(f16) = G_BITCAST %3(i16)
    %7:sgpr(f16) = G_BITCAST %5(i16)
    %8:sgpr(f16) = G_BITCAST %1(i16)
    %9:sgpr(f16) = G_FMA %6, %7, %8
    %10:sgpr(i16) = G_BITCAST %9(f16)
    %11:sgpr(i32) = G_ANYEXT %10(i16)
    $sgpr0 = COPY %11(i32)

...
