; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=amdgcn -mcpu=gfx1010 -verify-machineinstrs < %s | FileCheck %s

declare i32 @llvm.amdgcn.generic.shuffle(i32, i32, i32)
declare i32 @llvm.amdgcn.generic.shuffle.up(i32, i32, i32)
declare i32 @llvm.amdgcn.generic.shuffle.down(i32, i32, i32)
declare i32 @llvm.amdgcn.generic.shuffle.xor(i32, i32, i32)

define amdgpu_kernel void @test_shuffle_up_dpp(ptr addrspace(1) %out, i32 %val) {
; CHECK-LABEL: test_shuffle_up_dpp:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    s_clause 0x1
; CHECK-NEXT:    s_load_dword s2, s[4:5], 0x2c
; CHECK-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v0, s2
; CHECK-NEXT:    v_mov_b32_dpp v0, v0 row_shl:1 row_mask:0xf bank_mask:0xf
; CHECK-NEXT:    global_store_dword v1, v0, s[0:1]
; CHECK-NEXT:    s_endpgm
  %result = call i32 @llvm.amdgcn.generic.shuffle.up(i32 %val, i32 1, i32 16)
  store i32 %result, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @test_shuffle_down_dpp(ptr addrspace(1) %out, i32 %val) {
; CHECK-LABEL: test_shuffle_down_dpp:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    s_clause 0x1
; CHECK-NEXT:    s_load_dword s2, s[4:5], 0x2c
; CHECK-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v0, s2
; CHECK-NEXT:    v_mov_b32_dpp v0, v0 row_shr:2 row_mask:0xf bank_mask:0xf
; CHECK-NEXT:    global_store_dword v1, v0, s[0:1]
; CHECK-NEXT:    s_endpgm
  %result = call i32 @llvm.amdgcn.generic.shuffle.down(i32 %val, i32 2, i32 16)
  store i32 %result, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @test_shuffle_xor_dpp(ptr addrspace(1) %out, i32 %val) {
; CHECK-LABEL: test_shuffle_xor_dpp:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    s_clause 0x1
; CHECK-NEXT:    s_load_dword s2, s[4:5], 0x2c
; CHECK-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v0, s2
; CHECK-NEXT:    v_mov_b32_dpp v0, v0 quad_perm:[1,0,3,2] row_mask:0xf bank_mask:0xf
; CHECK-NEXT:    global_store_dword v1, v0, s[0:1]
; CHECK-NEXT:    s_endpgm
  %result = call i32 @llvm.amdgcn.generic.shuffle.xor(i32 %val, i32 1, i32 32)
  store i32 %result, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @test_shuffle_broadcast(ptr addrspace(1) %out, i32 %val) {
; CHECK-LABEL: test_shuffle_broadcast:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    s_load_dword s0, s[4:5], 0x2c
; CHECK-NEXT:    v_mov_b32_e32 v0, 0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v1, s0
; CHECK-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; CHECK-NEXT:    ds_bpermute_b32 v1, v0, v1
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    global_store_dword v0, v1, s[0:1]
; CHECK-NEXT:    s_endpgm
  %result = call i32 @llvm.amdgcn.generic.shuffle(i32 %val, i32 0, i32 64)
  store i32 %result, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @test_shuffle_permlane16(ptr addrspace(1) %out, i32 %val) {
; CHECK-LABEL: test_shuffle_permlane16:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    s_clause 0x1
; CHECK-NEXT:    s_load_dword s2, s[4:5], 0x2c
; CHECK-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v0, s2
; CHECK-NEXT:    v_permlane16_b32 v0, v0, 0, 0
; CHECK-NEXT:    global_store_dword v1, v0, s[0:1]
; CHECK-NEXT:    s_endpgm
  %result = call i32 @llvm.amdgcn.generic.shuffle.xor(i32 %val, i32 16, i32 32)
  store i32 %result, ptr addrspace(1) %out
  ret void
}
