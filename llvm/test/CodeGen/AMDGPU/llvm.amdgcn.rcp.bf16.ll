; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; xUN: llc -global-isel=0 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1250 -mattr=+real-true16 < %s | FileCheck -check-prefix=SDAG-TRUE16 %s
; RUN: llc -global-isel=0 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1250 -mattr=-real-true16 < %s | FileCheck -check-prefix=SDAG-FAKE16 %s
; xUN: llc -global-isel=1 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1250 -mattr=+real-true16 < %s | FileCheck -check-prefix=GI-TRUE16 %s
; xUN: llc -global-isel=1 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1250 -mattr=-real-true16 < %s | FileCheck -check-prefix=GI-FAKE16 %s

; FIXME: t16 doesn't work at the moment because the store of s16 under t16 mode fails to select.
; FIXME: GlobalISel does not work with bf16

declare bfloat @llvm.amdgcn.rcp.bf16(bfloat) #0

define amdgpu_kernel void @rcp_bf16(ptr addrspace(1) %out, bfloat %src) #1 {
; SDAG-TRUE16-LABEL: rcp_bf16:
; SDAG-TRUE16:       ; %bb.0:
; SDAG-TRUE16-NEXT:    s_load_b96 s[0:2], s[4:5], 0x0
; SDAG-TRUE16-NEXT:    v_mov_b32_e32 v1, 0
; SDAG-TRUE16-NEXT:    s_wait_kmcnt 0x0
; SDAG-TRUE16-NEXT:    v_rcp_bf16_e32 v0.l, s2
; SDAG-TRUE16-NEXT:    flat_store_b16 v1, v0, s[0:1]
; SDAG-TRUE16-NEXT:    s_endpgm
;
; SDAG-FAKE16-LABEL: rcp_bf16:
; SDAG-FAKE16:       ; %bb.0:
; SDAG-FAKE16-NEXT:    s_load_b96 s[0:2], s[4:5], 0x0
; SDAG-FAKE16-NEXT:    v_mov_b32_e32 v1, 0
; SDAG-FAKE16-NEXT:    s_wait_kmcnt 0x0
; SDAG-FAKE16-NEXT:    v_rcp_bf16_e32 v0, s2
; SDAG-FAKE16-NEXT:    global_store_b16 v1, v0, s[0:1]
; SDAG-FAKE16-NEXT:    s_endpgm
  %rcp = call bfloat @llvm.amdgcn.rcp.bf16(bfloat %src) #0
  store bfloat %rcp, ptr addrspace(1) %out, align 2
  ret void
}

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
