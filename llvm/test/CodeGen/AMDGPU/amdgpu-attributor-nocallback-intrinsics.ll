; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-attributes --check-globals all --version 5
; RUN: opt -S -mtriple=amdgcn-unknown-amdhsa -passes=amdgpu-attributor -mcpu=gfx90a %s | FileCheck %s

; Make sure we infer no inputs are used through some intrinsics

define void @use_fake_use(i32 %arg) {
; CHECK-LABEL: define void @use_fake_use(
; CHECK-SAME: i32 [[ARG:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:    call void (...) @llvm.fake.use(i32 [[ARG]])
; CHECK-NEXT:    ret void
;
  call void (...) @llvm.fake.use(i32 %arg)
  ret void
}

define void @use_donothing() {
; CHECK-LABEL: define void @use_donothing(
; CHECK-SAME: ) #[[ATTR1:[0-9]+]] {
; CHECK-NEXT:    call void @llvm.donothing()
; CHECK-NEXT:    ret void
;
  call void @llvm.donothing()
  ret void
}

define void @use_assume(i1 %arg) {
; CHECK-LABEL: define void @use_assume(
; CHECK-SAME: i1 [[ARG:%.*]]) #[[ATTR1]] {
; CHECK-NEXT:    call void @llvm.assume(i1 [[ARG]])
; CHECK-NEXT:    ret void
;
  call void @llvm.assume(i1 %arg)
  ret void
}

define void @use_trap() {
; CHECK-LABEL: define void @use_trap(
; CHECK-SAME: ) #[[ATTR2:[0-9]+]] {
; CHECK-NEXT:    call void @llvm.trap()
; CHECK-NEXT:    ret void
;
  call void @llvm.trap()
  ret void
}

define void @use_debugtrap() {
; CHECK-LABEL: define void @use_debugtrap(
; CHECK-SAME: ) #[[ATTR2]] {
; CHECK-NEXT:    call void @llvm.debugtrap()
; CHECK-NEXT:    ret void
;
  call void @llvm.debugtrap()
  ret void
}

define void @use_ubsantrap() {
; CHECK-LABEL: define void @use_ubsantrap(
; CHECK-SAME: ) #[[ATTR2]] {
; CHECK-NEXT:    call void @llvm.ubsantrap(i8 0)
; CHECK-NEXT:    ret void
;
  call void @llvm.ubsantrap(i8 0)
  ret void
}

;.
; CHECK: attributes #[[ATTR0]] = { "target-cpu"="gfx90a" "uniform-work-group-size"="false" }
; CHECK: attributes #[[ATTR1]] = { "amdgpu-agpr-alloc"="0" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-flat-scratch-init" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "target-cpu"="gfx90a" "uniform-work-group-size"="false" }
; CHECK: attributes #[[ATTR2]] = { "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-flat-scratch-init" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "target-cpu"="gfx90a" "uniform-work-group-size"="false" }
; CHECK: attributes #[[ATTR3:[0-9]+]] = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write) "target-cpu"="gfx90a" }
; CHECK: attributes #[[ATTR4:[0-9]+]] = { nounwind "target-cpu"="gfx90a" }
; CHECK: attributes #[[ATTR5:[0-9]+]] = { nocallback nofree nosync nounwind willreturn memory(none) "target-cpu"="gfx90a" }
; CHECK: attributes #[[ATTR6:[0-9]+]] = { cold noreturn nounwind memory(inaccessiblemem: write) "target-cpu"="gfx90a" }
; CHECK: attributes #[[ATTR7:[0-9]+]] = { cold noreturn nounwind "target-cpu"="gfx90a" }
;.
