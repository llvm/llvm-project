; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 6
; RUN: llc -global-isel=1 -mtriple=amdgcn--amdpal -mcpu=gfx1250 < %s | FileCheck %s --check-prefix=GISEL
; RUN: llc -global-isel=0 -mtriple=amdgcn--amdpal -mcpu=gfx1250 < %s | FileCheck %s --check-prefix=DAGISEL

declare i1 @llvm.amdgcn.s.alloc.vgpr(i32)

define amdgpu_cs void @test_alloc_vreg_const(ptr addrspace(1) %out) #0 {
; GISEL-LABEL: test_alloc_vreg_const:
; GISEL:       ; %bb.0: ; %entry
; GISEL-NEXT:    s_alloc_vgpr 45
; GISEL-NEXT:    s_cselect_b32 s0, 1, 0
; GISEL-NEXT:    s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)
; GISEL-NEXT:    s_and_b32 s0, s0, 1
; GISEL-NEXT:    v_mov_b32_e32 v2, s0
; GISEL-NEXT:    global_store_b32 v[0:1], v2, off
; GISEL-NEXT:    s_endpgm
;
; DAGISEL-LABEL: test_alloc_vreg_const:
; DAGISEL:       ; %bb.0: ; %entry
; DAGISEL-NEXT:    s_alloc_vgpr 45
; DAGISEL-NEXT:    s_cselect_b32 s0, -1, 0
; DAGISEL-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; DAGISEL-NEXT:    v_cndmask_b32_e64 v2, 0, 1, s0
; DAGISEL-NEXT:    global_store_b32 v[0:1], v2, off
; DAGISEL-NEXT:    s_endpgm
entry:
  %scc = call i1 @llvm.amdgcn.s.alloc.vgpr(i32 45)
  %sel = select i1 %scc, i32 1, i32 0
  store i32 %sel, ptr addrspace(1) %out
  ret void
}

define amdgpu_cs void @test_alloc_vreg_var(i32 inreg %n, ptr addrspace(1) %out) #0 {
; GISEL-LABEL: test_alloc_vreg_var:
; GISEL:       ; %bb.0: ; %entry
; GISEL-NEXT:    s_alloc_vgpr s0
; GISEL-NEXT:    s_cselect_b32 s0, 1, 0
; GISEL-NEXT:    s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)
; GISEL-NEXT:    s_and_b32 s0, s0, 1
; GISEL-NEXT:    v_mov_b32_e32 v2, s0
; GISEL-NEXT:    global_store_b32 v[0:1], v2, off
; GISEL-NEXT:    s_endpgm
;
; DAGISEL-LABEL: test_alloc_vreg_var:
; DAGISEL:       ; %bb.0: ; %entry
; DAGISEL-NEXT:    s_alloc_vgpr s0
; DAGISEL-NEXT:    s_cselect_b32 s0, -1, 0
; DAGISEL-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; DAGISEL-NEXT:    v_cndmask_b32_e64 v2, 0, 1, s0
; DAGISEL-NEXT:    global_store_b32 v[0:1], v2, off
; DAGISEL-NEXT:    s_endpgm
entry:
  %scc = call i1 @llvm.amdgcn.s.alloc.vgpr(i32 %n)
  %sel = select i1 %scc, i32 1, i32 0
  store i32 %sel, ptr addrspace(1) %out
  ret void
}

attributes #0 = { "amdgpu-dynamic-vgpr-block-sze" = "16" }
