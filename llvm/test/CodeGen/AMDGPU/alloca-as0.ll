; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 -global-isel=0 %s -o - | FileCheck %s --check-prefix=ISEL
; RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 -global-isel=1 %s -o - | FileCheck %s --check-prefix=GI

declare hidden void @bar(ptr)

define i32 @static_alloca() {
; ISEL-LABEL: static_alloca:
; ISEL:       ; %bb.0:
; ISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; ISEL-NEXT:    s_mov_b32 s16, s33
; ISEL-NEXT:    s_mov_b32 s33, s32
; ISEL-NEXT:    s_or_saveexec_b64 s[18:19], -1
; ISEL-NEXT:    buffer_store_dword v40, off, s[0:3], s33 offset:4 ; 4-byte Folded Spill
; ISEL-NEXT:    s_mov_b64 exec, s[18:19]
; ISEL-NEXT:    s_addk_i32 s32, 0x400
; ISEL-NEXT:    v_writelane_b32 v40, s16, 4
; ISEL-NEXT:    s_getpc_b64 s[16:17]
; ISEL-NEXT:    s_add_u32 s16, s16, bar@rel32@lo+4
; ISEL-NEXT:    s_addc_u32 s17, s17, bar@rel32@hi+12
; ISEL-NEXT:    v_writelane_b32 v40, s30, 0
; ISEL-NEXT:    s_lshr_b32 s18, s33, 6
; ISEL-NEXT:    v_lshrrev_b32_e64 v0, 6, s33
; ISEL-NEXT:    v_writelane_b32 v40, s31, 1
; ISEL-NEXT:    s_cmp_lg_u32 s18, -1
; ISEL-NEXT:    v_readfirstlane_b32 s18, v0
; ISEL-NEXT:    v_writelane_b32 v40, s34, 2
; ISEL-NEXT:    s_cselect_b32 s34, s18, 0
; ISEL-NEXT:    s_mov_b64 s[18:19], src_private_base
; ISEL-NEXT:    v_writelane_b32 v40, s35, 3
; ISEL-NEXT:    s_cselect_b32 s35, s19, 0
; ISEL-NEXT:    v_mov_b32_e32 v0, s34
; ISEL-NEXT:    v_mov_b32_e32 v1, s35
; ISEL-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; ISEL-NEXT:    v_mov_b32_e32 v0, s34
; ISEL-NEXT:    v_mov_b32_e32 v1, s35
; ISEL-NEXT:    flat_load_dword v0, v[0:1]
; ISEL-NEXT:    v_readlane_b32 s35, v40, 3
; ISEL-NEXT:    v_readlane_b32 s34, v40, 2
; ISEL-NEXT:    v_readlane_b32 s31, v40, 1
; ISEL-NEXT:    v_readlane_b32 s30, v40, 0
; ISEL-NEXT:    s_mov_b32 s32, s33
; ISEL-NEXT:    v_readlane_b32 s4, v40, 4
; ISEL-NEXT:    s_or_saveexec_b64 s[6:7], -1
; ISEL-NEXT:    buffer_load_dword v40, off, s[0:3], s33 offset:4 ; 4-byte Folded Reload
; ISEL-NEXT:    s_mov_b64 exec, s[6:7]
; ISEL-NEXT:    s_mov_b32 s33, s4
; ISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; ISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GI-LABEL: static_alloca:
; GI:       ; %bb.0:
; GI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GI-NEXT:    s_mov_b32 s16, s33
; GI-NEXT:    s_mov_b32 s33, s32
; GI-NEXT:    s_or_saveexec_b64 s[18:19], -1
; GI-NEXT:    buffer_store_dword v40, off, s[0:3], s33 offset:4 ; 4-byte Folded Spill
; GI-NEXT:    s_mov_b64 exec, s[18:19]
; GI-NEXT:    v_writelane_b32 v40, s16, 4
; GI-NEXT:    v_writelane_b32 v40, s30, 0
; GI-NEXT:    v_writelane_b32 v40, s31, 1
; GI-NEXT:    s_addk_i32 s32, 0x400
; GI-NEXT:    v_writelane_b32 v40, s34, 2
; GI-NEXT:    s_lshr_b32 s34, s33, 6
; GI-NEXT:    s_mov_b64 s[16:17], src_private_base
; GI-NEXT:    s_getpc_b64 s[18:19]
; GI-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; GI-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; GI-NEXT:    v_lshrrev_b32_e64 v0, 6, s33
; GI-NEXT:    v_mov_b32_e32 v1, s17
; GI-NEXT:    v_writelane_b32 v40, s35, 3
; GI-NEXT:    s_mov_b32 s35, s17
; GI-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GI-NEXT:    v_mov_b32_e32 v0, s34
; GI-NEXT:    v_mov_b32_e32 v1, s35
; GI-NEXT:    flat_load_dword v0, v[0:1]
; GI-NEXT:    v_readlane_b32 s35, v40, 3
; GI-NEXT:    v_readlane_b32 s34, v40, 2
; GI-NEXT:    v_readlane_b32 s31, v40, 1
; GI-NEXT:    v_readlane_b32 s30, v40, 0
; GI-NEXT:    s_mov_b32 s32, s33
; GI-NEXT:    v_readlane_b32 s4, v40, 4
; GI-NEXT:    s_or_saveexec_b64 s[6:7], -1
; GI-NEXT:    buffer_load_dword v40, off, s[0:3], s33 offset:4 ; 4-byte Folded Reload
; GI-NEXT:    s_mov_b64 exec, s[6:7]
; GI-NEXT:    s_mov_b32 s33, s4
; GI-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; GI-NEXT:    s_setpc_b64 s[30:31]
  %alloca = alloca i32, align 4
  call void @bar(ptr %alloca)
  %load = load i32, ptr %alloca
  ret i32 %load
}

define amdgpu_kernel void @static_alloca_kernel(ptr %p) {
; ISEL-LABEL: static_alloca_kernel:
; ISEL:       ; %bb.0:
; ISEL-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; ISEL-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; ISEL-NEXT:    s_add_u32 s0, s0, s17
; ISEL-NEXT:    s_addc_u32 s1, s1, 0
; ISEL-NEXT:    s_load_dwordx2 s[34:35], s[8:9], 0x0
; ISEL-NEXT:    s_add_u32 s8, s8, 8
; ISEL-NEXT:    s_addc_u32 s9, s9, 0
; ISEL-NEXT:    s_getpc_b64 s[18:19]
; ISEL-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; ISEL-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; ISEL-NEXT:    s_mov_b32 s13, s15
; ISEL-NEXT:    s_mov_b32 s12, s14
; ISEL-NEXT:    s_cmp_lg_u32 -1, 0
; ISEL-NEXT:    s_mov_b64 s[14:15], src_private_base
; ISEL-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; ISEL-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; ISEL-NEXT:    s_cselect_b32 s33, 0, 0
; ISEL-NEXT:    s_cselect_b32 s36, s15, 0
; ISEL-NEXT:    v_or3_b32 v31, v0, v1, v2
; ISEL-NEXT:    s_mov_b32 s14, s16
; ISEL-NEXT:    v_mov_b32_e32 v0, s33
; ISEL-NEXT:    v_mov_b32_e32 v1, s36
; ISEL-NEXT:    s_movk_i32 s32, 0x400
; ISEL-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; ISEL-NEXT:    v_mov_b32_e32 v0, s33
; ISEL-NEXT:    v_mov_b32_e32 v1, s36
; ISEL-NEXT:    flat_load_dword v2, v[0:1]
; ISEL-NEXT:    v_mov_b32_e32 v0, s34
; ISEL-NEXT:    v_mov_b32_e32 v1, s35
; ISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; ISEL-NEXT:    flat_store_dword v[0:1], v2
; ISEL-NEXT:    s_endpgm
;
; GI-LABEL: static_alloca_kernel:
; GI:       ; %bb.0:
; GI-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; GI-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; GI-NEXT:    s_add_u32 s0, s0, s17
; GI-NEXT:    s_addc_u32 s1, s1, 0
; GI-NEXT:    s_load_dwordx2 s[34:35], s[8:9], 0x0
; GI-NEXT:    s_add_u32 s8, s8, 8
; GI-NEXT:    s_mov_b32 s13, s15
; GI-NEXT:    s_mov_b32 s12, s14
; GI-NEXT:    s_addc_u32 s9, s9, 0
; GI-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GI-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GI-NEXT:    s_mov_b64 s[14:15], src_private_base
; GI-NEXT:    v_or3_b32 v31, v0, v1, v2
; GI-NEXT:    s_getpc_b64 s[18:19]
; GI-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; GI-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; GI-NEXT:    v_mov_b32_e32 v0, 0
; GI-NEXT:    v_mov_b32_e32 v1, s15
; GI-NEXT:    s_mov_b32 s14, s16
; GI-NEXT:    s_movk_i32 s32, 0x400
; GI-NEXT:    s_mov_b32 s36, 0
; GI-NEXT:    s_mov_b32 s37, s15
; GI-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GI-NEXT:    v_mov_b32_e32 v0, s36
; GI-NEXT:    v_mov_b32_e32 v1, s37
; GI-NEXT:    flat_load_dword v2, v[0:1]
; GI-NEXT:    v_mov_b32_e32 v0, s34
; GI-NEXT:    v_mov_b32_e32 v1, s35
; GI-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; GI-NEXT:    flat_store_dword v[0:1], v2
; GI-NEXT:    s_endpgm
  %alloca = alloca i32, align 4
  call void @bar(ptr %alloca)
  %load = load i32, ptr %alloca
  store i32 %load, ptr %p
  ret void
}

define i32 @dynamic_alloca_i32(i32 %n) {
; ISEL-LABEL: dynamic_alloca_i32:
; ISEL:       ; %bb.0:
; ISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; ISEL-NEXT:    s_mov_b32 s16, s33
; ISEL-NEXT:    s_mov_b32 s33, s32
; ISEL-NEXT:    s_or_saveexec_b64 s[18:19], -1
; ISEL-NEXT:    buffer_store_dword v40, off, s[0:3], s33 ; 4-byte Folded Spill
; ISEL-NEXT:    s_mov_b64 exec, s[18:19]
; ISEL-NEXT:    v_writelane_b32 v40, s16, 2
; ISEL-NEXT:    v_mad_u64_u32 v[0:1], s[16:17], v0, 4, 15
; ISEL-NEXT:    v_writelane_b32 v40, s30, 0
; ISEL-NEXT:    s_mov_b32 s18, 0
; ISEL-NEXT:    v_and_b32_e32 v0, -16, v0
; ISEL-NEXT:    s_mov_b64 s[16:17], exec
; ISEL-NEXT:    s_addk_i32 s32, 0x400
; ISEL-NEXT:    v_writelane_b32 v40, s31, 1
; ISEL-NEXT:  .LBB2_1: ; =>This Inner Loop Header: Depth=1
; ISEL-NEXT:    s_ff1_i32_b64 s19, s[16:17]
; ISEL-NEXT:    v_readlane_b32 s20, v0, s19
; ISEL-NEXT:    s_bitset0_b64 s[16:17], s19
; ISEL-NEXT:    s_max_u32 s18, s18, s20
; ISEL-NEXT:    s_cmp_lg_u64 s[16:17], 0
; ISEL-NEXT:    s_cbranch_scc1 .LBB2_1
; ISEL-NEXT:  ; %bb.2:
; ISEL-NEXT:    v_mov_b32_e32 v0, s32
; ISEL-NEXT:    s_cmp_lg_u32 s32, -1
; ISEL-NEXT:    s_mov_b64 s[16:17], src_private_base
; ISEL-NEXT:    v_lshl_add_u32 v0, s18, 6, v0
; ISEL-NEXT:    s_cselect_b32 s19, s32, 0
; ISEL-NEXT:    s_cselect_b32 s20, s17, 0
; ISEL-NEXT:    v_readfirstlane_b32 s18, v0
; ISEL-NEXT:    s_getpc_b64 s[16:17]
; ISEL-NEXT:    s_add_u32 s16, s16, bar@rel32@lo+4
; ISEL-NEXT:    s_addc_u32 s17, s17, bar@rel32@hi+12
; ISEL-NEXT:    v_mov_b32_e32 v0, s19
; ISEL-NEXT:    v_mov_b32_e32 v1, s20
; ISEL-NEXT:    s_mov_b32 s32, s18
; ISEL-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; ISEL-NEXT:    v_mov_b32_e32 v0, 0
; ISEL-NEXT:    v_readlane_b32 s31, v40, 1
; ISEL-NEXT:    v_readlane_b32 s30, v40, 0
; ISEL-NEXT:    s_mov_b32 s32, s33
; ISEL-NEXT:    v_readlane_b32 s4, v40, 2
; ISEL-NEXT:    s_or_saveexec_b64 s[6:7], -1
; ISEL-NEXT:    buffer_load_dword v40, off, s[0:3], s33 ; 4-byte Folded Reload
; ISEL-NEXT:    s_mov_b64 exec, s[6:7]
; ISEL-NEXT:    s_mov_b32 s33, s4
; ISEL-NEXT:    s_waitcnt vmcnt(0)
; ISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GI-LABEL: dynamic_alloca_i32:
; GI:       ; %bb.0:
; GI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GI-NEXT:    s_mov_b32 s16, s33
; GI-NEXT:    s_mov_b32 s33, s32
; GI-NEXT:    s_or_saveexec_b64 s[18:19], -1
; GI-NEXT:    buffer_store_dword v40, off, s[0:3], s33 ; 4-byte Folded Spill
; GI-NEXT:    s_mov_b64 exec, s[18:19]
; GI-NEXT:    v_mov_b32_e32 v1, 0
; GI-NEXT:    v_lshlrev_b64 v[0:1], 2, v[0:1]
; GI-NEXT:    v_writelane_b32 v40, s16, 2
; GI-NEXT:    v_add_co_u32_e32 v0, vcc, 15, v0
; GI-NEXT:    v_writelane_b32 v40, s30, 0
; GI-NEXT:    s_mov_b32 s18, 0
; GI-NEXT:    v_and_b32_e32 v0, -16, v0
; GI-NEXT:    s_mov_b64 s[16:17], exec
; GI-NEXT:    s_addk_i32 s32, 0x400
; GI-NEXT:    v_writelane_b32 v40, s31, 1
; GI-NEXT:  .LBB2_1: ; =>This Inner Loop Header: Depth=1
; GI-NEXT:    s_ff1_i32_b64 s19, s[16:17]
; GI-NEXT:    v_readlane_b32 s20, v0, s19
; GI-NEXT:    s_bitset0_b64 s[16:17], s19
; GI-NEXT:    s_max_u32 s18, s18, s20
; GI-NEXT:    s_cmp_lg_u64 s[16:17], 0
; GI-NEXT:    s_cbranch_scc1 .LBB2_1
; GI-NEXT:  ; %bb.2:
; GI-NEXT:    s_mov_b32 s16, s32
; GI-NEXT:    s_lshl_b32 s17, s18, 6
; GI-NEXT:    s_add_u32 s32, s16, s17
; GI-NEXT:    s_mov_b64 s[18:19], src_private_base
; GI-NEXT:    s_mov_b32 s17, s19
; GI-NEXT:    s_cmp_lg_u32 s16, -1
; GI-NEXT:    s_cselect_b64 s[16:17], s[16:17], 0
; GI-NEXT:    s_getpc_b64 s[18:19]
; GI-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; GI-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; GI-NEXT:    v_mov_b32_e32 v0, s16
; GI-NEXT:    v_mov_b32_e32 v1, s17
; GI-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GI-NEXT:    v_mov_b32_e32 v0, 0
; GI-NEXT:    v_readlane_b32 s31, v40, 1
; GI-NEXT:    v_readlane_b32 s30, v40, 0
; GI-NEXT:    s_mov_b32 s32, s33
; GI-NEXT:    v_readlane_b32 s4, v40, 2
; GI-NEXT:    s_or_saveexec_b64 s[6:7], -1
; GI-NEXT:    buffer_load_dword v40, off, s[0:3], s33 ; 4-byte Folded Reload
; GI-NEXT:    s_mov_b64 exec, s[6:7]
; GI-NEXT:    s_mov_b32 s33, s4
; GI-NEXT:    s_waitcnt vmcnt(0)
; GI-NEXT:    s_setpc_b64 s[30:31]
  %alloca = alloca i32, i32 %n, align 4
  call void @bar(ptr %alloca)
  %load = load i32, ptr %alloca
  ret i32 0
}

define amdgpu_kernel void @dynamic_alloca_i32_kernel(i32 %n, ptr %p) {
; ISEL-LABEL: dynamic_alloca_i32_kernel:
; ISEL:       ; %bb.0:
; ISEL-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; ISEL-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; ISEL-NEXT:    s_add_u32 s0, s0, s17
; ISEL-NEXT:    s_load_dword s17, s[8:9], 0x0
; ISEL-NEXT:    s_load_dwordx2 s[34:35], s[8:9], 0x8
; ISEL-NEXT:    s_movk_i32 s32, 0x400
; ISEL-NEXT:    s_addc_u32 s1, s1, 0
; ISEL-NEXT:    s_mov_b32 s13, s15
; ISEL-NEXT:    s_mov_b32 s12, s14
; ISEL-NEXT:    s_mov_b64 s[14:15], src_private_base
; ISEL-NEXT:    s_cmp_lg_u32 s32, -1
; ISEL-NEXT:    s_cselect_b32 s15, s15, 0
; ISEL-NEXT:    s_cselect_b32 s20, s32, 0
; ISEL-NEXT:    s_waitcnt lgkmcnt(0)
; ISEL-NEXT:    s_lshl_b32 s14, s17, 2
; ISEL-NEXT:    s_add_i32 s14, s14, 15
; ISEL-NEXT:    s_and_b32 s14, s14, -16
; ISEL-NEXT:    s_lshl_b32 s14, s14, 6
; ISEL-NEXT:    s_add_i32 s32, s32, s14
; ISEL-NEXT:    s_add_u32 s8, s8, 16
; ISEL-NEXT:    s_addc_u32 s9, s9, 0
; ISEL-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; ISEL-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; ISEL-NEXT:    s_getpc_b64 s[18:19]
; ISEL-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; ISEL-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; ISEL-NEXT:    v_or3_b32 v31, v0, v1, v2
; ISEL-NEXT:    s_mov_b32 s14, s16
; ISEL-NEXT:    v_mov_b32_e32 v0, s20
; ISEL-NEXT:    v_mov_b32_e32 v1, s15
; ISEL-NEXT:    s_mov_b32 s33, 0
; ISEL-NEXT:    v_mov_b32_e32 v40, s20
; ISEL-NEXT:    v_mov_b32_e32 v41, s15
; ISEL-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; ISEL-NEXT:    flat_load_dword v2, v[40:41]
; ISEL-NEXT:    v_mov_b32_e32 v0, s34
; ISEL-NEXT:    v_mov_b32_e32 v1, s35
; ISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; ISEL-NEXT:    flat_store_dword v[0:1], v2
; ISEL-NEXT:    s_endpgm
;
; GI-LABEL: dynamic_alloca_i32_kernel:
; GI:       ; %bb.0:
; GI-NEXT:    s_load_dword s18, s[8:9], 0x0
; GI-NEXT:    s_load_dwordx2 s[34:35], s[8:9], 0x8
; GI-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; GI-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; GI-NEXT:    s_add_u32 s0, s0, s17
; GI-NEXT:    s_mov_b32 s19, 0
; GI-NEXT:    s_addc_u32 s1, s1, 0
; GI-NEXT:    s_waitcnt lgkmcnt(0)
; GI-NEXT:    s_lshl_b64 s[18:19], s[18:19], 2
; GI-NEXT:    s_mov_b32 s13, s15
; GI-NEXT:    s_add_u32 s15, s18, 15
; GI-NEXT:    s_movk_i32 s32, 0x400
; GI-NEXT:    s_and_b32 s15, s15, -16
; GI-NEXT:    s_mov_b32 s12, s14
; GI-NEXT:    s_mov_b32 s14, s32
; GI-NEXT:    s_lshl_b32 s15, s15, 6
; GI-NEXT:    s_add_u32 s32, s14, s15
; GI-NEXT:    s_mov_b64 s[18:19], src_private_base
; GI-NEXT:    s_mov_b32 s15, s19
; GI-NEXT:    s_cmp_lg_u32 s14, -1
; GI-NEXT:    s_cselect_b64 s[36:37], s[14:15], 0
; GI-NEXT:    s_add_u32 s8, s8, 16
; GI-NEXT:    s_addc_u32 s9, s9, 0
; GI-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GI-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GI-NEXT:    v_or3_b32 v31, v0, v1, v2
; GI-NEXT:    s_getpc_b64 s[18:19]
; GI-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; GI-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; GI-NEXT:    v_mov_b32_e32 v0, s36
; GI-NEXT:    v_mov_b32_e32 v1, s37
; GI-NEXT:    s_mov_b32 s14, s16
; GI-NEXT:    s_mov_b32 s33, 0
; GI-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GI-NEXT:    v_mov_b32_e32 v0, s36
; GI-NEXT:    v_mov_b32_e32 v1, s37
; GI-NEXT:    flat_load_dword v2, v[0:1]
; GI-NEXT:    v_mov_b32_e32 v0, s34
; GI-NEXT:    v_mov_b32_e32 v1, s35
; GI-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; GI-NEXT:    flat_store_dword v[0:1], v2
; GI-NEXT:    s_endpgm
  %alloca = alloca i32, i32 %n, align 4
  call void @bar(ptr %alloca)
  %load = load i32, ptr %alloca
  store i32 %load, ptr %p
  ret void
}

define i32 @dynamic_alloca_i64(i64 %n) {
; ISEL-LABEL: dynamic_alloca_i64:
; ISEL:       ; %bb.0:
; ISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; ISEL-NEXT:    s_mov_b32 s16, s33
; ISEL-NEXT:    s_mov_b32 s33, s32
; ISEL-NEXT:    s_or_saveexec_b64 s[18:19], -1
; ISEL-NEXT:    buffer_store_dword v40, off, s[0:3], s33 ; 4-byte Folded Spill
; ISEL-NEXT:    s_mov_b64 exec, s[18:19]
; ISEL-NEXT:    v_writelane_b32 v40, s16, 2
; ISEL-NEXT:    v_mad_u64_u32 v[0:1], s[16:17], v0, 4, 15
; ISEL-NEXT:    s_addk_i32 s32, 0x400
; ISEL-NEXT:    s_cmp_lg_u32 s32, -1
; ISEL-NEXT:    s_mov_b64 s[16:17], src_private_base
; ISEL-NEXT:    v_writelane_b32 v40, s30, 0
; ISEL-NEXT:    s_mov_b32 s20, 0
; ISEL-NEXT:    s_cselect_b32 s18, s32, 0
; ISEL-NEXT:    s_cselect_b32 s19, s17, 0
; ISEL-NEXT:    v_and_b32_e32 v0, -16, v0
; ISEL-NEXT:    s_mov_b64 s[16:17], exec
; ISEL-NEXT:    v_writelane_b32 v40, s31, 1
; ISEL-NEXT:  .LBB4_1: ; =>This Inner Loop Header: Depth=1
; ISEL-NEXT:    s_ff1_i32_b64 s21, s[16:17]
; ISEL-NEXT:    v_readlane_b32 s22, v0, s21
; ISEL-NEXT:    s_bitset0_b64 s[16:17], s21
; ISEL-NEXT:    s_max_u32 s20, s20, s22
; ISEL-NEXT:    s_cmp_lg_u64 s[16:17], 0
; ISEL-NEXT:    s_cbranch_scc1 .LBB4_1
; ISEL-NEXT:  ; %bb.2:
; ISEL-NEXT:    v_mov_b32_e32 v0, s32
; ISEL-NEXT:    v_lshl_add_u32 v0, s20, 6, v0
; ISEL-NEXT:    v_readfirstlane_b32 s32, v0
; ISEL-NEXT:    s_getpc_b64 s[16:17]
; ISEL-NEXT:    s_add_u32 s16, s16, bar@rel32@lo+4
; ISEL-NEXT:    s_addc_u32 s17, s17, bar@rel32@hi+12
; ISEL-NEXT:    v_mov_b32_e32 v0, s18
; ISEL-NEXT:    v_mov_b32_e32 v1, s19
; ISEL-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; ISEL-NEXT:    v_mov_b32_e32 v0, 0
; ISEL-NEXT:    v_readlane_b32 s31, v40, 1
; ISEL-NEXT:    v_readlane_b32 s30, v40, 0
; ISEL-NEXT:    s_mov_b32 s32, s33
; ISEL-NEXT:    v_readlane_b32 s4, v40, 2
; ISEL-NEXT:    s_or_saveexec_b64 s[6:7], -1
; ISEL-NEXT:    buffer_load_dword v40, off, s[0:3], s33 ; 4-byte Folded Reload
; ISEL-NEXT:    s_mov_b64 exec, s[6:7]
; ISEL-NEXT:    s_mov_b32 s33, s4
; ISEL-NEXT:    s_waitcnt vmcnt(0)
; ISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GI-LABEL: dynamic_alloca_i64:
; GI:       ; %bb.0:
; GI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GI-NEXT:    s_mov_b32 s16, s33
; GI-NEXT:    s_mov_b32 s33, s32
; GI-NEXT:    s_or_saveexec_b64 s[18:19], -1
; GI-NEXT:    buffer_store_dword v40, off, s[0:3], s33 ; 4-byte Folded Spill
; GI-NEXT:    s_mov_b64 exec, s[18:19]
; GI-NEXT:    v_lshlrev_b64 v[0:1], 2, v[0:1]
; GI-NEXT:    v_writelane_b32 v40, s16, 2
; GI-NEXT:    v_add_co_u32_e32 v0, vcc, 15, v0
; GI-NEXT:    v_writelane_b32 v40, s30, 0
; GI-NEXT:    s_mov_b32 s18, 0
; GI-NEXT:    v_and_b32_e32 v0, -16, v0
; GI-NEXT:    s_mov_b64 s[16:17], exec
; GI-NEXT:    s_addk_i32 s32, 0x400
; GI-NEXT:    v_writelane_b32 v40, s31, 1
; GI-NEXT:  .LBB4_1: ; =>This Inner Loop Header: Depth=1
; GI-NEXT:    s_ff1_i32_b64 s19, s[16:17]
; GI-NEXT:    v_readlane_b32 s20, v0, s19
; GI-NEXT:    s_bitset0_b64 s[16:17], s19
; GI-NEXT:    s_max_u32 s18, s18, s20
; GI-NEXT:    s_cmp_lg_u64 s[16:17], 0
; GI-NEXT:    s_cbranch_scc1 .LBB4_1
; GI-NEXT:  ; %bb.2:
; GI-NEXT:    s_mov_b32 s16, s32
; GI-NEXT:    s_lshl_b32 s17, s18, 6
; GI-NEXT:    s_add_u32 s32, s16, s17
; GI-NEXT:    s_mov_b64 s[18:19], src_private_base
; GI-NEXT:    s_mov_b32 s17, s19
; GI-NEXT:    s_cmp_lg_u32 s16, -1
; GI-NEXT:    s_cselect_b64 s[16:17], s[16:17], 0
; GI-NEXT:    s_getpc_b64 s[18:19]
; GI-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; GI-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; GI-NEXT:    v_mov_b32_e32 v0, s16
; GI-NEXT:    v_mov_b32_e32 v1, s17
; GI-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GI-NEXT:    v_mov_b32_e32 v0, 0
; GI-NEXT:    v_readlane_b32 s31, v40, 1
; GI-NEXT:    v_readlane_b32 s30, v40, 0
; GI-NEXT:    s_mov_b32 s32, s33
; GI-NEXT:    v_readlane_b32 s4, v40, 2
; GI-NEXT:    s_or_saveexec_b64 s[6:7], -1
; GI-NEXT:    buffer_load_dword v40, off, s[0:3], s33 ; 4-byte Folded Reload
; GI-NEXT:    s_mov_b64 exec, s[6:7]
; GI-NEXT:    s_mov_b32 s33, s4
; GI-NEXT:    s_waitcnt vmcnt(0)
; GI-NEXT:    s_setpc_b64 s[30:31]
  %alloca = alloca i32, i64 %n, align 4
  call void @bar(ptr %alloca)
  %load = load i32, ptr %alloca
  ret i32 0
}

define amdgpu_kernel void @dynamic_alloca_i64_kernel(i64 %n, ptr %p) {
; ISEL-LABEL: dynamic_alloca_i64_kernel:
; ISEL:       ; %bb.0:
; ISEL-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; ISEL-NEXT:    s_load_dwordx4 s[20:23], s[8:9], 0x0
; ISEL-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; ISEL-NEXT:    s_add_u32 s0, s0, s17
; ISEL-NEXT:    s_movk_i32 s32, 0x400
; ISEL-NEXT:    s_addc_u32 s1, s1, 0
; ISEL-NEXT:    s_mov_b32 s13, s15
; ISEL-NEXT:    s_mov_b32 s12, s14
; ISEL-NEXT:    s_mov_b64 s[14:15], src_private_base
; ISEL-NEXT:    s_cmp_lg_u32 s32, -1
; ISEL-NEXT:    s_cselect_b32 s15, s15, 0
; ISEL-NEXT:    s_cselect_b32 s17, s32, 0
; ISEL-NEXT:    s_waitcnt lgkmcnt(0)
; ISEL-NEXT:    s_lshl_b32 s14, s20, 2
; ISEL-NEXT:    s_add_i32 s14, s14, 15
; ISEL-NEXT:    s_and_b32 s14, s14, -16
; ISEL-NEXT:    s_lshl_b32 s14, s14, 6
; ISEL-NEXT:    s_add_i32 s32, s32, s14
; ISEL-NEXT:    s_add_u32 s8, s8, 16
; ISEL-NEXT:    s_addc_u32 s9, s9, 0
; ISEL-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; ISEL-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; ISEL-NEXT:    s_getpc_b64 s[18:19]
; ISEL-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; ISEL-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; ISEL-NEXT:    v_or3_b32 v31, v0, v1, v2
; ISEL-NEXT:    s_mov_b32 s14, s16
; ISEL-NEXT:    v_mov_b32_e32 v0, s17
; ISEL-NEXT:    v_mov_b32_e32 v1, s15
; ISEL-NEXT:    s_mov_b32 s33, 0
; ISEL-NEXT:    v_mov_b32_e32 v40, s22
; ISEL-NEXT:    v_mov_b32_e32 v41, s23
; ISEL-NEXT:    v_mov_b32_e32 v42, s17
; ISEL-NEXT:    v_mov_b32_e32 v43, s15
; ISEL-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; ISEL-NEXT:    flat_load_dword v0, v[42:43]
; ISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; ISEL-NEXT:    flat_store_dword v[40:41], v0
; ISEL-NEXT:    s_endpgm
;
; GI-LABEL: dynamic_alloca_i64_kernel:
; GI:       ; %bb.0:
; GI-NEXT:    s_load_dwordx4 s[36:39], s[8:9], 0x0
; GI-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; GI-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; GI-NEXT:    s_add_u32 s0, s0, s17
; GI-NEXT:    s_addc_u32 s1, s1, 0
; GI-NEXT:    s_waitcnt lgkmcnt(0)
; GI-NEXT:    s_lshl_b64 s[18:19], s[36:37], 2
; GI-NEXT:    s_mov_b32 s13, s15
; GI-NEXT:    s_add_u32 s15, s18, 15
; GI-NEXT:    s_movk_i32 s32, 0x400
; GI-NEXT:    s_and_b32 s15, s15, -16
; GI-NEXT:    s_mov_b32 s12, s14
; GI-NEXT:    s_mov_b32 s14, s32
; GI-NEXT:    s_lshl_b32 s15, s15, 6
; GI-NEXT:    s_add_u32 s32, s14, s15
; GI-NEXT:    s_mov_b64 s[18:19], src_private_base
; GI-NEXT:    s_mov_b32 s15, s19
; GI-NEXT:    s_cmp_lg_u32 s14, -1
; GI-NEXT:    s_cselect_b64 s[34:35], s[14:15], 0
; GI-NEXT:    s_add_u32 s8, s8, 16
; GI-NEXT:    s_addc_u32 s9, s9, 0
; GI-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GI-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GI-NEXT:    v_or3_b32 v31, v0, v1, v2
; GI-NEXT:    s_getpc_b64 s[18:19]
; GI-NEXT:    s_add_u32 s18, s18, bar@rel32@lo+4
; GI-NEXT:    s_addc_u32 s19, s19, bar@rel32@hi+12
; GI-NEXT:    v_mov_b32_e32 v0, s34
; GI-NEXT:    v_mov_b32_e32 v1, s35
; GI-NEXT:    s_mov_b32 s14, s16
; GI-NEXT:    s_mov_b32 s33, 0
; GI-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GI-NEXT:    v_mov_b32_e32 v0, s34
; GI-NEXT:    v_mov_b32_e32 v1, s35
; GI-NEXT:    flat_load_dword v2, v[0:1]
; GI-NEXT:    v_mov_b32_e32 v0, s38
; GI-NEXT:    v_mov_b32_e32 v1, s39
; GI-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; GI-NEXT:    flat_store_dword v[0:1], v2
; GI-NEXT:    s_endpgm
  %alloca = alloca i32, i64 %n, align 4
  call void @bar(ptr %alloca)
  %load = load i32, ptr %alloca
  store i32 %load, ptr %p
  ret void
}
