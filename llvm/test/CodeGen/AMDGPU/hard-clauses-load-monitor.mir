# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=gfx1200 -verify-machineinstrs -run-pass si-insert-hard-clauses %s -o - | FileCheck %s -check-prefixes=GCN,GFX1200
# RUN: llc -mtriple=amdgcn -mcpu=gfx1250 -run-pass si-insert-hard-clauses %s -o - | FileCheck %s -check-prefixes=GCN,GFX1250

---
name: non_flat_vmem_loads
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2
    ; GFX1200-LABEL: name: non_flat_vmem_loads
    ; GFX1200: liveins: $vgpr0, $vgpr1, $vgpr2
    ; GFX1200-NEXT: {{  $}}
    ; GFX1200-NEXT: BUNDLE implicit-def $vgpr6_vgpr7, implicit-def $vgpr8_vgpr9, implicit-def $vgpr10_vgpr11, implicit $vgpr0_vgpr1, implicit $exec, implicit $m0 {
    ; GFX1200-NEXT:   S_CLAUSE 2
    ; GFX1200-NEXT:   $vgpr6_vgpr7 = GLOBAL_LOAD_TR_B64_w32 $vgpr0_vgpr1, 8, 0, implicit $exec
    ; GFX1200-NEXT:   $vgpr8_vgpr9 = CLUSTER_LOAD_B64 $vgpr0_vgpr1, 16, 0, implicit $m0, implicit $exec
    ; GFX1200-NEXT:   $vgpr10_vgpr11 = GLOBAL_LOAD_MONITOR_B64 $vgpr0_vgpr1, 24, 0, implicit $exec
    ; GFX1200-NEXT: }
    ; GFX1200-NEXT: GLOBAL_LOAD_ASYNC_TO_LDS_B32 $vgpr2, $vgpr0_vgpr1, 0, 0, implicit-def $asynccnt, implicit $exec, implicit $asynccnt
    ; GFX1200-NEXT: $vgpr4 = GLOBAL_LOAD_DWORD $vgpr0_vgpr1, 32, 0, implicit $exec
    ;
    ; GFX1250-LABEL: name: non_flat_vmem_loads
    ; GFX1250: liveins: $vgpr0, $vgpr1, $vgpr2
    ; GFX1250-NEXT: {{  $}}
    ; GFX1250-NEXT: BUNDLE implicit-def $vgpr6_vgpr7, implicit-def $vgpr8_vgpr9, implicit-def $vgpr10_vgpr11, implicit-def $asynccnt, implicit-def $vgpr4, implicit $vgpr0_vgpr1, implicit $exec, implicit $m0, implicit $vgpr2, implicit $asynccnt {
    ; GFX1250-NEXT:   S_CLAUSE 4
    ; GFX1250-NEXT:   $vgpr6_vgpr7 = GLOBAL_LOAD_TR_B64_w32 $vgpr0_vgpr1, 8, 0, implicit $exec
    ; GFX1250-NEXT:   $vgpr8_vgpr9 = CLUSTER_LOAD_B64 $vgpr0_vgpr1, 16, 0, implicit $m0, implicit $exec
    ; GFX1250-NEXT:   $vgpr10_vgpr11 = GLOBAL_LOAD_MONITOR_B64 $vgpr0_vgpr1, 24, 0, implicit $exec
    ; GFX1250-NEXT:   GLOBAL_LOAD_ASYNC_TO_LDS_B32 $vgpr2, $vgpr0_vgpr1, 0, 0, implicit-def $asynccnt, implicit $exec, implicit $asynccnt
    ; GFX1250-NEXT:   $vgpr4 = GLOBAL_LOAD_DWORD $vgpr0_vgpr1, 32, 0, implicit $exec
    ; GFX1250-NEXT: }
    $vgpr6_vgpr7 = GLOBAL_LOAD_TR_B64_w32 $vgpr0_vgpr1, 8, 0, implicit $exec
    $vgpr8_vgpr9 = CLUSTER_LOAD_B64 $vgpr0_vgpr1, 16, 0, implicit $m0, implicit $exec
    $vgpr10_vgpr11 = GLOBAL_LOAD_MONITOR_B64 $vgpr0_vgpr1, 24, 0, implicit $exec
    GLOBAL_LOAD_ASYNC_TO_LDS_B32 $vgpr2, $vgpr0_vgpr1, 0, 0, implicit-def $asynccnt, implicit $exec, implicit $asynccnt
    $vgpr4 = GLOBAL_LOAD_DWORD $vgpr0_vgpr1, 32, 0, implicit $exec
...

---
name: async_load_flat_monitor_load
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1, $vgpr2
    ; GCN-LABEL: name: async_load_flat_monitor_load
    ; GCN: liveins: $vgpr0, $vgpr1, $vgpr2
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: GLOBAL_LOAD_ASYNC_TO_LDS_B32 $vgpr2, $vgpr0_vgpr1, 0, 0, implicit-def $asynccnt, implicit $exec, implicit $asynccnt
    ; GCN-NEXT: $vgpr0 = FLAT_LOAD_MONITOR_B32 $vgpr0_vgpr1, 8, 0, implicit $exec, implicit $flat_scr
    GLOBAL_LOAD_ASYNC_TO_LDS_B32 $vgpr2, $vgpr0_vgpr1, 0, 0, implicit-def $asynccnt, implicit $exec, implicit $asynccnt
    $vgpr0 = FLAT_LOAD_MONITOR_B32 $vgpr0_vgpr1, 8, 0, implicit $exec, implicit $flat_scr
...

---
name: flat_monitor_loads_flat_load
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $vgpr0, $vgpr1
    ; GCN-LABEL: name: flat_monitor_loads_flat_load
    ; GCN: liveins: $vgpr0, $vgpr1
    ; GCN-NEXT: {{  $}}
    ; GCN-NEXT: BUNDLE implicit-def $vgpr4, implicit-def $vgpr3, implicit-def $vgpr0, implicit $vgpr0_vgpr1, implicit $exec, implicit $flat_scr {
    ; GCN-NEXT:   S_CLAUSE 2
    ; GCN-NEXT:   $vgpr4 = FLAT_LOAD_MONITOR_B32 $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr
    ; GCN-NEXT:   $vgpr3 = FLAT_LOAD_MONITOR_B32 $vgpr0_vgpr1, 8, 0, implicit $exec, implicit $flat_scr
    ; GCN-NEXT:   $vgpr0 = FLAT_LOAD_DWORD $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr
    ; GCN-NEXT: }
    $vgpr4 = FLAT_LOAD_MONITOR_B32 $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr
    $vgpr3 = FLAT_LOAD_MONITOR_B32 $vgpr0_vgpr1, 8, 0, implicit $exec, implicit $flat_scr
    $vgpr0 = FLAT_LOAD_DWORD $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr
...
