# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -mtriple=amdgcn -mcpu=gfx1030 -simplify-mir -run-pass=si-peephole-sdwa -o - %s | FileCheck %s

# Test the combination of SDWA selections in si-peephole-sdwa. In each
# example, the SDWA source selection specified on the last instruction
# must be combined with the source selection that the pass determines
# for this operand, i.e. the second instruction.  In the cases where
# this is not possible, no conversion should occur, i.e. the last
# instruction in the output mir should still use the second
# instruction with the same source selection.

---
name: op_select_byte0_instr_select_dword
body:             |

  bb.0:
    ; CHECK-LABEL: name: op_select_byte0_instr_select_dword
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 255, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 0, 0, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 255,  %3, implicit $exec /* Select Byte_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 0, 6, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_0_instr_select_word_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_0_instr_select_word_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 255, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_AND_B32_e64_]], 0, 1, 0, 0, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 255,  %3, implicit $exec /* Select Byte_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 0, 5, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_0_instr_select_word_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_0_instr_select_word_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 255, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_AND_B32_e64_]], 0, 1, 0, 0, 4, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 255,  %3, implicit $exec /* Select Byte_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 0, 4, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_0_instr_select_byte_3
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_0_instr_select_byte_3
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 255, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_AND_B32_e64_]], 0, 1, 0, 0, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 255,  %3, implicit $exec /* Select Byte_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 0, 3, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_0_instr_select_byte_2
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_0_instr_select_byte_2
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 255, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_AND_B32_e64_]], 0, 1, 0, 0, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 255,  %3, implicit $exec /* Select Byte_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 0, 2, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_0_instr_select_byte_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_0_instr_select_byte_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 255, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_AND_B32_e64_]], 0, 1, 0, 0, 1, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 255,  %3, implicit $exec /* Select Byte_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 0, 1, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_0_instr_select_byte_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_0_instr_select_byte_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 255, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 0, 0, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 255,  %3, implicit $exec /* Select Byte_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 0, 0, implicit $exec

    S_ENDPGM 0

...

---
name: op_select_word_0_instr_select_dword
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_0_instr_select_dword
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 65535, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 4, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 65535,  %3, implicit $exec /* Select Word_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 6, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_0_instr_select_word_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_0_instr_select_word_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 65535, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_AND_B32_e64_]], 0, 1, 0, 6, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 65535,  %3, implicit $exec /* Select Word_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 5, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_0_instr_select_word_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_0_instr_select_word_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 65535, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 4, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 65535,  %3, implicit $exec /* Select Word_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 4, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_0_instr_select_byte_3
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_0_instr_select_byte_3
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 65535, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_AND_B32_e64_]], 0, 1, 0, 6, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 65535,  %3, implicit $exec /* Select Word_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 3, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_0_instr_select_byte_2
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_0_instr_select_byte_2
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 65535, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_AND_B32_e64_]], 0, 1, 0, 6, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 65535,  %3, implicit $exec /* Select Word_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 2, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_0_instr_select_byte_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_0_instr_select_byte_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 65535, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 1, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 65535,  %3, implicit $exec /* Select Word_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 1, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_0_instr_select_byte_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_0_instr_select_byte_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_AND_B32_e64_:%[0-9]+]]:vgpr_32 = V_AND_B32_e64 65535, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 0, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_AND_B32_e64 65535,  %3, implicit $exec /* Select Word_0 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 0, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_1_instr_select_dword
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_1_instr_select_dword
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B16_e32_:%[0-9]+]]:vgpr_32 = V_LSHRREV_B16_e32 8, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 1, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_LSHRREV_B16_e32  8, %3,  implicit $exec /* Select BYTE_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 6, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_1_instr_select_word_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_1_instr_select_word_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B16_e32_:%[0-9]+]]:vgpr_32 = V_LSHRREV_B16_e32 8, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B16_e32_]], 0, 1, 0, 6, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_LSHRREV_B16_e32  8, %3,  implicit $exec /* Select BYTE_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 5, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_1_instr_select_word_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_1_instr_select_word_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B16_e32_:%[0-9]+]]:vgpr_32 = V_LSHRREV_B16_e32 8, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B16_e32_]], 0, 1, 0, 6, 4, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_LSHRREV_B16_e32  8, %3,  implicit $exec /* Select BYTE_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 4, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_1_instr_select_byte_3
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_1_instr_select_byte_3
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B16_e32_:%[0-9]+]]:vgpr_32 = V_LSHRREV_B16_e32 8, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B16_e32_]], 0, 1, 0, 6, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_LSHRREV_B16_e32  8, %3,  implicit $exec /* Select BYTE_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 3, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_1_instr_select_byte_2
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_1_instr_select_byte_2
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B16_e32_:%[0-9]+]]:vgpr_32 = V_LSHRREV_B16_e32 8, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B16_e32_]], 0, 1, 0, 6, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_LSHRREV_B16_e32  8, %3,  implicit $exec /* Select BYTE_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 2, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_1_instr_select_byte_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_1_instr_select_byte_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B16_e32_:%[0-9]+]]:vgpr_32 = V_LSHRREV_B16_e32 8, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 1, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_LSHRREV_B16_e32  8, %3,  implicit $exec /* Select BYTE_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 1, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_1_instr_select_byte_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_1_instr_select_byte_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B16_e32_:%[0-9]+]]:vgpr_32 = V_LSHRREV_B16_e32 8, [[V_LSHRREV_B32_sdwa]], implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_LSHRREV_B16_e32_]], 0, 1, 0, 6, 0, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_LSHRREV_B16_e32  8, %3,  implicit $exec /* Select BYTE_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 0, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_2_instr_select_dword
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_2_instr_select_dword
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 8,  implicit $exec /* Select BYTE_2 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 6, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_2_instr_select_word_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_2_instr_select_word_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 8,  implicit $exec /* Select BYTE_2 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 5, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_2_instr_select_word_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_2_instr_select_word_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 4, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 8,  implicit $exec /* Select BYTE_2 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 4, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_2_instr_select_byte_3
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_2_instr_select_byte_3
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 8,  implicit $exec /* Select BYTE_2 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 3, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_2_instr_select_byte_2
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_2_instr_select_byte_2
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 8,  implicit $exec /* Select BYTE_2 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 2, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_2_instr_select_byte_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_2_instr_select_byte_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 1, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 8,  implicit $exec /* Select BYTE_2 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 1, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_2_instr_select_byte_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_2_instr_select_byte_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 0, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 8,  implicit $exec /* Select BYTE_2 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 0, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_3_instr_select_dword
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_3_instr_select_dword
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 24, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 24, 8,  implicit $exec /* Select BYTE_3 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 6, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_3_instr_select_word_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_3_instr_select_word_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 24, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 24, 8,  implicit $exec /* Select BYTE_3 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 5, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_3_instr_select_word_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_3_instr_select_word_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 24, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 4, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 24, 8,  implicit $exec /* Select BYTE_3 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 4, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_3_instr_select_byte_3
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_3_instr_select_byte_3
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 24, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 24, 8,  implicit $exec /* Select BYTE_3 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 3, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_3_instr_select_byte_2
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_3_instr_select_byte_2
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 24, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 24, 8,  implicit $exec /* Select BYTE_3 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 2, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_3_instr_select_byte_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_3_instr_select_byte_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 24, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 1, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 24, 8,  implicit $exec /* Select BYTE_3 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 1, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_byte_3_instr_select_byte_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_byte_3_instr_select_byte_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 24, 8, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 0, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 24, 8,  implicit $exec /* Select BYTE_3 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 0, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_1_instr_select_dword
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_1_instr_select_dword
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 16, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 16,  implicit $exec /* Select WORD_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 6, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_1_instr_select_word_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_1_instr_select_word_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 16, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 16,  implicit $exec /* Select WORD_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 5, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_1_instr_select_word_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_1_instr_select_word_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 16, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 16,  implicit $exec /* Select WORD_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 4, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_1_instr_select_byte_3
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_1_instr_select_byte_3
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 16, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 16,  implicit $exec /* Select WORD_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 3, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_1_instr_select_byte_2
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_1_instr_select_byte_2
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 16, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 0, [[V_BFE_I32_e64_]], 0, 1, 0, 6, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 16,  implicit $exec /* Select WORD_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 2, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_1_instr_select_byte_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_1_instr_select_byte_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 16, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 16,  implicit $exec /* Select WORD_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 1, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_word_1_instr_select_byte_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_word_1_instr_select_byte_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 16, 16, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 16, 16,  implicit $exec /* Select WORD_1 */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 0, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_dword_instr_select_dword
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_dword_instr_select_dword
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 0, 32, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 6, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 0, 32,  implicit $exec /* Select DWORD */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 6, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_dword_instr_select_word_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_dword_instr_select_word_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 0, 32, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 5, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 0, 32,  implicit $exec /* Select DWORD */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 5, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_dword_instr_select_word_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_dword_instr_select_word_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 0, 32, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 4, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 0, 32,  implicit $exec /* Select DWORD */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 4, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_dword_instr_select_byte_3
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_dword_instr_select_byte_3
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 0, 32, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 3, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 0, 32,  implicit $exec /* Select DWORD */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 3, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_dword_instr_select_byte_2
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_dword_instr_select_byte_2
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 0, 32, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 2, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 0, 32,  implicit $exec /* Select DWORD */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 2, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_dword_instr_select_byte_1
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_dword_instr_select_byte_1
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 0, 32, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 1, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 0, 32,  implicit $exec /* Select DWORD */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 1, implicit $exec

    S_ENDPGM 0
...

---
name: op_select_dword_instr_select_byte_0
body:             |
  bb.0:
    ; CHECK-LABEL: name: op_select_dword_instr_select_byte_0
    ; CHECK: [[V_LSHRREV_B32_sdwa:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    ; CHECK-NEXT: [[V_BFE_I32_e64_:%[0-9]+]]:vgpr_32 = V_BFE_I32_e64 [[V_LSHRREV_B32_sdwa]], 0, 32, implicit $exec
    ; CHECK-NEXT: [[V_LSHRREV_B32_sdwa1:%[0-9]+]]:vgpr_32 = V_LSHRREV_B32_sdwa 0, [[V_LSHRREV_B32_sdwa]], 1, [[V_LSHRREV_B32_sdwa]], 0, 1, 0, 6, 0, implicit $exec
    ; CHECK-NEXT: S_ENDPGM 0
    %3:vgpr_32 = V_LSHRREV_B32_sdwa 0, $vgpr0, 0, $vgpr0, 0, 1, 0, 5, 0, implicit $exec
    %8:vgpr_32 = V_BFE_I32_e64  %3, 0, 32,  implicit $exec /* Select DWORD */
    %9:vgpr_32 = V_LSHRREV_B32_sdwa 0, %3, 0, %8, 0, 1, 0, 6, 0, implicit $exec

    S_ENDPGM 0
...
