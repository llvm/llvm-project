# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -mcpu=gfx1100 -run-pass=si-insert-waitcnts -o - %s | FileCheck %s

# Verify that si-insert-waitcnts copies debug locations from the s_endpgm to the
# "dealloc vgprs" s_sendmsg. If these are not present, the debugger will be
# unable to break at the end of the shader.

--- |
  define amdgpu_ps void @test() !dbg !5 { ret void, !dbg !8 }

  !llvm.dbg.cu = !{!0}
  !llvm.debugify = !{!2, !3}
  !llvm.module.flags = !{!4}

  !0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "debugify", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
  !1 = !DIFile(filename: "t.ll", directory: "/")
  !2 = !{i32 1}
  !3 = !{i32 0}
  !4 = !{i32 2, !"Debug Info Version", i32 3}
  !5 = distinct !DISubprogram(name: "test", linkageName: "test", scope: null, file: !1, line: 1, type: !6, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
  !6 = !DISubroutineType(types: !7)
  !7 = !{}
  !8 = !DILocation(line: 1, column: 1, scope: !5)
...

---
name:            test
machineFunctionInfo:
  isEntryFunction: true
body:             |
  bb.0:
    ; CHECK-LABEL: name: test
    ; CHECK: GLOBAL_STORE_DWORD undef renamable $vgpr0_vgpr1, killed renamable $vgpr1, 0, 4, implicit $exec
    ; CHECK-NEXT: S_NOP 0, debug-location !8
    ; CHECK-NEXT: S_SENDMSG 3, implicit $exec, implicit $m0, debug-location !8
    ; CHECK-NEXT: S_ENDPGM 0, debug-location !8
    GLOBAL_STORE_DWORD undef renamable $vgpr0_vgpr1, killed renamable $vgpr1, 0, 4, implicit $exec
    S_ENDPGM 0, debug-location !8
...

