; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -global-isel=0 -mtriple=amdgcn-amd-amdhsa -mcpu=fiji < %s | FileCheck -enable-var-scope -check-prefixes=GFX8,GFX8-SDAG %s
; RUN: llc -global-isel=1 -mtriple=amdgcn-amd-amdhsa -mcpu=fiji < %s | FileCheck -enable-var-scope -check-prefixes=GFX8,GFX8-GISEL %s
; RUN: llc -global-isel=0 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 < %s | FileCheck -enable-var-scope -check-prefixes=GFX9,GFX9-SDAG %s
; RUN: llc -global-isel=1 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 < %s | FileCheck -enable-var-scope -check-prefixes=GFX9,GFX9-GISEL %s
; RUN: llc -global-isel=0 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1100 -mattr=-real-true16 < %s | FileCheck -enable-var-scope -check-prefixes=GFX11,GFX11-FAKE16,GFX11-FAKE16-SDAG %s
; RUN: llc -global-isel=1 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1100 -mattr=-real-true16 < %s | FileCheck -enable-var-scope -check-prefixes=GFX11,GFX11-FAKE16,GFX11-FAKE16-GISEL %s
; RUN: llc -global-isel=0 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1100 -mattr=+real-true16 < %s | FileCheck -enable-var-scope -check-prefixes=GFX11,GFX11-TRUE16,GFX11-TRUE16-SDAG %s
; RUN: llc -global-isel=1 -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1100 -mattr=+real-true16 < %s | FileCheck -enable-var-scope -check-prefixes=GFX11,GFX11-TRUE16,GFX11-TRUE16-GISEL %s

define void @undef_lo_v2i16(i16 %arg0) {
; GFX8-SDAG-LABEL: undef_lo_v2i16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v0
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_lo_v2i16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX8-GISEL-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v0
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_lo_v2i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v0
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-LABEL: undef_lo_v2i16:
; GFX11-FAKE16:       ; %bb.0:
; GFX11-FAKE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX11-FAKE16-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-NEXT:    ; use v0
; GFX11-FAKE16-NEXT:    ;;#ASMEND
; GFX11-FAKE16-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-LABEL: undef_lo_v2i16:
; GFX11-TRUE16:       ; %bb.0:
; GFX11-TRUE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-NEXT:    v_mov_b16_e32 v0.h, v0.l
; GFX11-TRUE16-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-NEXT:    ; use v0
; GFX11-TRUE16-NEXT:    ;;#ASMEND
; GFX11-TRUE16-NEXT:    s_setpc_b64 s[30:31]
  %undef.lo = insertelement <2 x i16> poison, i16 %arg0, i32 1
  call void asm sideeffect "; use $0", "v"(<2 x i16> %undef.lo);
  ret void
}

define void @undef_lo_v2f16(half %arg0) {
; GFX8-SDAG-LABEL: undef_lo_v2f16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v0
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_lo_v2f16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX8-GISEL-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v0
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_lo_v2f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v0
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-LABEL: undef_lo_v2f16:
; GFX11-FAKE16:       ; %bb.0:
; GFX11-FAKE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX11-FAKE16-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-NEXT:    ; use v0
; GFX11-FAKE16-NEXT:    ;;#ASMEND
; GFX11-FAKE16-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-LABEL: undef_lo_v2f16:
; GFX11-TRUE16:       ; %bb.0:
; GFX11-TRUE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-NEXT:    v_mov_b16_e32 v0.h, v0.l
; GFX11-TRUE16-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-NEXT:    ; use v0
; GFX11-TRUE16-NEXT:    ;;#ASMEND
; GFX11-TRUE16-NEXT:    s_setpc_b64 s[30:31]
  %undef.lo = insertelement <2 x half> poison, half %arg0, i32 1
  call void asm sideeffect "; use $0", "v"(<2 x half> %undef.lo);
  ret void
}

define void @undef_lo_op_v2f16(half %arg0) {
; GFX8-SDAG-LABEL: undef_lo_op_v2f16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_mov_b32_e32 v1, 0x3c00
; GFX8-SDAG-NEXT:    v_add_f16_sdwa v0, v0, v1 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX8-SDAG-NEXT:    v_or_b32_e32 v0, 0x7e00, v0
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v0
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_lo_op_v2f16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v2, 0x3c00
; GFX8-GISEL-NEXT:    v_add_f16_e64 v1, s4, 1.0
; GFX8-GISEL-NEXT:    v_add_f16_sdwa v0, v0, v2 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX8-GISEL-NEXT:    v_or_b32_e32 v0, v1, v0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v0
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_lo_op_v2f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    v_pk_add_f16 v0, v0, 1.0 op_sel_hi:[1,0]
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v0
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-LABEL: undef_lo_op_v2f16:
; GFX11-FAKE16:       ; %bb.0:
; GFX11-FAKE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX11-FAKE16-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-FAKE16-NEXT:    v_pk_add_f16 v0, v0, 1.0 op_sel_hi:[1,0]
; GFX11-FAKE16-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-NEXT:    ; use v0
; GFX11-FAKE16-NEXT:    ;;#ASMEND
; GFX11-FAKE16-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-LABEL: undef_lo_op_v2f16:
; GFX11-TRUE16:       ; %bb.0:
; GFX11-TRUE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-NEXT:    v_mov_b16_e32 v0.h, v0.l
; GFX11-TRUE16-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-TRUE16-NEXT:    v_pk_add_f16 v0, v0, 1.0 op_sel_hi:[1,0]
; GFX11-TRUE16-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-NEXT:    ; use v0
; GFX11-TRUE16-NEXT:    ;;#ASMEND
; GFX11-TRUE16-NEXT:    s_setpc_b64 s[30:31]
  %undef.lo = insertelement <2 x half> poison, half %arg0, i32 1
  %op = fadd <2 x half> %undef.lo, <half 1.0, half 1.0>
  call void asm sideeffect "; use $0", "v"(<2 x half> %op);
  ret void
}

define void @undef_lo_op_v2i16(i16 %arg0) {
; GFX8-SDAG-LABEL: undef_lo_op_v2i16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_mov_b32_e32 v1, 0x63
; GFX8-SDAG-NEXT:    v_add_u16_sdwa v0, v0, v1 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v0
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_lo_op_v2i16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0x63
; GFX8-GISEL-NEXT:    s_and_b32 s4, 0xffff, s4
; GFX8-GISEL-NEXT:    v_add_u16_sdwa v0, v0, v1 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX8-GISEL-NEXT:    v_or_b32_e32 v0, s4, v0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v0
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-SDAG-LABEL: undef_lo_op_v2i16:
; GFX9-SDAG:       ; %bb.0:
; GFX9-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-SDAG-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-SDAG-NEXT:    s_movk_i32 s4, 0x63
; GFX9-SDAG-NEXT:    v_pk_add_u16 v0, v0, s4 op_sel_hi:[1,0]
; GFX9-SDAG-NEXT:    ;;#ASMSTART
; GFX9-SDAG-NEXT:    ; use v0
; GFX9-SDAG-NEXT:    ;;#ASMEND
; GFX9-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-GISEL-LABEL: undef_lo_op_v2i16:
; GFX9-GISEL:       ; %bb.0:
; GFX9-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-GISEL-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-GISEL-NEXT:    v_mov_b32_e32 v1, 0x630063
; GFX9-GISEL-NEXT:    v_pk_add_u16 v0, v0, v1
; GFX9-GISEL-NEXT:    ;;#ASMSTART
; GFX9-GISEL-NEXT:    ; use v0
; GFX9-GISEL-NEXT:    ;;#ASMEND
; GFX9-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-SDAG-LABEL: undef_lo_op_v2i16:
; GFX11-FAKE16-SDAG:       ; %bb.0:
; GFX11-FAKE16-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-SDAG-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX11-FAKE16-SDAG-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-FAKE16-SDAG-NEXT:    v_pk_add_u16 v0, 0x63, v0 op_sel_hi:[0,1]
; GFX11-FAKE16-SDAG-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-SDAG-NEXT:    ; use v0
; GFX11-FAKE16-SDAG-NEXT:    ;;#ASMEND
; GFX11-FAKE16-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-GISEL-LABEL: undef_lo_op_v2i16:
; GFX11-FAKE16-GISEL:       ; %bb.0:
; GFX11-FAKE16-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-GISEL-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX11-FAKE16-GISEL-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-FAKE16-GISEL-NEXT:    v_pk_add_u16 v0, 0x630063, v0
; GFX11-FAKE16-GISEL-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-GISEL-NEXT:    ; use v0
; GFX11-FAKE16-GISEL-NEXT:    ;;#ASMEND
; GFX11-FAKE16-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-SDAG-LABEL: undef_lo_op_v2i16:
; GFX11-TRUE16-SDAG:       ; %bb.0:
; GFX11-TRUE16-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-SDAG-NEXT:    v_mov_b16_e32 v0.h, v0.l
; GFX11-TRUE16-SDAG-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-TRUE16-SDAG-NEXT:    v_pk_add_u16 v0, 0x63, v0 op_sel_hi:[0,1]
; GFX11-TRUE16-SDAG-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-SDAG-NEXT:    ; use v0
; GFX11-TRUE16-SDAG-NEXT:    ;;#ASMEND
; GFX11-TRUE16-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-GISEL-LABEL: undef_lo_op_v2i16:
; GFX11-TRUE16-GISEL:       ; %bb.0:
; GFX11-TRUE16-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-GISEL-NEXT:    v_mov_b16_e32 v0.h, v0.l
; GFX11-TRUE16-GISEL-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-TRUE16-GISEL-NEXT:    v_pk_add_u16 v0, 0x630063, v0
; GFX11-TRUE16-GISEL-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-GISEL-NEXT:    ; use v0
; GFX11-TRUE16-GISEL-NEXT:    ;;#ASMEND
; GFX11-TRUE16-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %undef.lo = insertelement <2 x i16> poison, i16 %arg0, i32 1
  %op = add <2 x i16> %undef.lo, <i16 99, i16 99>
  call void asm sideeffect "; use $0", "v"(<2 x i16> %op);
  ret void
}

define void @undef_lo3_v4i16(i16 %arg0) {
; GFX8-SDAG-LABEL: undef_lo3_v4i16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v[0:1]
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_lo3_v4i16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX8-GISEL-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v[0:1]
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_lo3_v4i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v[0:1]
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-LABEL: undef_lo3_v4i16:
; GFX11-FAKE16:       ; %bb.0:
; GFX11-FAKE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX11-FAKE16-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-NEXT:    ; use v[0:1]
; GFX11-FAKE16-NEXT:    ;;#ASMEND
; GFX11-FAKE16-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-LABEL: undef_lo3_v4i16:
; GFX11-TRUE16:       ; %bb.0:
; GFX11-TRUE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-NEXT:    v_mov_b16_e32 v0.h, v0.l
; GFX11-TRUE16-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-NEXT:    ; use v[0:1]
; GFX11-TRUE16-NEXT:    ;;#ASMEND
; GFX11-TRUE16-NEXT:    s_setpc_b64 s[30:31]
  %undef.lo = insertelement <4 x i16> poison, i16 %arg0, i32 1
  call void asm sideeffect "; use $0", "v"(<4 x i16> %undef.lo);
  ret void
}

define void @undef_lo3_v4f16(half %arg0) {
; GFX8-SDAG-LABEL: undef_lo3_v4f16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v[0:1]
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_lo3_v4f16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX8-GISEL-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v[0:1]
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_lo3_v4f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v[0:1]
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-LABEL: undef_lo3_v4f16:
; GFX11-FAKE16:       ; %bb.0:
; GFX11-FAKE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX11-FAKE16-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-NEXT:    ; use v[0:1]
; GFX11-FAKE16-NEXT:    ;;#ASMEND
; GFX11-FAKE16-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-LABEL: undef_lo3_v4f16:
; GFX11-TRUE16:       ; %bb.0:
; GFX11-TRUE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-NEXT:    v_mov_b16_e32 v0.h, v0.l
; GFX11-TRUE16-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-NEXT:    ; use v[0:1]
; GFX11-TRUE16-NEXT:    ;;#ASMEND
; GFX11-TRUE16-NEXT:    s_setpc_b64 s[30:31]
  %undef.lo = insertelement <4 x half> poison, half %arg0, i32 1
  call void asm sideeffect "; use $0", "v"(<4 x half> %undef.lo);
  ret void
}

define void @undef_lo2_v4i16(<2 x i16> %arg0) {
; GFX8-SDAG-LABEL: undef_lo2_v4i16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_lshrrev_b32_e32 v1, 16, v0
; GFX8-SDAG-NEXT:    v_alignbit_b32 v0, v1, v0, 16
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v[0:1]
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_lo2_v4i16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_lshrrev_b32_e32 v1, 16, v0
; GFX8-GISEL-NEXT:    v_alignbit_b32 v0, v1, v0, 16
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v[0:1]
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_lo2_v4i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_mov_b32 s4, 0x7060302
; GFX9-NEXT:    v_perm_b32 v0, v0, v0, s4
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v[0:1]
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-LABEL: undef_lo2_v4i16:
; GFX11-FAKE16:       ; %bb.0:
; GFX11-FAKE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-NEXT:    v_perm_b32 v0, v0, v0, 0x7060302
; GFX11-FAKE16-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-NEXT:    ; use v[0:1]
; GFX11-FAKE16-NEXT:    ;;#ASMEND
; GFX11-FAKE16-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-SDAG-LABEL: undef_lo2_v4i16:
; GFX11-TRUE16-SDAG:       ; %bb.0:
; GFX11-TRUE16-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-SDAG-NEXT:    v_mov_b16_e32 v1.l, v0.h
; GFX11-TRUE16-SDAG-NEXT:    v_lshrrev_b32_e32 v0, 16, v0
; GFX11-TRUE16-SDAG-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-TRUE16-SDAG-NEXT:    v_lshl_or_b32 v0, v1, 16, v0
; GFX11-TRUE16-SDAG-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-SDAG-NEXT:    ; use v[0:1]
; GFX11-TRUE16-SDAG-NEXT:    ;;#ASMEND
; GFX11-TRUE16-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-GISEL-LABEL: undef_lo2_v4i16:
; GFX11-TRUE16-GISEL:       ; %bb.0:
; GFX11-TRUE16-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-GISEL-NEXT:    v_mov_b16_e32 v0.l, v0.h
; GFX11-TRUE16-GISEL-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-GISEL-NEXT:    ; use v[0:1]
; GFX11-TRUE16-GISEL-NEXT:    ;;#ASMEND
; GFX11-TRUE16-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %undef.lo = shufflevector <2 x i16> %arg0, <2 x i16> poison, <4 x i32> <i32 1, i32 1, i32 2, i32 3>
  call void asm sideeffect "; use $0", "v"(<4 x i16> %undef.lo);
  ret void
}

define void @undef_lo2_v4f16(<2 x half> %arg0) {
; GFX8-SDAG-LABEL: undef_lo2_v4f16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_lshrrev_b32_e32 v1, 16, v0
; GFX8-SDAG-NEXT:    v_alignbit_b32 v0, v1, v0, 16
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v[0:1]
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_lo2_v4f16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_lshrrev_b32_e32 v1, 16, v0
; GFX8-GISEL-NEXT:    v_alignbit_b32 v0, v1, v0, 16
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v[0:1]
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_lo2_v4f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_mov_b32 s4, 0x7060302
; GFX9-NEXT:    v_perm_b32 v0, v0, v0, s4
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v[0:1]
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-LABEL: undef_lo2_v4f16:
; GFX11-FAKE16:       ; %bb.0:
; GFX11-FAKE16-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-NEXT:    v_perm_b32 v0, v0, v0, 0x7060302
; GFX11-FAKE16-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-NEXT:    ; use v[0:1]
; GFX11-FAKE16-NEXT:    ;;#ASMEND
; GFX11-FAKE16-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-SDAG-LABEL: undef_lo2_v4f16:
; GFX11-TRUE16-SDAG:       ; %bb.0:
; GFX11-TRUE16-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-SDAG-NEXT:    v_mov_b16_e32 v1.l, v0.h
; GFX11-TRUE16-SDAG-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-TRUE16-SDAG-NEXT:    v_bfi_b32 v0, 0xffff, v1, v0
; GFX11-TRUE16-SDAG-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-SDAG-NEXT:    ; use v[0:1]
; GFX11-TRUE16-SDAG-NEXT:    ;;#ASMEND
; GFX11-TRUE16-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-GISEL-LABEL: undef_lo2_v4f16:
; GFX11-TRUE16-GISEL:       ; %bb.0:
; GFX11-TRUE16-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-GISEL-NEXT:    v_mov_b16_e32 v0.l, v0.h
; GFX11-TRUE16-GISEL-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-GISEL-NEXT:    ; use v[0:1]
; GFX11-TRUE16-GISEL-NEXT:    ;;#ASMEND
; GFX11-TRUE16-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %undef.lo = shufflevector <2 x half> %arg0, <2 x half> poison, <4 x i32> <i32 1, i32 1, i32 2, i32 3>
  call void asm sideeffect "; use $0", "v"(<4 x half> %undef.lo);
  ret void
}

define void @undef_hi_v2i16(i16 %arg0) {
; GFX8-SDAG-LABEL: undef_hi_v2i16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v0
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_hi_v2i16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v0
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_hi_v2i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v0
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: undef_hi_v2i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    ;;#ASMSTART
; GFX11-NEXT:    ; use v0
; GFX11-NEXT:    ;;#ASMEND
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %undef.hi = insertelement <2 x i16> poison, i16 %arg0, i32 0
  call void asm sideeffect "; use $0", "v"(<2 x i16> %undef.hi);
  ret void
}

define void @undef_hi_v2f16(half %arg0) {
; GFX8-SDAG-LABEL: undef_hi_v2f16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v0
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_hi_v2f16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v0
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_hi_v2f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v0
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: undef_hi_v2f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    ;;#ASMSTART
; GFX11-NEXT:    ; use v0
; GFX11-NEXT:    ;;#ASMEND
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %undef.hi = insertelement <2 x half> poison, half %arg0, i32 0
  call void asm sideeffect "; use $0", "v"(<2 x half> %undef.hi);
  ret void
}

define void @undef_hi_op_v2f16(half %arg0) {
; GFX8-SDAG-LABEL: undef_hi_op_v2f16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_add_f16_e32 v0, 1.0, v0
; GFX8-SDAG-NEXT:    v_or_b32_e32 v0, 0x7e000000, v0
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v0
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_hi_op_v2f16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, s4
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v2, 0x3c00
; GFX8-GISEL-NEXT:    v_add_f16_e32 v0, 1.0, v0
; GFX8-GISEL-NEXT:    v_add_f16_sdwa v1, v1, v2 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX8-GISEL-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v0
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_hi_op_v2f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_pk_add_f16 v0, v0, 1.0 op_sel_hi:[1,0]
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v0
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: undef_hi_op_v2f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_pk_add_f16 v0, v0, 1.0 op_sel_hi:[1,0]
; GFX11-NEXT:    ;;#ASMSTART
; GFX11-NEXT:    ; use v0
; GFX11-NEXT:    ;;#ASMEND
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %undef.hi = insertelement <2 x half> poison, half %arg0, i32 0
  %op = fadd <2 x half> %undef.hi, <half 1.0, half 1.0>
  call void asm sideeffect "; use $0", "v"(<2 x half> %op);
  ret void
}

define void @undef_hi_op_v2i16(i16 %arg0) {
; GFX8-SDAG-LABEL: undef_hi_op_v2i16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    v_add_u16_e32 v0, 0x63, v0
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v0
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_hi_op_v2i16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    s_and_b32 s4, 0xffff, s4
; GFX8-GISEL-NEXT:    v_add_u16_e32 v0, 0x63, v0
; GFX8-GISEL-NEXT:    s_lshl_b32 s4, s4, 16
; GFX8-GISEL-NEXT:    v_or_b32_e32 v0, s4, v0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v0
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-SDAG-LABEL: undef_hi_op_v2i16:
; GFX9-SDAG:       ; %bb.0:
; GFX9-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-SDAG-NEXT:    s_movk_i32 s4, 0x63
; GFX9-SDAG-NEXT:    v_pk_add_u16 v0, v0, s4 op_sel_hi:[1,0]
; GFX9-SDAG-NEXT:    ;;#ASMSTART
; GFX9-SDAG-NEXT:    ; use v0
; GFX9-SDAG-NEXT:    ;;#ASMEND
; GFX9-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-GISEL-LABEL: undef_hi_op_v2i16:
; GFX9-GISEL:       ; %bb.0:
; GFX9-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-GISEL-NEXT:    v_mov_b32_e32 v1, 0x630063
; GFX9-GISEL-NEXT:    v_pk_add_u16 v0, v0, v1
; GFX9-GISEL-NEXT:    ;;#ASMSTART
; GFX9-GISEL-NEXT:    ; use v0
; GFX9-GISEL-NEXT:    ;;#ASMEND
; GFX9-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-SDAG-LABEL: undef_hi_op_v2i16:
; GFX11-FAKE16-SDAG:       ; %bb.0:
; GFX11-FAKE16-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-SDAG-NEXT:    v_pk_add_u16 v0, 0x63, v0 op_sel_hi:[0,1]
; GFX11-FAKE16-SDAG-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-SDAG-NEXT:    ; use v0
; GFX11-FAKE16-SDAG-NEXT:    ;;#ASMEND
; GFX11-FAKE16-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-FAKE16-GISEL-LABEL: undef_hi_op_v2i16:
; GFX11-FAKE16-GISEL:       ; %bb.0:
; GFX11-FAKE16-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-FAKE16-GISEL-NEXT:    v_pk_add_u16 v0, 0x630063, v0
; GFX11-FAKE16-GISEL-NEXT:    ;;#ASMSTART
; GFX11-FAKE16-GISEL-NEXT:    ; use v0
; GFX11-FAKE16-GISEL-NEXT:    ;;#ASMEND
; GFX11-FAKE16-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-SDAG-LABEL: undef_hi_op_v2i16:
; GFX11-TRUE16-SDAG:       ; %bb.0:
; GFX11-TRUE16-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-SDAG-NEXT:    v_pk_add_u16 v0, 0x63, v0 op_sel_hi:[0,1]
; GFX11-TRUE16-SDAG-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-SDAG-NEXT:    ; use v0
; GFX11-TRUE16-SDAG-NEXT:    ;;#ASMEND
; GFX11-TRUE16-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-TRUE16-GISEL-LABEL: undef_hi_op_v2i16:
; GFX11-TRUE16-GISEL:       ; %bb.0:
; GFX11-TRUE16-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-TRUE16-GISEL-NEXT:    v_pk_add_u16 v0, 0x630063, v0
; GFX11-TRUE16-GISEL-NEXT:    ;;#ASMSTART
; GFX11-TRUE16-GISEL-NEXT:    ; use v0
; GFX11-TRUE16-GISEL-NEXT:    ;;#ASMEND
; GFX11-TRUE16-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %undef.hi = insertelement <2 x i16> poison, i16 %arg0, i32 0
  %op = add <2 x i16> %undef.hi, <i16 99, i16 99>
  call void asm sideeffect "; use $0", "v"(<2 x i16> %op);
  ret void
}

define void @undef_hi3_v4i16(i16 %arg0) {
; GFX8-SDAG-LABEL: undef_hi3_v4i16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v[0:1]
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_hi3_v4i16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v[0:1]
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_hi3_v4i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v[0:1]
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: undef_hi3_v4i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    ;;#ASMSTART
; GFX11-NEXT:    ; use v[0:1]
; GFX11-NEXT:    ;;#ASMEND
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %undef.hi = insertelement <4 x i16> poison, i16 %arg0, i32 0
  call void asm sideeffect "; use $0", "v"(<4 x i16> %undef.hi);
  ret void
}

define void @undef_hi3_v4f16(half %arg0) {
; GFX8-SDAG-LABEL: undef_hi3_v4f16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v[0:1]
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_hi3_v4f16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v[0:1]
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_hi3_v4f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v[0:1]
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: undef_hi3_v4f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    ;;#ASMSTART
; GFX11-NEXT:    ; use v[0:1]
; GFX11-NEXT:    ;;#ASMEND
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %undef.hi = insertelement <4 x half> poison, half %arg0, i32 0
  call void asm sideeffect "; use $0", "v"(<4 x half> %undef.hi);
  ret void
}

define void @undef_hi2_v4i16(<2 x i16> %arg0) {
; GFX8-SDAG-LABEL: undef_hi2_v4i16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v[0:1]
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_hi2_v4i16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_lshrrev_b32_e32 v1, 16, v0
; GFX8-GISEL-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX8-GISEL-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v[0:1]
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_hi2_v4i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v[0:1]
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: undef_hi2_v4i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    ;;#ASMSTART
; GFX11-NEXT:    ; use v[0:1]
; GFX11-NEXT:    ;;#ASMEND
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %undef.hi = shufflevector <2 x i16> %arg0, <2 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  call void asm sideeffect "; use $0", "v"(<4 x i16> %undef.hi);
  ret void
}

define void @undef_hi2_v4f16(<2 x half> %arg0) {
; GFX8-SDAG-LABEL: undef_hi2_v4f16:
; GFX8-SDAG:       ; %bb.0:
; GFX8-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-SDAG-NEXT:    ;;#ASMSTART
; GFX8-SDAG-NEXT:    ; use v[0:1]
; GFX8-SDAG-NEXT:    ;;#ASMEND
; GFX8-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; GFX8-GISEL-LABEL: undef_hi2_v4f16:
; GFX8-GISEL:       ; %bb.0:
; GFX8-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX8-GISEL-NEXT:    v_lshrrev_b32_e32 v1, 16, v0
; GFX8-GISEL-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX8-GISEL-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX8-GISEL-NEXT:    v_mov_b32_e32 v1, 0
; GFX8-GISEL-NEXT:    ;;#ASMSTART
; GFX8-GISEL-NEXT:    ; use v[0:1]
; GFX8-GISEL-NEXT:    ;;#ASMEND
; GFX8-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: undef_hi2_v4f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    ;;#ASMSTART
; GFX9-NEXT:    ; use v[0:1]
; GFX9-NEXT:    ;;#ASMEND
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: undef_hi2_v4f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    ;;#ASMSTART
; GFX11-NEXT:    ; use v[0:1]
; GFX11-NEXT:    ;;#ASMEND
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %undef.hi = shufflevector <2 x half> %arg0, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  call void asm sideeffect "; use $0", "v"(<4 x half> %undef.hi);
  ret void
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; GFX8: {{.*}}
