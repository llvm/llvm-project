# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900  -start-before=si-peephole-sdwa -o - %s | FileCheck %s

---
name: sdwa_reg_sequence
tracksRegLiveness: true
body: |
  ; CHECK-LABEL:  ; %bb.0:
  ; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
  ; CHECK-NEXT:    v_add_u32_e32 v1, 10, v0
  ; CHECK-NEXT:    v_add_u32_e32 v0, 20, v0
  ; CHECK-NEXT:    v_add_co_u32_sdwa v0, vcc, v1, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
  ; CHECK-NEXT:    v_addc_co_u32_e64 v1, s[0:1], 0, 0, vcc
  ; CHECK-NEXT:    global_store_dwordx2 v[0:1], v[0:1], off
  ; CHECK-NEXT:    s_endpgm
  bb.0:
    liveins: $vgpr0

    %0:vgpr_32 = COPY $vgpr0
    %1:vgpr_32 = V_ADD_U32_e64 %0, 10, 0, implicit $exec
    %2:vgpr_32 = V_ADD_U32_e64 %0, 20, 0, implicit $exec
    %3:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
    %4:vreg_64 = REG_SEQUENCE %1, %subreg.sub0, %3, %subreg.sub1
    %5:sreg_32 = S_MOV_B32 255
    %6:vgpr_32 = V_AND_B32_e64 killed %2, killed %5, implicit $exec
    %7:vreg_64 = REG_SEQUENCE %6, %subreg.sub0, %3, %subreg.sub1
    %8:vgpr_32, %9:sreg_64_xexec = V_ADD_CO_U32_e64 %4.sub0, %7.sub0, 0, implicit $exec
    %10:vgpr_32, dead %11:sreg_64_xexec = V_ADDC_U32_e64 0, 0, killed %9, 0, implicit $exec
    %12:vreg_64 = REG_SEQUENCE %8, %subreg.sub0, %10, %subreg.sub1
    %13:sreg_64 = IMPLICIT_DEF
    %14:vreg_64 = COPY %13
    GLOBAL_STORE_DWORDX2 killed %14, killed %12, 0, 0, implicit $exec :: (store (s64), addrspace 1)
    S_ENDPGM 0
...
