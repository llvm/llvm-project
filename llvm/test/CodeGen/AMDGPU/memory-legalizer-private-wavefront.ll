; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx600 < %s | FileCheck --check-prefixes=GFX6 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx700 < %s | FileCheck --check-prefixes=GFX7 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx1010 < %s | FileCheck --check-prefixes=GFX10-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx1010 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX10-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdpal -O0 -mcpu=gfx700 -amdgcn-skip-cache-invalidations < %s | FileCheck --check-prefixes=SKIP-CACHE-INV %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx90a < %s | FileCheck -check-prefixes=GFX90A-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx90a -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX90A-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx942 < %s | FileCheck -check-prefixes=GFX942-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx942 -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX942-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx1100 < %s | FileCheck --check-prefixes=GFX11-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx1100 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX11-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx1200 < %s | FileCheck --check-prefixes=GFX12-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx1200 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX12-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -O0 -mcpu=gfx1250 < %s | FileCheck --check-prefixes=GFX1250 %s

define amdgpu_kernel void @private_wavefront_unordered_load(
; GFX6-LABEL: private_wavefront_unordered_load:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_unordered_load:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_unordered_load:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_unordered_load:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_unordered_load:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_unordered_load:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_unordered_load:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_unordered_load:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_unordered_load:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_unordered_load:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_unordered_load:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_unordered_load:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_unordered_load:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_unordered_load:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    flat_load_b32 v0, v[0:1]
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %in, ptr addrspace(5) %out) {
entry:
  %val = load atomic i32, ptr addrspace(5) %in syncscope("wavefront") unordered, align 4
  store i32 %val, ptr addrspace(5) %out
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_load(
; GFX6-LABEL: private_wavefront_monotonic_load:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_load:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_load:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_load:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_load:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_load:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_load:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_load:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_load:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_load:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_load:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_load:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_load:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_load:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    flat_load_b32 v0, v[0:1]
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %in, ptr addrspace(5) %out) {
entry:
  %val = load atomic i32, ptr addrspace(5) %in syncscope("wavefront") monotonic, align 4
  store i32 %val, ptr addrspace(5) %out
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_load(
; GFX6-LABEL: private_wavefront_acquire_load:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_load:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_load:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_load:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_load:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_load:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_load:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_load:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_load:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_load:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_load:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_load:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_load:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_load:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    flat_load_b32 v0, v[0:1]
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %in, ptr addrspace(5) %out) {
entry:
  %val = load atomic i32, ptr addrspace(5) %in syncscope("wavefront") acquire, align 4
  store i32 %val, ptr addrspace(5) %out
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_load(
; GFX6-LABEL: private_wavefront_seq_cst_load:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_load:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_load:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_load:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_load:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_load:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_load:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_load:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_load:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_load:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_load:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_load:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_load:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_load:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    flat_load_b32 v0, v[0:1]
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %in, ptr addrspace(5) %out) {
entry:
  %val = load atomic i32, ptr addrspace(5) %in syncscope("wavefront") seq_cst, align 4
  store i32 %val, ptr addrspace(5) %out
  ret void
}

define amdgpu_kernel void @private_wavefront_unordered_store(
; GFX6-LABEL: private_wavefront_unordered_store:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_unordered_store:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_unordered_store:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_unordered_store:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_unordered_store:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_unordered_store:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_unordered_store:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_unordered_store:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_unordered_store:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_unordered_store:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_unordered_store:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_unordered_store:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_unordered_store:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_unordered_store:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_store_b32 v[0:1], v2 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    i32 %in, ptr addrspace(5) %out) {
entry:
  store atomic i32 %in, ptr addrspace(5) %out syncscope("wavefront") unordered, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_store(
; GFX6-LABEL: private_wavefront_monotonic_store:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_store:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_store:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_store:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_store:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_store:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_store:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_store:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_store:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_store:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_store:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_store:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_store:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_store:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_store_b32 v[0:1], v2 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    i32 %in, ptr addrspace(5) %out) {
entry:
  store atomic i32 %in, ptr addrspace(5) %out syncscope("wavefront") monotonic, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_release_store(
; GFX6-LABEL: private_wavefront_release_store:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_release_store:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_release_store:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_release_store:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_release_store:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_release_store:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_release_store:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_release_store:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_release_store:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_release_store:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_release_store:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_release_store:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_release_store:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_release_store:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_store_b32 v[0:1], v2 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    i32 %in, ptr addrspace(5) %out) {
entry:
  store atomic i32 %in, ptr addrspace(5) %out syncscope("wavefront") release, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_store(
; GFX6-LABEL: private_wavefront_seq_cst_store:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_store:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_store:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_store:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_store:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_store:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_store:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_store:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_store:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_store:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_store:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_store:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_store:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_store:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_store_b32 v[0:1], v2 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    i32 %in, ptr addrspace(5) %out) {
entry:
  store atomic i32 %in, ptr addrspace(5) %out syncscope("wavefront") seq_cst, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_atomicrmw(
; GFX6-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront") monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_atomicrmw(
; GFX6-LABEL: private_wavefront_acquire_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront") acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_release_atomicrmw(
; GFX6-LABEL: private_wavefront_release_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_release_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_release_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_release_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_release_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_release_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_release_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_release_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_release_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_release_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_release_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_release_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_release_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_release_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront") release
  ret void
}

define amdgpu_kernel void @private_wavefront_acq_rel_atomicrmw(
; GFX6-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acq_rel_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acq_rel_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront") acq_rel
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_atomicrmw(
; GFX6-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront") seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_ret_atomicrmw(
; GFX6-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_mov_b32_e32 v2, s4
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(1)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_mov_b32_e32 v2, s4
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(1)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_ret_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(1)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_ret_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s0
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[2:3], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[2:3]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s0, s3
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    flat_atomic_swap_b32 v0, v[0:1], v2 th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront") acquire
  store i32 %val, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_acq_rel_ret_atomicrmw(
; GFX6-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_mov_b32_e32 v2, s4
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(1)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_mov_b32_e32 v2, s4
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(1)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(1)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acq_rel_ret_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s0
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[2:3], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[2:3]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s0, s3
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    flat_atomic_swap_b32 v0, v[0:1], v2 th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront") acq_rel
  store i32 %val, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_ret_atomicrmw(
; GFX6-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_mov_b32_e32 v2, s4
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(1)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_mov_b32_e32 v2, s4
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(1)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(1)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_ret_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s0
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[2:3], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[2:3]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s0, s3
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    flat_atomic_swap_b32 v0, v[0:1], v2 th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront") seq_cst
  store i32 %val, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") monotonic monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acquire monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_release_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_release_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_release_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") release monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_acq_rel_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acq_rel_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acq_rel monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") seq_cst monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") monotonic acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acquire acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_release_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_release_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_release_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") release acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_acq_rel_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acq_rel_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acq_rel acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") seq_cst acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") monotonic seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acquire seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_release_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_release_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") release seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_acq_rel_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acq_rel_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acq_rel seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") seq_cst seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
   ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") monotonic monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acquire monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_release_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_release_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
   ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") release monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_acq_rel_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acq_rel_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acq_rel monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") seq_cst monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") monotonic acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acquire acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_release_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_release_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") release acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_acq_rel_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acq_rel_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acq_rel acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") seq_cst acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_monotonic_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_monotonic_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") monotonic seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_acquire_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acquire_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acquire seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_release_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_release_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") release seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_acq_rel_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_acq_rel_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") acq_rel seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_seq_cst_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_seq_cst_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront") seq_cst seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_unordered_load(
; GFX6-LABEL: private_wavefront_one_as_unordered_load:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_unordered_load:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_unordered_load:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_unordered_load:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_unordered_load:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_unordered_load:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_unordered_load:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_unordered_load:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_unordered_load:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_unordered_load:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_unordered_load:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_unordered_load:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_unordered_load:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_unordered_load:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    flat_load_b32 v0, v[0:1]
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %in, ptr addrspace(5) %out) {
entry:
  %val = load atomic i32, ptr addrspace(5) %in syncscope("wavefront-one-as") unordered, align 4
  store i32 %val, ptr addrspace(5) %out
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_load(
; GFX6-LABEL: private_wavefront_one_as_monotonic_load:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_load:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_load:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_load:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_load:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_load:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_load:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_load:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_load:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_load:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_load:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_load:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_load:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_load:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    flat_load_b32 v0, v[0:1]
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %in, ptr addrspace(5) %out) {
entry:
  %val = load atomic i32, ptr addrspace(5) %in syncscope("wavefront-one-as") monotonic, align 4
  store i32 %val, ptr addrspace(5) %out
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_load(
; GFX6-LABEL: private_wavefront_one_as_acquire_load:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_load:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_load:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_load:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_load:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_load:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_load:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_load:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_load:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_load:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_load:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_load:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_load:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_load:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    flat_load_b32 v0, v[0:1]
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %in, ptr addrspace(5) %out) {
entry:
  %val = load atomic i32, ptr addrspace(5) %in syncscope("wavefront-one-as") acquire, align 4
  store i32 %val, ptr addrspace(5) %out
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_load(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_load:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_load:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    flat_load_b32 v0, v[0:1]
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %in, ptr addrspace(5) %out) {
entry:
  %val = load atomic i32, ptr addrspace(5) %in syncscope("wavefront-one-as") seq_cst, align 4
  store i32 %val, ptr addrspace(5) %out
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_unordered_store(
; GFX6-LABEL: private_wavefront_one_as_unordered_store:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_unordered_store:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_unordered_store:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_unordered_store:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_unordered_store:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_unordered_store:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_unordered_store:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_unordered_store:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_unordered_store:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_unordered_store:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_unordered_store:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_unordered_store:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_unordered_store:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_unordered_store:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_store_b32 v[0:1], v2 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    i32 %in, ptr addrspace(5) %out) {
entry:
  store atomic i32 %in, ptr addrspace(5) %out syncscope("wavefront-one-as") unordered, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_store(
; GFX6-LABEL: private_wavefront_one_as_monotonic_store:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_store:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_store:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_store:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_store:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_store:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_store:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_store:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_store:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_store:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_store:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_store:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_store:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_store:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_store_b32 v[0:1], v2 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    i32 %in, ptr addrspace(5) %out) {
entry:
  store atomic i32 %in, ptr addrspace(5) %out syncscope("wavefront-one-as") monotonic, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_release_store(
; GFX6-LABEL: private_wavefront_one_as_release_store:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_release_store:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_release_store:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_release_store:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_release_store:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_store:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_release_store:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_store:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_release_store:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_release_store:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_release_store:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_release_store:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_release_store:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_release_store:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_store_b32 v[0:1], v2 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    i32 %in, ptr addrspace(5) %out) {
entry:
  store atomic i32 %in, ptr addrspace(5) %out syncscope("wavefront-one-as") release, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_store(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_store:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_store:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_store_b32 v[0:1], v2 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    i32 %in, ptr addrspace(5) %out) {
entry:
  store atomic i32 %in, ptr addrspace(5) %out syncscope("wavefront-one-as") seq_cst, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_atomicrmw(
; GFX6-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront-one-as") monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_atomicrmw(
; GFX6-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront-one-as") acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_release_atomicrmw(
; GFX6-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_release_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_release_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront-one-as") release
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acq_rel_atomicrmw(
; GFX6-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acq_rel_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront-one-as") acq_rel
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_atomicrmw(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    v_mov_b32_e32 v0, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s1, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s1
; GFX1250-NEXT:    s_mov_b32 s1, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s1, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s1, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s2, s3
; GFX1250-NEXT:    s_cselect_b32 s2, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s1, v2, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s1, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s1, v0, s2
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s0
; GFX1250-NEXT:    flat_atomic_swap_b32 v[0:1], v2
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront-one-as") seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_ret_atomicrmw(
; GFX6-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_mov_b32_e32 v2, s4
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(1)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_mov_b32_e32 v2, s4
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(1)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(1)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_ret_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s0
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[2:3], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[2:3]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s0, s3
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    flat_atomic_swap_b32 v0, v[0:1], v2 th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront-one-as") acquire
  store i32 %val, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acq_rel_ret_atomicrmw(
; GFX6-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_mov_b32_e32 v2, s4
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(1)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_mov_b32_e32 v2, s4
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(1)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(1)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acq_rel_ret_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s0
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[2:3], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[2:3]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s0, s3
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    flat_atomic_swap_b32 v0, v[0:1], v2 th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront-one-as") acq_rel
  store i32 %val, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_ret_atomicrmw(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_mov_b32_e32 v2, s4
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    s_waitcnt vmcnt(1)
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_mov_b32_e32 v2, s4
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    s_waitcnt vmcnt(1)
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(1)
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(1)
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-WGP-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX12-CU-NEXT:    v_mov_b32_e32 v1, s1
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_ret_atomicrmw:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s0
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[2:3], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[2:3]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s3, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s0, s3
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    flat_atomic_swap_b32 v0, v[0:1], v2 th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(5) %out, i32 %in syncscope("wavefront-one-as") seq_cst
  store i32 %val, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") monotonic monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acquire monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_release_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_release_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") release monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acq_rel_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acq_rel_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acq_rel monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_monotonic_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_monotonic_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") seq_cst monotonic
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") monotonic acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acquire acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_release_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_release_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") release acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acq_rel_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acq_rel_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acq_rel acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_acquire_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_acquire_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") seq_cst acquire
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") monotonic seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acquire seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_release_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_release_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") release seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acq_rel_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acq_rel_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acq_rel seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_seq_cst_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX6-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX6-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX6-NEXT:    s_mov_b32 s7, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s4, s4, s7
; GFX6-NEXT:    v_mov_b32_e32 v0, s4
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s5
; GFX6-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX7-NEXT:    s_load_dword s5, s[8:9], 0x1
; GFX7-NEXT:    s_load_dword s6, s[8:9], 0x2
; GFX7-NEXT:    s_mov_b32 s7, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s4, s4, s7
; GFX7-NEXT:    v_mov_b32_e32 v0, s4
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s5
; GFX7-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[4:5], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s1, s[4:5], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[4:5], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s3, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s0, s0, s3
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s0
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s1
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[4:5], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s1, s[4:5], 0x4
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[4:5], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s3, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s0, s0, s3
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s0
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s1
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v0, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s3, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s0, s0, s3
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s3, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s0, s0, s3
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s0
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v0, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0 offset:16
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_seq_cst_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s3, s2, s3
; GFX1250-NEXT:    s_mov_b32 s2, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s2
; GFX1250-NEXT:    s_mov_b32 s2, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s2, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[4:5], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[4:5]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[4:5], 0
; GFX1250-NEXT:    s_mov_b32 s2, s5
; GFX1250-NEXT:    s_mov_b32 s6, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s3, s6
; GFX1250-NEXT:    s_cselect_b32 s3, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s2, v2, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s2, s4
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s2, v0, s3
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s1
; GFX1250-NEXT:    v_mov_b32_e32 v4, s0
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v[0:1], v[2:3]
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") seq_cst seq_cst
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") monotonic monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acquire monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_release_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_release_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") release monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acq_rel_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acq_rel monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_monotonic_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") seq_cst monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") monotonic acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acquire acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_release_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_release_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") release acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acq_rel_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acq_rel acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_acquire_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") seq_cst acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_monotonic_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") monotonic seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acquire_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acquire seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_release_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_release_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") release seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_acq_rel_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") acq_rel seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}

define amdgpu_kernel void @private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg(
; GFX6-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX6:       ; %bb.0: ; %entry
; GFX6-NEXT:    s_add_u32 s0, s0, s15
; GFX6-NEXT:    s_addc_u32 s1, s1, 0
; GFX6-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX6-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX6-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX6-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX6-NEXT:    s_mov_b32 s5, 16
; GFX6-NEXT:    s_waitcnt lgkmcnt(0)
; GFX6-NEXT:    s_add_i32 s5, s4, s5
; GFX6-NEXT:    v_mov_b32_e32 v0, s5
; GFX6-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt vmcnt(0)
; GFX6-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX6-NEXT:    v_mov_b32_e32 v1, s8
; GFX6-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX6-NEXT:    v_mov_b32_e32 v2, s5
; GFX6-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX6-NEXT:    s_waitcnt expcnt(0)
; GFX6-NEXT:    v_mov_b32_e32 v1, s4
; GFX6-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX6-NEXT:    s_endpgm
;
; GFX7-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX7:       ; %bb.0: ; %entry
; GFX7-NEXT:    s_add_u32 s0, s0, s17
; GFX7-NEXT:    s_addc_u32 s1, s1, 0
; GFX7-NEXT:    s_mov_b64 s[6:7], s[8:9]
; GFX7-NEXT:    s_load_dword s4, s[6:7], 0x0
; GFX7-NEXT:    s_load_dword s8, s[6:7], 0x1
; GFX7-NEXT:    s_load_dword s6, s[6:7], 0x2
; GFX7-NEXT:    s_mov_b32 s5, 16
; GFX7-NEXT:    s_waitcnt lgkmcnt(0)
; GFX7-NEXT:    s_add_i32 s5, s4, s5
; GFX7-NEXT:    v_mov_b32_e32 v0, s5
; GFX7-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen
; GFX7-NEXT:    s_waitcnt vmcnt(0)
; GFX7-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX7-NEXT:    v_mov_b32_e32 v1, s8
; GFX7-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX7-NEXT:    v_mov_b32_e32 v2, s5
; GFX7-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; GFX7-NEXT:    v_mov_b32_e32 v1, s4
; GFX7-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX7-NEXT:    s_endpgm
;
; GFX10-WGP-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX10-WGP:       ; %bb.0: ; %entry
; GFX10-WGP-NEXT:    s_add_u32 s0, s0, s17
; GFX10-WGP-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-WGP-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-WGP-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-WGP-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-WGP-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-WGP-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX10-WGP-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-WGP-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-WGP-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-WGP-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-WGP-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-WGP-NEXT:    s_endpgm
;
; GFX10-CU-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX10-CU:       ; %bb.0: ; %entry
; GFX10-CU-NEXT:    s_add_u32 s0, s0, s17
; GFX10-CU-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-CU-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX10-CU-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX10-CU-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX10-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-CU-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-CU-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX10-CU-NEXT:    v_cmp_eq_u32_e64 s6, v0, s6
; GFX10-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s5, s6
; GFX10-CU-NEXT:    v_mov_b32_e32 v2, s4
; GFX10-CU-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX10-CU-NEXT:    v_mov_b32_e32 v1, s4
; GFX10-CU-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX10-CU-NEXT:    s_endpgm
;
; SKIP-CACHE-INV-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; SKIP-CACHE-INV:       ; %bb.0: ; %entry
; SKIP-CACHE-INV-NEXT:    s_getpc_b64 s[12:13]
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s12, s0
; SKIP-CACHE-INV-NEXT:    s_load_dwordx4 s[12:15], s[12:13], 0x0
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_u32 s12, s12, s11
; SKIP-CACHE-INV-NEXT:    s_addc_u32 s13, s13, 0
; SKIP-CACHE-INV-NEXT:    s_mov_b64 s[2:3], s[4:5]
; SKIP-CACHE-INV-NEXT:    s_load_dword s0, s[2:3], 0x0
; SKIP-CACHE-INV-NEXT:    s_load_dword s4, s[2:3], 0x1
; SKIP-CACHE-INV-NEXT:    s_load_dword s2, s[2:3], 0x2
; SKIP-CACHE-INV-NEXT:    s_mov_b32 s1, 16
; SKIP-CACHE-INV-NEXT:    s_waitcnt lgkmcnt(0)
; SKIP-CACHE-INV-NEXT:    s_add_i32 s1, s0, s1
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v0, s1
; SKIP-CACHE-INV-NEXT:    buffer_load_dword v0, v0, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_waitcnt vmcnt(0)
; SKIP-CACHE-INV-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s4
; SKIP-CACHE-INV-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v2, s1
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v1, v2, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    v_mov_b32_e32 v1, s0
; SKIP-CACHE-INV-NEXT:    buffer_store_dword v0, v1, s[12:15], 0 offen
; SKIP-CACHE-INV-NEXT:    s_endpgm
;
; GFX90A-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX90A-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX90A-NOTTGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-NOTTGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-NOTTGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-NOTTGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX90A-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX90A-TGSPLIT:       ; %bb.0: ; %entry
; GFX90A-TGSPLIT-NEXT:    s_add_u32 s0, s0, s17
; GFX90A-TGSPLIT-NEXT:    s_addc_u32 s1, s1, 0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s4, s[8:9], 0x0
; GFX90A-TGSPLIT-NEXT:    s_load_dword s5, s[8:9], 0x4
; GFX90A-TGSPLIT-NEXT:    s_load_dword s6, s[8:9], 0x8
; GFX90A-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v0, s4
; GFX90A-TGSPLIT-NEXT:    buffer_load_dword v0, v0, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX90A-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[6:7], v0, s6
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s5
; GFX90A-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[6:7]
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v2, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen offset:16
; GFX90A-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX90A-TGSPLIT-NEXT:    buffer_store_dword v0, v1, s[0:3], 0 offen
; GFX90A-TGSPLIT-NEXT:    s_endpgm
;
; GFX942-NOTTGSPLIT-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX942-NOTTGSPLIT:       ; %bb.0: ; %entry
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-NOTTGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-NOTTGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-NOTTGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-NOTTGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-NOTTGSPLIT-NEXT:    s_nop 0
; GFX942-NOTTGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-NOTTGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-NOTTGSPLIT-NEXT:    s_endpgm
;
; GFX942-TGSPLIT-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX942-TGSPLIT:       ; %bb.0: ; %entry
; GFX942-TGSPLIT-NEXT:    s_mov_b64 s[2:3], s[4:5]
; GFX942-TGSPLIT-NEXT:    s_load_dword s0, s[2:3], 0x0
; GFX942-TGSPLIT-NEXT:    s_load_dword s4, s[2:3], 0x4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    s_load_dword s2, s[2:3], 0x8
; GFX942-TGSPLIT-NEXT:    s_mov_b32 s1, 16
; GFX942-TGSPLIT-NEXT:    s_waitcnt lgkmcnt(0)
; GFX942-TGSPLIT-NEXT:    s_add_i32 s1, s0, s1
; GFX942-TGSPLIT-NEXT:    scratch_load_dword v0, off, s1
; GFX942-TGSPLIT-NEXT:    s_waitcnt vmcnt(0)
; GFX942-TGSPLIT-NEXT:    v_cmp_eq_u32_e64 s[2:3], v0, s2
; GFX942-TGSPLIT-NEXT:    v_mov_b32_e32 v1, s4
; GFX942-TGSPLIT-NEXT:    s_nop 0
; GFX942-TGSPLIT-NEXT:    v_cndmask_b32_e64 v1, v0, v1, s[2:3]
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v1, s1
; GFX942-TGSPLIT-NEXT:    scratch_store_dword off, v0, s0
; GFX942-TGSPLIT-NEXT:    s_endpgm
;
; GFX11-WGP-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX11-WGP:       ; %bb.0: ; %entry
; GFX11-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-WGP-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-WGP-NEXT:    s_mov_b32 s1, 16
; GFX11-WGP-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-WGP-NEXT:    s_add_i32 s1, s0, s1
; GFX11-WGP-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-WGP-NEXT:    s_waitcnt vmcnt(0)
; GFX11-WGP-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-WGP-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-WGP-NEXT:    s_endpgm
;
; GFX11-CU-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX11-CU:       ; %bb.0: ; %entry
; GFX11-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX11-CU-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX11-CU-NEXT:    s_load_b32 s3, s[4:5], 0x8
; GFX11-CU-NEXT:    s_mov_b32 s1, 16
; GFX11-CU-NEXT:    s_waitcnt lgkmcnt(0)
; GFX11-CU-NEXT:    s_add_i32 s1, s0, s1
; GFX11-CU-NEXT:    scratch_load_b32 v0, off, s1
; GFX11-CU-NEXT:    s_waitcnt vmcnt(0)
; GFX11-CU-NEXT:    v_cmp_eq_u32_e64 s3, v0, s3
; GFX11-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s2, s3
; GFX11-CU-NEXT:    scratch_store_b32 off, v1, s1
; GFX11-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX11-CU-NEXT:    s_endpgm
;
; GFX12-WGP-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX12-WGP:       ; %bb.0: ; %entry
; GFX12-WGP-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-WGP-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-WGP-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-WGP-NEXT:    s_wait_kmcnt 0x0
; GFX12-WGP-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-WGP-NEXT:    s_wait_loadcnt 0x0
; GFX12-WGP-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-WGP-NEXT:    s_wait_alu 0xf1ff
; GFX12-WGP-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-WGP-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-WGP-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-WGP-NEXT:    s_endpgm
;
; GFX12-CU-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX12-CU:       ; %bb.0: ; %entry
; GFX12-CU-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX12-CU-NEXT:    s_load_b32 s1, s[4:5], 0x4
; GFX12-CU-NEXT:    s_load_b32 s2, s[4:5], 0x8
; GFX12-CU-NEXT:    s_wait_kmcnt 0x0
; GFX12-CU-NEXT:    scratch_load_b32 v0, off, s0 offset:16
; GFX12-CU-NEXT:    s_wait_loadcnt 0x0
; GFX12-CU-NEXT:    v_cmp_eq_u32_e64 s2, v0, s2
; GFX12-CU-NEXT:    s_wait_alu 0xf1ff
; GFX12-CU-NEXT:    v_cndmask_b32_e64 v1, v0, s1, s2
; GFX12-CU-NEXT:    scratch_store_b32 off, v1, s0 offset:16
; GFX12-CU-NEXT:    scratch_store_b32 off, v0, s0
; GFX12-CU-NEXT:    s_endpgm
;
; GFX1250-LABEL: private_wavefront_one_as_seq_cst_seq_cst_ret_cmpxchg:
; GFX1250:       ; %bb.0: ; %entry
; GFX1250-NEXT:    s_load_b32 s0, s[4:5], 0x0
; GFX1250-NEXT:    s_load_b32 s2, s[4:5], 0x4
; GFX1250-NEXT:    s_load_b32 s1, s[4:5], 0x8
; GFX1250-NEXT:    s_mov_b32 s3, 16
; GFX1250-NEXT:    s_wait_kmcnt 0x0
; GFX1250-NEXT:    s_add_co_i32 s4, s0, s3
; GFX1250-NEXT:    s_mov_b32 s3, 0
; GFX1250-NEXT:    v_mbcnt_lo_u32_b32 v0, -1, s3
; GFX1250-NEXT:    s_mov_b32 s3, 20
; GFX1250-NEXT:    v_lshlrev_b32_e64 v2, s3, v0
; GFX1250-NEXT:    v_mov_b32_e32 v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    s_mov_b64 s[6:7], src_flat_scratch_base_lo
; GFX1250-NEXT:    v_add_nc_u64_e64 v[0:1], v[0:1], s[6:7]
; GFX1250-NEXT:    v_mov_b32_e32 v2, v1
; GFX1250-NEXT:    s_mov_b64 s[6:7], 0
; GFX1250-NEXT:    s_mov_b32 s3, s7
; GFX1250-NEXT:    s_mov_b32 s5, -1
; GFX1250-NEXT:    s_cmp_lg_u32 s4, s5
; GFX1250-NEXT:    s_cselect_b32 s4, -1, 0
; GFX1250-NEXT:    v_cndmask_b32_e64 v2, s3, v2, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    s_mov_b32 s3, s6
; GFX1250-NEXT:    v_cndmask_b32_e64 v0, s3, v0, s4
; GFX1250-NEXT:    ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v1, v2
; GFX1250-NEXT:    v_mov_b32_e32 v2, s2
; GFX1250-NEXT:    v_mov_b32_e32 v4, s1
; GFX1250-NEXT:    ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
; GFX1250-NEXT:    v_mov_b32_e32 v3, v4
; GFX1250-NEXT:    flat_atomic_cmpswap_b32 v0, v[0:1], v[2:3] th:TH_ATOMIC_RETURN
; GFX1250-NEXT:    s_wait_loadcnt_dscnt 0x0
; GFX1250-NEXT:    scratch_store_b32 off, v0, s0 scope:SCOPE_SE
; GFX1250-NEXT:    s_endpgm
    ptr addrspace(5) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(5) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(5) %gep, i32 %old, i32 %in syncscope("wavefront-one-as") seq_cst seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(5) %out, align 4
  ret void
}
