; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=amdgcn -mcpu=gfx90a -verify-machineinstrs --pass-remarks=si-lower \
; RUN:      %s -o - 2>&1 | FileCheck %s --check-prefix=GFX90A-HW

; GFX90A-HW: Hardware instruction generated for atomic fadd operation at memory scope agent due to an unsafe request.
; GFX90A-HW: Hardware instruction generated for atomic fadd operation at memory scope workgroup due to an unsafe request.
; GFX90A-HW: Hardware instruction generated for atomic fadd operation at memory scope wavefront due to an unsafe request.
; GFX90A-HW: Hardware instruction generated for atomic fadd operation at memory scope singlethread due to an unsafe request.
; GFX90A-HW: Hardware instruction generated for atomic fadd operation at memory scope agent-one-as due to an unsafe request.
; GFX90A-HW: Hardware instruction generated for atomic fadd operation at memory scope workgroup-one-as due to an unsafe request.
; GFX90A-HW: Hardware instruction generated for atomic fadd operation at memory scope wavefront-one-as due to an unsafe request.
; GFX90A-HW: Hardware instruction generated for atomic fadd operation at memory scope singlethread-one-as due to an unsafe request.

; GFX90A-HW-LABEL: atomic_add_unsafe_hw:
; GFX90A-HW:    ds_add_f64 v2, v[0:1]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw(ptr addrspace(3) %ptr) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[0:1], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s0, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s1, v0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[2:3], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB0_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_load_dword s2, s[4:5], 0x24
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[0:1]
; GFX90A-HW-NEXT:    v_cvt_f64_u32_e32 v[0:1], 0
; GFX90A-HW-NEXT:    v_ldexp_f64 v[0:1], v[0:1], 32
; GFX90A-HW-NEXT:    v_cvt_f64_u32_e32 v[2:3], s0
; GFX90A-HW-NEXT:    v_add_f64 v[0:1], v[0:1], v[2:3]
; GFX90A-HW-NEXT:    v_mul_f64 v[0:1], v[0:1], 4.0
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mov_b32_e32 v2, s2
; GFX90A-HW-NEXT:    ds_add_f64 v2, v[0:1]
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:  .LBB0_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(3) %ptr, double 4.0 seq_cst
  ret void
}

; GFX90A-HW-LABEL: atomic_add_unsafe_hw_agent:
; GFX90A-HW:    global_atomic_add_f32 v0, v1, s[2:3]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw_agent(ptr addrspace(1) %ptr, float %val) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw_agent:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[2:3], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s2, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s3, v0
; GFX90A-HW-NEXT:    s_mov_b32 s1, 0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[6:7], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB1_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[2:3]
; GFX90A-HW-NEXT:    s_flbit_i32_b32 s2, 0
; GFX90A-HW-NEXT:    s_min_u32 s2, s2, 32
; GFX90A-HW-NEXT:    s_lshl_b64 s[0:1], s[0:1], s2
; GFX90A-HW-NEXT:    s_min_u32 s0, s0, 1
; GFX90A-HW-NEXT:    s_or_b32 s0, s1, s0
; GFX90A-HW-NEXT:    v_cvt_f32_u32_e32 v0, s0
; GFX90A-HW-NEXT:    s_load_dword s3, s[4:5], 0x2c
; GFX90A-HW-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; GFX90A-HW-NEXT:    s_sub_i32 s2, 32, s2
; GFX90A-HW-NEXT:    v_mov_b32_e32 v1, 0
; GFX90A-HW-NEXT:    v_ldexp_f32 v0, v0, s2
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mul_f32_e32 v0, s3, v0
; GFX90A-HW-NEXT:    global_atomic_add_f32 v1, v0, s[0:1]
; GFX90A-HW-NEXT:  .LBB1_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(1) %ptr, float %val syncscope("agent") monotonic, align 4, !amdgpu.no.fine.grained.memory !0
  ret void
}

; GFX90A-HW-LABEL: atomic_add_unsafe_hw_wg:
; GFX90A-HW:    global_atomic_add_f32 v0, v1, s[2:3]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw_wg(ptr addrspace(1) %ptr, float %val) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw_wg:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[2:3], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s2, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s3, v0
; GFX90A-HW-NEXT:    s_mov_b32 s1, 0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[6:7], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB2_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[2:3]
; GFX90A-HW-NEXT:    s_flbit_i32_b32 s2, 0
; GFX90A-HW-NEXT:    s_min_u32 s2, s2, 32
; GFX90A-HW-NEXT:    s_lshl_b64 s[0:1], s[0:1], s2
; GFX90A-HW-NEXT:    s_min_u32 s0, s0, 1
; GFX90A-HW-NEXT:    s_or_b32 s0, s1, s0
; GFX90A-HW-NEXT:    v_cvt_f32_u32_e32 v0, s0
; GFX90A-HW-NEXT:    s_load_dword s3, s[4:5], 0x2c
; GFX90A-HW-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; GFX90A-HW-NEXT:    s_sub_i32 s2, 32, s2
; GFX90A-HW-NEXT:    v_mov_b32_e32 v1, 0
; GFX90A-HW-NEXT:    v_ldexp_f32 v0, v0, s2
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mul_f32_e32 v0, s3, v0
; GFX90A-HW-NEXT:    global_atomic_add_f32 v1, v0, s[0:1]
; GFX90A-HW-NEXT:  .LBB2_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(1) %ptr, float %val syncscope("workgroup") monotonic, align 4, !amdgpu.no.fine.grained.memory !0
  ret void
}

; GFX90A-HW-LABEL: atomic_add_unsafe_hw_wavefront:
; GFX90A-HW:    global_atomic_add_f32 v0, v1, s[2:3]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw_wavefront(ptr addrspace(1) %ptr, float %val) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw_wavefront:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[2:3], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s2, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s3, v0
; GFX90A-HW-NEXT:    s_mov_b32 s1, 0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[6:7], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB3_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[2:3]
; GFX90A-HW-NEXT:    s_flbit_i32_b32 s2, 0
; GFX90A-HW-NEXT:    s_min_u32 s2, s2, 32
; GFX90A-HW-NEXT:    s_lshl_b64 s[0:1], s[0:1], s2
; GFX90A-HW-NEXT:    s_min_u32 s0, s0, 1
; GFX90A-HW-NEXT:    s_or_b32 s0, s1, s0
; GFX90A-HW-NEXT:    v_cvt_f32_u32_e32 v0, s0
; GFX90A-HW-NEXT:    s_load_dword s3, s[4:5], 0x2c
; GFX90A-HW-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; GFX90A-HW-NEXT:    s_sub_i32 s2, 32, s2
; GFX90A-HW-NEXT:    v_mov_b32_e32 v1, 0
; GFX90A-HW-NEXT:    v_ldexp_f32 v0, v0, s2
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mul_f32_e32 v0, s3, v0
; GFX90A-HW-NEXT:    global_atomic_add_f32 v1, v0, s[0:1]
; GFX90A-HW-NEXT:  .LBB3_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(1) %ptr, float %val syncscope("wavefront") monotonic, align 4, !amdgpu.no.fine.grained.memory !0
  ret void
}

; GFX90A-HW-LABEL: atomic_add_unsafe_hw_single_thread:
; GFX90A-HW:    global_atomic_add_f32 v0, v1, s[2:3]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw_single_thread(ptr addrspace(1) %ptr, float %val) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw_single_thread:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[2:3], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s2, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s3, v0
; GFX90A-HW-NEXT:    s_mov_b32 s1, 0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[6:7], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB4_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[2:3]
; GFX90A-HW-NEXT:    s_flbit_i32_b32 s2, 0
; GFX90A-HW-NEXT:    s_min_u32 s2, s2, 32
; GFX90A-HW-NEXT:    s_lshl_b64 s[0:1], s[0:1], s2
; GFX90A-HW-NEXT:    s_min_u32 s0, s0, 1
; GFX90A-HW-NEXT:    s_or_b32 s0, s1, s0
; GFX90A-HW-NEXT:    v_cvt_f32_u32_e32 v0, s0
; GFX90A-HW-NEXT:    s_load_dword s3, s[4:5], 0x2c
; GFX90A-HW-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; GFX90A-HW-NEXT:    s_sub_i32 s2, 32, s2
; GFX90A-HW-NEXT:    v_mov_b32_e32 v1, 0
; GFX90A-HW-NEXT:    v_ldexp_f32 v0, v0, s2
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mul_f32_e32 v0, s3, v0
; GFX90A-HW-NEXT:    global_atomic_add_f32 v1, v0, s[0:1]
; GFX90A-HW-NEXT:  .LBB4_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(1) %ptr, float %val syncscope("singlethread") monotonic, align 4, !amdgpu.no.fine.grained.memory !0
  ret void
}

; GFX90A-HW-LABEL: atomic_add_unsafe_hw_aoa:
; GFX90A-HW:    global_atomic_add_f32 v0, v1, s[2:3]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw_aoa(ptr addrspace(1) %ptr, float %val) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw_aoa:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[2:3], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s2, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s3, v0
; GFX90A-HW-NEXT:    s_mov_b32 s1, 0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[6:7], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB5_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[2:3]
; GFX90A-HW-NEXT:    s_flbit_i32_b32 s2, 0
; GFX90A-HW-NEXT:    s_min_u32 s2, s2, 32
; GFX90A-HW-NEXT:    s_lshl_b64 s[0:1], s[0:1], s2
; GFX90A-HW-NEXT:    s_min_u32 s0, s0, 1
; GFX90A-HW-NEXT:    s_or_b32 s0, s1, s0
; GFX90A-HW-NEXT:    v_cvt_f32_u32_e32 v0, s0
; GFX90A-HW-NEXT:    s_load_dword s3, s[4:5], 0x2c
; GFX90A-HW-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; GFX90A-HW-NEXT:    s_sub_i32 s2, 32, s2
; GFX90A-HW-NEXT:    v_mov_b32_e32 v1, 0
; GFX90A-HW-NEXT:    v_ldexp_f32 v0, v0, s2
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mul_f32_e32 v0, s3, v0
; GFX90A-HW-NEXT:    global_atomic_add_f32 v1, v0, s[0:1]
; GFX90A-HW-NEXT:  .LBB5_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(1) %ptr, float %val syncscope("agent-one-as") monotonic, align 4, !amdgpu.no.fine.grained.memory !0
  ret void
}

; GFX90A-HW-LABEL: atomic_add_unsafe_hw_wgoa:
; GFX90A-HW:    global_atomic_add_f32 v0, v1, s[2:3]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw_wgoa(ptr addrspace(1) %ptr, float %val) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw_wgoa:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[2:3], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s2, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s3, v0
; GFX90A-HW-NEXT:    s_mov_b32 s1, 0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[6:7], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB6_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[2:3]
; GFX90A-HW-NEXT:    s_flbit_i32_b32 s2, 0
; GFX90A-HW-NEXT:    s_min_u32 s2, s2, 32
; GFX90A-HW-NEXT:    s_lshl_b64 s[0:1], s[0:1], s2
; GFX90A-HW-NEXT:    s_min_u32 s0, s0, 1
; GFX90A-HW-NEXT:    s_or_b32 s0, s1, s0
; GFX90A-HW-NEXT:    v_cvt_f32_u32_e32 v0, s0
; GFX90A-HW-NEXT:    s_load_dword s3, s[4:5], 0x2c
; GFX90A-HW-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; GFX90A-HW-NEXT:    s_sub_i32 s2, 32, s2
; GFX90A-HW-NEXT:    v_mov_b32_e32 v1, 0
; GFX90A-HW-NEXT:    v_ldexp_f32 v0, v0, s2
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mul_f32_e32 v0, s3, v0
; GFX90A-HW-NEXT:    global_atomic_add_f32 v1, v0, s[0:1]
; GFX90A-HW-NEXT:  .LBB6_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(1) %ptr, float %val syncscope("workgroup-one-as") monotonic, align 4, !amdgpu.no.fine.grained.memory !0
  ret void
}

; GFX90A-HW-LABEL: atomic_add_unsafe_hw_wfoa:
; GFX90A-HW:    global_atomic_add_f32 v0, v1, s[2:3]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw_wfoa(ptr addrspace(1) %ptr, float %val) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw_wfoa:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[2:3], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s2, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s3, v0
; GFX90A-HW-NEXT:    s_mov_b32 s1, 0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[6:7], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB7_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[2:3]
; GFX90A-HW-NEXT:    s_flbit_i32_b32 s2, 0
; GFX90A-HW-NEXT:    s_min_u32 s2, s2, 32
; GFX90A-HW-NEXT:    s_lshl_b64 s[0:1], s[0:1], s2
; GFX90A-HW-NEXT:    s_min_u32 s0, s0, 1
; GFX90A-HW-NEXT:    s_or_b32 s0, s1, s0
; GFX90A-HW-NEXT:    v_cvt_f32_u32_e32 v0, s0
; GFX90A-HW-NEXT:    s_load_dword s3, s[4:5], 0x2c
; GFX90A-HW-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; GFX90A-HW-NEXT:    s_sub_i32 s2, 32, s2
; GFX90A-HW-NEXT:    v_mov_b32_e32 v1, 0
; GFX90A-HW-NEXT:    v_ldexp_f32 v0, v0, s2
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mul_f32_e32 v0, s3, v0
; GFX90A-HW-NEXT:    global_atomic_add_f32 v1, v0, s[0:1]
; GFX90A-HW-NEXT:  .LBB7_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(1) %ptr, float %val syncscope("wavefront-one-as") monotonic, align 4, !amdgpu.no.fine.grained.memory !0
  ret void
}

; GFX90A-HW-LABEL: atomic_add_unsafe_hw_stoa:
; GFX90A-HW:    global_atomic_add_f32 v0, v1, s[2:3]
; GFX90A-HW:    s_endpgm
define amdgpu_kernel void @atomic_add_unsafe_hw_stoa(ptr addrspace(1) %ptr, float %val) #0 {
; GFX90A-HW-LABEL: atomic_add_unsafe_hw_stoa:
; GFX90A-HW:       ; %bb.0: ; %main_body
; GFX90A-HW-NEXT:    s_mov_b64 s[2:3], exec
; GFX90A-HW-NEXT:    v_mbcnt_lo_u32_b32 v0, s2, 0
; GFX90A-HW-NEXT:    v_mbcnt_hi_u32_b32 v0, s3, v0
; GFX90A-HW-NEXT:    s_mov_b32 s1, 0
; GFX90A-HW-NEXT:    v_cmp_eq_u32_e32 vcc, 0, v0
; GFX90A-HW-NEXT:    s_and_saveexec_b64 s[6:7], vcc
; GFX90A-HW-NEXT:    s_cbranch_execz .LBB8_2
; GFX90A-HW-NEXT:  ; %bb.1:
; GFX90A-HW-NEXT:    s_bcnt1_i32_b64 s0, s[2:3]
; GFX90A-HW-NEXT:    s_flbit_i32_b32 s2, 0
; GFX90A-HW-NEXT:    s_min_u32 s2, s2, 32
; GFX90A-HW-NEXT:    s_lshl_b64 s[0:1], s[0:1], s2
; GFX90A-HW-NEXT:    s_min_u32 s0, s0, 1
; GFX90A-HW-NEXT:    s_or_b32 s0, s1, s0
; GFX90A-HW-NEXT:    v_cvt_f32_u32_e32 v0, s0
; GFX90A-HW-NEXT:    s_load_dword s3, s[4:5], 0x2c
; GFX90A-HW-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x24
; GFX90A-HW-NEXT:    s_sub_i32 s2, 32, s2
; GFX90A-HW-NEXT:    v_mov_b32_e32 v1, 0
; GFX90A-HW-NEXT:    v_ldexp_f32 v0, v0, s2
; GFX90A-HW-NEXT:    s_waitcnt lgkmcnt(0)
; GFX90A-HW-NEXT:    v_mul_f32_e32 v0, s3, v0
; GFX90A-HW-NEXT:    global_atomic_add_f32 v1, v0, s[0:1]
; GFX90A-HW-NEXT:  .LBB8_2:
; GFX90A-HW-NEXT:    s_endpgm
main_body:
  %ret = atomicrmw fadd ptr addrspace(1) %ptr, float %val syncscope("singlethread-one-as") monotonic, align 4, !amdgpu.no.fine.grained.memory !0
  ret void
}

attributes #0 = { "denormal-fp-math"="preserve-sign,preserve-sign" }

!0 = !{}
