; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5

; RUN: llc -mtriple=amdgcn < %s | FileCheck -check-prefix=GCN %s
; RUN: llc -mtriple=amdgcn -mcpu=tonga < %s | FileCheck -check-prefixes=VI %s
; RUN: llc -mtriple=amdgcn -mcpu=gfx900 < %s | FileCheck -check-prefixes=GFX9 %s
; RUN: llc -mtriple=amdgcn -mcpu=gfx1100 < %s | FileCheck -check-prefixes=GFX11 %s

define <4 x float> @bitcast_v4i32_to_v4f32(<4 x i32> %a, i32 %b) {
; GCN-LABEL: bitcast_v4i32_to_v4f32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB0_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v3
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v1
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:  .LBB0_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4i32_to_v4f32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4i32_to_v4f32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4i32_to_v4f32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u32_e32 v3, 3, v3
; GFX11-NEXT:    v_add_nc_u32_e32 v2, 3, v2
; GFX11-NEXT:    v_add_nc_u32_e32 v1, 3, v1
; GFX11-NEXT:    v_add_nc_u32_e32 v0, 3, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <4 x i32> %a, splat (i32 3)
  %a2 = bitcast <4 x i32> %a1 to <4 x float>
  br label %end

cmp.false:
  %a3 = bitcast <4 x i32> %a to <4 x float>
  br label %end

end:
  %phi = phi <4 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x float> %phi
}

define <4 x i32> @bitcast_v4f32_to_v4i32(<4 x float> %a, i32 %b) {
; GCN-LABEL: bitcast_v4f32_to_v4i32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB1_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GCN-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GCN-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GCN-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GCN-NEXT:  .LBB1_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4f32_to_v4i32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4f32_to_v4i32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4f32_to_v4i32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_dual_add_f32 v3, 1.0, v3 :: v_dual_add_f32 v2, 1.0, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 1.0, v1 :: v_dual_add_f32 v0, 1.0, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <4 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <4 x float> %a1 to <4 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <4 x float> %a to <4 x i32>
  br label %end

end:
  %phi = phi <4 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x i32> %phi
}

define <2 x i64> @bitcast_v4i32_to_v2i64(<4 x i32> %a, i32 %b) {
; GCN-LABEL: bitcast_v4i32_to_v2i64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB2_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v3
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v1
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:  .LBB2_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4i32_to_v2i64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4i32_to_v2i64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4i32_to_v2i64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u32_e32 v3, 3, v3
; GFX11-NEXT:    v_add_nc_u32_e32 v2, 3, v2
; GFX11-NEXT:    v_add_nc_u32_e32 v1, 3, v1
; GFX11-NEXT:    v_add_nc_u32_e32 v0, 3, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <4 x i32> %a, splat (i32 3)
  %a2 = bitcast <4 x i32> %a1 to <2 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <4 x i32> %a to <2 x i64>
  br label %end

end:
  %phi = phi <2 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x i64> %phi
}

define <4 x i32> @bitcast_v2i64_to_v4i32(<2 x i64> %a, i32 %b) {
; GCN-LABEL: bitcast_v2i64_to_v4i32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB3_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; GCN-NEXT:  .LBB3_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2i64_to_v4i32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2i64_to_v4i32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2i64_to_v4i32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_co_u32 v2, vcc_lo, v2, 3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_co_ci_u32_e64 v3, null, 0, v3, vcc_lo
; GFX11-NEXT:    v_add_co_u32 v0, vcc_lo, v0, 3
; GFX11-NEXT:    v_add_co_ci_u32_e64 v1, null, 0, v1, vcc_lo
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <2 x i64> %a, splat (i64 3)
  %a2 = bitcast <2 x i64> %a1 to <4 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <2 x i64> %a to <4 x i32>
  br label %end

end:
  %phi = phi <4 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x i32> %phi
}

define <2 x double> @bitcast_v4i32_to_v2f64(<4 x i32> %a, i32 %b) {
; GCN-LABEL: bitcast_v4i32_to_v2f64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB4_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v3
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v1
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:  .LBB4_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4i32_to_v2f64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4i32_to_v2f64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4i32_to_v2f64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u32_e32 v3, 3, v3
; GFX11-NEXT:    v_add_nc_u32_e32 v2, 3, v2
; GFX11-NEXT:    v_add_nc_u32_e32 v1, 3, v1
; GFX11-NEXT:    v_add_nc_u32_e32 v0, 3, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <4 x i32> %a, splat (i32 3)
  %a2 = bitcast <4 x i32> %a1 to <2 x double>
  br label %end

cmp.false:
  %a3 = bitcast <4 x i32> %a to <2 x double>
  br label %end

end:
  %phi = phi <2 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x double> %phi
}

define <4 x i32> @bitcast_v2f64_to_v4i32(<2 x double> %a, i32 %b) {
; GCN-LABEL: bitcast_v2f64_to_v4i32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB5_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GCN-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GCN-NEXT:  .LBB5_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2f64_to_v4i32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB5_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:  .LBB5_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2f64_to_v4i32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB5_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:  .LBB5_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2f64_to_v4i32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB5_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX11-NEXT:  .LBB5_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <2 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <2 x double> %a1 to <4 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <2 x double> %a to <4 x i32>
  br label %end

end:
  %phi = phi <4 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x i32> %phi
}

define <8 x i16> @bitcast_v4i32_to_v8i16(<4 x i32> %a, i32 %b) {
; GCN-LABEL: bitcast_v4i32_to_v8i16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v6, v3
; GCN-NEXT:    v_mov_b32_e32 v8, v2
; GCN-NEXT:    v_mov_b32_e32 v2, v1
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB6_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_alignbit_b32 v5, v6, v8, 16
; GCN-NEXT:    v_alignbit_b32 v1, v2, v0, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v6
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v2
; GCN-NEXT:  .LBB6_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB6_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; GCN-NEXT:    v_alignbit_b32 v5, v6, v8, 16
; GCN-NEXT:    v_alignbit_b32 v1, v2, v0, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v6
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v2
; GCN-NEXT:  .LBB6_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v4, v8
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4i32_to_v8i16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4i32_to_v8i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4i32_to_v8i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u32_e32 v3, 3, v3
; GFX11-NEXT:    v_add_nc_u32_e32 v2, 3, v2
; GFX11-NEXT:    v_add_nc_u32_e32 v1, 3, v1
; GFX11-NEXT:    v_add_nc_u32_e32 v0, 3, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <4 x i32> %a, splat (i32 3)
  %a2 = bitcast <4 x i32> %a1 to <8 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <4 x i32> %a to <8 x i16>
  br label %end

end:
  %phi = phi <8 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x i16> %phi
}

define <4 x i32> @bitcast_v8i16_to_v4i32(<8 x i16> %a, i32 %b) {
; GCN-LABEL: bitcast_v8i16_to_v4i32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v9, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v8, 16, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 16, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB7_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB7_4
; GCN-NEXT:  .LBB7_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB7_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v9
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v10
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v0, v8
; GCN-NEXT:    v_or_b32_e32 v1, v1, v11
; GCN-NEXT:    v_or_b32_e32 v2, v2, v5
; GCN-NEXT:    v_or_b32_e32 v3, v3, v7
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB7_2
; GCN-NEXT:  .LBB7_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v9
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v6
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v3
; GCN-NEXT:    v_or_b32_e32 v0, v8, v0
; GCN-NEXT:    v_or_b32_e32 v1, v11, v1
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v7, v3
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x30000, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 0x30000, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x30000, v2
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 0x30000, v3
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8i16_to_v4i32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB7_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v5, 3
; VI-NEXT:    v_add_u16_e32 v4, 3, v3
; VI-NEXT:    v_add_u16_sdwa v3, v3, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    v_add_u16_e32 v4, 3, v2
; VI-NEXT:    v_add_u16_sdwa v2, v2, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v4, v2
; VI-NEXT:    v_add_u16_e32 v4, 3, v1
; VI-NEXT:    v_add_u16_sdwa v1, v1, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v4, v1
; VI-NEXT:    v_add_u16_e32 v4, 3, v0
; VI-NEXT:    v_add_u16_sdwa v0, v0, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v4, v0
; VI-NEXT:  .LBB7_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8i16_to_v4i32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8i16_to_v4i32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <8 x i16> %a, splat (i16 3)
  %a2 = bitcast <8 x i16> %a1 to <4 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <8 x i16> %a to <4 x i32>
  br label %end

end:
  %phi = phi <4 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x i32> %phi
}

define <8 x half> @bitcast_v4i32_to_v8f16(<4 x i32> %a, i32 %b) {
; GCN-LABEL: bitcast_v4i32_to_v8f16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v9, v3
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v11, v1
; GCN-NEXT:    v_mov_b32_e32 v8, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB8_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB8_4
; GCN-NEXT:  .LBB8_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB8_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v10
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v11
; GCN-NEXT:    v_lshrrev_b32_e32 v12, 16, v8
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v8
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB8_2
; GCN-NEXT:  .LBB8_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v8
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v11
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v8, 16, v0
; GCN-NEXT:    v_lshrrev_b32_e32 v9, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v2
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v8
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4i32_to_v8f16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4i32_to_v8f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4i32_to_v8f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u32_e32 v3, 3, v3
; GFX11-NEXT:    v_add_nc_u32_e32 v2, 3, v2
; GFX11-NEXT:    v_add_nc_u32_e32 v1, 3, v1
; GFX11-NEXT:    v_add_nc_u32_e32 v0, 3, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <4 x i32> %a, splat (i32 3)
  %a2 = bitcast <4 x i32> %a1 to <8 x half>
  br label %end

cmp.false:
  %a3 = bitcast <4 x i32> %a to <8 x half>
  br label %end

end:
  %phi = phi <8 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x half> %phi
}

define <4 x i32> @bitcast_v8f16_to_v4i32(<8 x half> %a, i32 %b) {
; GCN-LABEL: bitcast_v8f16_to_v4i32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_cvt_f16_f32_e32 v12, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v10, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v11, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v8, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v9, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v6
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB9_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB9_4
; GCN-NEXT:  .LBB9_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB9_3: ; %cmp.false
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v12
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v10, v0
; GCN-NEXT:    v_or_b32_e32 v1, v8, v1
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v4, v3
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB9_2
; GCN-NEXT:  .LBB9_4: ; %cmp.true
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v8
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v4
; GCN-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; GCN-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; GCN-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; GCN-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; GCN-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v0, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v1, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v2, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v3, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_or_b32_e32 v1, v3, v2
; GCN-NEXT:    v_or_b32_e32 v2, v5, v6
; GCN-NEXT:    v_or_b32_e32 v3, v4, v7
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8f16_to_v4i32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB9_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v4, 0x200
; VI-NEXT:    v_add_f16_sdwa v5, v3, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, 0x200, v3
; VI-NEXT:    v_or_b32_e32 v3, v3, v5
; VI-NEXT:    v_add_f16_sdwa v5, v2, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v2, 0x200, v2
; VI-NEXT:    v_or_b32_e32 v2, v2, v5
; VI-NEXT:    v_add_f16_sdwa v5, v1, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v1, 0x200, v1
; VI-NEXT:    v_add_f16_sdwa v4, v0, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v0, 0x200, v0
; VI-NEXT:    v_or_b32_e32 v1, v1, v5
; VI-NEXT:    v_or_b32_e32 v0, v0, v4
; VI-NEXT:  .LBB9_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8f16_to_v4i32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    s_movk_i32 s6, 0x200
; GFX9-NEXT:    v_pk_add_f16 v3, v3, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, v2, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, v1, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v0, v0, s6 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8f16_to_v4i32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, v3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, v2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, v1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, v0 op_sel_hi:[0,1]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <8 x half> %a1 to <4 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <8 x half> %a to <4 x i32>
  br label %end

end:
  %phi = phi <4 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x i32> %phi
}

define <8 x bfloat> @bitcast_v4i32_to_v8bf16(<4 x i32> %a, i32 %b) {
; GCN-LABEL: bitcast_v4i32_to_v8bf16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v11, v3
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v9, v1
; GCN-NEXT:    v_mov_b32_e32 v8, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB10_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB10_4
; GCN-NEXT:  .LBB10_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB10_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v11
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v10
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v10
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v8
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB10_2
; GCN-NEXT:  .LBB10_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v8
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v9
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v11
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v3
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v1
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4i32_to_v8bf16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4i32_to_v8bf16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4i32_to_v8bf16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u32_e32 v3, 3, v3
; GFX11-NEXT:    v_add_nc_u32_e32 v2, 3, v2
; GFX11-NEXT:    v_add_nc_u32_e32 v1, 3, v1
; GFX11-NEXT:    v_add_nc_u32_e32 v0, 3, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <4 x i32> %a, splat (i32 3)
  %a2 = bitcast <4 x i32> %a1 to <8 x bfloat>
  br label %end

cmp.false:
  %a3 = bitcast <4 x i32> %a to <8 x bfloat>
  br label %end

end:
  %phi = phi <8 x bfloat> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x bfloat> %phi
}

define <4 x i32> @bitcast_v8bf16_to_v4i32(<8 x bfloat> %a, i32 %b) {
; GCN-LABEL: bitcast_v8bf16_to_v4i32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_mul_f32_e32 v13, 1.0, v1
; GCN-NEXT:    v_mul_f32_e32 v11, 1.0, v0
; GCN-NEXT:    v_mul_f32_e32 v12, 1.0, v3
; GCN-NEXT:    v_mul_f32_e32 v9, 1.0, v2
; GCN-NEXT:    v_mul_f32_e32 v10, 1.0, v5
; GCN-NEXT:    v_mul_f32_e32 v8, 1.0, v4
; GCN-NEXT:    v_mul_f32_e32 v5, 1.0, v7
; GCN-NEXT:    v_mul_f32_e32 v4, 1.0, v6
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB11_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB11_4
; GCN-NEXT:  .LBB11_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB11_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v13
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v2, 16, v10
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v5
; GCN-NEXT:    v_alignbit_b32 v0, v0, v11, 16
; GCN-NEXT:    v_alignbit_b32 v1, v1, v9, 16
; GCN-NEXT:    v_alignbit_b32 v2, v2, v8, 16
; GCN-NEXT:    v_alignbit_b32 v3, v3, v4, 16
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB11_2
; GCN-NEXT:  .LBB11_4: ; %cmp.true
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff0000, v11
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v13
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff0000, v9
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v12
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff0000, v8
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v10
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff0000, v4
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v5
; GCN-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GCN-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GCN-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GCN-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GCN-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_alignbit_b32 v0, v1, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v3, v2, 16
; GCN-NEXT:    v_alignbit_b32 v2, v7, v6, 16
; GCN-NEXT:    v_alignbit_b32 v3, v5, v4, 16
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8bf16_to_v4i32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB11_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v3
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_and_b32_e32 v3, 0xffff0000, v3
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v3, 16, 1
; VI-NEXT:    s_movk_i32 s6, 0x7fff
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v3
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v3
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; VI-NEXT:    v_cndmask_b32_e32 v3, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; VI-NEXT:    v_alignbit_b32 v3, v3, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v2, 0xffff0000, v2
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v2, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v2
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v2
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; VI-NEXT:    v_cndmask_b32_e32 v2, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v2
; VI-NEXT:    v_alignbit_b32 v2, v2, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v1
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v1
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v1
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_alignbit_b32 v1, v1, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v0
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v0, 0xffff0000, v0
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v0, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v0
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v0, 16, v0
; VI-NEXT:    v_alignbit_b32 v0, v0, v4, 16
; VI-NEXT:  .LBB11_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8bf16_to_v4i32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB11_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v3
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    s_movk_i32 s6, 0x7fff
; GFX9-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v3, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v3, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v3
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v3, v5, v6, vcc
; GFX9-NEXT:    s_mov_b32 s7, 0x7060302
; GFX9-NEXT:    v_perm_b32 v3, v4, v3, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v2
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v2, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v2, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v2
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v2, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v2, v4, v2, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v1
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v1, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v1, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v1
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v1, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v1, v4, v1, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v0
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v0, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v0, v4, v0, s7
; GFX9-NEXT:  .LBB11_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8bf16_to_v4i32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB11_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff0000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v4, 0x40c00000, v4 :: v_dual_lshlrev_b32 v3, 16, v3
; GFX11-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v7, v4, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v4
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v4, v4
; GFX11-NEXT:    v_bfe_u32 v9, v3, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v3
; GFX11-NEXT:    v_add3_u32 v7, v7, v4, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX11-NEXT:    v_add3_u32 v9, v9, v3, 0x7fff
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_dual_cndmask_b32 v4, v7, v8 :: v_dual_add_f32 v5, 0x40c00000, v5
; GFX11-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v3, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v11, v5, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v5
; GFX11-NEXT:    v_bfe_u32 v13, v2, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v2
; GFX11-NEXT:    v_cndmask_b32_e32 v3, v9, v10, vcc_lo
; GFX11-NEXT:    v_add3_u32 v11, v11, v5, 0x7fff
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v5, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff0000, v1
; GFX11-NEXT:    v_add3_u32 v7, v13, v2, 0x7fff
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff0000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_dual_cndmask_b32 v5, v11, v12 :: v_dual_add_f32 v6, 0x40c00000, v6
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v2, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 0x40c00000, v1 :: v_dual_lshlrev_b32 v0, 16, v0
; GFX11-NEXT:    v_perm_b32 v3, v4, v3, 0x7060302
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v9, v6, 16, 1
; GFX11-NEXT:    v_dual_cndmask_b32 v2, v7, v8 :: v_dual_add_f32 v7, 0x40c00000, v10
; GFX11-NEXT:    v_bfe_u32 v10, v1, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v6, v6
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_add3_u32 v8, v9, v6, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v9, 0x400000, v6
; GFX11-NEXT:    v_bfe_u32 v11, v7, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v7
; GFX11-NEXT:    v_perm_b32 v2, v5, v2, 0x7060302
; GFX11-NEXT:    v_add3_u32 v11, v11, v7, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v6, v8, v9, vcc_lo
; GFX11-NEXT:    v_add3_u32 v9, v10, v1, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v1, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v0, 0x40c00000, v0 :: v_dual_cndmask_b32 v1, v9, v10
; GFX11-NEXT:    v_bfe_u32 v8, v0, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v7, v7
; GFX11-NEXT:    v_or_b32_e32 v13, 0x400000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_add3_u32 v8, v8, v0, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v7, v11, v12, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v0, v0
; GFX11-NEXT:    v_perm_b32 v1, v6, v1, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v0, v8, v13, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-NEXT:    v_perm_b32 v0, v7, v0, 0x7060302
; GFX11-NEXT:  .LBB11_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x bfloat> %a, splat (bfloat 0xR40C0)
  %a2 = bitcast <8 x bfloat> %a1 to <4 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <8 x bfloat> %a to <4 x i32>
  br label %end

end:
  %phi = phi <4 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x i32> %phi
}

define <16 x i8> @bitcast_v4i32_to_v16i8(<4 x i32> %a, i32 %b) {
; GCN-LABEL: bitcast_v4i32_to_v16i8:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v12, v3
; GCN-NEXT:    v_mov_b32_e32 v8, v2
; GCN-NEXT:    v_mov_b32_e32 v16, v1
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB12_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_alignbit_b32 v3, v16, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v16, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v16, v0, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v16
; GCN-NEXT:  .LBB12_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB12_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v16, vcc, 3, v16
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_add_i32_e32 v12, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_alignbit_b32 v3, v16, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v16, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v16, v0, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v16
; GCN-NEXT:  .LBB12_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v4, v16
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4i32_to_v16i8:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v19, v1
; VI-NEXT:    v_mov_b32_e32 v18, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    ; implicit-def: $vgpr2
; VI-NEXT:    ; implicit-def: $vgpr3
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr11
; VI-NEXT:    ; implicit-def: $vgpr13
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr15
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB12_2
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB12_2: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB12_4
; VI-NEXT:  ; %bb.3: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v19, vcc, 3, v19
; VI-NEXT:    v_add_u32_e32 v18, vcc, 3, v18
; VI-NEXT:    v_add_u32_e32 v17, vcc, 3, v17
; VI-NEXT:    v_add_u32_e32 v16, vcc, 3, v16
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB12_4: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    v_mov_b32_e32 v0, v18
; VI-NEXT:    v_mov_b32_e32 v4, v19
; VI-NEXT:    v_mov_b32_e32 v8, v16
; VI-NEXT:    v_mov_b32_e32 v12, v17
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4i32_to_v16i8:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v19, v1
; GFX9-NEXT:    v_mov_b32_e32 v18, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    ; implicit-def: $vgpr2
; GFX9-NEXT:    ; implicit-def: $vgpr3
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr11
; GFX9-NEXT:    ; implicit-def: $vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr15
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB12_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB12_2: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB12_4
; GFX9-NEXT:  ; %bb.3: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v19, 3, v19
; GFX9-NEXT:    v_add_u32_e32 v18, 3, v18
; GFX9-NEXT:    v_add_u32_e32 v17, 3, v17
; GFX9-NEXT:    v_add_u32_e32 v16, 3, v16
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB12_4: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v0, v18
; GFX9-NEXT:    v_mov_b32_e32 v4, v19
; GFX9-NEXT:    v_mov_b32_e32 v8, v16
; GFX9-NEXT:    v_mov_b32_e32 v12, v17
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4i32_to_v16i8:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v17, v3 :: v_dual_mov_b32 v16, v2
; GFX11-NEXT:    v_dual_mov_b32 v19, v1 :: v_dual_mov_b32 v18, v0
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    ; implicit-def: $vgpr1
; GFX11-NEXT:    ; implicit-def: $vgpr2
; GFX11-NEXT:    ; implicit-def: $vgpr3
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr15
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execz .LBB12_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB12_2: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB12_4
; GFX11-NEXT:  ; %bb.3: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u32_e32 v19, 3, v19
; GFX11-NEXT:    v_add_nc_u32_e32 v17, 3, v17
; GFX11-NEXT:    v_add_nc_u32_e32 v16, 3, v16
; GFX11-NEXT:    v_add_nc_u32_e32 v18, 3, v18
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB12_4: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    v_mov_b32_e32 v0, v18
; GFX11-NEXT:    v_mov_b32_e32 v4, v19
; GFX11-NEXT:    v_mov_b32_e32 v8, v16
; GFX11-NEXT:    v_mov_b32_e32 v12, v17
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <4 x i32> %a, splat (i32 3)
  %a2 = bitcast <4 x i32> %a1 to <16 x i8>
  br label %end

cmp.false:
  %a3 = bitcast <4 x i32> %a to <16 x i8>
  br label %end

end:
  %phi = phi <16 x i8> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <16 x i8> %phi
}

define <4 x i32> @bitcast_v16i8_to_v4i32(<16 x i8> %a, i32 %b) {
; GCN-LABEL: bitcast_v16i8_to_v4i32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v18, v2
; GCN-NEXT:    v_mov_b32_e32 v17, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GCN-NEXT:    v_lshlrev_b32_e32 v19, 8, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v16, 24, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v20, 8, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 24, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v21, 8, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 24, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 8, v13
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 24, v15
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB13_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB13_4
; GCN-NEXT:  .LBB13_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB13_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GCN-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GCN-NEXT:    v_or_b32_e32 v0, v0, v19
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_or_b32_e32 v2, v2, v20
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v4, v4, v21
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v8, v8, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_or_b32_e32 v1, v16, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_or_b32_e32 v3, v5, v3
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_or_b32_e32 v5, v7, v6
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v8
; GCN-NEXT:    v_or_b32_e32 v7, v9, v10
; GCN-NEXT:    v_or_b32_e32 v0, v0, v1
; GCN-NEXT:    v_or_b32_e32 v1, v2, v3
; GCN-NEXT:    v_or_b32_e32 v2, v4, v5
; GCN-NEXT:    v_or_b32_e32 v3, v6, v7
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB13_2
; GCN-NEXT:  .LBB13_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v17
; GCN-NEXT:    s_movk_i32 s6, 0x300
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v18
; GCN-NEXT:    s_mov_b32 s7, 0x3000000
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v6
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v8
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v10, vcc, 3, v14
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GCN-NEXT:    v_or_b32_e32 v0, v19, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_or_b32_e32 v2, v20, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v4, v21, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v8, v11, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x300, v0
; GCN-NEXT:    v_or_b32_e32 v1, v16, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, s6, v2
; GCN-NEXT:    v_or_b32_e32 v3, v5, v3
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v4
; GCN-NEXT:    v_or_b32_e32 v5, v7, v6
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 0x300, v8
; GCN-NEXT:    v_or_b32_e32 v7, v9, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_or_b32_e32 v1, v3, v2
; GCN-NEXT:    v_or_b32_e32 v2, v5, v4
; GCN-NEXT:    v_or_b32_e32 v3, v7, v6
; GCN-NEXT:    v_add_i32_e32 v0, vcc, s7, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, s7, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x3000000, v2
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 0x3000000, v3
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v16i8_to_v4i32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v18, v2
; VI-NEXT:    v_mov_b32_e32 v17, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; VI-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; VI-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; VI-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; VI-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; VI-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; VI-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; VI-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; VI-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB13_3
; VI-NEXT:  ; %bb.1: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB13_4
; VI-NEXT:  .LBB13_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB13_3: ; %cmp.false
; VI-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr18
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr8
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr12
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr16
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB13_2
; VI-NEXT:  .LBB13_4: ; %cmp.true
; VI-NEXT:    v_add_u16_e32 v0, 3, v17
; VI-NEXT:    v_add_u16_e32 v1, 3, v18
; VI-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_mov_b32_e32 v3, 0x300
; VI-NEXT:    v_add_u16_e32 v0, 0x300, v0
; VI-NEXT:    v_add_u16_sdwa v1, v1, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v0, v1
; VI-NEXT:    v_add_u16_e32 v1, 3, v4
; VI-NEXT:    v_add_u16_e32 v2, 3, v6
; VI-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v1, 0x300, v1
; VI-NEXT:    v_add_u16_sdwa v2, v2, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v1, v2
; VI-NEXT:    v_add_u16_e32 v2, 3, v8
; VI-NEXT:    v_add_u16_e32 v4, 3, v10
; VI-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v4, v9, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v2, 0x300, v2
; VI-NEXT:    v_add_u16_sdwa v4, v4, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v2, v4
; VI-NEXT:    v_add_u16_e32 v4, 3, v12
; VI-NEXT:    v_add_u16_e32 v6, 3, v14
; VI-NEXT:    v_or_b32_sdwa v4, v7, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v5, v5, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v4, 0x300, v4
; VI-NEXT:    v_add_u16_sdwa v3, v5, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v16i8_to_v4i32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v18, v2
; GFX9-NEXT:    v_mov_b32_e32 v17, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GFX9-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; GFX9-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; GFX9-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; GFX9-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; GFX9-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; GFX9-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; GFX9-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; GFX9-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB13_3
; GFX9-NEXT:  ; %bb.1: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB13_4
; GFX9-NEXT:  .LBB13_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB13_3: ; %cmp.false
; GFX9-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr18
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr8
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr16
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB13_2
; GFX9-NEXT:  .LBB13_4: ; %cmp.true
; GFX9-NEXT:    v_add_u16_e32 v0, 3, v17
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v18
; GFX9-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    s_movk_i32 s6, 0x300
; GFX9-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v0, 0x300, v0
; GFX9-NEXT:    v_add_u16_sdwa v1, v1, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v4
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v6
; GFX9-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v1, 0x300, v1
; GFX9-NEXT:    v_add_u16_sdwa v2, v2, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v1, v1, v2
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v8
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v10
; GFX9-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v3, v9, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v2, 0x300, v2
; GFX9-NEXT:    v_add_u16_sdwa v3, v3, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v2, v2, v3
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v12
; GFX9-NEXT:    v_add_u16_e32 v4, 3, v14
; GFX9-NEXT:    v_or_b32_sdwa v3, v7, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v4, v5, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v3, 0x300, v3
; GFX9-NEXT:    v_add_u16_sdwa v4, v4, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v3, v3, v4
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v16i8_to_v4i32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v18, v2 :: v_dual_mov_b32 v17, v0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v16
; GFX11-NEXT:    v_lshlrev_b16 v16, 8, v1
; GFX11-NEXT:    v_lshlrev_b16 v19, 8, v3
; GFX11-NEXT:    v_lshlrev_b16 v20, 8, v5
; GFX11-NEXT:    v_lshlrev_b16 v5, 8, v7
; GFX11-NEXT:    v_lshlrev_b16 v7, 8, v9
; GFX11-NEXT:    v_lshlrev_b16 v9, 8, v11
; GFX11-NEXT:    v_lshlrev_b16 v11, 8, v13
; GFX11-NEXT:    v_lshlrev_b16 v13, 8, v15
; GFX11-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX11-NEXT:    s_and_saveexec_b32 s0, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB13_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB13_4
; GFX11-NEXT:  .LBB13_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB13_3: ; %cmp.false
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v16
; GFX11-NEXT:    v_or_b32_e32 v1, v1, v19
; GFX11-NEXT:    v_or_b32_e32 v2, v2, v20
; GFX11-NEXT:    v_or_b32_e32 v3, v3, v5
; GFX11-NEXT:    v_or_b32_e32 v4, v4, v7
; GFX11-NEXT:    v_or_b32_e32 v5, v6, v9
; GFX11-NEXT:    v_or_b32_e32 v6, v8, v11
; GFX11-NEXT:    v_or_b32_e32 v7, v10, v13
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    ; implicit-def: $vgpr17
; GFX11-NEXT:    ; implicit-def: $vgpr18
; GFX11-NEXT:    ; implicit-def: $vgpr4
; GFX11-NEXT:    ; implicit-def: $vgpr8
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr12
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr16
; GFX11-NEXT:    ; implicit-def: $vgpr19
; GFX11-NEXT:    ; implicit-def: $vgpr20
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB13_2
; GFX11-NEXT:  .LBB13_4: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u16 v0, v17, 3
; GFX11-NEXT:    v_add_nc_u16 v1, v18, 3
; GFX11-NEXT:    v_add_nc_u16 v2, v4, 3
; GFX11-NEXT:    v_add_nc_u16 v3, v6, 3
; GFX11-NEXT:    v_add_nc_u16 v4, v8, 3
; GFX11-NEXT:    v_add_nc_u16 v6, v10, 3
; GFX11-NEXT:    v_add_nc_u16 v8, v12, 3
; GFX11-NEXT:    v_add_nc_u16 v10, v14, 3
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GFX11-NEXT:    v_or_b32_e32 v0, v16, v0
; GFX11-NEXT:    v_or_b32_e32 v1, v19, v1
; GFX11-NEXT:    v_or_b32_e32 v2, v20, v2
; GFX11-NEXT:    v_or_b32_e32 v3, v5, v3
; GFX11-NEXT:    v_or_b32_e32 v4, v7, v4
; GFX11-NEXT:    v_or_b32_e32 v5, v9, v6
; GFX11-NEXT:    v_or_b32_e32 v6, v11, v8
; GFX11-NEXT:    v_or_b32_e32 v7, v13, v10
; GFX11-NEXT:    v_add_nc_u16 v0, 0x300, v0
; GFX11-NEXT:    v_add_nc_u16 v1, 0x300, v1
; GFX11-NEXT:    v_add_nc_u16 v2, 0x300, v2
; GFX11-NEXT:    v_add_nc_u16 v3, 0x300, v3
; GFX11-NEXT:    v_add_nc_u16 v4, 0x300, v4
; GFX11-NEXT:    v_add_nc_u16 v5, 0x300, v5
; GFX11-NEXT:    v_add_nc_u16 v6, 0x300, v6
; GFX11-NEXT:    v_add_nc_u16 v7, 0x300, v7
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <16 x i8> %a, splat (i8 3)
  %a2 = bitcast <16 x i8> %a1 to <4 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <16 x i8> %a to <4 x i32>
  br label %end

end:
  %phi = phi <4 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x i32> %phi
}

define <2 x i64> @bitcast_v4f32_to_v2i64(<4 x float> %a, i32 %b) {
; GCN-LABEL: bitcast_v4f32_to_v2i64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB14_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GCN-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GCN-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GCN-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GCN-NEXT:  .LBB14_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4f32_to_v2i64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4f32_to_v2i64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4f32_to_v2i64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_dual_add_f32 v3, 1.0, v3 :: v_dual_add_f32 v2, 1.0, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 1.0, v1 :: v_dual_add_f32 v0, 1.0, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <4 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <4 x float> %a1 to <2 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <4 x float> %a to <2 x i64>
  br label %end

end:
  %phi = phi <2 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x i64> %phi
}

define <4 x float> @bitcast_v2i64_to_v4f32(<2 x i64> %a, i32 %b) {
; GCN-LABEL: bitcast_v2i64_to_v4f32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB15_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; GCN-NEXT:  .LBB15_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2i64_to_v4f32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2i64_to_v4f32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2i64_to_v4f32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_co_u32 v2, vcc_lo, v2, 3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_co_ci_u32_e64 v3, null, 0, v3, vcc_lo
; GFX11-NEXT:    v_add_co_u32 v0, vcc_lo, v0, 3
; GFX11-NEXT:    v_add_co_ci_u32_e64 v1, null, 0, v1, vcc_lo
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <2 x i64> %a, splat (i64 3)
  %a2 = bitcast <2 x i64> %a1 to <4 x float>
  br label %end

cmp.false:
  %a3 = bitcast <2 x i64> %a to <4 x float>
  br label %end

end:
  %phi = phi <4 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x float> %phi
}

define <2 x double> @bitcast_v4f32_to_v2f64(<4 x float> %a, i32 %b) {
; GCN-LABEL: bitcast_v4f32_to_v2f64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB16_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GCN-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GCN-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GCN-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GCN-NEXT:  .LBB16_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4f32_to_v2f64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4f32_to_v2f64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4f32_to_v2f64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_dual_add_f32 v3, 1.0, v3 :: v_dual_add_f32 v2, 1.0, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 1.0, v1 :: v_dual_add_f32 v0, 1.0, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <4 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <4 x float> %a1 to <2 x double>
  br label %end

cmp.false:
  %a3 = bitcast <4 x float> %a to <2 x double>
  br label %end

end:
  %phi = phi <2 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x double> %phi
}

define <4 x float> @bitcast_v2f64_to_v4f32(<2 x double> %a, i32 %b) {
; GCN-LABEL: bitcast_v2f64_to_v4f32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB17_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GCN-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GCN-NEXT:  .LBB17_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2f64_to_v4f32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB17_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:  .LBB17_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2f64_to_v4f32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB17_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:  .LBB17_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2f64_to_v4f32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB17_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX11-NEXT:  .LBB17_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <2 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <2 x double> %a1 to <4 x float>
  br label %end

cmp.false:
  %a3 = bitcast <2 x double> %a to <4 x float>
  br label %end

end:
  %phi = phi <4 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x float> %phi
}

define <8 x i16> @bitcast_v4f32_to_v8i16(<4 x float> %a, i32 %b) {
; GCN-LABEL: bitcast_v4f32_to_v8i16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v6, v3
; GCN-NEXT:    v_mov_b32_e32 v8, v2
; GCN-NEXT:    v_mov_b32_e32 v2, v1
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB18_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_alignbit_b32 v5, v6, v8, 16
; GCN-NEXT:    v_alignbit_b32 v1, v2, v0, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v6
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v2
; GCN-NEXT:  .LBB18_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB18_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GCN-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GCN-NEXT:    v_add_f32_e32 v6, 1.0, v6
; GCN-NEXT:    v_add_f32_e32 v8, 1.0, v8
; GCN-NEXT:    v_alignbit_b32 v5, v6, v8, 16
; GCN-NEXT:    v_alignbit_b32 v1, v2, v0, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v6
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v2
; GCN-NEXT:  .LBB18_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v4, v8
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4f32_to_v8i16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4f32_to_v8i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4f32_to_v8i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_dual_add_f32 v3, 1.0, v3 :: v_dual_add_f32 v2, 1.0, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 1.0, v1 :: v_dual_add_f32 v0, 1.0, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <4 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <4 x float> %a1 to <8 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <4 x float> %a to <8 x i16>
  br label %end

end:
  %phi = phi <8 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x i16> %phi
}

define <4 x float> @bitcast_v8i16_to_v4f32(<8 x i16> %a, i32 %b) {
; GCN-LABEL: bitcast_v8i16_to_v4f32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v9, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v8, 16, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 16, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB19_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB19_4
; GCN-NEXT:  .LBB19_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB19_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v9
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v10
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v0, v8
; GCN-NEXT:    v_or_b32_e32 v1, v1, v11
; GCN-NEXT:    v_or_b32_e32 v2, v2, v5
; GCN-NEXT:    v_or_b32_e32 v3, v3, v7
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB19_2
; GCN-NEXT:  .LBB19_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v9
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v6
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v3
; GCN-NEXT:    v_or_b32_e32 v0, v8, v0
; GCN-NEXT:    v_or_b32_e32 v1, v11, v1
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v7, v3
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x30000, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 0x30000, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x30000, v2
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 0x30000, v3
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8i16_to_v4f32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB19_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v5, 3
; VI-NEXT:    v_add_u16_e32 v4, 3, v3
; VI-NEXT:    v_add_u16_sdwa v3, v3, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    v_add_u16_e32 v4, 3, v2
; VI-NEXT:    v_add_u16_sdwa v2, v2, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v4, v2
; VI-NEXT:    v_add_u16_e32 v4, 3, v1
; VI-NEXT:    v_add_u16_sdwa v1, v1, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v4, v1
; VI-NEXT:    v_add_u16_e32 v4, 3, v0
; VI-NEXT:    v_add_u16_sdwa v0, v0, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v4, v0
; VI-NEXT:  .LBB19_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8i16_to_v4f32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8i16_to_v4f32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <8 x i16> %a, splat (i16 3)
  %a2 = bitcast <8 x i16> %a1 to <4 x float>
  br label %end

cmp.false:
  %a3 = bitcast <8 x i16> %a to <4 x float>
  br label %end

end:
  %phi = phi <4 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x float> %phi
}

define <8 x half> @bitcast_v4f32_to_v8f16(<4 x float> %a, i32 %b) {
; GCN-LABEL: bitcast_v4f32_to_v8f16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v9, v3
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v11, v1
; GCN-NEXT:    v_mov_b32_e32 v8, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB20_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB20_4
; GCN-NEXT:  .LBB20_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB20_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v10
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v11
; GCN-NEXT:    v_lshrrev_b32_e32 v12, 16, v8
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v8
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB20_2
; GCN-NEXT:  .LBB20_4: ; %cmp.true
; GCN-NEXT:    v_add_f32_e32 v0, 1.0, v8
; GCN-NEXT:    v_add_f32_e32 v1, 1.0, v11
; GCN-NEXT:    v_add_f32_e32 v2, 1.0, v10
; GCN-NEXT:    v_add_f32_e32 v3, 1.0, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v8, 16, v0
; GCN-NEXT:    v_lshrrev_b32_e32 v9, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v2
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v8
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4f32_to_v8f16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4f32_to_v8f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4f32_to_v8f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_dual_add_f32 v3, 1.0, v3 :: v_dual_add_f32 v2, 1.0, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 1.0, v1 :: v_dual_add_f32 v0, 1.0, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <4 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <4 x float> %a1 to <8 x half>
  br label %end

cmp.false:
  %a3 = bitcast <4 x float> %a to <8 x half>
  br label %end

end:
  %phi = phi <8 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x half> %phi
}

define <4 x float> @bitcast_v8f16_to_v4f32(<8 x half> %a, i32 %b) {
; GCN-LABEL: bitcast_v8f16_to_v4f32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_cvt_f16_f32_e32 v12, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v10, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v11, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v8, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v9, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v6
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB21_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB21_4
; GCN-NEXT:  .LBB21_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB21_3: ; %cmp.false
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v12
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v10, v0
; GCN-NEXT:    v_or_b32_e32 v1, v8, v1
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v4, v3
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB21_2
; GCN-NEXT:  .LBB21_4: ; %cmp.true
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v8
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v4
; GCN-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; GCN-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; GCN-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; GCN-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; GCN-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v0, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v1, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v2, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v3, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_or_b32_e32 v1, v3, v2
; GCN-NEXT:    v_or_b32_e32 v2, v5, v6
; GCN-NEXT:    v_or_b32_e32 v3, v4, v7
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8f16_to_v4f32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB21_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v4, 0x200
; VI-NEXT:    v_add_f16_sdwa v5, v3, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, 0x200, v3
; VI-NEXT:    v_or_b32_e32 v3, v3, v5
; VI-NEXT:    v_add_f16_sdwa v5, v2, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v2, 0x200, v2
; VI-NEXT:    v_or_b32_e32 v2, v2, v5
; VI-NEXT:    v_add_f16_sdwa v5, v1, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v1, 0x200, v1
; VI-NEXT:    v_add_f16_sdwa v4, v0, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v0, 0x200, v0
; VI-NEXT:    v_or_b32_e32 v1, v1, v5
; VI-NEXT:    v_or_b32_e32 v0, v0, v4
; VI-NEXT:  .LBB21_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8f16_to_v4f32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    s_movk_i32 s6, 0x200
; GFX9-NEXT:    v_pk_add_f16 v3, v3, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, v2, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, v1, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v0, v0, s6 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8f16_to_v4f32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, v3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, v2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, v1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, v0 op_sel_hi:[0,1]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <8 x half> %a1 to <4 x float>
  br label %end

cmp.false:
  %a3 = bitcast <8 x half> %a to <4 x float>
  br label %end

end:
  %phi = phi <4 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x float> %phi
}

define <8 x bfloat> @bitcast_v4f32_to_v8bf16(<4 x float> %a, i32 %b) {
; GCN-LABEL: bitcast_v4f32_to_v8bf16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v11, v3
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v9, v1
; GCN-NEXT:    v_mov_b32_e32 v8, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB22_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB22_4
; GCN-NEXT:  .LBB22_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB22_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v11
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v10
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v10
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v8
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB22_2
; GCN-NEXT:  .LBB22_4: ; %cmp.true
; GCN-NEXT:    v_add_f32_e32 v0, 1.0, v8
; GCN-NEXT:    v_add_f32_e32 v1, 1.0, v9
; GCN-NEXT:    v_add_f32_e32 v2, 1.0, v10
; GCN-NEXT:    v_add_f32_e32 v3, 1.0, v11
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v3
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v1
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4f32_to_v8bf16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4f32_to_v8bf16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4f32_to_v8bf16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_dual_add_f32 v3, 1.0, v3 :: v_dual_add_f32 v2, 1.0, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 1.0, v1 :: v_dual_add_f32 v0, 1.0, v0
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <4 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <4 x float> %a1 to <8 x bfloat>
  br label %end

cmp.false:
  %a3 = bitcast <4 x float> %a to <8 x bfloat>
  br label %end

end:
  %phi = phi <8 x bfloat> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x bfloat> %phi
}

define <4 x float> @bitcast_v8bf16_to_v4f32(<8 x bfloat> %a, i32 %b) {
; GCN-LABEL: bitcast_v8bf16_to_v4f32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_mul_f32_e32 v13, 1.0, v1
; GCN-NEXT:    v_mul_f32_e32 v11, 1.0, v0
; GCN-NEXT:    v_mul_f32_e32 v12, 1.0, v3
; GCN-NEXT:    v_mul_f32_e32 v9, 1.0, v2
; GCN-NEXT:    v_mul_f32_e32 v10, 1.0, v5
; GCN-NEXT:    v_mul_f32_e32 v8, 1.0, v4
; GCN-NEXT:    v_mul_f32_e32 v5, 1.0, v7
; GCN-NEXT:    v_mul_f32_e32 v4, 1.0, v6
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB23_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB23_4
; GCN-NEXT:  .LBB23_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB23_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v13
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v2, 16, v10
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v5
; GCN-NEXT:    v_alignbit_b32 v0, v0, v11, 16
; GCN-NEXT:    v_alignbit_b32 v1, v1, v9, 16
; GCN-NEXT:    v_alignbit_b32 v2, v2, v8, 16
; GCN-NEXT:    v_alignbit_b32 v3, v3, v4, 16
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB23_2
; GCN-NEXT:  .LBB23_4: ; %cmp.true
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff0000, v11
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v13
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff0000, v9
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v12
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff0000, v8
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v10
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff0000, v4
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v5
; GCN-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GCN-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GCN-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GCN-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GCN-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_alignbit_b32 v0, v1, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v3, v2, 16
; GCN-NEXT:    v_alignbit_b32 v2, v7, v6, 16
; GCN-NEXT:    v_alignbit_b32 v3, v5, v4, 16
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8bf16_to_v4f32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB23_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v3
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_and_b32_e32 v3, 0xffff0000, v3
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v3, 16, 1
; VI-NEXT:    s_movk_i32 s6, 0x7fff
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v3
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v3
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; VI-NEXT:    v_cndmask_b32_e32 v3, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; VI-NEXT:    v_alignbit_b32 v3, v3, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v2, 0xffff0000, v2
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v2, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v2
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v2
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; VI-NEXT:    v_cndmask_b32_e32 v2, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v2
; VI-NEXT:    v_alignbit_b32 v2, v2, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v1
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v1
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v1
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_alignbit_b32 v1, v1, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v0
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v0, 0xffff0000, v0
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v0, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v0
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v0, 16, v0
; VI-NEXT:    v_alignbit_b32 v0, v0, v4, 16
; VI-NEXT:  .LBB23_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8bf16_to_v4f32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB23_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v3
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    s_movk_i32 s6, 0x7fff
; GFX9-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v3, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v3, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v3
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v3, v5, v6, vcc
; GFX9-NEXT:    s_mov_b32 s7, 0x7060302
; GFX9-NEXT:    v_perm_b32 v3, v4, v3, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v2
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v2, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v2, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v2
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v2, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v2, v4, v2, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v1
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v1, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v1, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v1
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v1, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v1, v4, v1, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v0
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v0, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v0, v4, v0, s7
; GFX9-NEXT:  .LBB23_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8bf16_to_v4f32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB23_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff0000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v4, 0x40c00000, v4 :: v_dual_lshlrev_b32 v3, 16, v3
; GFX11-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v7, v4, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v4
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v4, v4
; GFX11-NEXT:    v_bfe_u32 v9, v3, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v3
; GFX11-NEXT:    v_add3_u32 v7, v7, v4, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX11-NEXT:    v_add3_u32 v9, v9, v3, 0x7fff
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_dual_cndmask_b32 v4, v7, v8 :: v_dual_add_f32 v5, 0x40c00000, v5
; GFX11-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v3, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v11, v5, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v5
; GFX11-NEXT:    v_bfe_u32 v13, v2, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v2
; GFX11-NEXT:    v_cndmask_b32_e32 v3, v9, v10, vcc_lo
; GFX11-NEXT:    v_add3_u32 v11, v11, v5, 0x7fff
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v5, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff0000, v1
; GFX11-NEXT:    v_add3_u32 v7, v13, v2, 0x7fff
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff0000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_dual_cndmask_b32 v5, v11, v12 :: v_dual_add_f32 v6, 0x40c00000, v6
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v2, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 0x40c00000, v1 :: v_dual_lshlrev_b32 v0, 16, v0
; GFX11-NEXT:    v_perm_b32 v3, v4, v3, 0x7060302
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v9, v6, 16, 1
; GFX11-NEXT:    v_dual_cndmask_b32 v2, v7, v8 :: v_dual_add_f32 v7, 0x40c00000, v10
; GFX11-NEXT:    v_bfe_u32 v10, v1, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v6, v6
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_add3_u32 v8, v9, v6, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v9, 0x400000, v6
; GFX11-NEXT:    v_bfe_u32 v11, v7, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v7
; GFX11-NEXT:    v_perm_b32 v2, v5, v2, 0x7060302
; GFX11-NEXT:    v_add3_u32 v11, v11, v7, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v6, v8, v9, vcc_lo
; GFX11-NEXT:    v_add3_u32 v9, v10, v1, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v1, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v0, 0x40c00000, v0 :: v_dual_cndmask_b32 v1, v9, v10
; GFX11-NEXT:    v_bfe_u32 v8, v0, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v7, v7
; GFX11-NEXT:    v_or_b32_e32 v13, 0x400000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_add3_u32 v8, v8, v0, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v7, v11, v12, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v0, v0
; GFX11-NEXT:    v_perm_b32 v1, v6, v1, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v0, v8, v13, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-NEXT:    v_perm_b32 v0, v7, v0, 0x7060302
; GFX11-NEXT:  .LBB23_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x bfloat> %a, splat (bfloat 0xR40C0)
  %a2 = bitcast <8 x bfloat> %a1 to <4 x float>
  br label %end

cmp.false:
  %a3 = bitcast <8 x bfloat> %a to <4 x float>
  br label %end

end:
  %phi = phi <4 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x float> %phi
}

define <16 x i8> @bitcast_v4f32_to_v16i8(<4 x float> %a, i32 %b) {
; GCN-LABEL: bitcast_v4f32_to_v16i8:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v12, v3
; GCN-NEXT:    v_mov_b32_e32 v8, v2
; GCN-NEXT:    v_mov_b32_e32 v16, v1
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB24_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_alignbit_b32 v3, v16, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v16, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v16, v0, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v16
; GCN-NEXT:  .LBB24_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB24_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_f32_e32 v16, 1.0, v16
; GCN-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GCN-NEXT:    v_add_f32_e32 v12, 1.0, v12
; GCN-NEXT:    v_add_f32_e32 v8, 1.0, v8
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_alignbit_b32 v3, v16, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v16, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v16, v0, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v16
; GCN-NEXT:  .LBB24_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v4, v16
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v4f32_to_v16i8:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v19, v1
; VI-NEXT:    v_mov_b32_e32 v18, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    ; implicit-def: $vgpr2
; VI-NEXT:    ; implicit-def: $vgpr3
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr11
; VI-NEXT:    ; implicit-def: $vgpr13
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr15
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB24_2
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB24_2: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB24_4
; VI-NEXT:  ; %bb.3: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v19, 1.0, v19
; VI-NEXT:    v_add_f32_e32 v18, 1.0, v18
; VI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; VI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB24_4: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    v_mov_b32_e32 v0, v18
; VI-NEXT:    v_mov_b32_e32 v4, v19
; VI-NEXT:    v_mov_b32_e32 v8, v16
; VI-NEXT:    v_mov_b32_e32 v12, v17
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v4f32_to_v16i8:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v19, v1
; GFX9-NEXT:    v_mov_b32_e32 v18, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    ; implicit-def: $vgpr2
; GFX9-NEXT:    ; implicit-def: $vgpr3
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr11
; GFX9-NEXT:    ; implicit-def: $vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr15
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB24_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB24_2: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB24_4
; GFX9-NEXT:  ; %bb.3: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v19, 1.0, v19
; GFX9-NEXT:    v_add_f32_e32 v18, 1.0, v18
; GFX9-NEXT:    v_add_f32_e32 v17, 1.0, v17
; GFX9-NEXT:    v_add_f32_e32 v16, 1.0, v16
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB24_4: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v0, v18
; GFX9-NEXT:    v_mov_b32_e32 v4, v19
; GFX9-NEXT:    v_mov_b32_e32 v8, v16
; GFX9-NEXT:    v_mov_b32_e32 v12, v17
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v4f32_to_v16i8:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v17, v3 :: v_dual_mov_b32 v16, v2
; GFX11-NEXT:    v_dual_mov_b32 v19, v1 :: v_dual_mov_b32 v18, v0
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    ; implicit-def: $vgpr1
; GFX11-NEXT:    ; implicit-def: $vgpr2
; GFX11-NEXT:    ; implicit-def: $vgpr3
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr15
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execz .LBB24_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB24_2: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB24_4
; GFX11-NEXT:  ; %bb.3: ; %cmp.true
; GFX11-NEXT:    v_dual_add_f32 v19, 1.0, v19 :: v_dual_add_f32 v16, 1.0, v16
; GFX11-NEXT:    v_dual_add_f32 v17, 1.0, v17 :: v_dual_add_f32 v18, 1.0, v18
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB24_4: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    v_mov_b32_e32 v0, v18
; GFX11-NEXT:    v_mov_b32_e32 v4, v19
; GFX11-NEXT:    v_mov_b32_e32 v8, v16
; GFX11-NEXT:    v_mov_b32_e32 v12, v17
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <4 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <4 x float> %a1 to <16 x i8>
  br label %end

cmp.false:
  %a3 = bitcast <4 x float> %a to <16 x i8>
  br label %end

end:
  %phi = phi <16 x i8> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <16 x i8> %phi
}

define <4 x float> @bitcast_v16i8_to_v4f32(<16 x i8> %a, i32 %b) {
; GCN-LABEL: bitcast_v16i8_to_v4f32:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v18, v2
; GCN-NEXT:    v_mov_b32_e32 v17, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GCN-NEXT:    v_lshlrev_b32_e32 v19, 8, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v16, 24, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v20, 8, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 24, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v21, 8, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 24, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 8, v13
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 24, v15
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB25_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB25_4
; GCN-NEXT:  .LBB25_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB25_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GCN-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GCN-NEXT:    v_or_b32_e32 v0, v0, v19
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_or_b32_e32 v2, v2, v20
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v4, v4, v21
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v8, v8, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_or_b32_e32 v1, v16, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_or_b32_e32 v3, v5, v3
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_or_b32_e32 v5, v7, v6
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v8
; GCN-NEXT:    v_or_b32_e32 v7, v9, v10
; GCN-NEXT:    v_or_b32_e32 v0, v0, v1
; GCN-NEXT:    v_or_b32_e32 v1, v2, v3
; GCN-NEXT:    v_or_b32_e32 v2, v4, v5
; GCN-NEXT:    v_or_b32_e32 v3, v6, v7
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB25_2
; GCN-NEXT:  .LBB25_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v17
; GCN-NEXT:    s_movk_i32 s6, 0x300
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v18
; GCN-NEXT:    s_mov_b32 s7, 0x3000000
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v6
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v8
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v10, vcc, 3, v14
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GCN-NEXT:    v_or_b32_e32 v0, v19, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_or_b32_e32 v2, v20, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v4, v21, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v8, v11, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x300, v0
; GCN-NEXT:    v_or_b32_e32 v1, v16, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, s6, v2
; GCN-NEXT:    v_or_b32_e32 v3, v5, v3
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v4
; GCN-NEXT:    v_or_b32_e32 v5, v7, v6
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 0x300, v8
; GCN-NEXT:    v_or_b32_e32 v7, v9, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_or_b32_e32 v1, v3, v2
; GCN-NEXT:    v_or_b32_e32 v2, v5, v4
; GCN-NEXT:    v_or_b32_e32 v3, v7, v6
; GCN-NEXT:    v_add_i32_e32 v0, vcc, s7, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, s7, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x3000000, v2
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 0x3000000, v3
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v16i8_to_v4f32:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v18, v2
; VI-NEXT:    v_mov_b32_e32 v17, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; VI-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; VI-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; VI-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; VI-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; VI-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; VI-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; VI-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; VI-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB25_3
; VI-NEXT:  ; %bb.1: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB25_4
; VI-NEXT:  .LBB25_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB25_3: ; %cmp.false
; VI-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr18
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr8
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr12
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr16
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB25_2
; VI-NEXT:  .LBB25_4: ; %cmp.true
; VI-NEXT:    v_add_u16_e32 v0, 3, v17
; VI-NEXT:    v_add_u16_e32 v1, 3, v18
; VI-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_mov_b32_e32 v3, 0x300
; VI-NEXT:    v_add_u16_e32 v0, 0x300, v0
; VI-NEXT:    v_add_u16_sdwa v1, v1, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v0, v1
; VI-NEXT:    v_add_u16_e32 v1, 3, v4
; VI-NEXT:    v_add_u16_e32 v2, 3, v6
; VI-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v1, 0x300, v1
; VI-NEXT:    v_add_u16_sdwa v2, v2, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v1, v2
; VI-NEXT:    v_add_u16_e32 v2, 3, v8
; VI-NEXT:    v_add_u16_e32 v4, 3, v10
; VI-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v4, v9, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v2, 0x300, v2
; VI-NEXT:    v_add_u16_sdwa v4, v4, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v2, v4
; VI-NEXT:    v_add_u16_e32 v4, 3, v12
; VI-NEXT:    v_add_u16_e32 v6, 3, v14
; VI-NEXT:    v_or_b32_sdwa v4, v7, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v5, v5, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v4, 0x300, v4
; VI-NEXT:    v_add_u16_sdwa v3, v5, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v16i8_to_v4f32:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v18, v2
; GFX9-NEXT:    v_mov_b32_e32 v17, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GFX9-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; GFX9-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; GFX9-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; GFX9-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; GFX9-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; GFX9-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; GFX9-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; GFX9-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB25_3
; GFX9-NEXT:  ; %bb.1: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB25_4
; GFX9-NEXT:  .LBB25_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB25_3: ; %cmp.false
; GFX9-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr18
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr8
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr16
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB25_2
; GFX9-NEXT:  .LBB25_4: ; %cmp.true
; GFX9-NEXT:    v_add_u16_e32 v0, 3, v17
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v18
; GFX9-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    s_movk_i32 s6, 0x300
; GFX9-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v0, 0x300, v0
; GFX9-NEXT:    v_add_u16_sdwa v1, v1, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v4
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v6
; GFX9-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v1, 0x300, v1
; GFX9-NEXT:    v_add_u16_sdwa v2, v2, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v1, v1, v2
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v8
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v10
; GFX9-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v3, v9, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v2, 0x300, v2
; GFX9-NEXT:    v_add_u16_sdwa v3, v3, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v2, v2, v3
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v12
; GFX9-NEXT:    v_add_u16_e32 v4, 3, v14
; GFX9-NEXT:    v_or_b32_sdwa v3, v7, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v4, v5, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v3, 0x300, v3
; GFX9-NEXT:    v_add_u16_sdwa v4, v4, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v3, v3, v4
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v16i8_to_v4f32:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v18, v2 :: v_dual_mov_b32 v17, v0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v16
; GFX11-NEXT:    v_lshlrev_b16 v16, 8, v1
; GFX11-NEXT:    v_lshlrev_b16 v19, 8, v3
; GFX11-NEXT:    v_lshlrev_b16 v20, 8, v5
; GFX11-NEXT:    v_lshlrev_b16 v5, 8, v7
; GFX11-NEXT:    v_lshlrev_b16 v7, 8, v9
; GFX11-NEXT:    v_lshlrev_b16 v9, 8, v11
; GFX11-NEXT:    v_lshlrev_b16 v11, 8, v13
; GFX11-NEXT:    v_lshlrev_b16 v13, 8, v15
; GFX11-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX11-NEXT:    s_and_saveexec_b32 s0, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB25_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB25_4
; GFX11-NEXT:  .LBB25_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB25_3: ; %cmp.false
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v16
; GFX11-NEXT:    v_or_b32_e32 v1, v1, v19
; GFX11-NEXT:    v_or_b32_e32 v2, v2, v20
; GFX11-NEXT:    v_or_b32_e32 v3, v3, v5
; GFX11-NEXT:    v_or_b32_e32 v4, v4, v7
; GFX11-NEXT:    v_or_b32_e32 v5, v6, v9
; GFX11-NEXT:    v_or_b32_e32 v6, v8, v11
; GFX11-NEXT:    v_or_b32_e32 v7, v10, v13
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    ; implicit-def: $vgpr17
; GFX11-NEXT:    ; implicit-def: $vgpr18
; GFX11-NEXT:    ; implicit-def: $vgpr4
; GFX11-NEXT:    ; implicit-def: $vgpr8
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr12
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr16
; GFX11-NEXT:    ; implicit-def: $vgpr19
; GFX11-NEXT:    ; implicit-def: $vgpr20
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB25_2
; GFX11-NEXT:  .LBB25_4: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u16 v0, v17, 3
; GFX11-NEXT:    v_add_nc_u16 v1, v18, 3
; GFX11-NEXT:    v_add_nc_u16 v2, v4, 3
; GFX11-NEXT:    v_add_nc_u16 v3, v6, 3
; GFX11-NEXT:    v_add_nc_u16 v4, v8, 3
; GFX11-NEXT:    v_add_nc_u16 v6, v10, 3
; GFX11-NEXT:    v_add_nc_u16 v8, v12, 3
; GFX11-NEXT:    v_add_nc_u16 v10, v14, 3
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GFX11-NEXT:    v_or_b32_e32 v0, v16, v0
; GFX11-NEXT:    v_or_b32_e32 v1, v19, v1
; GFX11-NEXT:    v_or_b32_e32 v2, v20, v2
; GFX11-NEXT:    v_or_b32_e32 v3, v5, v3
; GFX11-NEXT:    v_or_b32_e32 v4, v7, v4
; GFX11-NEXT:    v_or_b32_e32 v5, v9, v6
; GFX11-NEXT:    v_or_b32_e32 v6, v11, v8
; GFX11-NEXT:    v_or_b32_e32 v7, v13, v10
; GFX11-NEXT:    v_add_nc_u16 v0, 0x300, v0
; GFX11-NEXT:    v_add_nc_u16 v1, 0x300, v1
; GFX11-NEXT:    v_add_nc_u16 v2, 0x300, v2
; GFX11-NEXT:    v_add_nc_u16 v3, 0x300, v3
; GFX11-NEXT:    v_add_nc_u16 v4, 0x300, v4
; GFX11-NEXT:    v_add_nc_u16 v5, 0x300, v5
; GFX11-NEXT:    v_add_nc_u16 v6, 0x300, v6
; GFX11-NEXT:    v_add_nc_u16 v7, 0x300, v7
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <16 x i8> %a, splat (i8 3)
  %a2 = bitcast <16 x i8> %a1 to <4 x float>
  br label %end

cmp.false:
  %a3 = bitcast <16 x i8> %a to <4 x float>
  br label %end

end:
  %phi = phi <4 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <4 x float> %phi
}

define <2 x double> @bitcast_v2i64_to_v2f64(<2 x i64> %a, i32 %b) {
; GCN-LABEL: bitcast_v2i64_to_v2f64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB26_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; GCN-NEXT:  .LBB26_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2i64_to_v2f64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2i64_to_v2f64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2i64_to_v2f64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_co_u32 v0, vcc_lo, v0, 3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_co_ci_u32_e64 v1, null, 0, v1, vcc_lo
; GFX11-NEXT:    v_add_co_u32 v2, vcc_lo, v2, 3
; GFX11-NEXT:    v_add_co_ci_u32_e64 v3, null, 0, v3, vcc_lo
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <2 x i64> %a, splat (i64 3)
  %a2 = bitcast <2 x i64> %a1 to <2 x double>
  br label %end

cmp.false:
  %a3 = bitcast <2 x i64> %a to <2 x double>
  br label %end

end:
  %phi = phi <2 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x double> %phi
}

define <2 x i64> @bitcast_v2f64_to_v2i64(<2 x double> %a, i32 %b) {
; GCN-LABEL: bitcast_v2f64_to_v2i64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB27_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GCN-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GCN-NEXT:  .LBB27_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2f64_to_v2i64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB27_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:  .LBB27_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2f64_to_v2i64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB27_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:  .LBB27_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2f64_to_v2i64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB27_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX11-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX11-NEXT:  .LBB27_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <2 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <2 x double> %a1 to <2 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <2 x double> %a to <2 x i64>
  br label %end

end:
  %phi = phi <2 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x i64> %phi
}

define <8 x i16> @bitcast_v2i64_to_v8i16(<2 x i64> %a, i32 %b) {
; GCN-LABEL: bitcast_v2i64_to_v8i16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v6, v3
; GCN-NEXT:    v_mov_b32_e32 v8, v2
; GCN-NEXT:    v_mov_b32_e32 v2, v1
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB28_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_alignbit_b32 v5, v6, v8, 16
; GCN-NEXT:    v_alignbit_b32 v1, v2, v0, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v6
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v2
; GCN-NEXT:  .LBB28_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB28_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_addc_u32_e32 v2, vcc, 0, v2, vcc
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; GCN-NEXT:    v_addc_u32_e32 v6, vcc, 0, v6, vcc
; GCN-NEXT:    v_alignbit_b32 v5, v6, v8, 16
; GCN-NEXT:    v_alignbit_b32 v1, v2, v0, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v6
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v2
; GCN-NEXT:  .LBB28_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v4, v8
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2i64_to_v8i16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2i64_to_v8i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2i64_to_v8i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_co_u32 v2, vcc_lo, v2, 3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_co_ci_u32_e64 v3, null, 0, v3, vcc_lo
; GFX11-NEXT:    v_add_co_u32 v0, vcc_lo, v0, 3
; GFX11-NEXT:    v_add_co_ci_u32_e64 v1, null, 0, v1, vcc_lo
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <2 x i64> %a, splat (i64 3)
  %a2 = bitcast <2 x i64> %a1 to <8 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <2 x i64> %a to <8 x i16>
  br label %end

end:
  %phi = phi <8 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x i16> %phi
}

define <2 x i64> @bitcast_v8i16_to_v2i64(<8 x i16> %a, i32 %b) {
; GCN-LABEL: bitcast_v8i16_to_v2i64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v9, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v8, 16, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 16, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB29_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB29_4
; GCN-NEXT:  .LBB29_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB29_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v9
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v10
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v0, v8
; GCN-NEXT:    v_or_b32_e32 v1, v1, v11
; GCN-NEXT:    v_or_b32_e32 v2, v2, v5
; GCN-NEXT:    v_or_b32_e32 v3, v3, v7
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB29_2
; GCN-NEXT:  .LBB29_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v9
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v6
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v3
; GCN-NEXT:    v_or_b32_e32 v0, v8, v0
; GCN-NEXT:    v_or_b32_e32 v1, v11, v1
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v7, v3
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x30000, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 0x30000, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x30000, v2
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 0x30000, v3
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8i16_to_v2i64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB29_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v5, 3
; VI-NEXT:    v_add_u16_e32 v4, 3, v3
; VI-NEXT:    v_add_u16_sdwa v3, v3, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    v_add_u16_e32 v4, 3, v2
; VI-NEXT:    v_add_u16_sdwa v2, v2, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v4, v2
; VI-NEXT:    v_add_u16_e32 v4, 3, v1
; VI-NEXT:    v_add_u16_sdwa v1, v1, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v4, v1
; VI-NEXT:    v_add_u16_e32 v4, 3, v0
; VI-NEXT:    v_add_u16_sdwa v0, v0, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v4, v0
; VI-NEXT:  .LBB29_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8i16_to_v2i64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8i16_to_v2i64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <8 x i16> %a, splat (i16 3)
  %a2 = bitcast <8 x i16> %a1 to <2 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <8 x i16> %a to <2 x i64>
  br label %end

end:
  %phi = phi <2 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x i64> %phi
}

define <8 x half> @bitcast_v2i64_to_v8f16(<2 x i64> %a, i32 %b) {
; GCN-LABEL: bitcast_v2i64_to_v8f16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v10, v3
; GCN-NEXT:    v_mov_b32_e32 v9, v2
; GCN-NEXT:    v_mov_b32_e32 v11, v1
; GCN-NEXT:    v_mov_b32_e32 v8, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB30_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB30_4
; GCN-NEXT:  .LBB30_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB30_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v10
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v11
; GCN-NEXT:    v_lshrrev_b32_e32 v12, 16, v8
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v8
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB30_2
; GCN-NEXT:  .LBB30_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v8
; GCN-NEXT:    v_addc_u32_e32 v1, vcc, 0, v11, vcc
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v9
; GCN-NEXT:    v_addc_u32_e32 v3, vcc, 0, v10, vcc
; GCN-NEXT:    v_lshrrev_b32_e32 v8, 16, v0
; GCN-NEXT:    v_lshrrev_b32_e32 v9, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v2
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v8
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2i64_to_v8f16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2i64_to_v8f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2i64_to_v8f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_co_u32 v2, vcc_lo, v2, 3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_co_ci_u32_e64 v3, null, 0, v3, vcc_lo
; GFX11-NEXT:    v_add_co_u32 v0, vcc_lo, v0, 3
; GFX11-NEXT:    v_add_co_ci_u32_e64 v1, null, 0, v1, vcc_lo
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <2 x i64> %a, splat (i64 3)
  %a2 = bitcast <2 x i64> %a1 to <8 x half>
  br label %end

cmp.false:
  %a3 = bitcast <2 x i64> %a to <8 x half>
  br label %end

end:
  %phi = phi <8 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x half> %phi
}

define <2 x i64> @bitcast_v8f16_to_v2i64(<8 x half> %a, i32 %b) {
; GCN-LABEL: bitcast_v8f16_to_v2i64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_cvt_f16_f32_e32 v12, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v10, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v11, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v8, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v9, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v6
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB31_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB31_4
; GCN-NEXT:  .LBB31_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB31_3: ; %cmp.false
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v12
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v10, v0
; GCN-NEXT:    v_or_b32_e32 v1, v8, v1
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v4, v3
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB31_2
; GCN-NEXT:  .LBB31_4: ; %cmp.true
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v8
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v4
; GCN-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; GCN-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; GCN-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; GCN-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; GCN-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v0, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v1, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v2, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v3, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_or_b32_e32 v1, v3, v2
; GCN-NEXT:    v_or_b32_e32 v2, v5, v6
; GCN-NEXT:    v_or_b32_e32 v3, v4, v7
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8f16_to_v2i64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB31_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v4, 0x200
; VI-NEXT:    v_add_f16_sdwa v5, v3, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, 0x200, v3
; VI-NEXT:    v_or_b32_e32 v3, v3, v5
; VI-NEXT:    v_add_f16_sdwa v5, v2, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v2, 0x200, v2
; VI-NEXT:    v_or_b32_e32 v2, v2, v5
; VI-NEXT:    v_add_f16_sdwa v5, v1, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v1, 0x200, v1
; VI-NEXT:    v_add_f16_sdwa v4, v0, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v0, 0x200, v0
; VI-NEXT:    v_or_b32_e32 v1, v1, v5
; VI-NEXT:    v_or_b32_e32 v0, v0, v4
; VI-NEXT:  .LBB31_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8f16_to_v2i64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    s_movk_i32 s6, 0x200
; GFX9-NEXT:    v_pk_add_f16 v3, v3, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, v2, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, v1, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v0, v0, s6 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8f16_to_v2i64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, v3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, v2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, v1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, v0 op_sel_hi:[0,1]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <8 x half> %a1 to <2 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <8 x half> %a to <2 x i64>
  br label %end

end:
  %phi = phi <2 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x i64> %phi
}

define <8 x bfloat> @bitcast_v2i64_to_v8bf16(<2 x i64> %a, i32 %b) {
; GCN-LABEL: bitcast_v2i64_to_v8bf16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v11, v3
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v9, v1
; GCN-NEXT:    v_mov_b32_e32 v8, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB32_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB32_4
; GCN-NEXT:  .LBB32_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB32_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v11
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v10
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v10
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v8
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB32_2
; GCN-NEXT:  .LBB32_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v8
; GCN-NEXT:    v_addc_u32_e32 v1, vcc, 0, v9, vcc
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v10
; GCN-NEXT:    v_addc_u32_e32 v3, vcc, 0, v11, vcc
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v3
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v1
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2i64_to_v8bf16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:  ; %bb.2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2i64_to_v8bf16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2i64_to_v8bf16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_co_u32 v2, vcc_lo, v2, 3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_co_ci_u32_e64 v3, null, 0, v3, vcc_lo
; GFX11-NEXT:    v_add_co_u32 v0, vcc_lo, v0, 3
; GFX11-NEXT:    v_add_co_ci_u32_e64 v1, null, 0, v1, vcc_lo
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <2 x i64> %a, splat (i64 3)
  %a2 = bitcast <2 x i64> %a1 to <8 x bfloat>
  br label %end

cmp.false:
  %a3 = bitcast <2 x i64> %a to <8 x bfloat>
  br label %end

end:
  %phi = phi <8 x bfloat> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x bfloat> %phi
}

define <2 x i64> @bitcast_v8bf16_to_v2i64(<8 x bfloat> %a, i32 %b) {
; GCN-LABEL: bitcast_v8bf16_to_v2i64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_mul_f32_e32 v13, 1.0, v1
; GCN-NEXT:    v_mul_f32_e32 v11, 1.0, v0
; GCN-NEXT:    v_mul_f32_e32 v12, 1.0, v3
; GCN-NEXT:    v_mul_f32_e32 v9, 1.0, v2
; GCN-NEXT:    v_mul_f32_e32 v10, 1.0, v5
; GCN-NEXT:    v_mul_f32_e32 v8, 1.0, v4
; GCN-NEXT:    v_mul_f32_e32 v5, 1.0, v7
; GCN-NEXT:    v_mul_f32_e32 v4, 1.0, v6
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB33_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB33_4
; GCN-NEXT:  .LBB33_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB33_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v13
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v2, 16, v10
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v5
; GCN-NEXT:    v_alignbit_b32 v0, v0, v11, 16
; GCN-NEXT:    v_alignbit_b32 v1, v1, v9, 16
; GCN-NEXT:    v_alignbit_b32 v2, v2, v8, 16
; GCN-NEXT:    v_alignbit_b32 v3, v3, v4, 16
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB33_2
; GCN-NEXT:  .LBB33_4: ; %cmp.true
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff0000, v11
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v13
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff0000, v9
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v12
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff0000, v8
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v10
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff0000, v4
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v5
; GCN-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GCN-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GCN-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GCN-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GCN-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_alignbit_b32 v0, v1, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v3, v2, 16
; GCN-NEXT:    v_alignbit_b32 v2, v7, v6, 16
; GCN-NEXT:    v_alignbit_b32 v3, v5, v4, 16
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8bf16_to_v2i64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB33_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v3
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_and_b32_e32 v3, 0xffff0000, v3
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v3, 16, 1
; VI-NEXT:    s_movk_i32 s6, 0x7fff
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v3
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v3
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; VI-NEXT:    v_cndmask_b32_e32 v3, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; VI-NEXT:    v_alignbit_b32 v3, v3, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v2, 0xffff0000, v2
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v2, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v2
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v2
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; VI-NEXT:    v_cndmask_b32_e32 v2, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v2
; VI-NEXT:    v_alignbit_b32 v2, v2, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v1
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v1
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v1
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_alignbit_b32 v1, v1, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v0
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v0, 0xffff0000, v0
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v0, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v0
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v0, 16, v0
; VI-NEXT:    v_alignbit_b32 v0, v0, v4, 16
; VI-NEXT:  .LBB33_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8bf16_to_v2i64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB33_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v3
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    s_movk_i32 s6, 0x7fff
; GFX9-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v3, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v3, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v3
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v3, v5, v6, vcc
; GFX9-NEXT:    s_mov_b32 s7, 0x7060302
; GFX9-NEXT:    v_perm_b32 v3, v4, v3, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v2
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v2, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v2, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v2
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v2, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v2, v4, v2, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v1
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v1, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v1, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v1
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v1, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v1, v4, v1, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v0
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v0, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v0, v4, v0, s7
; GFX9-NEXT:  .LBB33_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8bf16_to_v2i64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB33_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff0000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v4, 0x40c00000, v4 :: v_dual_lshlrev_b32 v3, 16, v3
; GFX11-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v7, v4, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v4
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v4, v4
; GFX11-NEXT:    v_bfe_u32 v9, v3, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v3
; GFX11-NEXT:    v_add3_u32 v7, v7, v4, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX11-NEXT:    v_add3_u32 v9, v9, v3, 0x7fff
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_dual_cndmask_b32 v4, v7, v8 :: v_dual_add_f32 v5, 0x40c00000, v5
; GFX11-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v3, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v11, v5, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v5
; GFX11-NEXT:    v_bfe_u32 v13, v2, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v2
; GFX11-NEXT:    v_cndmask_b32_e32 v3, v9, v10, vcc_lo
; GFX11-NEXT:    v_add3_u32 v11, v11, v5, 0x7fff
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v5, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff0000, v1
; GFX11-NEXT:    v_add3_u32 v7, v13, v2, 0x7fff
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff0000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_dual_cndmask_b32 v5, v11, v12 :: v_dual_add_f32 v6, 0x40c00000, v6
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v2, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 0x40c00000, v1 :: v_dual_lshlrev_b32 v0, 16, v0
; GFX11-NEXT:    v_perm_b32 v3, v4, v3, 0x7060302
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v9, v6, 16, 1
; GFX11-NEXT:    v_dual_cndmask_b32 v2, v7, v8 :: v_dual_add_f32 v7, 0x40c00000, v10
; GFX11-NEXT:    v_bfe_u32 v10, v1, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v6, v6
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_add3_u32 v8, v9, v6, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v9, 0x400000, v6
; GFX11-NEXT:    v_bfe_u32 v11, v7, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v7
; GFX11-NEXT:    v_perm_b32 v2, v5, v2, 0x7060302
; GFX11-NEXT:    v_add3_u32 v11, v11, v7, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v6, v8, v9, vcc_lo
; GFX11-NEXT:    v_add3_u32 v9, v10, v1, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v1, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v0, 0x40c00000, v0 :: v_dual_cndmask_b32 v1, v9, v10
; GFX11-NEXT:    v_bfe_u32 v8, v0, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v7, v7
; GFX11-NEXT:    v_or_b32_e32 v13, 0x400000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_add3_u32 v8, v8, v0, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v7, v11, v12, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v0, v0
; GFX11-NEXT:    v_perm_b32 v1, v6, v1, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v0, v8, v13, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-NEXT:    v_perm_b32 v0, v7, v0, 0x7060302
; GFX11-NEXT:  .LBB33_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x bfloat> %a, splat (bfloat 0xR40C0)
  %a2 = bitcast <8 x bfloat> %a1 to <2 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <8 x bfloat> %a to <2 x i64>
  br label %end

end:
  %phi = phi <2 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x i64> %phi
}

define <16 x i8> @bitcast_v2i64_to_v16i8(<2 x i64> %a, i32 %b) {
; GCN-LABEL: bitcast_v2i64_to_v16i8:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v12, v3
; GCN-NEXT:    v_mov_b32_e32 v8, v2
; GCN-NEXT:    v_mov_b32_e32 v16, v1
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB34_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_alignbit_b32 v3, v16, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v16, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v16, v0, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v16
; GCN-NEXT:  .LBB34_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB34_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_addc_u32_e32 v16, vcc, 0, v16, vcc
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; GCN-NEXT:    v_addc_u32_e32 v12, vcc, 0, v12, vcc
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_alignbit_b32 v3, v16, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v16, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v16, v0, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v16
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v16
; GCN-NEXT:  .LBB34_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v4, v16
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2i64_to_v16i8:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v19, v1
; VI-NEXT:    v_mov_b32_e32 v18, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    ; implicit-def: $vgpr2
; VI-NEXT:    ; implicit-def: $vgpr3
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr11
; VI-NEXT:    ; implicit-def: $vgpr13
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr15
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB34_2
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB34_2: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB34_4
; VI-NEXT:  ; %bb.3: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v18, vcc, 3, v18
; VI-NEXT:    v_addc_u32_e32 v19, vcc, 0, v19, vcc
; VI-NEXT:    v_add_u32_e32 v16, vcc, 3, v16
; VI-NEXT:    v_addc_u32_e32 v17, vcc, 0, v17, vcc
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB34_4: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    v_mov_b32_e32 v0, v18
; VI-NEXT:    v_mov_b32_e32 v4, v19
; VI-NEXT:    v_mov_b32_e32 v8, v16
; VI-NEXT:    v_mov_b32_e32 v12, v17
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2i64_to_v16i8:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v19, v1
; GFX9-NEXT:    v_mov_b32_e32 v18, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    ; implicit-def: $vgpr2
; GFX9-NEXT:    ; implicit-def: $vgpr3
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr11
; GFX9-NEXT:    ; implicit-def: $vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr15
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB34_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB34_2: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB34_4
; GFX9-NEXT:  ; %bb.3: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v18, vcc, 3, v18
; GFX9-NEXT:    v_addc_co_u32_e32 v19, vcc, 0, v19, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v16, vcc, 3, v16
; GFX9-NEXT:    v_addc_co_u32_e32 v17, vcc, 0, v17, vcc
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB34_4: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v0, v18
; GFX9-NEXT:    v_mov_b32_e32 v4, v19
; GFX9-NEXT:    v_mov_b32_e32 v8, v16
; GFX9-NEXT:    v_mov_b32_e32 v12, v17
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2i64_to_v16i8:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v17, v3 :: v_dual_mov_b32 v16, v2
; GFX11-NEXT:    v_dual_mov_b32 v19, v1 :: v_dual_mov_b32 v18, v0
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    ; implicit-def: $vgpr1
; GFX11-NEXT:    ; implicit-def: $vgpr2
; GFX11-NEXT:    ; implicit-def: $vgpr3
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr15
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execz .LBB34_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB34_2: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB34_4
; GFX11-NEXT:  ; %bb.3: ; %cmp.true
; GFX11-NEXT:    v_add_co_u32 v16, vcc_lo, v16, 3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_co_ci_u32_e64 v17, null, 0, v17, vcc_lo
; GFX11-NEXT:    v_add_co_u32 v18, vcc_lo, v18, 3
; GFX11-NEXT:    v_add_co_ci_u32_e64 v19, null, 0, v19, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB34_4: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    v_mov_b32_e32 v0, v18
; GFX11-NEXT:    v_mov_b32_e32 v4, v19
; GFX11-NEXT:    v_mov_b32_e32 v8, v16
; GFX11-NEXT:    v_mov_b32_e32 v12, v17
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <2 x i64> %a, splat (i64 3)
  %a2 = bitcast <2 x i64> %a1 to <16 x i8>
  br label %end

cmp.false:
  %a3 = bitcast <2 x i64> %a to <16 x i8>
  br label %end

end:
  %phi = phi <16 x i8> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <16 x i8> %phi
}

define <2 x i64> @bitcast_v16i8_to_v2i64(<16 x i8> %a, i32 %b) {
; GCN-LABEL: bitcast_v16i8_to_v2i64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v18, v2
; GCN-NEXT:    v_mov_b32_e32 v17, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GCN-NEXT:    v_lshlrev_b32_e32 v19, 8, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v16, 24, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v20, 8, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 24, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v21, 8, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 24, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 8, v13
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 24, v15
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB35_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB35_4
; GCN-NEXT:  .LBB35_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB35_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GCN-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GCN-NEXT:    v_or_b32_e32 v0, v0, v19
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_or_b32_e32 v2, v2, v20
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v4, v4, v21
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v8, v8, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_or_b32_e32 v1, v16, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_or_b32_e32 v3, v5, v3
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_or_b32_e32 v5, v7, v6
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v8
; GCN-NEXT:    v_or_b32_e32 v7, v9, v10
; GCN-NEXT:    v_or_b32_e32 v0, v0, v1
; GCN-NEXT:    v_or_b32_e32 v1, v2, v3
; GCN-NEXT:    v_or_b32_e32 v2, v4, v5
; GCN-NEXT:    v_or_b32_e32 v3, v6, v7
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB35_2
; GCN-NEXT:  .LBB35_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v17
; GCN-NEXT:    s_movk_i32 s6, 0x300
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v18
; GCN-NEXT:    s_mov_b32 s7, 0x3000000
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v6
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v8
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v10, vcc, 3, v14
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GCN-NEXT:    v_or_b32_e32 v0, v19, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_or_b32_e32 v2, v20, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v4, v21, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v8, v11, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x300, v0
; GCN-NEXT:    v_or_b32_e32 v1, v16, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, s6, v2
; GCN-NEXT:    v_or_b32_e32 v3, v5, v3
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v4
; GCN-NEXT:    v_or_b32_e32 v5, v7, v6
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 0x300, v8
; GCN-NEXT:    v_or_b32_e32 v7, v9, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_or_b32_e32 v1, v3, v2
; GCN-NEXT:    v_or_b32_e32 v2, v5, v4
; GCN-NEXT:    v_or_b32_e32 v3, v7, v6
; GCN-NEXT:    v_add_i32_e32 v0, vcc, s7, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, s7, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x3000000, v2
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 0x3000000, v3
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v16i8_to_v2i64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v18, v2
; VI-NEXT:    v_mov_b32_e32 v17, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; VI-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; VI-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; VI-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; VI-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; VI-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; VI-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; VI-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; VI-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB35_3
; VI-NEXT:  ; %bb.1: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB35_4
; VI-NEXT:  .LBB35_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB35_3: ; %cmp.false
; VI-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr18
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr8
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr12
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr16
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB35_2
; VI-NEXT:  .LBB35_4: ; %cmp.true
; VI-NEXT:    v_add_u16_e32 v0, 3, v17
; VI-NEXT:    v_add_u16_e32 v1, 3, v18
; VI-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_mov_b32_e32 v3, 0x300
; VI-NEXT:    v_add_u16_e32 v0, 0x300, v0
; VI-NEXT:    v_add_u16_sdwa v1, v1, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v0, v1
; VI-NEXT:    v_add_u16_e32 v1, 3, v4
; VI-NEXT:    v_add_u16_e32 v2, 3, v6
; VI-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v1, 0x300, v1
; VI-NEXT:    v_add_u16_sdwa v2, v2, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v1, v2
; VI-NEXT:    v_add_u16_e32 v2, 3, v8
; VI-NEXT:    v_add_u16_e32 v4, 3, v10
; VI-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v4, v9, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v2, 0x300, v2
; VI-NEXT:    v_add_u16_sdwa v4, v4, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v2, v4
; VI-NEXT:    v_add_u16_e32 v4, 3, v12
; VI-NEXT:    v_add_u16_e32 v6, 3, v14
; VI-NEXT:    v_or_b32_sdwa v4, v7, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v5, v5, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v4, 0x300, v4
; VI-NEXT:    v_add_u16_sdwa v3, v5, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v16i8_to_v2i64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v18, v2
; GFX9-NEXT:    v_mov_b32_e32 v17, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GFX9-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; GFX9-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; GFX9-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; GFX9-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; GFX9-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; GFX9-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; GFX9-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; GFX9-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB35_3
; GFX9-NEXT:  ; %bb.1: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB35_4
; GFX9-NEXT:  .LBB35_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB35_3: ; %cmp.false
; GFX9-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr18
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr8
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr16
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB35_2
; GFX9-NEXT:  .LBB35_4: ; %cmp.true
; GFX9-NEXT:    v_add_u16_e32 v0, 3, v17
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v18
; GFX9-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    s_movk_i32 s6, 0x300
; GFX9-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v0, 0x300, v0
; GFX9-NEXT:    v_add_u16_sdwa v1, v1, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v4
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v6
; GFX9-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v1, 0x300, v1
; GFX9-NEXT:    v_add_u16_sdwa v2, v2, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v1, v1, v2
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v8
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v10
; GFX9-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v3, v9, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v2, 0x300, v2
; GFX9-NEXT:    v_add_u16_sdwa v3, v3, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v2, v2, v3
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v12
; GFX9-NEXT:    v_add_u16_e32 v4, 3, v14
; GFX9-NEXT:    v_or_b32_sdwa v3, v7, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v4, v5, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v3, 0x300, v3
; GFX9-NEXT:    v_add_u16_sdwa v4, v4, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v3, v3, v4
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v16i8_to_v2i64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v18, v2 :: v_dual_mov_b32 v17, v0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v16
; GFX11-NEXT:    v_lshlrev_b16 v16, 8, v1
; GFX11-NEXT:    v_lshlrev_b16 v19, 8, v3
; GFX11-NEXT:    v_lshlrev_b16 v20, 8, v5
; GFX11-NEXT:    v_lshlrev_b16 v5, 8, v7
; GFX11-NEXT:    v_lshlrev_b16 v7, 8, v9
; GFX11-NEXT:    v_lshlrev_b16 v9, 8, v11
; GFX11-NEXT:    v_lshlrev_b16 v11, 8, v13
; GFX11-NEXT:    v_lshlrev_b16 v13, 8, v15
; GFX11-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX11-NEXT:    s_and_saveexec_b32 s0, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB35_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB35_4
; GFX11-NEXT:  .LBB35_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB35_3: ; %cmp.false
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v16
; GFX11-NEXT:    v_or_b32_e32 v1, v1, v19
; GFX11-NEXT:    v_or_b32_e32 v2, v2, v20
; GFX11-NEXT:    v_or_b32_e32 v3, v3, v5
; GFX11-NEXT:    v_or_b32_e32 v4, v4, v7
; GFX11-NEXT:    v_or_b32_e32 v5, v6, v9
; GFX11-NEXT:    v_or_b32_e32 v6, v8, v11
; GFX11-NEXT:    v_or_b32_e32 v7, v10, v13
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    ; implicit-def: $vgpr17
; GFX11-NEXT:    ; implicit-def: $vgpr18
; GFX11-NEXT:    ; implicit-def: $vgpr4
; GFX11-NEXT:    ; implicit-def: $vgpr8
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr12
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr16
; GFX11-NEXT:    ; implicit-def: $vgpr19
; GFX11-NEXT:    ; implicit-def: $vgpr20
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB35_2
; GFX11-NEXT:  .LBB35_4: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u16 v0, v17, 3
; GFX11-NEXT:    v_add_nc_u16 v1, v18, 3
; GFX11-NEXT:    v_add_nc_u16 v2, v4, 3
; GFX11-NEXT:    v_add_nc_u16 v3, v6, 3
; GFX11-NEXT:    v_add_nc_u16 v4, v8, 3
; GFX11-NEXT:    v_add_nc_u16 v6, v10, 3
; GFX11-NEXT:    v_add_nc_u16 v8, v12, 3
; GFX11-NEXT:    v_add_nc_u16 v10, v14, 3
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GFX11-NEXT:    v_or_b32_e32 v0, v16, v0
; GFX11-NEXT:    v_or_b32_e32 v1, v19, v1
; GFX11-NEXT:    v_or_b32_e32 v2, v20, v2
; GFX11-NEXT:    v_or_b32_e32 v3, v5, v3
; GFX11-NEXT:    v_or_b32_e32 v4, v7, v4
; GFX11-NEXT:    v_or_b32_e32 v5, v9, v6
; GFX11-NEXT:    v_or_b32_e32 v6, v11, v8
; GFX11-NEXT:    v_or_b32_e32 v7, v13, v10
; GFX11-NEXT:    v_add_nc_u16 v0, 0x300, v0
; GFX11-NEXT:    v_add_nc_u16 v1, 0x300, v1
; GFX11-NEXT:    v_add_nc_u16 v2, 0x300, v2
; GFX11-NEXT:    v_add_nc_u16 v3, 0x300, v3
; GFX11-NEXT:    v_add_nc_u16 v4, 0x300, v4
; GFX11-NEXT:    v_add_nc_u16 v5, 0x300, v5
; GFX11-NEXT:    v_add_nc_u16 v6, 0x300, v6
; GFX11-NEXT:    v_add_nc_u16 v7, 0x300, v7
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <16 x i8> %a, splat (i8 3)
  %a2 = bitcast <16 x i8> %a1 to <2 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <16 x i8> %a to <2 x i64>
  br label %end

end:
  %phi = phi <2 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x i64> %phi
}

define <8 x i16> @bitcast_v2f64_to_v8i16(<2 x double> %a, i32 %b) {
; GCN-LABEL: bitcast_v2f64_to_v8i16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v9, v3
; GCN-NEXT:    v_mov_b32_e32 v8, v2
; GCN-NEXT:    v_mov_b32_e32 v11, v1
; GCN-NEXT:    v_mov_b32_e32 v10, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB36_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_alignbit_b32 v5, v9, v8, 16
; GCN-NEXT:    v_alignbit_b32 v1, v11, v10, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v11
; GCN-NEXT:  .LBB36_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB36_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; GCN-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; GCN-NEXT:    v_alignbit_b32 v5, v9, v8, 16
; GCN-NEXT:    v_alignbit_b32 v1, v11, v10, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v11
; GCN-NEXT:  .LBB36_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v0, v10
; GCN-NEXT:    v_mov_b32_e32 v2, v11
; GCN-NEXT:    v_mov_b32_e32 v4, v8
; GCN-NEXT:    v_mov_b32_e32 v6, v9
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2f64_to_v8i16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB36_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:  .LBB36_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2f64_to_v8i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB36_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:  .LBB36_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2f64_to_v8i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB36_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX11-NEXT:  .LBB36_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <2 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <2 x double> %a1 to <8 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <2 x double> %a to <8 x i16>
  br label %end

end:
  %phi = phi <8 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x i16> %phi
}

define <2 x double> @bitcast_v8i16_to_v2f64(<8 x i16> %a, i32 %b) {
; GCN-LABEL: bitcast_v8i16_to_v2f64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v10, v2
; GCN-NEXT:    v_mov_b32_e32 v9, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v8, 16, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 16, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB37_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB37_4
; GCN-NEXT:  .LBB37_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB37_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v9
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v10
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v0, v8
; GCN-NEXT:    v_or_b32_e32 v1, v1, v11
; GCN-NEXT:    v_or_b32_e32 v2, v2, v5
; GCN-NEXT:    v_or_b32_e32 v3, v3, v7
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB37_2
; GCN-NEXT:  .LBB37_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v9
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v6
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v3
; GCN-NEXT:    v_or_b32_e32 v0, v8, v0
; GCN-NEXT:    v_or_b32_e32 v1, v11, v1
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v7, v3
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x30000, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 0x30000, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x30000, v2
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 0x30000, v3
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8i16_to_v2f64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB37_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v5, 3
; VI-NEXT:    v_add_u16_e32 v4, 3, v3
; VI-NEXT:    v_add_u16_sdwa v3, v3, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    v_add_u16_e32 v4, 3, v2
; VI-NEXT:    v_add_u16_sdwa v2, v2, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v4, v2
; VI-NEXT:    v_add_u16_e32 v4, 3, v1
; VI-NEXT:    v_add_u16_sdwa v1, v1, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v4, v1
; VI-NEXT:    v_add_u16_e32 v4, 3, v0
; VI-NEXT:    v_add_u16_sdwa v0, v0, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v4, v0
; VI-NEXT:  .LBB37_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8i16_to_v2f64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8i16_to_v2f64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <8 x i16> %a, splat (i16 3)
  %a2 = bitcast <8 x i16> %a1 to <2 x double>
  br label %end

cmp.false:
  %a3 = bitcast <8 x i16> %a to <2 x double>
  br label %end

end:
  %phi = phi <2 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x double> %phi
}

define <8 x half> @bitcast_v2f64_to_v8f16(<2 x double> %a, i32 %b) {
; GCN-LABEL: bitcast_v2f64_to_v8f16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB38_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v3
; GCN-NEXT:    v_lshrrev_b32_e32 v9, 16, v2
; GCN-NEXT:    v_lshrrev_b32_e32 v10, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v11, 16, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v8, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v10, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v11, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v9, v0
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:  .LBB38_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB38_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GCN-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GCN-NEXT:    v_lshrrev_b32_e32 v11, 16, v0
; GCN-NEXT:    v_lshrrev_b32_e32 v10, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v2
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v8, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v9, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v10, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v11, v11
; GCN-NEXT:  .LBB38_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v0, v9
; GCN-NEXT:    v_mov_b32_e32 v1, v11
; GCN-NEXT:    v_mov_b32_e32 v2, v8
; GCN-NEXT:    v_mov_b32_e32 v3, v10
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2f64_to_v8f16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB38_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:  .LBB38_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2f64_to_v8f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB38_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:  .LBB38_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2f64_to_v8f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB38_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX11-NEXT:  .LBB38_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <2 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <2 x double> %a1 to <8 x half>
  br label %end

cmp.false:
  %a3 = bitcast <2 x double> %a to <8 x half>
  br label %end

end:
  %phi = phi <8 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x half> %phi
}

define <2 x double> @bitcast_v8f16_to_v2f64(<8 x half> %a, i32 %b) {
; GCN-LABEL: bitcast_v8f16_to_v2f64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_cvt_f16_f32_e32 v12, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v10, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v11, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v8, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v9, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v6
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB39_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB39_4
; GCN-NEXT:  .LBB39_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB39_3: ; %cmp.false
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v12
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v10, v0
; GCN-NEXT:    v_or_b32_e32 v1, v8, v1
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v4, v3
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB39_2
; GCN-NEXT:  .LBB39_4: ; %cmp.true
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v8
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v4
; GCN-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; GCN-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; GCN-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; GCN-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; GCN-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v0, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v1, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v2, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v3, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_or_b32_e32 v1, v3, v2
; GCN-NEXT:    v_or_b32_e32 v2, v5, v6
; GCN-NEXT:    v_or_b32_e32 v3, v4, v7
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8f16_to_v2f64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB39_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v4, 0x200
; VI-NEXT:    v_add_f16_sdwa v5, v3, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, 0x200, v3
; VI-NEXT:    v_or_b32_e32 v3, v3, v5
; VI-NEXT:    v_add_f16_sdwa v5, v2, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v2, 0x200, v2
; VI-NEXT:    v_or_b32_e32 v2, v2, v5
; VI-NEXT:    v_add_f16_sdwa v5, v1, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v1, 0x200, v1
; VI-NEXT:    v_add_f16_sdwa v4, v0, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v0, 0x200, v0
; VI-NEXT:    v_or_b32_e32 v1, v1, v5
; VI-NEXT:    v_or_b32_e32 v0, v0, v4
; VI-NEXT:  .LBB39_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8f16_to_v2f64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    s_movk_i32 s6, 0x200
; GFX9-NEXT:    v_pk_add_f16 v3, v3, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, v2, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, v1, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v0, v0, s6 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8f16_to_v2f64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, v3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, v2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, v1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, v0 op_sel_hi:[0,1]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <8 x half> %a1 to <2 x double>
  br label %end

cmp.false:
  %a3 = bitcast <8 x half> %a to <2 x double>
  br label %end

end:
  %phi = phi <2 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x double> %phi
}

define <8 x bfloat> @bitcast_v2f64_to_v8bf16(<2 x double> %a, i32 %b) {
; GCN-LABEL: bitcast_v2f64_to_v8bf16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB40_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v3
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; GCN-NEXT:    v_and_b32_e32 v8, 0xffff0000, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 16, v1
; GCN-NEXT:    v_and_b32_e32 v10, 0xffff0000, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 16, v0
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:  .LBB40_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB40_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GCN-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v3
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; GCN-NEXT:    v_and_b32_e32 v8, 0xffff0000, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 16, v1
; GCN-NEXT:    v_and_b32_e32 v10, 0xffff0000, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 16, v0
; GCN-NEXT:  .LBB40_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v0, v11
; GCN-NEXT:    v_mov_b32_e32 v1, v10
; GCN-NEXT:    v_mov_b32_e32 v2, v9
; GCN-NEXT:    v_mov_b32_e32 v3, v8
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2f64_to_v8bf16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB40_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:  .LBB40_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2f64_to_v8bf16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB40_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:  .LBB40_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2f64_to_v8bf16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB40_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX11-NEXT:  .LBB40_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <2 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <2 x double> %a1 to <8 x bfloat>
  br label %end

cmp.false:
  %a3 = bitcast <2 x double> %a to <8 x bfloat>
  br label %end

end:
  %phi = phi <8 x bfloat> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x bfloat> %phi
}

define <2 x double> @bitcast_v8bf16_to_v2f64(<8 x bfloat> %a, i32 %b) {
; GCN-LABEL: bitcast_v8bf16_to_v2f64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_mul_f32_e32 v13, 1.0, v1
; GCN-NEXT:    v_mul_f32_e32 v11, 1.0, v0
; GCN-NEXT:    v_mul_f32_e32 v12, 1.0, v3
; GCN-NEXT:    v_mul_f32_e32 v9, 1.0, v2
; GCN-NEXT:    v_mul_f32_e32 v10, 1.0, v5
; GCN-NEXT:    v_mul_f32_e32 v8, 1.0, v4
; GCN-NEXT:    v_mul_f32_e32 v5, 1.0, v7
; GCN-NEXT:    v_mul_f32_e32 v4, 1.0, v6
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB41_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB41_4
; GCN-NEXT:  .LBB41_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB41_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v13
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v2, 16, v10
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v5
; GCN-NEXT:    v_alignbit_b32 v0, v0, v11, 16
; GCN-NEXT:    v_alignbit_b32 v1, v1, v9, 16
; GCN-NEXT:    v_alignbit_b32 v2, v2, v8, 16
; GCN-NEXT:    v_alignbit_b32 v3, v3, v4, 16
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB41_2
; GCN-NEXT:  .LBB41_4: ; %cmp.true
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff0000, v11
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v13
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff0000, v9
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v12
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff0000, v8
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v10
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff0000, v4
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v5
; GCN-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GCN-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GCN-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GCN-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GCN-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_alignbit_b32 v0, v1, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v3, v2, 16
; GCN-NEXT:    v_alignbit_b32 v2, v7, v6, 16
; GCN-NEXT:    v_alignbit_b32 v3, v5, v4, 16
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8bf16_to_v2f64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB41_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v3
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_and_b32_e32 v3, 0xffff0000, v3
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v3, 16, 1
; VI-NEXT:    s_movk_i32 s6, 0x7fff
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v3
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v3
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; VI-NEXT:    v_cndmask_b32_e32 v3, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; VI-NEXT:    v_alignbit_b32 v3, v3, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v2
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v2, 0xffff0000, v2
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v2, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v2
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v2
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; VI-NEXT:    v_cndmask_b32_e32 v2, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v2
; VI-NEXT:    v_alignbit_b32 v2, v2, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v1
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v1
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v1
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_alignbit_b32 v1, v1, v4, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v0
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_and_b32_e32 v0, 0xffff0000, v0
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v0, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v0
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v0, 16, v0
; VI-NEXT:    v_alignbit_b32 v0, v0, v4, 16
; VI-NEXT:  .LBB41_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8bf16_to_v2f64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB41_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v3
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    s_movk_i32 s6, 0x7fff
; GFX9-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v3, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v3, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v3
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v3, v5, v6, vcc
; GFX9-NEXT:    s_mov_b32 s7, 0x7060302
; GFX9-NEXT:    v_perm_b32 v3, v4, v3, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v2
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v2, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v2, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v2
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v2, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v2, v4, v2, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v1
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v1, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v1, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v1
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v1, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v1, v4, v1, s7
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v0
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v0, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; GFX9-NEXT:    v_perm_b32 v0, v4, v0, s7
; GFX9-NEXT:  .LBB41_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8bf16_to_v2f64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB41_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff0000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v4, 0x40c00000, v4 :: v_dual_lshlrev_b32 v3, 16, v3
; GFX11-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v7, v4, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v4
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v4, v4
; GFX11-NEXT:    v_bfe_u32 v9, v3, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v3
; GFX11-NEXT:    v_add3_u32 v7, v7, v4, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX11-NEXT:    v_add3_u32 v9, v9, v3, 0x7fff
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_dual_cndmask_b32 v4, v7, v8 :: v_dual_add_f32 v5, 0x40c00000, v5
; GFX11-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v3, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v11, v5, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v5
; GFX11-NEXT:    v_bfe_u32 v13, v2, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v2
; GFX11-NEXT:    v_cndmask_b32_e32 v3, v9, v10, vcc_lo
; GFX11-NEXT:    v_add3_u32 v11, v11, v5, 0x7fff
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v5, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff0000, v1
; GFX11-NEXT:    v_add3_u32 v7, v13, v2, 0x7fff
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff0000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_dual_cndmask_b32 v5, v11, v12 :: v_dual_add_f32 v6, 0x40c00000, v6
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v2, v2
; GFX11-NEXT:    v_dual_add_f32 v1, 0x40c00000, v1 :: v_dual_lshlrev_b32 v0, 16, v0
; GFX11-NEXT:    v_perm_b32 v3, v4, v3, 0x7060302
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_bfe_u32 v9, v6, 16, 1
; GFX11-NEXT:    v_dual_cndmask_b32 v2, v7, v8 :: v_dual_add_f32 v7, 0x40c00000, v10
; GFX11-NEXT:    v_bfe_u32 v10, v1, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v6, v6
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_add3_u32 v8, v9, v6, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v9, 0x400000, v6
; GFX11-NEXT:    v_bfe_u32 v11, v7, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v7
; GFX11-NEXT:    v_perm_b32 v2, v5, v2, 0x7060302
; GFX11-NEXT:    v_add3_u32 v11, v11, v7, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v6, v8, v9, vcc_lo
; GFX11-NEXT:    v_add3_u32 v9, v10, v1, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v1, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v0, 0x40c00000, v0 :: v_dual_cndmask_b32 v1, v9, v10
; GFX11-NEXT:    v_bfe_u32 v8, v0, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v7, v7
; GFX11-NEXT:    v_or_b32_e32 v13, 0x400000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_add3_u32 v8, v8, v0, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v7, v11, v12, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v0, v0
; GFX11-NEXT:    v_perm_b32 v1, v6, v1, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v0, v8, v13, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; GFX11-NEXT:    v_perm_b32 v0, v7, v0, 0x7060302
; GFX11-NEXT:  .LBB41_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x bfloat> %a, splat (bfloat 0xR40C0)
  %a2 = bitcast <8 x bfloat> %a1 to <2 x double>
  br label %end

cmp.false:
  %a3 = bitcast <8 x bfloat> %a to <2 x double>
  br label %end

end:
  %phi = phi <2 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x double> %phi
}

define <16 x i8> @bitcast_v2f64_to_v16i8(<2 x double> %a, i32 %b) {
; GCN-LABEL: bitcast_v2f64_to_v16i8:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v17, v3
; GCN-NEXT:    v_mov_b32_e32 v16, v2
; GCN-NEXT:    v_mov_b32_e32 v19, v1
; GCN-NEXT:    v_mov_b32_e32 v18, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB42_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_alignbit_b32 v11, v17, v16, 24
; GCN-NEXT:    v_alignbit_b32 v10, v17, v16, 16
; GCN-NEXT:    v_alignbit_b32 v9, v17, v16, 8
; GCN-NEXT:    v_alignbit_b32 v3, v19, v18, 24
; GCN-NEXT:    v_alignbit_b32 v2, v19, v18, 16
; GCN-NEXT:    v_alignbit_b32 v1, v19, v18, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GCN-NEXT:  .LBB42_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB42_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; GCN-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; GCN-NEXT:    v_alignbit_b32 v11, v17, v16, 24
; GCN-NEXT:    v_alignbit_b32 v10, v17, v16, 16
; GCN-NEXT:    v_alignbit_b32 v9, v17, v16, 8
; GCN-NEXT:    v_alignbit_b32 v3, v19, v18, 24
; GCN-NEXT:    v_alignbit_b32 v2, v19, v18, 16
; GCN-NEXT:    v_alignbit_b32 v1, v19, v18, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GCN-NEXT:  .LBB42_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v0, v18
; GCN-NEXT:    v_mov_b32_e32 v4, v19
; GCN-NEXT:    v_mov_b32_e32 v8, v16
; GCN-NEXT:    v_mov_b32_e32 v12, v17
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v2f64_to_v16i8:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v19, v1
; VI-NEXT:    v_mov_b32_e32 v18, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    ; implicit-def: $vgpr2
; VI-NEXT:    ; implicit-def: $vgpr3
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr11
; VI-NEXT:    ; implicit-def: $vgpr13
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr15
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB42_2
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB42_2: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB42_4
; VI-NEXT:  ; %bb.3: ; %cmp.true
; VI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; VI-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB42_4: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    v_mov_b32_e32 v0, v18
; VI-NEXT:    v_mov_b32_e32 v4, v19
; VI-NEXT:    v_mov_b32_e32 v8, v16
; VI-NEXT:    v_mov_b32_e32 v12, v17
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v2f64_to_v16i8:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v19, v1
; GFX9-NEXT:    v_mov_b32_e32 v18, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    ; implicit-def: $vgpr2
; GFX9-NEXT:    ; implicit-def: $vgpr3
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr11
; GFX9-NEXT:    ; implicit-def: $vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr15
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB42_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB42_2: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB42_4
; GFX9-NEXT:  ; %bb.3: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; GFX9-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB42_4: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v0, v18
; GFX9-NEXT:    v_mov_b32_e32 v4, v19
; GFX9-NEXT:    v_mov_b32_e32 v8, v16
; GFX9-NEXT:    v_mov_b32_e32 v12, v17
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v2f64_to_v16i8:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v17, v3 :: v_dual_mov_b32 v16, v2
; GFX11-NEXT:    v_dual_mov_b32 v19, v1 :: v_dual_mov_b32 v18, v0
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    ; implicit-def: $vgpr1
; GFX11-NEXT:    ; implicit-def: $vgpr2
; GFX11-NEXT:    ; implicit-def: $vgpr3
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr15
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execz .LBB42_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB42_2: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB42_4
; GFX11-NEXT:  ; %bb.3: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; GFX11-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB42_4: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    v_mov_b32_e32 v0, v18
; GFX11-NEXT:    v_mov_b32_e32 v4, v19
; GFX11-NEXT:    v_mov_b32_e32 v8, v16
; GFX11-NEXT:    v_mov_b32_e32 v12, v17
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <2 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <2 x double> %a1 to <16 x i8>
  br label %end

cmp.false:
  %a3 = bitcast <2 x double> %a to <16 x i8>
  br label %end

end:
  %phi = phi <16 x i8> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <16 x i8> %phi
}

define <2 x double> @bitcast_v16i8_to_v2f64(<16 x i8> %a, i32 %b) {
; GCN-LABEL: bitcast_v16i8_to_v2f64:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v18, v2
; GCN-NEXT:    v_mov_b32_e32 v17, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GCN-NEXT:    v_lshlrev_b32_e32 v19, 8, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v16, 24, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v20, 8, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 24, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v21, 8, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 24, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 8, v13
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 24, v15
; GCN-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB43_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB43_4
; GCN-NEXT:  .LBB43_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB43_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GCN-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GCN-NEXT:    v_or_b32_e32 v0, v0, v19
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_or_b32_e32 v2, v2, v20
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v4, v4, v21
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v8, v8, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_or_b32_e32 v1, v16, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_or_b32_e32 v3, v5, v3
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_or_b32_e32 v5, v7, v6
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v8
; GCN-NEXT:    v_or_b32_e32 v7, v9, v10
; GCN-NEXT:    v_or_b32_e32 v0, v0, v1
; GCN-NEXT:    v_or_b32_e32 v1, v2, v3
; GCN-NEXT:    v_or_b32_e32 v2, v4, v5
; GCN-NEXT:    v_or_b32_e32 v3, v6, v7
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB43_2
; GCN-NEXT:  .LBB43_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v17
; GCN-NEXT:    s_movk_i32 s6, 0x300
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v18
; GCN-NEXT:    s_mov_b32 s7, 0x3000000
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v6
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v8
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v10, vcc, 3, v14
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GCN-NEXT:    v_or_b32_e32 v0, v19, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_or_b32_e32 v2, v20, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v4, v21, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v8, v11, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x300, v0
; GCN-NEXT:    v_or_b32_e32 v1, v16, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, s6, v2
; GCN-NEXT:    v_or_b32_e32 v3, v5, v3
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v4
; GCN-NEXT:    v_or_b32_e32 v5, v7, v6
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 0x300, v8
; GCN-NEXT:    v_or_b32_e32 v7, v9, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_or_b32_e32 v1, v3, v2
; GCN-NEXT:    v_or_b32_e32 v2, v5, v4
; GCN-NEXT:    v_or_b32_e32 v3, v7, v6
; GCN-NEXT:    v_add_i32_e32 v0, vcc, s7, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, s7, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x3000000, v2
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 0x3000000, v3
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v16i8_to_v2f64:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v18, v2
; VI-NEXT:    v_mov_b32_e32 v17, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; VI-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; VI-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; VI-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; VI-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; VI-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; VI-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; VI-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; VI-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB43_3
; VI-NEXT:  ; %bb.1: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB43_4
; VI-NEXT:  .LBB43_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB43_3: ; %cmp.false
; VI-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr18
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr8
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr12
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr16
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB43_2
; VI-NEXT:  .LBB43_4: ; %cmp.true
; VI-NEXT:    v_add_u16_e32 v0, 3, v17
; VI-NEXT:    v_add_u16_e32 v1, 3, v18
; VI-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_mov_b32_e32 v3, 0x300
; VI-NEXT:    v_add_u16_e32 v0, 0x300, v0
; VI-NEXT:    v_add_u16_sdwa v1, v1, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v0, v1
; VI-NEXT:    v_add_u16_e32 v1, 3, v4
; VI-NEXT:    v_add_u16_e32 v2, 3, v6
; VI-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v1, 0x300, v1
; VI-NEXT:    v_add_u16_sdwa v2, v2, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v1, v2
; VI-NEXT:    v_add_u16_e32 v2, 3, v8
; VI-NEXT:    v_add_u16_e32 v4, 3, v10
; VI-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v4, v9, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v2, 0x300, v2
; VI-NEXT:    v_add_u16_sdwa v4, v4, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v2, v4
; VI-NEXT:    v_add_u16_e32 v4, 3, v12
; VI-NEXT:    v_add_u16_e32 v6, 3, v14
; VI-NEXT:    v_or_b32_sdwa v4, v7, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v5, v5, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v4, 0x300, v4
; VI-NEXT:    v_add_u16_sdwa v3, v5, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v16i8_to_v2f64:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v18, v2
; GFX9-NEXT:    v_mov_b32_e32 v17, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GFX9-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; GFX9-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; GFX9-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; GFX9-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; GFX9-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; GFX9-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; GFX9-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; GFX9-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB43_3
; GFX9-NEXT:  ; %bb.1: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB43_4
; GFX9-NEXT:  .LBB43_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB43_3: ; %cmp.false
; GFX9-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr18
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr8
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr16
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB43_2
; GFX9-NEXT:  .LBB43_4: ; %cmp.true
; GFX9-NEXT:    v_add_u16_e32 v0, 3, v17
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v18
; GFX9-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    s_movk_i32 s6, 0x300
; GFX9-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v0, 0x300, v0
; GFX9-NEXT:    v_add_u16_sdwa v1, v1, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v4
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v6
; GFX9-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v1, 0x300, v1
; GFX9-NEXT:    v_add_u16_sdwa v2, v2, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v1, v1, v2
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v8
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v10
; GFX9-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v3, v9, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v2, 0x300, v2
; GFX9-NEXT:    v_add_u16_sdwa v3, v3, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v2, v2, v3
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v12
; GFX9-NEXT:    v_add_u16_e32 v4, 3, v14
; GFX9-NEXT:    v_or_b32_sdwa v3, v7, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v4, v5, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v3, 0x300, v3
; GFX9-NEXT:    v_add_u16_sdwa v4, v4, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v3, v3, v4
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v16i8_to_v2f64:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v18, v2 :: v_dual_mov_b32 v17, v0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v16
; GFX11-NEXT:    v_lshlrev_b16 v16, 8, v1
; GFX11-NEXT:    v_lshlrev_b16 v19, 8, v3
; GFX11-NEXT:    v_lshlrev_b16 v20, 8, v5
; GFX11-NEXT:    v_lshlrev_b16 v5, 8, v7
; GFX11-NEXT:    v_lshlrev_b16 v7, 8, v9
; GFX11-NEXT:    v_lshlrev_b16 v9, 8, v11
; GFX11-NEXT:    v_lshlrev_b16 v11, 8, v13
; GFX11-NEXT:    v_lshlrev_b16 v13, 8, v15
; GFX11-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX11-NEXT:    s_and_saveexec_b32 s0, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB43_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB43_4
; GFX11-NEXT:  .LBB43_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB43_3: ; %cmp.false
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v16
; GFX11-NEXT:    v_or_b32_e32 v1, v1, v19
; GFX11-NEXT:    v_or_b32_e32 v2, v2, v20
; GFX11-NEXT:    v_or_b32_e32 v3, v3, v5
; GFX11-NEXT:    v_or_b32_e32 v4, v4, v7
; GFX11-NEXT:    v_or_b32_e32 v5, v6, v9
; GFX11-NEXT:    v_or_b32_e32 v6, v8, v11
; GFX11-NEXT:    v_or_b32_e32 v7, v10, v13
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    ; implicit-def: $vgpr17
; GFX11-NEXT:    ; implicit-def: $vgpr18
; GFX11-NEXT:    ; implicit-def: $vgpr4
; GFX11-NEXT:    ; implicit-def: $vgpr8
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr12
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr16
; GFX11-NEXT:    ; implicit-def: $vgpr19
; GFX11-NEXT:    ; implicit-def: $vgpr20
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB43_2
; GFX11-NEXT:  .LBB43_4: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u16 v0, v17, 3
; GFX11-NEXT:    v_add_nc_u16 v1, v18, 3
; GFX11-NEXT:    v_add_nc_u16 v2, v4, 3
; GFX11-NEXT:    v_add_nc_u16 v3, v6, 3
; GFX11-NEXT:    v_add_nc_u16 v4, v8, 3
; GFX11-NEXT:    v_add_nc_u16 v6, v10, 3
; GFX11-NEXT:    v_add_nc_u16 v8, v12, 3
; GFX11-NEXT:    v_add_nc_u16 v10, v14, 3
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GFX11-NEXT:    v_or_b32_e32 v0, v16, v0
; GFX11-NEXT:    v_or_b32_e32 v1, v19, v1
; GFX11-NEXT:    v_or_b32_e32 v2, v20, v2
; GFX11-NEXT:    v_or_b32_e32 v3, v5, v3
; GFX11-NEXT:    v_or_b32_e32 v4, v7, v4
; GFX11-NEXT:    v_or_b32_e32 v5, v9, v6
; GFX11-NEXT:    v_or_b32_e32 v6, v11, v8
; GFX11-NEXT:    v_or_b32_e32 v7, v13, v10
; GFX11-NEXT:    v_add_nc_u16 v0, 0x300, v0
; GFX11-NEXT:    v_add_nc_u16 v1, 0x300, v1
; GFX11-NEXT:    v_add_nc_u16 v2, 0x300, v2
; GFX11-NEXT:    v_add_nc_u16 v3, 0x300, v3
; GFX11-NEXT:    v_add_nc_u16 v4, 0x300, v4
; GFX11-NEXT:    v_add_nc_u16 v5, 0x300, v5
; GFX11-NEXT:    v_add_nc_u16 v6, 0x300, v6
; GFX11-NEXT:    v_add_nc_u16 v7, 0x300, v7
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <16 x i8> %a, splat (i8 3)
  %a2 = bitcast <16 x i8> %a1 to <2 x double>
  br label %end

cmp.false:
  %a3 = bitcast <16 x i8> %a to <2 x double>
  br label %end

end:
  %phi = phi <2 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <2 x double> %phi
}

define <8 x half> @bitcast_v8i16_to_v8f16(<8 x i16> %a, i32 %b) {
; GCN-LABEL: bitcast_v8i16_to_v8f16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v16, v7
; GCN-NEXT:    v_mov_b32_e32 v9, v6
; GCN-NEXT:    v_mov_b32_e32 v10, v5
; GCN-NEXT:    v_mov_b32_e32 v11, v4
; GCN-NEXT:    v_mov_b32_e32 v12, v3
; GCN-NEXT:    v_mov_b32_e32 v13, v2
; GCN-NEXT:    v_mov_b32_e32 v14, v1
; GCN-NEXT:    v_mov_b32_e32 v15, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB44_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB44_4
; GCN-NEXT:  .LBB44_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB44_3: ; %cmp.false
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v15
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v14
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v13
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v16
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB44_2
; GCN-NEXT:  .LBB44_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v7, vcc, 3, v16
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v9
; GCN-NEXT:    v_add_i32_e32 v5, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v11
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v13
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v14
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v15
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v4
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v6
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8i16_to_v8f16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB44_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v4, 3
; VI-NEXT:    v_add_u16_sdwa v5, v0, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v6, v1, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v7, v2, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v4, v3, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_e32 v3, 3, v3
; VI-NEXT:    v_add_u16_e32 v2, 3, v2
; VI-NEXT:    v_add_u16_e32 v1, 3, v1
; VI-NEXT:    v_add_u16_e32 v0, 3, v0
; VI-NEXT:    v_or_b32_e32 v3, v3, v4
; VI-NEXT:    v_or_b32_e32 v2, v2, v7
; VI-NEXT:    v_or_b32_e32 v1, v1, v6
; VI-NEXT:    v_or_b32_e32 v0, v0, v5
; VI-NEXT:  .LBB44_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8i16_to_v8f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8i16_to_v8f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <8 x i16> %a, splat (i16 3)
  %a2 = bitcast <8 x i16> %a1 to <8 x half>
  br label %end

cmp.false:
  %a3 = bitcast <8 x i16> %a to <8 x half>
  br label %end

end:
  %phi = phi <8 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x half> %phi
}

define <8 x i16> @bitcast_v8f16_to_v8i16(<8 x half> %a, i32 %b) {
; GCN-LABEL: bitcast_v8f16_to_v8i16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_cvt_f16_f32_e32 v0, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v1, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v2, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v3, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB45_2
; GCN-NEXT:  ; %bb.1: ; %cmp.true
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v4
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v6
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v2
; GCN-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; GCN-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; GCN-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; GCN-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; GCN-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; GCN-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; GCN-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; GCN-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v1, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v0, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v3, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v2, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v8, 16, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 16, v3
; GCN-NEXT:    v_or_b32_e32 v0, v0, v1
; GCN-NEXT:    v_or_b32_e32 v4, v4, v5
; GCN-NEXT:    v_or_b32_e32 v6, v6, v8
; GCN-NEXT:    v_or_b32_e32 v2, v2, v9
; GCN-NEXT:    v_alignbit_b32 v1, v2, v1, 16
; GCN-NEXT:    v_alignbit_b32 v5, v6, v5, 16
; GCN-NEXT:  .LBB45_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8f16_to_v8i16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB45_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v5, 0x200
; VI-NEXT:    v_add_f16_e32 v4, 0x200, v0
; VI-NEXT:    v_add_f16_sdwa v0, v0, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v6, 0x200, v1
; VI-NEXT:    v_add_f16_sdwa v1, v1, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v7, 0x200, v2
; VI-NEXT:    v_add_f16_sdwa v2, v2, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v8, 0x200, v3
; VI-NEXT:    v_add_f16_sdwa v3, v3, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v8, v3
; VI-NEXT:    v_or_b32_e32 v2, v7, v2
; VI-NEXT:    v_or_b32_e32 v1, v6, v1
; VI-NEXT:    v_or_b32_e32 v0, v4, v0
; VI-NEXT:  .LBB45_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8f16_to_v8i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    s_movk_i32 s6, 0x200
; GFX9-NEXT:    v_pk_add_f16 v3, v3, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, v2, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, v1, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v0, v0, s6 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8f16_to_v8i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, v3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, v2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, v1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, v0 op_sel_hi:[0,1]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <8 x half> %a1 to <8 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <8 x half> %a to <8 x i16>
  br label %end

end:
  %phi = phi <8 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x i16> %phi
}

define <8 x bfloat> @bitcast_v8i16_to_v8bf16(<8 x i16> %a, i32 %b) {
; GCN-LABEL: bitcast_v8i16_to_v8bf16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v11, v6
; GCN-NEXT:    v_mov_b32_e32 v12, v4
; GCN-NEXT:    v_mov_b32_e32 v9, v2
; GCN-NEXT:    v_mov_b32_e32 v10, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB46_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB46_4
; GCN-NEXT:  .LBB46_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB46_3: ; %cmp.false
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v10
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v12
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v11
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB46_2
; GCN-NEXT:  .LBB46_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v11
; GCN-NEXT:    s_mov_b32 s6, 0x30000
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v9
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GCN-NEXT:    v_or_b32_e32 v0, v7, v0
; GCN-NEXT:    v_or_b32_e32 v2, v5, v2
; GCN-NEXT:    v_or_b32_e32 v3, v3, v4
; GCN-NEXT:    v_or_b32_e32 v1, v1, v6
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 0x30000, v0
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v2
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x30000, v3
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x30000, v1
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v6
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8i16_to_v8bf16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB46_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v4, 3
; VI-NEXT:    v_add_u16_sdwa v5, v0, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v6, v1, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v7, v2, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v4, v3, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_e32 v3, 3, v3
; VI-NEXT:    v_add_u16_e32 v2, 3, v2
; VI-NEXT:    v_add_u16_e32 v1, 3, v1
; VI-NEXT:    v_add_u16_e32 v0, 3, v0
; VI-NEXT:    v_or_b32_e32 v3, v3, v4
; VI-NEXT:    v_or_b32_e32 v2, v2, v7
; VI-NEXT:    v_or_b32_e32 v1, v1, v6
; VI-NEXT:    v_or_b32_e32 v0, v0, v5
; VI-NEXT:  .LBB46_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8i16_to_v8bf16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8i16_to_v8bf16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <8 x i16> %a, splat (i16 3)
  %a2 = bitcast <8 x i16> %a1 to <8 x bfloat>
  br label %end

cmp.false:
  %a3 = bitcast <8 x i16> %a to <8 x bfloat>
  br label %end

end:
  %phi = phi <8 x bfloat> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x bfloat> %phi
}

define <8 x i16> @bitcast_v8bf16_to_v8i16(<8 x bfloat> %a, i32 %b) {
; GCN-LABEL: bitcast_v8bf16_to_v8i16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_mul_f32_e32 v15, 1.0, v0
; GCN-NEXT:    v_mul_f32_e32 v14, 1.0, v1
; GCN-NEXT:    v_mul_f32_e32 v9, 1.0, v2
; GCN-NEXT:    v_mul_f32_e32 v8, 1.0, v3
; GCN-NEXT:    v_mul_f32_e32 v13, 1.0, v4
; GCN-NEXT:    v_mul_f32_e32 v12, 1.0, v5
; GCN-NEXT:    v_mul_f32_e32 v11, 1.0, v6
; GCN-NEXT:    v_mul_f32_e32 v10, 1.0, v7
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB47_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB47_4
; GCN-NEXT:  .LBB47_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB47_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v15
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v14
; GCN-NEXT:    v_lshrrev_b32_e32 v2, 16, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v8
; GCN-NEXT:    v_lshrrev_b32_e32 v4, 16, v13
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v11
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v10
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB47_2
; GCN-NEXT:  .LBB47_4: ; %cmp.true
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff0000, v15
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v14
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff0000, v13
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v12
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff0000, v11
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v10
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff0000, v9
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v8
; GCN-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GCN-NEXT:    v_add_f32_e32 v8, 0x40c00000, v4
; GCN-NEXT:    v_add_f32_e32 v4, 0x40c00000, v5
; GCN-NEXT:    v_add_f32_e32 v5, 0x40c00000, v6
; GCN-NEXT:    v_add_f32_e32 v6, 0x40c00000, v7
; GCN-NEXT:    v_lshrrev_b32_e32 v9, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v10, 16, v3
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v4
; GCN-NEXT:    v_and_b32_e32 v11, 0xffff0000, v3
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v6
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v1
; GCN-NEXT:    v_alignbit_b32 v0, v9, v0, 16
; GCN-NEXT:    v_alignbit_b32 v4, v10, v2, 16
; GCN-NEXT:    v_alignbit_b32 v6, v7, v8, 16
; GCN-NEXT:    v_alignbit_b32 v2, v3, v5, 16
; GCN-NEXT:    v_alignbit_b32 v1, v2, v1, 16
; GCN-NEXT:    v_alignbit_b32 v5, v6, v11, 16
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8bf16_to_v8i16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB47_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v0
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_and_b32_e32 v0, 0xffff0000, v0
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v0, 16, 1
; VI-NEXT:    s_movk_i32 s6, 0x7fff
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v0
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; VI-NEXT:    v_lshlrev_b32_e32 v5, 16, v1
; VI-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; VI-NEXT:    v_bfe_u32 v6, v5, 16, 1
; VI-NEXT:    v_add_u32_e32 v6, vcc, v6, v5
; VI-NEXT:    v_add_u32_e32 v6, vcc, s6, v6
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v1
; VI-NEXT:    v_or_b32_e32 v7, 0x400000, v5
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v5, v5
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_cndmask_b32_e32 v5, v6, v7, vcc
; VI-NEXT:    v_bfe_u32 v6, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v6, vcc, v6, v1
; VI-NEXT:    v_add_u32_e32 v6, vcc, s6, v6
; VI-NEXT:    v_or_b32_e32 v7, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v6, v7, vcc
; VI-NEXT:    v_lshlrev_b32_e32 v6, 16, v2
; VI-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; VI-NEXT:    v_bfe_u32 v7, v6, 16, 1
; VI-NEXT:    v_add_u32_e32 v7, vcc, v7, v6
; VI-NEXT:    v_add_u32_e32 v7, vcc, s6, v7
; VI-NEXT:    v_and_b32_e32 v2, 0xffff0000, v2
; VI-NEXT:    v_or_b32_e32 v8, 0x400000, v6
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v6, v6
; VI-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; VI-NEXT:    v_cndmask_b32_e32 v6, v7, v8, vcc
; VI-NEXT:    v_bfe_u32 v7, v2, 16, 1
; VI-NEXT:    v_add_u32_e32 v7, vcc, v7, v2
; VI-NEXT:    v_add_u32_e32 v7, vcc, s6, v7
; VI-NEXT:    v_or_b32_e32 v8, 0x400000, v2
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; VI-NEXT:    v_cndmask_b32_e32 v2, v7, v8, vcc
; VI-NEXT:    v_lshlrev_b32_e32 v7, 16, v3
; VI-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; VI-NEXT:    v_bfe_u32 v8, v7, 16, 1
; VI-NEXT:    v_add_u32_e32 v8, vcc, v8, v7
; VI-NEXT:    v_add_u32_e32 v8, vcc, s6, v8
; VI-NEXT:    v_and_b32_e32 v3, 0xffff0000, v3
; VI-NEXT:    v_or_b32_e32 v9, 0x400000, v7
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v7, v7
; VI-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; VI-NEXT:    v_cndmask_b32_e32 v7, v8, v9, vcc
; VI-NEXT:    v_bfe_u32 v8, v3, 16, 1
; VI-NEXT:    v_add_u32_e32 v8, vcc, v8, v3
; VI-NEXT:    v_add_u32_e32 v8, vcc, 0x7fff, v8
; VI-NEXT:    v_or_b32_e32 v9, 0x400000, v3
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; VI-NEXT:    v_cndmask_b32_e32 v3, v8, v9, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v0, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; VI-NEXT:    v_alignbit_b32 v3, v3, v7, 16
; VI-NEXT:    v_alignbit_b32 v2, v2, v6, 16
; VI-NEXT:    v_alignbit_b32 v1, v1, v5, 16
; VI-NEXT:    v_alignbit_b32 v0, v0, v4, 16
; VI-NEXT:  .LBB47_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8bf16_to_v8i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB47_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v0
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    s_movk_i32 s6, 0x7fff
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v0, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; GFX9-NEXT:    v_and_b32_e32 v5, 0xffff0000, v1
; GFX9-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; GFX9-NEXT:    v_bfe_u32 v6, v5, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX9-NEXT:    v_add3_u32 v6, v6, v5, s6
; GFX9-NEXT:    v_or_b32_e32 v7, 0x400000, v5
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v5, v5
; GFX9-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v5, v6, v7, vcc
; GFX9-NEXT:    v_bfe_u32 v6, v1, 16, 1
; GFX9-NEXT:    v_add3_u32 v6, v6, v1, s6
; GFX9-NEXT:    v_or_b32_e32 v7, 0x400000, v1
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v1, v6, v7, vcc
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff0000, v2
; GFX9-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GFX9-NEXT:    v_bfe_u32 v7, v6, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX9-NEXT:    v_add3_u32 v7, v7, v6, s6
; GFX9-NEXT:    v_or_b32_e32 v8, 0x400000, v6
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v6, v6
; GFX9-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v6, v7, v8, vcc
; GFX9-NEXT:    v_bfe_u32 v7, v2, 16, 1
; GFX9-NEXT:    v_add3_u32 v7, v7, v2, s6
; GFX9-NEXT:    v_or_b32_e32 v8, 0x400000, v2
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v2, v7, v8, vcc
; GFX9-NEXT:    v_and_b32_e32 v7, 0xffff0000, v3
; GFX9-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GFX9-NEXT:    v_bfe_u32 v8, v7, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX9-NEXT:    v_add3_u32 v8, v8, v7, s6
; GFX9-NEXT:    v_or_b32_e32 v9, 0x400000, v7
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v7, v7
; GFX9-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v7, v8, v9, vcc
; GFX9-NEXT:    v_bfe_u32 v8, v3, 16, 1
; GFX9-NEXT:    v_add3_u32 v8, v8, v3, s6
; GFX9-NEXT:    v_or_b32_e32 v9, 0x400000, v3
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v3, v8, v9, vcc
; GFX9-NEXT:    s_mov_b32 s6, 0x7060302
; GFX9-NEXT:    v_perm_b32 v3, v7, v3, s6
; GFX9-NEXT:    v_perm_b32 v2, v6, v2, s6
; GFX9-NEXT:    v_perm_b32 v1, v5, v1, s6
; GFX9-NEXT:    v_perm_b32 v0, v4, v0, s6
; GFX9-NEXT:  .LBB47_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8bf16_to_v8i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB47_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff0000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX11-NEXT:    v_bfe_u32 v7, v4, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v4
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v4, v4
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add3_u32 v7, v7, v4, 0x7fff
; GFX11-NEXT:    v_dual_cndmask_b32 v4, v7, v8 :: v_dual_and_b32 v5, 0xffff0000, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v5, 0x40c00000, v5 :: v_dual_lshlrev_b32 v0, 16, v0
; GFX11-NEXT:    v_dual_add_f32 v0, 0x40c00000, v0 :: v_dual_lshlrev_b32 v1, 16, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)
; GFX11-NEXT:    v_bfe_u32 v11, v5, 16, 1
; GFX11-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v5
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v5, v5
; GFX11-NEXT:    v_bfe_u32 v9, v0, 16, 1
; GFX11-NEXT:    v_add3_u32 v11, v11, v5, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff0000, v2
; GFX11-NEXT:    v_bfe_u32 v13, v1, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v1
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_dual_cndmask_b32 v5, v11, v12 :: v_dual_add_f32 v6, 0x40c00000, v6
; GFX11-NEXT:    v_add3_u32 v7, v13, v1, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v12, 0xffff0000, v3
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v1, v1
; GFX11-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX11-NEXT:    v_bfe_u32 v11, v6, 16, 1
; GFX11-NEXT:    v_add3_u32 v9, v9, v0, 0x7fff
; GFX11-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_dual_cndmask_b32 v1, v7, v8 :: v_dual_add_f32 v2, 0x40c00000, v2
; GFX11-NEXT:    v_add_f32_e32 v7, 0x40c00000, v12
; GFX11-NEXT:    v_add3_u32 v8, v11, v6, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v11, 0x400000, v6
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v6, v6
; GFX11-NEXT:    v_bfe_u32 v12, v2, 16, 1
; GFX11-NEXT:    v_bfe_u32 v13, v7, 16, 1
; GFX11-NEXT:    v_bfe_u32 v14, v3, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v15, 0x400000, v2
; GFX11-NEXT:    v_cndmask_b32_e32 v6, v8, v11, vcc_lo
; GFX11-NEXT:    v_add3_u32 v8, v12, v2, 0x7fff
; GFX11-NEXT:    v_add3_u32 v11, v13, v7, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v7
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v7, v7
; GFX11-NEXT:    v_add3_u32 v13, v14, v3, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v14, 0x400000, v3
; GFX11-NEXT:    v_perm_b32 v1, v5, v1, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v7, v11, v12, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v3, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_2)
; GFX11-NEXT:    v_cndmask_b32_e32 v3, v13, v14, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v2, v2
; GFX11-NEXT:    v_perm_b32 v3, v7, v3, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v2, v8, v15, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v0, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_perm_b32 v2, v6, v2, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v0, v9, v10, vcc_lo
; GFX11-NEXT:    v_perm_b32 v0, v4, v0, 0x7060302
; GFX11-NEXT:  .LBB47_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x bfloat> %a, splat (bfloat 0xR40C0)
  %a2 = bitcast <8 x bfloat> %a1 to <8 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <8 x bfloat> %a to <8 x i16>
  br label %end

end:
  %phi = phi <8 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x i16> %phi
}

define <16 x i8> @bitcast_v8i16_to_v16i8(<8 x i16> %a, i32 %b) {
; GCN-LABEL: bitcast_v8i16_to_v16i8:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v20, v7
; GCN-NEXT:    v_mov_b32_e32 v16, v6
; GCN-NEXT:    v_mov_b32_e32 v17, v4
; GCN-NEXT:    v_mov_b32_e32 v21, v3
; GCN-NEXT:    v_mov_b32_e32 v18, v2
; GCN-NEXT:    v_mov_b32_e32 v19, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v24, 16, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v25, 16, v21
; GCN-NEXT:    v_lshlrev_b32_e32 v22, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v23, 16, v20
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB48_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB48_4
; GCN-NEXT:  .LBB48_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB48_3: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v19
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v18
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v17
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v16
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v21
; GCN-NEXT:    v_and_b32_e32 v14, 0xffff, v20
; GCN-NEXT:    v_bfe_u32 v7, v21, 8, 8
; GCN-NEXT:    v_or_b32_e32 v0, v0, v24
; GCN-NEXT:    v_or_b32_e32 v4, v1, v25
; GCN-NEXT:    v_or_b32_e32 v8, v2, v22
; GCN-NEXT:    v_or_b32_e32 v12, v3, v23
; GCN-NEXT:    v_alignbit_b32 v3, v4, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v4, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v4, v0, 8
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_bfe_u32 v15, v20, 8, 8
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr22
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr23
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr24
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr25
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB48_2
; GCN-NEXT:  .LBB48_4: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v17
; GCN-NEXT:    s_mov_b32 s6, 0x30000
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v16
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v19
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v18
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff, v3
; GCN-NEXT:    v_or_b32_e32 v0, v22, v0
; GCN-NEXT:    v_or_b32_e32 v1, v23, v1
; GCN-NEXT:    v_or_b32_e32 v2, v24, v2
; GCN-NEXT:    v_or_b32_e32 v3, v25, v3
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; GCN-NEXT:    v_add_i32_e32 v12, vcc, s6, v1
; GCN-NEXT:    v_add_i32_e32 v0, vcc, s6, v2
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v3
; GCN-NEXT:    v_alignbit_b32 v3, v4, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v4, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v4, v0, 8
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8i16_to_v16i8:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v19, v3
; VI-NEXT:    v_mov_b32_e32 v18, v2
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v18
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v0
; VI-NEXT:    ; implicit-def: $vgpr16
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr3
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr8
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr13
; VI-NEXT:    ; implicit-def: $vgpr15
; VI-NEXT:    ; implicit-def: $vgpr11
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB48_2
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v18
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v1
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v1
; VI-NEXT:    v_lshrrev_b32_e32 v20, 8, v0
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[0:1]
; VI-NEXT:    v_mov_b32_e32 v16, v0
; VI-NEXT:    v_mov_b32_e32 v17, v1
; VI-NEXT:    v_mov_b32_e32 v8, v18
; VI-NEXT:    v_mov_b32_e32 v21, v19
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:  .LBB48_2: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB48_4
; VI-NEXT:  ; %bb.3: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v3, 3
; VI-NEXT:    v_add_u16_sdwa v6, v1, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v2, v0, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v14, v19, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_sdwa v10, v18, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_u16_e32 v17, 3, v1
; VI-NEXT:    v_lshlrev_b32_e32 v1, 16, v6
; VI-NEXT:    v_add_u16_e32 v16, 3, v0
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v2
; VI-NEXT:    v_add_u16_e32 v21, 3, v19
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_add_u16_e32 v8, 3, v18
; VI-NEXT:    v_lshlrev_b32_e32 v3, 16, v10
; VI-NEXT:    v_or_b32_e32 v1, v17, v1
; VI-NEXT:    v_or_b32_e32 v0, v16, v0
; VI-NEXT:    v_or_b32_e32 v19, v21, v4
; VI-NEXT:    v_or_b32_e32 v18, v8, v3
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[0:1]
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v18
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v1
; VI-NEXT:    v_lshrrev_b32_e32 v20, 8, v0
; VI-NEXT:    v_bfe_u32 v15, v14, 8, 8
; VI-NEXT:    v_bfe_u32 v7, v6, 8, 8
; VI-NEXT:  .LBB48_4: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    v_mov_b32_e32 v0, v16
; VI-NEXT:    v_mov_b32_e32 v1, v20
; VI-NEXT:    v_mov_b32_e32 v4, v17
; VI-NEXT:    v_mov_b32_e32 v12, v21
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8i16_to_v16i8:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v19, v1
; GFX9-NEXT:    v_mov_b32_e32 v18, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    ; implicit-def: $vgpr2
; GFX9-NEXT:    ; implicit-def: $vgpr3
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr11
; GFX9-NEXT:    ; implicit-def: $vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr15
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB48_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB48_2: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB48_4
; GFX9-NEXT:  ; %bb.3: ; %cmp.true
; GFX9-NEXT:    v_pk_add_u16 v19, v19, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v18, v18, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v17, v17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v16, v16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB48_4: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v0, v18
; GFX9-NEXT:    v_mov_b32_e32 v4, v19
; GFX9-NEXT:    v_mov_b32_e32 v8, v16
; GFX9-NEXT:    v_mov_b32_e32 v12, v17
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8i16_to_v16i8:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v17, v3 :: v_dual_mov_b32 v16, v2
; GFX11-NEXT:    v_dual_mov_b32 v19, v1 :: v_dual_mov_b32 v18, v0
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    ; implicit-def: $vgpr1
; GFX11-NEXT:    ; implicit-def: $vgpr2
; GFX11-NEXT:    ; implicit-def: $vgpr3
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr15
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execz .LBB48_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB48_2: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB48_4
; GFX11-NEXT:  ; %bb.3: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v19, v19, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v17, v17, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v16, v16, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v18, v18, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB48_4: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    v_mov_b32_e32 v0, v18
; GFX11-NEXT:    v_mov_b32_e32 v4, v19
; GFX11-NEXT:    v_mov_b32_e32 v8, v16
; GFX11-NEXT:    v_mov_b32_e32 v12, v17
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <8 x i16> %a, splat (i16 3)
  %a2 = bitcast <8 x i16> %a1 to <16 x i8>
  br label %end

cmp.false:
  %a3 = bitcast <8 x i16> %a to <16 x i8>
  br label %end

end:
  %phi = phi <16 x i8> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <16 x i8> %phi
}

define <8 x i16> @bitcast_v16i8_to_v8i16(<16 x i8> %a, i32 %b) {
; GCN-LABEL: bitcast_v16i8_to_v8i16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GCN-NEXT:    v_lshlrev_b32_e32 v20, 8, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v16, 24, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v17, 24, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v21, 8, v13
; GCN-NEXT:    v_lshlrev_b32_e32 v18, 24, v15
; GCN-NEXT:    v_lshlrev_b32_e32 v19, 24, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v22, 8, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v23, 8, v9
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB49_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v12
; GCN-NEXT:    v_and_b32_e32 v5, 0xff, v14
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_and_b32_e32 v7, 0xff, v8
; GCN-NEXT:    v_or_b32_e32 v1, v1, v20
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GCN-NEXT:    v_or_b32_e32 v4, v4, v21
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v0, v0, v22
; GCN-NEXT:    v_or_b32_e32 v7, v7, v23
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GCN-NEXT:    v_or_b32_e32 v3, v16, v3
; GCN-NEXT:    v_or_b32_e32 v2, v17, v2
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_or_b32_e32 v8, v18, v5
; GCN-NEXT:    v_or_b32_e32 v5, v19, v6
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff, v7
; GCN-NEXT:    v_or_b32_e32 v11, v1, v3
; GCN-NEXT:    v_or_b32_e32 v15, v4, v8
; GCN-NEXT:    v_or_b32_e32 v9, v0, v2
; GCN-NEXT:    v_or_b32_e32 v13, v6, v5
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_alignbit_b32 v1, v11, v2, 16
; GCN-NEXT:    v_alignbit_b32 v5, v15, v5, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v8
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr22
; GCN-NEXT:    ; implicit-def: $vgpr23
; GCN-NEXT:  .LBB49_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB49_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v8
; GCN-NEXT:    s_movk_i32 s6, 0x300
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v10
; GCN-NEXT:    s_mov_b32 s7, 0x3000000
; GCN-NEXT:    v_add_i32_e32 v5, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v7, vcc, 3, v14
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GCN-NEXT:    v_and_b32_e32 v5, 0xff, v5
; GCN-NEXT:    v_and_b32_e32 v7, 0xff, v7
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GCN-NEXT:    v_or_b32_e32 v1, v23, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_or_b32_e32 v5, v21, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_or_b32_e32 v0, v22, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GCN-NEXT:    v_or_b32_e32 v4, v20, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 0x300, v1
; GCN-NEXT:    v_or_b32_e32 v3, v19, v3
; GCN-NEXT:    v_add_i32_e32 v5, vcc, s6, v5
; GCN-NEXT:    v_or_b32_e32 v7, v18, v7
; GCN-NEXT:    v_add_i32_e32 v0, vcc, s6, v0
; GCN-NEXT:    v_or_b32_e32 v2, v17, v2
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v4
; GCN-NEXT:    v_or_b32_e32 v6, v16, v6
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_or_b32_e32 v1, v3, v1
; GCN-NEXT:    v_or_b32_e32 v3, v7, v5
; GCN-NEXT:    v_or_b32_e32 v0, v2, v0
; GCN-NEXT:    v_or_b32_e32 v2, v6, v4
; GCN-NEXT:    v_add_i32_e32 v13, vcc, s7, v1
; GCN-NEXT:    v_add_i32_e32 v15, vcc, s7, v3
; GCN-NEXT:    v_add_i32_e32 v9, vcc, s7, v0
; GCN-NEXT:    v_add_i32_e32 v11, vcc, 0x3000000, v2
; GCN-NEXT:    v_alignbit_b32 v1, v11, v9, 16
; GCN-NEXT:    v_alignbit_b32 v5, v15, v13, 16
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v11
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v15
; GCN-NEXT:  .LBB49_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v0, v9
; GCN-NEXT:    v_mov_b32_e32 v2, v11
; GCN-NEXT:    v_mov_b32_e32 v4, v13
; GCN-NEXT:    v_mov_b32_e32 v6, v15
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v16i8_to_v8i16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v18, v2
; VI-NEXT:    v_mov_b32_e32 v17, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; VI-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; VI-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; VI-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; VI-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; VI-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; VI-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; VI-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; VI-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB49_3
; VI-NEXT:  ; %bb.1: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB49_4
; VI-NEXT:  .LBB49_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB49_3: ; %cmp.false
; VI-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr18
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr8
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr12
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr16
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB49_2
; VI-NEXT:  .LBB49_4: ; %cmp.true
; VI-NEXT:    v_add_u16_e32 v0, 3, v17
; VI-NEXT:    v_add_u16_e32 v1, 3, v18
; VI-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_mov_b32_e32 v3, 0x300
; VI-NEXT:    v_add_u16_e32 v0, 0x300, v0
; VI-NEXT:    v_add_u16_sdwa v1, v1, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v0, v1
; VI-NEXT:    v_add_u16_e32 v1, 3, v4
; VI-NEXT:    v_add_u16_e32 v2, 3, v6
; VI-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v1, 0x300, v1
; VI-NEXT:    v_add_u16_sdwa v2, v2, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v1, v2
; VI-NEXT:    v_add_u16_e32 v2, 3, v8
; VI-NEXT:    v_add_u16_e32 v4, 3, v10
; VI-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v4, v9, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v2, 0x300, v2
; VI-NEXT:    v_add_u16_sdwa v4, v4, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v2, v4
; VI-NEXT:    v_add_u16_e32 v4, 3, v12
; VI-NEXT:    v_add_u16_e32 v6, 3, v14
; VI-NEXT:    v_or_b32_sdwa v4, v7, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v5, v5, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v4, 0x300, v4
; VI-NEXT:    v_add_u16_sdwa v3, v5, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v16i8_to_v8i16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v18, v2
; GFX9-NEXT:    v_mov_b32_e32 v17, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GFX9-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; GFX9-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; GFX9-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; GFX9-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; GFX9-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; GFX9-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; GFX9-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; GFX9-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB49_3
; GFX9-NEXT:  ; %bb.1: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB49_4
; GFX9-NEXT:  .LBB49_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB49_3: ; %cmp.false
; GFX9-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr18
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr8
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr16
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB49_2
; GFX9-NEXT:  .LBB49_4: ; %cmp.true
; GFX9-NEXT:    v_add_u16_e32 v0, 3, v17
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v18
; GFX9-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    s_movk_i32 s6, 0x300
; GFX9-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v0, 0x300, v0
; GFX9-NEXT:    v_add_u16_sdwa v1, v1, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v4
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v6
; GFX9-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v1, 0x300, v1
; GFX9-NEXT:    v_add_u16_sdwa v2, v2, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v1, v1, v2
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v8
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v10
; GFX9-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v3, v9, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v2, 0x300, v2
; GFX9-NEXT:    v_add_u16_sdwa v3, v3, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v2, v2, v3
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v12
; GFX9-NEXT:    v_add_u16_e32 v4, 3, v14
; GFX9-NEXT:    v_or_b32_sdwa v3, v7, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v4, v5, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v3, 0x300, v3
; GFX9-NEXT:    v_add_u16_sdwa v4, v4, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v3, v3, v4
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v16i8_to_v8i16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v18, v2 :: v_dual_mov_b32 v17, v0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v16
; GFX11-NEXT:    v_lshlrev_b16 v16, 8, v1
; GFX11-NEXT:    v_lshlrev_b16 v19, 8, v3
; GFX11-NEXT:    v_lshlrev_b16 v20, 8, v5
; GFX11-NEXT:    v_lshlrev_b16 v5, 8, v7
; GFX11-NEXT:    v_lshlrev_b16 v7, 8, v9
; GFX11-NEXT:    v_lshlrev_b16 v9, 8, v11
; GFX11-NEXT:    v_lshlrev_b16 v11, 8, v13
; GFX11-NEXT:    v_lshlrev_b16 v13, 8, v15
; GFX11-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX11-NEXT:    s_and_saveexec_b32 s0, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB49_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB49_4
; GFX11-NEXT:  .LBB49_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB49_3: ; %cmp.false
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v16
; GFX11-NEXT:    v_or_b32_e32 v1, v1, v19
; GFX11-NEXT:    v_or_b32_e32 v2, v2, v20
; GFX11-NEXT:    v_or_b32_e32 v3, v3, v5
; GFX11-NEXT:    v_or_b32_e32 v4, v4, v7
; GFX11-NEXT:    v_or_b32_e32 v5, v6, v9
; GFX11-NEXT:    v_or_b32_e32 v6, v8, v11
; GFX11-NEXT:    v_or_b32_e32 v7, v10, v13
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    ; implicit-def: $vgpr17
; GFX11-NEXT:    ; implicit-def: $vgpr18
; GFX11-NEXT:    ; implicit-def: $vgpr4
; GFX11-NEXT:    ; implicit-def: $vgpr8
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr12
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr16
; GFX11-NEXT:    ; implicit-def: $vgpr19
; GFX11-NEXT:    ; implicit-def: $vgpr20
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB49_2
; GFX11-NEXT:  .LBB49_4: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u16 v0, v17, 3
; GFX11-NEXT:    v_add_nc_u16 v1, v18, 3
; GFX11-NEXT:    v_add_nc_u16 v2, v4, 3
; GFX11-NEXT:    v_add_nc_u16 v3, v6, 3
; GFX11-NEXT:    v_add_nc_u16 v4, v8, 3
; GFX11-NEXT:    v_add_nc_u16 v6, v10, 3
; GFX11-NEXT:    v_add_nc_u16 v8, v12, 3
; GFX11-NEXT:    v_add_nc_u16 v10, v14, 3
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GFX11-NEXT:    v_or_b32_e32 v0, v16, v0
; GFX11-NEXT:    v_or_b32_e32 v1, v19, v1
; GFX11-NEXT:    v_or_b32_e32 v2, v20, v2
; GFX11-NEXT:    v_or_b32_e32 v3, v5, v3
; GFX11-NEXT:    v_or_b32_e32 v4, v7, v4
; GFX11-NEXT:    v_or_b32_e32 v5, v9, v6
; GFX11-NEXT:    v_or_b32_e32 v6, v11, v8
; GFX11-NEXT:    v_or_b32_e32 v7, v13, v10
; GFX11-NEXT:    v_add_nc_u16 v0, 0x300, v0
; GFX11-NEXT:    v_add_nc_u16 v1, 0x300, v1
; GFX11-NEXT:    v_add_nc_u16 v2, 0x300, v2
; GFX11-NEXT:    v_add_nc_u16 v3, 0x300, v3
; GFX11-NEXT:    v_add_nc_u16 v4, 0x300, v4
; GFX11-NEXT:    v_add_nc_u16 v5, 0x300, v5
; GFX11-NEXT:    v_add_nc_u16 v6, 0x300, v6
; GFX11-NEXT:    v_add_nc_u16 v7, 0x300, v7
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <16 x i8> %a, splat (i8 3)
  %a2 = bitcast <16 x i8> %a1 to <8 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <16 x i8> %a to <8 x i16>
  br label %end

end:
  %phi = phi <8 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x i16> %phi
}

define <8 x bfloat> @bitcast_v8f16_to_v8bf16(<8 x half> %a, i32 %b) {
; GCN-LABEL: bitcast_v8f16_to_v8bf16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_cvt_f16_f32_e32 v8, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v9, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v10, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v11, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v12, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v13, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v14, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v15, v7
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB50_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB50_4
; GCN-NEXT:  .LBB50_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB50_3: ; %cmp.false
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v10
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v12
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v13
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v14
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v15
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB50_2
; GCN-NEXT:  .LBB50_4: ; %cmp.true
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v15
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v14
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v13
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v8
; GCN-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; GCN-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; GCN-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; GCN-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; GCN-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v7, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v8, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v9, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v10, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v11, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v6
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v10
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v11
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8f16_to_v8bf16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB50_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v5, 0x200
; VI-NEXT:    v_add_f16_e32 v4, 0x200, v0
; VI-NEXT:    v_add_f16_sdwa v0, v0, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v6, 0x200, v1
; VI-NEXT:    v_add_f16_sdwa v1, v1, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v7, 0x200, v2
; VI-NEXT:    v_add_f16_sdwa v2, v2, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v8, 0x200, v3
; VI-NEXT:    v_add_f16_sdwa v3, v3, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v8, v3
; VI-NEXT:    v_or_b32_e32 v2, v7, v2
; VI-NEXT:    v_or_b32_e32 v1, v6, v1
; VI-NEXT:    v_or_b32_e32 v0, v4, v0
; VI-NEXT:  .LBB50_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8f16_to_v8bf16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    s_movk_i32 s6, 0x200
; GFX9-NEXT:    v_pk_add_f16 v3, v3, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, v2, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, v1, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v0, v0, s6 op_sel_hi:[1,0]
; GFX9-NEXT:  ; %bb.2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8f16_to_v8bf16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, v3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, v2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, v1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, v0 op_sel_hi:[0,1]
; GFX11-NEXT:  ; %bb.2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <8 x half> %a1 to <8 x bfloat>
  br label %end

cmp.false:
  %a3 = bitcast <8 x half> %a to <8 x bfloat>
  br label %end

end:
  %phi = phi <8 x bfloat> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x bfloat> %phi
}

define <8 x half> @bitcast_v8bf16_to_v8f16(<8 x bfloat> %a, i32 %b) {
; GCN-LABEL: bitcast_v8bf16_to_v8f16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_mul_f32_e32 v8, 1.0, v0
; GCN-NEXT:    v_mul_f32_e32 v9, 1.0, v1
; GCN-NEXT:    v_mul_f32_e32 v10, 1.0, v2
; GCN-NEXT:    v_mul_f32_e32 v11, 1.0, v3
; GCN-NEXT:    v_mul_f32_e32 v12, 1.0, v4
; GCN-NEXT:    v_mul_f32_e32 v13, 1.0, v5
; GCN-NEXT:    v_mul_f32_e32 v14, 1.0, v6
; GCN-NEXT:    v_mul_f32_e32 v15, 1.0, v7
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB51_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB51_4
; GCN-NEXT:  .LBB51_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB51_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v8
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v9
; GCN-NEXT:    v_lshrrev_b32_e32 v2, 16, v10
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v11
; GCN-NEXT:    v_lshrrev_b32_e32 v4, 16, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 16, v13
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v14
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 16, v15
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v4
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v6
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB51_2
; GCN-NEXT:  .LBB51_4: ; %cmp.true
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff0000, v15
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v14
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff0000, v13
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v12
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff0000, v11
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v10
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff0000, v9
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v8
; GCN-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GCN-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GCN-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; GCN-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GCN-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GCN-NEXT:    v_lshrrev_b32_e32 v8, 16, v0
; GCN-NEXT:    v_lshrrev_b32_e32 v9, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v10, 16, v2
; GCN-NEXT:    v_lshrrev_b32_e32 v11, 16, v3
; GCN-NEXT:    v_lshrrev_b32_e32 v3, 16, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v2, 16, v5
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v6
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v11
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v9
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v8
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8bf16_to_v8f16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB51_2
; VI-NEXT:  ; %bb.1: ; %cmp.true
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v0
; VI-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; VI-NEXT:    v_bfe_u32 v5, v4, 16, 1
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v4
; VI-NEXT:    v_add_u32_e32 v5, vcc, 0x7fff, v5
; VI-NEXT:    v_and_b32_e32 v0, 0xffff0000, v0
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; VI-NEXT:    v_bfe_u32 v5, v0, 16, 1
; VI-NEXT:    s_movk_i32 s6, 0x7fff
; VI-NEXT:    v_add_u32_e32 v5, vcc, v5, v0
; VI-NEXT:    v_add_u32_e32 v5, vcc, s6, v5
; VI-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; VI-NEXT:    v_lshlrev_b32_e32 v5, 16, v1
; VI-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; VI-NEXT:    v_bfe_u32 v6, v5, 16, 1
; VI-NEXT:    v_add_u32_e32 v6, vcc, v6, v5
; VI-NEXT:    v_add_u32_e32 v6, vcc, s6, v6
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v1
; VI-NEXT:    v_or_b32_e32 v7, 0x400000, v5
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v5, v5
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_cndmask_b32_e32 v5, v6, v7, vcc
; VI-NEXT:    v_bfe_u32 v6, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v6, vcc, v6, v1
; VI-NEXT:    v_add_u32_e32 v6, vcc, s6, v6
; VI-NEXT:    v_or_b32_e32 v7, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v6, v7, vcc
; VI-NEXT:    v_lshlrev_b32_e32 v6, 16, v2
; VI-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; VI-NEXT:    v_bfe_u32 v7, v6, 16, 1
; VI-NEXT:    v_add_u32_e32 v7, vcc, v7, v6
; VI-NEXT:    v_add_u32_e32 v7, vcc, s6, v7
; VI-NEXT:    v_and_b32_e32 v2, 0xffff0000, v2
; VI-NEXT:    v_or_b32_e32 v8, 0x400000, v6
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v6, v6
; VI-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; VI-NEXT:    v_cndmask_b32_e32 v6, v7, v8, vcc
; VI-NEXT:    v_bfe_u32 v7, v2, 16, 1
; VI-NEXT:    v_add_u32_e32 v7, vcc, v7, v2
; VI-NEXT:    v_add_u32_e32 v7, vcc, s6, v7
; VI-NEXT:    v_or_b32_e32 v8, 0x400000, v2
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; VI-NEXT:    v_cndmask_b32_e32 v2, v7, v8, vcc
; VI-NEXT:    v_lshlrev_b32_e32 v7, 16, v3
; VI-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; VI-NEXT:    v_bfe_u32 v8, v7, 16, 1
; VI-NEXT:    v_add_u32_e32 v8, vcc, v8, v7
; VI-NEXT:    v_add_u32_e32 v8, vcc, s6, v8
; VI-NEXT:    v_and_b32_e32 v3, 0xffff0000, v3
; VI-NEXT:    v_or_b32_e32 v9, 0x400000, v7
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v7, v7
; VI-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; VI-NEXT:    v_cndmask_b32_e32 v7, v8, v9, vcc
; VI-NEXT:    v_bfe_u32 v8, v3, 16, 1
; VI-NEXT:    v_add_u32_e32 v8, vcc, v8, v3
; VI-NEXT:    v_add_u32_e32 v8, vcc, 0x7fff, v8
; VI-NEXT:    v_or_b32_e32 v9, 0x400000, v3
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; VI-NEXT:    v_cndmask_b32_e32 v3, v8, v9, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v0, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; VI-NEXT:    v_alignbit_b32 v3, v3, v7, 16
; VI-NEXT:    v_alignbit_b32 v2, v2, v6, 16
; VI-NEXT:    v_alignbit_b32 v1, v1, v5, 16
; VI-NEXT:    v_alignbit_b32 v0, v0, v4, 16
; VI-NEXT:  .LBB51_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8bf16_to_v8f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB51_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff0000, v0
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    s_movk_i32 s6, 0x7fff
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_bfe_u32 v5, v0, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v0, v5, v6, vcc
; GFX9-NEXT:    v_and_b32_e32 v5, 0xffff0000, v1
; GFX9-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; GFX9-NEXT:    v_bfe_u32 v6, v5, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX9-NEXT:    v_add3_u32 v6, v6, v5, s6
; GFX9-NEXT:    v_or_b32_e32 v7, 0x400000, v5
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v5, v5
; GFX9-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v5, v6, v7, vcc
; GFX9-NEXT:    v_bfe_u32 v6, v1, 16, 1
; GFX9-NEXT:    v_add3_u32 v6, v6, v1, s6
; GFX9-NEXT:    v_or_b32_e32 v7, 0x400000, v1
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; GFX9-NEXT:    v_cndmask_b32_e32 v1, v6, v7, vcc
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff0000, v2
; GFX9-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GFX9-NEXT:    v_bfe_u32 v7, v6, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX9-NEXT:    v_add3_u32 v7, v7, v6, s6
; GFX9-NEXT:    v_or_b32_e32 v8, 0x400000, v6
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v6, v6
; GFX9-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v6, v7, v8, vcc
; GFX9-NEXT:    v_bfe_u32 v7, v2, 16, 1
; GFX9-NEXT:    v_add3_u32 v7, v7, v2, s6
; GFX9-NEXT:    v_or_b32_e32 v8, 0x400000, v2
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v2, v2
; GFX9-NEXT:    v_cndmask_b32_e32 v2, v7, v8, vcc
; GFX9-NEXT:    v_and_b32_e32 v7, 0xffff0000, v3
; GFX9-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GFX9-NEXT:    v_bfe_u32 v8, v7, 16, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX9-NEXT:    v_add3_u32 v8, v8, v7, s6
; GFX9-NEXT:    v_or_b32_e32 v9, 0x400000, v7
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v7, v7
; GFX9-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v7, v8, v9, vcc
; GFX9-NEXT:    v_bfe_u32 v8, v3, 16, 1
; GFX9-NEXT:    v_add3_u32 v8, v8, v3, s6
; GFX9-NEXT:    v_or_b32_e32 v9, 0x400000, v3
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v3, v3
; GFX9-NEXT:    v_cndmask_b32_e32 v3, v8, v9, vcc
; GFX9-NEXT:    s_mov_b32 s6, 0x7060302
; GFX9-NEXT:    v_perm_b32 v3, v7, v3, s6
; GFX9-NEXT:    v_perm_b32 v2, v6, v2, s6
; GFX9-NEXT:    v_perm_b32 v1, v5, v1, s6
; GFX9-NEXT:    v_perm_b32 v0, v4, v0, s6
; GFX9-NEXT:  .LBB51_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8bf16_to_v8f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB51_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.true
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff0000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX11-NEXT:    v_bfe_u32 v7, v4, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v4
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v4, v4
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add3_u32 v7, v7, v4, 0x7fff
; GFX11-NEXT:    v_dual_cndmask_b32 v4, v7, v8 :: v_dual_and_b32 v5, 0xffff0000, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v5, 0x40c00000, v5 :: v_dual_lshlrev_b32 v0, 16, v0
; GFX11-NEXT:    v_dual_add_f32 v0, 0x40c00000, v0 :: v_dual_lshlrev_b32 v1, 16, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)
; GFX11-NEXT:    v_bfe_u32 v11, v5, 16, 1
; GFX11-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v5
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v5, v5
; GFX11-NEXT:    v_bfe_u32 v9, v0, 16, 1
; GFX11-NEXT:    v_add3_u32 v11, v11, v5, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff0000, v2
; GFX11-NEXT:    v_bfe_u32 v13, v1, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v1
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_dual_cndmask_b32 v5, v11, v12 :: v_dual_add_f32 v6, 0x40c00000, v6
; GFX11-NEXT:    v_add3_u32 v7, v13, v1, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v12, 0xffff0000, v3
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v1, v1
; GFX11-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GFX11-NEXT:    v_bfe_u32 v11, v6, 16, 1
; GFX11-NEXT:    v_add3_u32 v9, v9, v0, 0x7fff
; GFX11-NEXT:    v_add_f32_e32 v3, 0x40c00000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_dual_cndmask_b32 v1, v7, v8 :: v_dual_add_f32 v2, 0x40c00000, v2
; GFX11-NEXT:    v_add_f32_e32 v7, 0x40c00000, v12
; GFX11-NEXT:    v_add3_u32 v8, v11, v6, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v11, 0x400000, v6
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v6, v6
; GFX11-NEXT:    v_bfe_u32 v12, v2, 16, 1
; GFX11-NEXT:    v_bfe_u32 v13, v7, 16, 1
; GFX11-NEXT:    v_bfe_u32 v14, v3, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v15, 0x400000, v2
; GFX11-NEXT:    v_cndmask_b32_e32 v6, v8, v11, vcc_lo
; GFX11-NEXT:    v_add3_u32 v8, v12, v2, 0x7fff
; GFX11-NEXT:    v_add3_u32 v11, v13, v7, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v12, 0x400000, v7
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v7, v7
; GFX11-NEXT:    v_add3_u32 v13, v14, v3, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v14, 0x400000, v3
; GFX11-NEXT:    v_perm_b32 v1, v5, v1, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v7, v11, v12, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v3, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_2)
; GFX11-NEXT:    v_cndmask_b32_e32 v3, v13, v14, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v2, v2
; GFX11-NEXT:    v_perm_b32 v3, v7, v3, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v2, v8, v15, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v0, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_perm_b32 v2, v6, v2, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v0, v9, v10, vcc_lo
; GFX11-NEXT:    v_perm_b32 v0, v4, v0, 0x7060302
; GFX11-NEXT:  .LBB51_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x bfloat> %a, splat (bfloat 0xR40C0)
  %a2 = bitcast <8 x bfloat> %a1 to <8 x half>
  br label %end

cmp.false:
  %a3 = bitcast <8 x bfloat> %a to <8 x half>
  br label %end

end:
  %phi = phi <8 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x half> %phi
}

define <16 x i8> @bitcast_v8f16_to_v16i8(<8 x half> %a, i32 %b) {
; GCN-LABEL: bitcast_v8f16_to_v16i8:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v9, v6
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_cvt_f16_f32_e32 v20, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v17, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v16, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v21, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v19, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v14, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v18, v9
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB52_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB52_4
; GCN-NEXT:  .LBB52_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB52_3: ; %cmp.false
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v20
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v6
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v21
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v14
; GCN-NEXT:    v_bfe_u32 v7, v6, 8, 8
; GCN-NEXT:    v_or_b32_e32 v0, v17, v0
; GCN-NEXT:    v_or_b32_e32 v4, v16, v1
; GCN-NEXT:    v_or_b32_e32 v8, v19, v2
; GCN-NEXT:    v_or_b32_e32 v12, v18, v3
; GCN-NEXT:    v_alignbit_b32 v3, v4, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v4, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v4, v0, 8
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_bfe_u32 v15, v14, 8, 8
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB52_2
; GCN-NEXT:  .LBB52_4: ; %cmp.true
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v21
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v19
; GCN-NEXT:    v_cvt_f32_f16_e32 v2, v14
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v18
; GCN-NEXT:    v_cvt_f32_f16_e32 v4, v20
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v17
; GCN-NEXT:    v_cvt_f32_f16_e32 v6, v6
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v16
; GCN-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; GCN-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; GCN-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; GCN-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; GCN-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; GCN-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; GCN-NEXT:    v_cvt_f16_f32_e32 v0, v0
; GCN-NEXT:    v_cvt_f16_f32_e32 v1, v1
; GCN-NEXT:    v_cvt_f16_f32_e32 v14, v2
; GCN-NEXT:    v_cvt_f16_f32_e32 v2, v3
; GCN-NEXT:    v_cvt_f16_f32_e32 v3, v4
; GCN-NEXT:    v_cvt_f16_f32_e32 v4, v5
; GCN-NEXT:    v_cvt_f16_f32_e32 v6, v6
; GCN-NEXT:    v_cvt_f16_f32_e32 v5, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 16, v14
; GCN-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v10, 16, v6
; GCN-NEXT:    v_bfe_u32 v7, v6, 8, 8
; GCN-NEXT:    v_or_b32_e32 v8, v1, v0
; GCN-NEXT:    v_or_b32_e32 v12, v2, v9
; GCN-NEXT:    v_or_b32_e32 v0, v4, v3
; GCN-NEXT:    v_or_b32_e32 v4, v5, v10
; GCN-NEXT:    v_alignbit_b32 v3, v4, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v4, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v4, v0, 8
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_bfe_u32 v15, v14, 8, 8
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8f16_to_v16i8:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v19, v1
; VI-NEXT:    v_mov_b32_e32 v18, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    ; implicit-def: $vgpr3
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr11
; VI-NEXT:    ; implicit-def: $vgpr13
; VI-NEXT:    ; implicit-def: $vgpr15
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB52_2
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB52_2: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB52_4
; VI-NEXT:  ; %bb.3: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v3, 0x200
; VI-NEXT:    v_add_f16_sdwa v6, v19, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v6
; VI-NEXT:    v_add_f16_e32 v19, 0x200, v19
; VI-NEXT:    v_add_f16_sdwa v2, v18, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_sdwa v14, v17, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_sdwa v10, v16, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v19, v0
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v2
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v18
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_add_f16_e32 v17, 0x200, v17
; VI-NEXT:    v_lshlrev_b32_e32 v3, 16, v10
; VI-NEXT:    v_add_f16_e32 v16, 0x200, v16
; VI-NEXT:    v_or_b32_e32 v0, v18, v0
; VI-NEXT:    v_or_b32_e32 v8, v17, v4
; VI-NEXT:    v_or_b32_e32 v7, v16, v3
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[7:8]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[0:1]
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v8
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v7
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v1
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v0
; VI-NEXT:    v_bfe_u32 v15, v14, 8, 8
; VI-NEXT:    v_bfe_u32 v7, v6, 8, 8
; VI-NEXT:  .LBB52_4: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    v_mov_b32_e32 v0, v18
; VI-NEXT:    v_mov_b32_e32 v4, v19
; VI-NEXT:    v_mov_b32_e32 v8, v16
; VI-NEXT:    v_mov_b32_e32 v12, v17
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8f16_to_v16i8:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v19, v1
; GFX9-NEXT:    v_mov_b32_e32 v18, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    ; implicit-def: $vgpr2
; GFX9-NEXT:    ; implicit-def: $vgpr3
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr11
; GFX9-NEXT:    ; implicit-def: $vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr15
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB52_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB52_2: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB52_4
; GFX9-NEXT:  ; %bb.3: ; %cmp.true
; GFX9-NEXT:    s_movk_i32 s6, 0x200
; GFX9-NEXT:    v_pk_add_f16 v19, v19, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v18, v18, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v17, v17, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v16, v16, s6 op_sel_hi:[1,0]
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB52_4: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v0, v18
; GFX9-NEXT:    v_mov_b32_e32 v4, v19
; GFX9-NEXT:    v_mov_b32_e32 v8, v16
; GFX9-NEXT:    v_mov_b32_e32 v12, v17
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8f16_to_v16i8:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v17, v3 :: v_dual_mov_b32 v16, v2
; GFX11-NEXT:    v_dual_mov_b32 v19, v1 :: v_dual_mov_b32 v18, v0
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    ; implicit-def: $vgpr1
; GFX11-NEXT:    ; implicit-def: $vgpr2
; GFX11-NEXT:    ; implicit-def: $vgpr3
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr15
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execz .LBB52_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB52_2: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB52_4
; GFX11-NEXT:  ; %bb.3: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v19, 0x200, v19 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v17, 0x200, v17 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v16, 0x200, v16 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v18, 0x200, v18 op_sel_hi:[0,1]
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB52_4: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    v_mov_b32_e32 v0, v18
; GFX11-NEXT:    v_mov_b32_e32 v4, v19
; GFX11-NEXT:    v_mov_b32_e32 v8, v16
; GFX11-NEXT:    v_mov_b32_e32 v12, v17
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <8 x half> %a1 to <16 x i8>
  br label %end

cmp.false:
  %a3 = bitcast <8 x half> %a to <16 x i8>
  br label %end

end:
  %phi = phi <16 x i8> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <16 x i8> %phi
}

define <8 x half> @bitcast_v16i8_to_v8f16(<16 x i8> %a, i32 %b) {
; GCN-LABEL: bitcast_v16i8_to_v8f16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_mov_b32_e32 v17, v0
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GCN-NEXT:    v_lshlrev_b32_e32 v16, 8, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v18, 8, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v19, 8, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v20, 8, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v21, 8, v9
; GCN-NEXT:    v_lshlrev_b32_e32 v22, 8, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v23, 8, v13
; GCN-NEXT:    v_lshlrev_b32_e32 v15, 8, v15
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB53_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GCN-NEXT:    v_and_b32_e32 v5, 0xff, v10
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v12
; GCN-NEXT:    v_and_b32_e32 v7, 0xff, v14
; GCN-NEXT:    v_or_b32_e32 v0, v0, v16
; GCN-NEXT:    v_or_b32_e32 v1, v1, v18
; GCN-NEXT:    v_or_b32_e32 v2, v2, v19
; GCN-NEXT:    v_or_b32_e32 v3, v3, v20
; GCN-NEXT:    v_or_b32_e32 v4, v4, v21
; GCN-NEXT:    v_or_b32_e32 v5, v5, v22
; GCN-NEXT:    v_or_b32_e32 v6, v6, v23
; GCN-NEXT:    v_or_b32_e32 v7, v7, v15
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v11, v2
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v9, v4
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v13, v6
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v7
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:    ; implicit-def: $vgpr22
; GCN-NEXT:    ; implicit-def: $vgpr23
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:  .LBB53_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB53_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v14
; GCN-NEXT:    s_movk_i32 s6, 0x300
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 3, v12
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v5, vcc, 3, v8
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_add_i32_e32 v7, vcc, 3, v17
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GCN-NEXT:    v_and_b32_e32 v5, 0xff, v5
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v7, 0xff, v7
; GCN-NEXT:    v_or_b32_e32 v0, v15, v0
; GCN-NEXT:    v_or_b32_e32 v1, v23, v1
; GCN-NEXT:    v_or_b32_e32 v3, v22, v3
; GCN-NEXT:    v_or_b32_e32 v5, v21, v5
; GCN-NEXT:    v_or_b32_e32 v6, v20, v6
; GCN-NEXT:    v_or_b32_e32 v4, v19, v4
; GCN-NEXT:    v_or_b32_e32 v2, v18, v2
; GCN-NEXT:    v_or_b32_e32 v7, v16, v7
; GCN-NEXT:    v_add_i32_e32 v8, vcc, 0x300, v0
; GCN-NEXT:    v_add_i32_e32 v10, vcc, s6, v1
; GCN-NEXT:    v_add_i32_e32 v12, vcc, s6, v3
; GCN-NEXT:    v_add_i32_e32 v5, vcc, s6, v5
; GCN-NEXT:    v_add_i32_e32 v3, vcc, s6, v6
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v4
; GCN-NEXT:    v_add_i32_e32 v1, vcc, 0x300, v2
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x300, v7
; GCN-NEXT:    v_cvt_f32_f16_e32 v0, v0
; GCN-NEXT:    v_cvt_f32_f16_e32 v1, v1
; GCN-NEXT:    v_cvt_f32_f16_e32 v11, v4
; GCN-NEXT:    v_cvt_f32_f16_e32 v3, v3
; GCN-NEXT:    v_cvt_f32_f16_e32 v9, v5
; GCN-NEXT:    v_cvt_f32_f16_e32 v5, v12
; GCN-NEXT:    v_cvt_f32_f16_e32 v13, v10
; GCN-NEXT:    v_cvt_f32_f16_e32 v7, v8
; GCN-NEXT:  .LBB53_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v2, v11
; GCN-NEXT:    v_mov_b32_e32 v4, v9
; GCN-NEXT:    v_mov_b32_e32 v6, v13
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v16i8_to_v8f16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v18, v2
; VI-NEXT:    v_mov_b32_e32 v17, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; VI-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; VI-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; VI-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; VI-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; VI-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; VI-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; VI-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; VI-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB53_3
; VI-NEXT:  ; %bb.1: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB53_4
; VI-NEXT:  .LBB53_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB53_3: ; %cmp.false
; VI-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr18
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr8
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr12
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr16
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB53_2
; VI-NEXT:  .LBB53_4: ; %cmp.true
; VI-NEXT:    v_add_u16_e32 v0, 3, v17
; VI-NEXT:    v_add_u16_e32 v1, 3, v18
; VI-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_mov_b32_e32 v3, 0x300
; VI-NEXT:    v_add_u16_e32 v0, 0x300, v0
; VI-NEXT:    v_add_u16_sdwa v1, v1, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v0, v1
; VI-NEXT:    v_add_u16_e32 v1, 3, v4
; VI-NEXT:    v_add_u16_e32 v2, 3, v6
; VI-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v1, 0x300, v1
; VI-NEXT:    v_add_u16_sdwa v2, v2, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v1, v2
; VI-NEXT:    v_add_u16_e32 v2, 3, v8
; VI-NEXT:    v_add_u16_e32 v4, 3, v10
; VI-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v4, v9, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v2, 0x300, v2
; VI-NEXT:    v_add_u16_sdwa v4, v4, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v2, v4
; VI-NEXT:    v_add_u16_e32 v4, 3, v12
; VI-NEXT:    v_add_u16_e32 v6, 3, v14
; VI-NEXT:    v_or_b32_sdwa v4, v7, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v5, v5, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v4, 0x300, v4
; VI-NEXT:    v_add_u16_sdwa v3, v5, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v16i8_to_v8f16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v18, v2
; GFX9-NEXT:    v_mov_b32_e32 v17, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GFX9-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; GFX9-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; GFX9-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; GFX9-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; GFX9-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; GFX9-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; GFX9-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; GFX9-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB53_3
; GFX9-NEXT:  ; %bb.1: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB53_4
; GFX9-NEXT:  .LBB53_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB53_3: ; %cmp.false
; GFX9-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr18
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr8
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr16
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB53_2
; GFX9-NEXT:  .LBB53_4: ; %cmp.true
; GFX9-NEXT:    v_add_u16_e32 v0, 3, v17
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v18
; GFX9-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    s_movk_i32 s6, 0x300
; GFX9-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v0, 0x300, v0
; GFX9-NEXT:    v_add_u16_sdwa v1, v1, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v4
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v6
; GFX9-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v1, 0x300, v1
; GFX9-NEXT:    v_add_u16_sdwa v2, v2, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v1, v1, v2
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v8
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v10
; GFX9-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v3, v9, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v2, 0x300, v2
; GFX9-NEXT:    v_add_u16_sdwa v3, v3, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v2, v2, v3
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v12
; GFX9-NEXT:    v_add_u16_e32 v4, 3, v14
; GFX9-NEXT:    v_or_b32_sdwa v3, v7, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v4, v5, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v3, 0x300, v3
; GFX9-NEXT:    v_add_u16_sdwa v4, v4, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v3, v3, v4
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v16i8_to_v8f16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v18, v2 :: v_dual_mov_b32 v17, v0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v16
; GFX11-NEXT:    v_lshlrev_b16 v16, 8, v1
; GFX11-NEXT:    v_lshlrev_b16 v19, 8, v3
; GFX11-NEXT:    v_lshlrev_b16 v20, 8, v5
; GFX11-NEXT:    v_lshlrev_b16 v5, 8, v7
; GFX11-NEXT:    v_lshlrev_b16 v7, 8, v9
; GFX11-NEXT:    v_lshlrev_b16 v9, 8, v11
; GFX11-NEXT:    v_lshlrev_b16 v11, 8, v13
; GFX11-NEXT:    v_lshlrev_b16 v13, 8, v15
; GFX11-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX11-NEXT:    s_and_saveexec_b32 s0, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB53_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB53_4
; GFX11-NEXT:  .LBB53_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB53_3: ; %cmp.false
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v16
; GFX11-NEXT:    v_or_b32_e32 v1, v1, v19
; GFX11-NEXT:    v_or_b32_e32 v2, v2, v20
; GFX11-NEXT:    v_or_b32_e32 v3, v3, v5
; GFX11-NEXT:    v_or_b32_e32 v4, v4, v7
; GFX11-NEXT:    v_or_b32_e32 v5, v6, v9
; GFX11-NEXT:    v_or_b32_e32 v6, v8, v11
; GFX11-NEXT:    v_or_b32_e32 v7, v10, v13
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    ; implicit-def: $vgpr17
; GFX11-NEXT:    ; implicit-def: $vgpr18
; GFX11-NEXT:    ; implicit-def: $vgpr4
; GFX11-NEXT:    ; implicit-def: $vgpr8
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr12
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr16
; GFX11-NEXT:    ; implicit-def: $vgpr19
; GFX11-NEXT:    ; implicit-def: $vgpr20
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB53_2
; GFX11-NEXT:  .LBB53_4: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u16 v0, v17, 3
; GFX11-NEXT:    v_add_nc_u16 v1, v18, 3
; GFX11-NEXT:    v_add_nc_u16 v2, v4, 3
; GFX11-NEXT:    v_add_nc_u16 v3, v6, 3
; GFX11-NEXT:    v_add_nc_u16 v4, v8, 3
; GFX11-NEXT:    v_add_nc_u16 v6, v10, 3
; GFX11-NEXT:    v_add_nc_u16 v8, v12, 3
; GFX11-NEXT:    v_add_nc_u16 v10, v14, 3
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GFX11-NEXT:    v_or_b32_e32 v0, v16, v0
; GFX11-NEXT:    v_or_b32_e32 v1, v19, v1
; GFX11-NEXT:    v_or_b32_e32 v2, v20, v2
; GFX11-NEXT:    v_or_b32_e32 v3, v5, v3
; GFX11-NEXT:    v_or_b32_e32 v4, v7, v4
; GFX11-NEXT:    v_or_b32_e32 v5, v9, v6
; GFX11-NEXT:    v_or_b32_e32 v6, v11, v8
; GFX11-NEXT:    v_or_b32_e32 v7, v13, v10
; GFX11-NEXT:    v_add_nc_u16 v0, 0x300, v0
; GFX11-NEXT:    v_add_nc_u16 v1, 0x300, v1
; GFX11-NEXT:    v_add_nc_u16 v2, 0x300, v2
; GFX11-NEXT:    v_add_nc_u16 v3, 0x300, v3
; GFX11-NEXT:    v_add_nc_u16 v4, 0x300, v4
; GFX11-NEXT:    v_add_nc_u16 v5, 0x300, v5
; GFX11-NEXT:    v_add_nc_u16 v6, 0x300, v6
; GFX11-NEXT:    v_add_nc_u16 v7, 0x300, v7
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <16 x i8> %a, splat (i8 3)
  %a2 = bitcast <16 x i8> %a1 to <8 x half>
  br label %end

cmp.false:
  %a3 = bitcast <16 x i8> %a to <8 x half>
  br label %end

end:
  %phi = phi <8 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x half> %phi
}

define <16 x i8> @bitcast_v8bf16_to_v16i8(<8 x bfloat> %a, i32 %b) {
; GCN-LABEL: bitcast_v8bf16_to_v16i8:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v8
; GCN-NEXT:    v_mul_f32_e32 v22, 1.0, v1
; GCN-NEXT:    v_mul_f32_e32 v18, 1.0, v0
; GCN-NEXT:    v_mul_f32_e32 v17, 1.0, v3
; GCN-NEXT:    v_mul_f32_e32 v16, 1.0, v2
; GCN-NEXT:    v_mul_f32_e32 v23, 1.0, v5
; GCN-NEXT:    v_mul_f32_e32 v21, 1.0, v4
; GCN-NEXT:    v_mul_f32_e32 v20, 1.0, v7
; GCN-NEXT:    v_mul_f32_e32 v19, 1.0, v6
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB54_3
; GCN-NEXT:  ; %bb.1: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execnz .LBB54_4
; GCN-NEXT:  .LBB54_2: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
; GCN-NEXT:  .LBB54_3: ; %cmp.false
; GCN-NEXT:    v_lshrrev_b32_e32 v0, 16, v22
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v17
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v23
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v20
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v17
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v20
; GCN-NEXT:    v_alignbit_b32 v0, v0, v18, 16
; GCN-NEXT:    v_alignbit_b32 v4, v6, v16, 16
; GCN-NEXT:    v_alignbit_b32 v8, v1, v21, 16
; GCN-NEXT:    v_alignbit_b32 v12, v14, v19, 16
; GCN-NEXT:    v_alignbit_b32 v3, v4, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v4, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v4, v0, 8
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:    ; implicit-def: $vgpr23
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr22
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB54_2
; GCN-NEXT:  .LBB54_4: ; %cmp.true
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff0000, v21
; GCN-NEXT:    v_and_b32_e32 v1, 0xffff0000, v23
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff0000, v19
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v20
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff0000, v18
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v22
; GCN-NEXT:    v_and_b32_e32 v6, 0xffff0000, v16
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v17
; GCN-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GCN-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GCN-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GCN-NEXT:    v_add_f32_e32 v15, 0x40c00000, v3
; GCN-NEXT:    v_add_f32_e32 v3, 0x40c00000, v4
; GCN-NEXT:    v_add_f32_e32 v4, 0x40c00000, v5
; GCN-NEXT:    v_add_f32_e32 v5, 0x40c00000, v6
; GCN-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GCN-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; GCN-NEXT:    v_lshrrev_b32_e32 v14, 16, v15
; GCN-NEXT:    v_lshrrev_b32_e32 v4, 16, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v6, 16, v7
; GCN-NEXT:    v_lshrrev_b32_e32 v7, 24, v7
; GCN-NEXT:    v_alignbit_b32 v8, v1, v0, 16
; GCN-NEXT:    v_alignbit_b32 v12, v14, v2, 16
; GCN-NEXT:    v_alignbit_b32 v0, v4, v3, 16
; GCN-NEXT:    v_alignbit_b32 v4, v6, v5, 16
; GCN-NEXT:    v_alignbit_b32 v3, v4, v0, 24
; GCN-NEXT:    v_alignbit_b32 v2, v4, v0, 16
; GCN-NEXT:    v_alignbit_b32 v1, v4, v0, 8
; GCN-NEXT:    v_alignbit_b32 v11, v12, v8, 24
; GCN-NEXT:    v_alignbit_b32 v10, v12, v8, 16
; GCN-NEXT:    v_alignbit_b32 v9, v12, v8, 8
; GCN-NEXT:    v_lshrrev_b32_e32 v5, 8, v4
; GCN-NEXT:    v_lshrrev_b32_e32 v13, 8, v12
; GCN-NEXT:    v_lshrrev_b32_e32 v15, 24, v15
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v8bf16_to_v16i8:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v19, v1
; VI-NEXT:    v_mov_b32_e32 v18, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    ; implicit-def: $vgpr2
; VI-NEXT:    ; implicit-def: $vgpr3
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr11
; VI-NEXT:    ; implicit-def: $vgpr13
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr15
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB54_2
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB54_2: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB54_4
; VI-NEXT:  ; %bb.3: ; %cmp.true
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v19
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_bfe_u32 v1, v0, 16, 1
; VI-NEXT:    v_add_u32_e32 v1, vcc, v1, v0
; VI-NEXT:    v_add_u32_e32 v1, vcc, 0x7fff, v1
; VI-NEXT:    v_or_b32_e32 v2, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v1, v2, vcc
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v19
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_bfe_u32 v2, v1, 16, 1
; VI-NEXT:    s_movk_i32 s6, 0x7fff
; VI-NEXT:    v_add_u32_e32 v2, vcc, v2, v1
; VI-NEXT:    v_add_u32_e32 v2, vcc, s6, v2
; VI-NEXT:    v_or_b32_e32 v3, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v2, v3, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_alignbit_b32 v19, v1, v0, 16
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v18
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_bfe_u32 v1, v0, 16, 1
; VI-NEXT:    v_add_u32_e32 v1, vcc, v1, v0
; VI-NEXT:    v_add_u32_e32 v1, vcc, s6, v1
; VI-NEXT:    v_or_b32_e32 v2, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v1, v2, vcc
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v18
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_bfe_u32 v2, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v2, vcc, v2, v1
; VI-NEXT:    v_add_u32_e32 v2, vcc, s6, v2
; VI-NEXT:    v_or_b32_e32 v3, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v2, v3, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_alignbit_b32 v18, v1, v0, 16
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v17
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_bfe_u32 v1, v0, 16, 1
; VI-NEXT:    v_add_u32_e32 v1, vcc, v1, v0
; VI-NEXT:    v_add_u32_e32 v1, vcc, s6, v1
; VI-NEXT:    v_or_b32_e32 v2, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v1, v2, vcc
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v17
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_bfe_u32 v2, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v2, vcc, v2, v1
; VI-NEXT:    v_add_u32_e32 v2, vcc, s6, v2
; VI-NEXT:    v_or_b32_e32 v3, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v2, v3, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_alignbit_b32 v17, v1, v0, 16
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v16
; VI-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; VI-NEXT:    v_bfe_u32 v1, v0, 16, 1
; VI-NEXT:    v_add_u32_e32 v1, vcc, v1, v0
; VI-NEXT:    v_add_u32_e32 v1, vcc, s6, v1
; VI-NEXT:    v_or_b32_e32 v2, 0x400000, v0
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; VI-NEXT:    v_cndmask_b32_e32 v0, v1, v2, vcc
; VI-NEXT:    v_and_b32_e32 v1, 0xffff0000, v16
; VI-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; VI-NEXT:    v_bfe_u32 v2, v1, 16, 1
; VI-NEXT:    v_add_u32_e32 v2, vcc, v2, v1
; VI-NEXT:    v_add_u32_e32 v2, vcc, s6, v2
; VI-NEXT:    v_or_b32_e32 v3, 0x400000, v1
; VI-NEXT:    v_cmp_u_f32_e32 vcc, v1, v1
; VI-NEXT:    v_cndmask_b32_e32 v1, v2, v3, vcc
; VI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; VI-NEXT:    v_alignbit_b32 v16, v1, v0, 16
; VI-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; VI-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; VI-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; VI-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; VI-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; VI-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; VI-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; VI-NEXT:  .LBB54_4: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    v_mov_b32_e32 v0, v18
; VI-NEXT:    v_mov_b32_e32 v4, v19
; VI-NEXT:    v_mov_b32_e32 v8, v16
; VI-NEXT:    v_mov_b32_e32 v12, v17
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v8bf16_to_v16i8:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v19, v1
; GFX9-NEXT:    v_mov_b32_e32 v18, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    ; implicit-def: $vgpr2
; GFX9-NEXT:    ; implicit-def: $vgpr3
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr11
; GFX9-NEXT:    ; implicit-def: $vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr15
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB54_2
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX9-NEXT:  .LBB54_2: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB54_4
; GFX9-NEXT:  ; %bb.3: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff0000, v19
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_bfe_u32 v1, v0, 16, 1
; GFX9-NEXT:    s_movk_i32 s6, 0x7fff
; GFX9-NEXT:    v_add3_u32 v1, v1, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v2, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_lshlrev_b32_e32 v0, 16, v19
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v2, v1, v2, vcc
; GFX9-NEXT:    v_bfe_u32 v1, v0, 16, 1
; GFX9-NEXT:    v_add3_u32 v1, v1, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v3, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff0000, v18
; GFX9-NEXT:    v_add_f32_e32 v0, 0x40c00000, v0
; GFX9-NEXT:    v_bfe_u32 v4, v0, 16, 1
; GFX9-NEXT:    v_cndmask_b32_e32 v3, v1, v3, vcc
; GFX9-NEXT:    v_add3_u32 v4, v4, v0, s6
; GFX9-NEXT:    v_or_b32_e32 v5, 0x400000, v0
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v0, v0
; GFX9-NEXT:    v_cndmask_b32_e32 v0, v4, v5, vcc
; GFX9-NEXT:    v_lshlrev_b32_e32 v4, 16, v18
; GFX9-NEXT:    v_add_f32_e32 v4, 0x40c00000, v4
; GFX9-NEXT:    v_bfe_u32 v5, v4, 16, 1
; GFX9-NEXT:    v_add3_u32 v5, v5, v4, s6
; GFX9-NEXT:    v_or_b32_e32 v6, 0x400000, v4
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v4, v4
; GFX9-NEXT:    v_cndmask_b32_e32 v4, v5, v6, vcc
; GFX9-NEXT:    v_and_b32_e32 v5, 0xffff0000, v17
; GFX9-NEXT:    v_add_f32_e32 v5, 0x40c00000, v5
; GFX9-NEXT:    v_bfe_u32 v6, v5, 16, 1
; GFX9-NEXT:    v_add3_u32 v6, v6, v5, s6
; GFX9-NEXT:    v_or_b32_e32 v7, 0x400000, v5
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v5, v5
; GFX9-NEXT:    v_cndmask_b32_e32 v5, v6, v7, vcc
; GFX9-NEXT:    v_lshlrev_b32_e32 v6, 16, v17
; GFX9-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GFX9-NEXT:    v_bfe_u32 v7, v6, 16, 1
; GFX9-NEXT:    v_add3_u32 v7, v7, v6, s6
; GFX9-NEXT:    v_or_b32_e32 v8, 0x400000, v6
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v6, v6
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff0000, v16
; GFX9-NEXT:    v_add_f32_e32 v6, 0x40c00000, v6
; GFX9-NEXT:    v_cndmask_b32_e32 v9, v7, v8, vcc
; GFX9-NEXT:    v_bfe_u32 v7, v6, 16, 1
; GFX9-NEXT:    v_add3_u32 v7, v7, v6, s6
; GFX9-NEXT:    v_or_b32_e32 v10, 0x400000, v6
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v6, v6
; GFX9-NEXT:    v_cndmask_b32_e32 v6, v7, v10, vcc
; GFX9-NEXT:    v_lshlrev_b32_e32 v7, 16, v16
; GFX9-NEXT:    v_add_f32_e32 v7, 0x40c00000, v7
; GFX9-NEXT:    v_bfe_u32 v10, v7, 16, 1
; GFX9-NEXT:    v_add3_u32 v10, v10, v7, s6
; GFX9-NEXT:    v_or_b32_e32 v11, 0x400000, v7
; GFX9-NEXT:    v_cmp_u_f32_e32 vcc, v7, v7
; GFX9-NEXT:    s_mov_b32 s7, 0x7060302
; GFX9-NEXT:    v_cndmask_b32_e32 v10, v10, v11, vcc
; GFX9-NEXT:    v_perm_b32 v1, v2, v3, s7
; GFX9-NEXT:    v_perm_b32 v0, v0, v4, s7
; GFX9-NEXT:    v_perm_b32 v8, v5, v9, s7
; GFX9-NEXT:    v_perm_b32 v7, v6, v10, s7
; GFX9-NEXT:    v_lshrrev_b32_e32 v19, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v18, 16, v4
; GFX9-NEXT:    v_lshrrev_b64 v[11:12], 24, v[7:8]
; GFX9-NEXT:    v_lshrrev_b64 v[3:4], 24, v[0:1]
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v5
; GFX9-NEXT:    v_lshrrev_b32_e32 v6, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v17, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v16, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 24, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v13, 8, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v10, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v9, 8, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v7, 24, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 8, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v2, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v1, 8, v0
; GFX9-NEXT:  .LBB54_4: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v0, v18
; GFX9-NEXT:    v_mov_b32_e32 v4, v19
; GFX9-NEXT:    v_mov_b32_e32 v8, v16
; GFX9-NEXT:    v_mov_b32_e32 v12, v17
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v8bf16_to_v16i8:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v17, v3 :: v_dual_mov_b32 v16, v2
; GFX11-NEXT:    v_dual_mov_b32 v19, v1 :: v_dual_mov_b32 v18, v0
; GFX11-NEXT:    s_mov_b32 s0, exec_lo
; GFX11-NEXT:    ; implicit-def: $vgpr1
; GFX11-NEXT:    ; implicit-def: $vgpr2
; GFX11-NEXT:    ; implicit-def: $vgpr3
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr15
; GFX11-NEXT:    v_cmpx_ne_u32_e32 0, v4
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execz .LBB54_2
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v18
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[16:17]
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[18:19]
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v18
; GFX11-NEXT:  .LBB54_2: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB54_4
; GFX11-NEXT:  ; %bb.3: ; %cmp.true
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff0000, v19
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v19
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff0000, v17
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_dual_add_f32 v0, 0x40c00000, v0 :: v_dual_add_f32 v1, 0x40c00000, v1
; GFX11-NEXT:    v_bfe_u32 v5, v0, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v6, 0x400000, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3)
; GFX11-NEXT:    v_bfe_u32 v7, v1, 16, 1
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v0, v0
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v1
; GFX11-NEXT:    v_add3_u32 v5, v5, v0, 0x7fff
; GFX11-NEXT:    v_add_f32_e32 v0, 0x40c00000, v4
; GFX11-NEXT:    v_add3_u32 v7, v7, v1, 0x7fff
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)
; GFX11-NEXT:    v_cndmask_b32_e32 v5, v5, v6, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v1, v1
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v18
; GFX11-NEXT:    v_bfe_u32 v6, v0, 16, 1
; GFX11-NEXT:    v_dual_cndmask_b32 v12, v7, v8 :: v_dual_add_f32 v3, 0x40c00000, v3
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_add3_u32 v6, v6, v0, 0x7fff
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v19, 16, v12
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_2)
; GFX11-NEXT:    v_bfe_u32 v11, v3, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v4, 0x400000, v3
; GFX11-NEXT:    v_add3_u32 v1, v11, v3, 0x7fff
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff0000, v18
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_f32_e32 v2, 0x40c00000, v2
; GFX11-NEXT:    v_bfe_u32 v9, v2, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v10, 0x400000, v2
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v2, v2
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add3_u32 v9, v9, v2, 0x7fff
; GFX11-NEXT:    v_cndmask_b32_e32 v2, v9, v10, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v3, v3
; GFX11-NEXT:    v_cndmask_b32_e32 v3, v1, v4, vcc_lo
; GFX11-NEXT:    v_dual_add_f32 v4, 0x40c00000, v7 :: v_dual_lshlrev_b32 v1, 16, v16
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v0, v0
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)
; GFX11-NEXT:    v_lshrrev_b32_e32 v18, 16, v3
; GFX11-NEXT:    v_add_f32_e32 v1, 0x40c00000, v1
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_2)
; GFX11-NEXT:    v_bfe_u32 v9, v4, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v13, 0x400000, v1
; GFX11-NEXT:    v_and_b32_e32 v8, 0xffff0000, v16
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)
; GFX11-NEXT:    v_add_f32_e32 v7, 0x40c00000, v8
; GFX11-NEXT:    v_or_b32_e32 v8, 0x400000, v0
; GFX11-NEXT:    v_cndmask_b32_e32 v6, v6, v8, vcc_lo
; GFX11-NEXT:    v_add3_u32 v8, v9, v4, 0x7fff
; GFX11-NEXT:    v_or_b32_e32 v9, 0x400000, v4
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v4, v4
; GFX11-NEXT:    v_bfe_u32 v0, v1, 16, 1
; GFX11-NEXT:    v_lshrrev_b32_e32 v14, 16, v6
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_cndmask_b32_e32 v4, v8, v9, vcc_lo
; GFX11-NEXT:    v_bfe_u32 v10, v7, 16, 1
; GFX11-NEXT:    v_or_b32_e32 v11, 0x400000, v7
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v7, v7
; GFX11-NEXT:    v_add3_u32 v0, v0, v1, 0x7fff
; GFX11-NEXT:    v_perm_b32 v8, v6, v4, 0x7060302
; GFX11-NEXT:    v_add3_u32 v10, v10, v7, 0x7fff
; GFX11-NEXT:    v_lshrrev_b32_e32 v17, 16, v4
; GFX11-NEXT:    v_lshrrev_b32_e32 v6, 16, v5
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b32_e32 v15, 24, v8
; GFX11-NEXT:    v_cndmask_b32_e32 v7, v10, v11, vcc_lo
; GFX11-NEXT:    v_cmp_u_f32_e32 vcc_lo, v1, v1
; GFX11-NEXT:    v_perm_b32 v1, v5, v12, 0x7060302
; GFX11-NEXT:    v_cndmask_b32_e32 v9, v0, v13, vcc_lo
; GFX11-NEXT:    v_perm_b32 v0, v2, v3, 0x7060302
; GFX11-NEXT:    v_lshrrev_b32_e32 v13, 8, v8
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b32_e32 v5, 8, v1
; GFX11-NEXT:    v_perm_b32 v7, v7, v9, 0x7060302
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)
; GFX11-NEXT:    v_lshrrev_b64 v[3:4], 24, v[0:1]
; GFX11-NEXT:    v_lshrrev_b32_e32 v16, 16, v9
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v0
; GFX11-NEXT:    v_lshrrev_b64 v[11:12], 24, v[7:8]
; GFX11-NEXT:    v_lshrrev_b32_e32 v10, 16, v7
; GFX11-NEXT:    v_lshrrev_b32_e32 v9, 8, v7
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 24, v1
; GFX11-NEXT:    v_lshrrev_b32_e32 v1, 8, v0
; GFX11-NEXT:  .LBB54_4: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    v_mov_b32_e32 v0, v18
; GFX11-NEXT:    v_mov_b32_e32 v4, v19
; GFX11-NEXT:    v_mov_b32_e32 v8, v16
; GFX11-NEXT:    v_mov_b32_e32 v12, v17
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <8 x bfloat> %a, splat (bfloat 0xR40C0)
  %a2 = bitcast <8 x bfloat> %a1 to <16 x i8>
  br label %end

cmp.false:
  %a3 = bitcast <8 x bfloat> %a to <16 x i8>
  br label %end

end:
  %phi = phi <16 x i8> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <16 x i8> %phi
}

define <8 x bfloat> @bitcast_v16i8_to_v8bf16(<16 x i8> %a, i32 %b) {
; GCN-LABEL: bitcast_v16i8_to_v8bf16:
; GCN:       ; %bb.0:
; GCN-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GCN-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GCN-NEXT:    v_lshlrev_b32_e32 v18, 24, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v22, 8, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v19, 24, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v20, 24, v11
; GCN-NEXT:    v_lshlrev_b32_e32 v23, 8, v13
; GCN-NEXT:    v_lshlrev_b32_e32 v21, 24, v15
; GCN-NEXT:    ; implicit-def: $vgpr11
; GCN-NEXT:    ; implicit-def: $vgpr15
; GCN-NEXT:    ; implicit-def: $vgpr17
; GCN-NEXT:    ; implicit-def: $vgpr3
; GCN-NEXT:    ; implicit-def: $vgpr13
; GCN-NEXT:    ; implicit-def: $vgpr5
; GCN-NEXT:    ; implicit-def: $vgpr16
; GCN-NEXT:    ; implicit-def: $vgpr7
; GCN-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GCN-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB55_2
; GCN-NEXT:  ; %bb.1: ; %cmp.false
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 24, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v5, 0xff, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 24, v9
; GCN-NEXT:    v_and_b32_e32 v7, 0xff, v10
; GCN-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GCN-NEXT:    v_and_b32_e32 v9, 0xff, v14
; GCN-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; GCN-NEXT:    v_or_b32_e32 v3, v3, v22
; GCN-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GCN-NEXT:    v_or_b32_e32 v8, v8, v23
; GCN-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; GCN-NEXT:    v_or_b32_e32 v11, v1, v0
; GCN-NEXT:    v_or_b32_e32 v15, v18, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v17, 16, v3
; GCN-NEXT:    v_or_b32_e32 v3, v19, v4
; GCN-NEXT:    v_or_b32_e32 v13, v6, v5
; GCN-NEXT:    v_or_b32_e32 v5, v20, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v16, 16, v8
; GCN-NEXT:    v_or_b32_e32 v7, v21, v9
; GCN-NEXT:    ; implicit-def: $vgpr0
; GCN-NEXT:    ; implicit-def: $vgpr1
; GCN-NEXT:    ; implicit-def: $vgpr2
; GCN-NEXT:    ; implicit-def: $vgpr4
; GCN-NEXT:    ; implicit-def: $vgpr6
; GCN-NEXT:    ; implicit-def: $vgpr8
; GCN-NEXT:    ; implicit-def: $vgpr9
; GCN-NEXT:    ; implicit-def: $vgpr10
; GCN-NEXT:    ; implicit-def: $vgpr12
; GCN-NEXT:    ; implicit-def: $vgpr14
; GCN-NEXT:    ; implicit-def: $vgpr18
; GCN-NEXT:    ; implicit-def: $vgpr22
; GCN-NEXT:    ; implicit-def: $vgpr19
; GCN-NEXT:    ; implicit-def: $vgpr20
; GCN-NEXT:    ; implicit-def: $vgpr23
; GCN-NEXT:    ; implicit-def: $vgpr21
; GCN-NEXT:  .LBB55_2: ; %Flow
; GCN-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GCN-NEXT:    s_cbranch_execz .LBB55_4
; GCN-NEXT:  ; %bb.3: ; %cmp.true
; GCN-NEXT:    v_add_i32_e32 v3, vcc, 3, v12
; GCN-NEXT:    s_movk_i32 s6, 0x300
; GCN-NEXT:    v_add_i32_e32 v5, vcc, 3, v14
; GCN-NEXT:    s_mov_b32 s7, 0x3000000
; GCN-NEXT:    v_add_i32_e32 v7, vcc, 3, v8
; GCN-NEXT:    v_lshlrev_b32_e32 v8, 8, v9
; GCN-NEXT:    v_add_i32_e32 v9, vcc, 3, v10
; GCN-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; GCN-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 8, v1
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; GCN-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GCN-NEXT:    v_and_b32_e32 v5, 0xff, v5
; GCN-NEXT:    v_and_b32_e32 v7, 0xff, v7
; GCN-NEXT:    v_and_b32_e32 v9, 0xff, v9
; GCN-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GCN-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GCN-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GCN-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GCN-NEXT:    v_or_b32_e32 v3, v23, v3
; GCN-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GCN-NEXT:    v_or_b32_e32 v7, v8, v7
; GCN-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; GCN-NEXT:    v_or_b32_e32 v4, v22, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v1, 16, v2
; GCN-NEXT:    v_add_i32_e32 v2, vcc, 0x300, v3
; GCN-NEXT:    v_or_b32_e32 v3, v21, v5
; GCN-NEXT:    v_add_i32_e32 v5, vcc, s6, v7
; GCN-NEXT:    v_or_b32_e32 v7, v20, v8
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s6, v4
; GCN-NEXT:    v_or_b32_e32 v6, v19, v6
; GCN-NEXT:    v_add_i32_e32 v0, vcc, s6, v0
; GCN-NEXT:    v_or_b32_e32 v1, v18, v1
; GCN-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GCN-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GCN-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GCN-NEXT:    v_or_b32_e32 v2, v3, v2
; GCN-NEXT:    v_or_b32_e32 v3, v7, v5
; GCN-NEXT:    v_or_b32_e32 v4, v6, v4
; GCN-NEXT:    v_or_b32_e32 v0, v1, v0
; GCN-NEXT:    v_add_i32_e32 v1, vcc, s7, v2
; GCN-NEXT:    v_add_i32_e32 v2, vcc, s7, v3
; GCN-NEXT:    v_add_i32_e32 v4, vcc, s7, v4
; GCN-NEXT:    v_add_i32_e32 v0, vcc, 0x3000000, v0
; GCN-NEXT:    v_and_b32_e32 v15, 0xffff0000, v0
; GCN-NEXT:    v_lshlrev_b32_e32 v11, 16, v0
; GCN-NEXT:    v_and_b32_e32 v3, 0xffff0000, v4
; GCN-NEXT:    v_lshlrev_b32_e32 v17, 16, v4
; GCN-NEXT:    v_and_b32_e32 v5, 0xffff0000, v2
; GCN-NEXT:    v_lshlrev_b32_e32 v13, 16, v2
; GCN-NEXT:    v_and_b32_e32 v7, 0xffff0000, v1
; GCN-NEXT:    v_lshlrev_b32_e32 v16, 16, v1
; GCN-NEXT:  .LBB55_4: ; %end
; GCN-NEXT:    s_or_b64 exec, exec, s[4:5]
; GCN-NEXT:    v_mov_b32_e32 v0, v11
; GCN-NEXT:    v_mov_b32_e32 v1, v15
; GCN-NEXT:    v_mov_b32_e32 v2, v17
; GCN-NEXT:    v_mov_b32_e32 v4, v13
; GCN-NEXT:    v_mov_b32_e32 v6, v16
; GCN-NEXT:    s_setpc_b64 s[30:31]
;
; VI-LABEL: bitcast_v16i8_to_v8bf16:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v18, v2
; VI-NEXT:    v_mov_b32_e32 v17, v0
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; VI-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; VI-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; VI-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; VI-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; VI-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; VI-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; VI-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; VI-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; VI-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; VI-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB55_3
; VI-NEXT:  ; %bb.1: ; %Flow
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB55_4
; VI-NEXT:  .LBB55_2: ; %end
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB55_3: ; %cmp.false
; VI-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr18
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    ; implicit-def: $vgpr8
; VI-NEXT:    ; implicit-def: $vgpr10
; VI-NEXT:    ; implicit-def: $vgpr12
; VI-NEXT:    ; implicit-def: $vgpr14
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr16
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr7
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_cbranch_execz .LBB55_2
; VI-NEXT:  .LBB55_4: ; %cmp.true
; VI-NEXT:    v_add_u16_e32 v0, 3, v17
; VI-NEXT:    v_add_u16_e32 v1, 3, v18
; VI-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_mov_b32_e32 v3, 0x300
; VI-NEXT:    v_add_u16_e32 v0, 0x300, v0
; VI-NEXT:    v_add_u16_sdwa v1, v1, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v0, v0, v1
; VI-NEXT:    v_add_u16_e32 v1, 3, v4
; VI-NEXT:    v_add_u16_e32 v2, 3, v6
; VI-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v1, 0x300, v1
; VI-NEXT:    v_add_u16_sdwa v2, v2, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v1, v1, v2
; VI-NEXT:    v_add_u16_e32 v2, 3, v8
; VI-NEXT:    v_add_u16_e32 v4, 3, v10
; VI-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v4, v9, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v2, 0x300, v2
; VI-NEXT:    v_add_u16_sdwa v4, v4, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v2, v2, v4
; VI-NEXT:    v_add_u16_e32 v4, 3, v12
; VI-NEXT:    v_add_u16_e32 v6, 3, v14
; VI-NEXT:    v_or_b32_sdwa v4, v7, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_or_b32_sdwa v5, v5, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; VI-NEXT:    v_add_u16_e32 v4, 0x300, v4
; VI-NEXT:    v_add_u16_sdwa v3, v5, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    s_or_b64 exec, exec, s[4:5]
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: bitcast_v16i8_to_v8bf16:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v18, v2
; GFX9-NEXT:    v_mov_b32_e32 v17, v0
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v16
; GFX9-NEXT:    v_lshlrev_b16_e32 v22, 8, v1
; GFX9-NEXT:    v_lshlrev_b16_e32 v21, 8, v3
; GFX9-NEXT:    v_lshlrev_b16_e32 v20, 8, v5
; GFX9-NEXT:    v_lshlrev_b16_e32 v19, 8, v7
; GFX9-NEXT:    v_lshlrev_b16_e32 v16, 8, v9
; GFX9-NEXT:    v_lshlrev_b16_e32 v9, 8, v11
; GFX9-NEXT:    v_lshlrev_b16_e32 v7, 8, v13
; GFX9-NEXT:    v_lshlrev_b16_e32 v5, 8, v15
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], vcc
; GFX9-NEXT:    s_xor_b64 s[4:5], exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB55_3
; GFX9-NEXT:  ; %bb.1: ; %Flow
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB55_4
; GFX9-NEXT:  .LBB55_2: ; %end
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB55_3: ; %cmp.false
; GFX9-NEXT:    v_or_b32_sdwa v0, v17, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v18, v21 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v4, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v6, v19 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v8, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v10, v9 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v2, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v12, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v4, v14, v5 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr18
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    ; implicit-def: $vgpr8
; GFX9-NEXT:    ; implicit-def: $vgpr10
; GFX9-NEXT:    ; implicit-def: $vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr14
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr16
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr7
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_andn2_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_cbranch_execz .LBB55_2
; GFX9-NEXT:  .LBB55_4: ; %cmp.true
; GFX9-NEXT:    v_add_u16_e32 v0, 3, v17
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v18
; GFX9-NEXT:    v_or_b32_sdwa v0, v22, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    s_movk_i32 s6, 0x300
; GFX9-NEXT:    v_or_b32_sdwa v1, v21, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v0, 0x300, v0
; GFX9-NEXT:    v_add_u16_sdwa v1, v1, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX9-NEXT:    v_add_u16_e32 v1, 3, v4
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v6
; GFX9-NEXT:    v_or_b32_sdwa v1, v20, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v2, v19, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v1, 0x300, v1
; GFX9-NEXT:    v_add_u16_sdwa v2, v2, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v1, v1, v2
; GFX9-NEXT:    v_add_u16_e32 v2, 3, v8
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v10
; GFX9-NEXT:    v_or_b32_sdwa v2, v16, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v3, v9, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v2, 0x300, v2
; GFX9-NEXT:    v_add_u16_sdwa v3, v3, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v2, v2, v3
; GFX9-NEXT:    v_add_u16_e32 v3, 3, v12
; GFX9-NEXT:    v_add_u16_e32 v4, 3, v14
; GFX9-NEXT:    v_or_b32_sdwa v3, v7, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_or_b32_sdwa v4, v5, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
; GFX9-NEXT:    v_add_u16_e32 v3, 0x300, v3
; GFX9-NEXT:    v_add_u16_sdwa v4, v4, s6 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; GFX9-NEXT:    v_or_b32_e32 v3, v3, v4
; GFX9-NEXT:    s_or_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: bitcast_v16i8_to_v8bf16:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_dual_mov_b32 v18, v2 :: v_dual_mov_b32 v17, v0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v16
; GFX11-NEXT:    v_lshlrev_b16 v16, 8, v1
; GFX11-NEXT:    v_lshlrev_b16 v19, 8, v3
; GFX11-NEXT:    v_lshlrev_b16 v20, 8, v5
; GFX11-NEXT:    v_lshlrev_b16 v5, 8, v7
; GFX11-NEXT:    v_lshlrev_b16 v7, 8, v9
; GFX11-NEXT:    v_lshlrev_b16 v9, 8, v11
; GFX11-NEXT:    v_lshlrev_b16 v11, 8, v13
; GFX11-NEXT:    v_lshlrev_b16 v13, 8, v15
; GFX11-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3
; GFX11-NEXT:    s_and_saveexec_b32 s0, vcc_lo
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB55_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execnz .LBB55_4
; GFX11-NEXT:  .LBB55_2: ; %end
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB55_3: ; %cmp.false
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v18
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v10
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v12
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v14
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v16
; GFX11-NEXT:    v_or_b32_e32 v1, v1, v19
; GFX11-NEXT:    v_or_b32_e32 v2, v2, v20
; GFX11-NEXT:    v_or_b32_e32 v3, v3, v5
; GFX11-NEXT:    v_or_b32_e32 v4, v4, v7
; GFX11-NEXT:    v_or_b32_e32 v5, v6, v9
; GFX11-NEXT:    v_or_b32_e32 v6, v8, v11
; GFX11-NEXT:    v_or_b32_e32 v7, v10, v13
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    ; implicit-def: $vgpr17
; GFX11-NEXT:    ; implicit-def: $vgpr18
; GFX11-NEXT:    ; implicit-def: $vgpr4
; GFX11-NEXT:    ; implicit-def: $vgpr8
; GFX11-NEXT:    ; implicit-def: $vgpr10
; GFX11-NEXT:    ; implicit-def: $vgpr12
; GFX11-NEXT:    ; implicit-def: $vgpr14
; GFX11-NEXT:    ; implicit-def: $vgpr16
; GFX11-NEXT:    ; implicit-def: $vgpr19
; GFX11-NEXT:    ; implicit-def: $vgpr20
; GFX11-NEXT:    ; implicit-def: $vgpr5
; GFX11-NEXT:    ; implicit-def: $vgpr9
; GFX11-NEXT:    ; implicit-def: $vgpr11
; GFX11-NEXT:    ; implicit-def: $vgpr13
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    ; implicit-def: $vgpr6
; GFX11-NEXT:    ; implicit-def: $vgpr7
; GFX11-NEXT:    s_and_not1_saveexec_b32 s0, s0
; GFX11-NEXT:    s_cbranch_execz .LBB55_2
; GFX11-NEXT:  .LBB55_4: ; %cmp.true
; GFX11-NEXT:    v_add_nc_u16 v0, v17, 3
; GFX11-NEXT:    v_add_nc_u16 v1, v18, 3
; GFX11-NEXT:    v_add_nc_u16 v2, v4, 3
; GFX11-NEXT:    v_add_nc_u16 v3, v6, 3
; GFX11-NEXT:    v_add_nc_u16 v4, v8, 3
; GFX11-NEXT:    v_add_nc_u16 v6, v10, 3
; GFX11-NEXT:    v_add_nc_u16 v8, v12, 3
; GFX11-NEXT:    v_add_nc_u16 v10, v14, 3
; GFX11-NEXT:    v_and_b32_e32 v0, 0xff, v0
; GFX11-NEXT:    v_and_b32_e32 v1, 0xff, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xff, v2
; GFX11-NEXT:    v_and_b32_e32 v3, 0xff, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xff, v4
; GFX11-NEXT:    v_and_b32_e32 v6, 0xff, v6
; GFX11-NEXT:    v_and_b32_e32 v8, 0xff, v8
; GFX11-NEXT:    v_and_b32_e32 v10, 0xff, v10
; GFX11-NEXT:    v_or_b32_e32 v0, v16, v0
; GFX11-NEXT:    v_or_b32_e32 v1, v19, v1
; GFX11-NEXT:    v_or_b32_e32 v2, v20, v2
; GFX11-NEXT:    v_or_b32_e32 v3, v5, v3
; GFX11-NEXT:    v_or_b32_e32 v4, v7, v4
; GFX11-NEXT:    v_or_b32_e32 v5, v9, v6
; GFX11-NEXT:    v_or_b32_e32 v6, v11, v8
; GFX11-NEXT:    v_or_b32_e32 v7, v13, v10
; GFX11-NEXT:    v_add_nc_u16 v0, 0x300, v0
; GFX11-NEXT:    v_add_nc_u16 v1, 0x300, v1
; GFX11-NEXT:    v_add_nc_u16 v2, 0x300, v2
; GFX11-NEXT:    v_add_nc_u16 v3, 0x300, v3
; GFX11-NEXT:    v_add_nc_u16 v4, 0x300, v4
; GFX11-NEXT:    v_add_nc_u16 v5, 0x300, v5
; GFX11-NEXT:    v_add_nc_u16 v6, 0x300, v6
; GFX11-NEXT:    v_add_nc_u16 v7, 0x300, v7
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; GFX11-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX11-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; GFX11-NEXT:    v_or_b32_e32 v0, v0, v1
; GFX11-NEXT:    v_or_b32_e32 v1, v2, v3
; GFX11-NEXT:    v_or_b32_e32 v2, v4, v5
; GFX11-NEXT:    s_delay_alu instid0(VALU_DEP_4)
; GFX11-NEXT:    v_or_b32_e32 v3, v6, v7
; GFX11-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <16 x i8> %a, splat (i8 3)
  %a2 = bitcast <16 x i8> %a1 to <8 x bfloat>
  br label %end

cmp.false:
  %a3 = bitcast <16 x i8> %a to <8 x bfloat>
  br label %end

end:
  %phi = phi <8 x bfloat> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <8 x bfloat> %phi
}
