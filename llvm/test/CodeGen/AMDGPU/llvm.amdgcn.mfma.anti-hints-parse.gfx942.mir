# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx942 -debug -run-pass=greedy,machineverifier,virtregrewriter %s -o - | FileCheck -check-prefix=CHECK %s
--- |
  ; ModuleID = '/work/mdssefat/FullTimeWork/MLSCHED/composable_kernel/noopexample/llvm.amdgcn.mfma.hint.haard.barrier.gfx942_short.mir'
  source_filename = "/work/mdssefat/FullTimeWork/MLSCHED/composable_kernel/noopexample/llvm.amdgcn.mfma.hint.haard.barrier.gfx942_short.mir"
  target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128:128:48-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
  target triple = "amdgcn-amd-amdhsa"

  ; Function Attrs: nounwind
  define amdgpu_kernel void @test_software_pipelining() #0 {
  bb.0:
    ret void
  }

  attributes #0 = { nounwind "amdgpu-agpr-alloc"="0" "amdgpu-waves-per-eu"="2" "frame-pointer"="none" "target-cpu"="gfx942" }
...
---
name:            test_software_pipelining
registers:
  - { id: 0, class: vgpr_32, preferred-register: '', flags: [  ], anti-hints: [ 
                                                                                '%4', 
                                                                                '%25', 
                                                                                '%5', 
                                                                                '%22', 
                                                                                '%6', 
                                                                                '%19', 
                                                                                '%7', 
                                                                                '%18', 
                                                                                '%16', 
                                                                                '%8' ] }
  - { id: 1, class: vgpr_32, preferred-register: '', flags: [  ], anti-hints: [ 
                                                                                '%8', 
                                                                                '%6', 
                                                                                '%19', 
                                                                                '%7', 
                                                                                '%18', 
                                                                                '%16' ] }
  - { id: 2, class: sgpr_128, preferred-register: '', flags: [  ] }
  - { id: 3, class: vgpr_32, preferred-register: '', flags: [  ] }
  - { id: 4, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 5, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 6, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%23', '%1', '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 7, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%23', '%1', '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 8, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%17', '%1', '%23', '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 9, class: vgpr_32, preferred-register: '', flags: [  ], anti-hints: [ 
                                                                                '%4', 
                                                                                '%25', 
                                                                                '%5', 
                                                                                '%22', 
                                                                                '%6', 
                                                                                '%19', 
                                                                                '%7', 
                                                                                '%18', 
                                                                                '%16', 
                                                                                '%8' ] }
  - { id: 10, class: vgpr_32, preferred-register: '', flags: [  ] }
  - { id: 11, class: vgpr_32, preferred-register: '', flags: [  ] }
  - { id: 12, class: vgpr_32, preferred-register: '', flags: [  ] }
  - { id: 13, class: vreg_128_align2, preferred-register: '', flags: [  ] }
  - { id: 14, class: vreg_128_align2, preferred-register: '', flags: [  ] }
  - { id: 15, class: vreg_128_align2, preferred-register: '', flags: [  ] }
  - { id: 16, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%23', '%1', '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 17, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%8' ] }
  - { id: 18, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%23', '%1', '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 19, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%23', '%1', '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 20, class: vreg_128_align2, preferred-register: '', flags: [  ] }
  - { id: 21, class: vreg_128_align2, preferred-register: '', flags: [  ] }
  - { id: 22, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 23, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%6', '%19', '%7', '%18', '%16', '%8' ] }
  - { id: 24, class: vreg_128_align2, preferred-register: '', flags: [  ] }
  - { id: 25, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%29', '%0', '%28', '%30', '%9' ] }
  - { id: 26, class: vreg_128_align2, preferred-register: '', flags: [  ] }
  - { id: 27, class: vreg_128_align2, preferred-register: '', flags: [  ] }
  - { id: 28, class: vgpr_32, preferred-register: '', flags: [  ], anti-hints: [ 
                                                                                 '%4', 
                                                                                 '%25', 
                                                                                 '%5', 
                                                                                 '%22', 
                                                                                 '%6', 
                                                                                 '%19', 
                                                                                 '%7', 
                                                                                 '%18', 
                                                                                 '%16', 
                                                                                 '%8' ] }
  - { id: 29, class: vgpr_32, preferred-register: '', flags: [  ], anti-hints: [ 
                                                                                 '%4', 
                                                                                 '%25', 
                                                                                 '%5', 
                                                                                 '%22', 
                                                                                 '%6', 
                                                                                 '%19', 
                                                                                 '%7', 
                                                                                 '%18', 
                                                                                 '%16', 
                                                                                 '%8' ] }
  - { id: 30, class: vreg_128_align2, preferred-register: '', flags: [  ], 
      anti-hints: [ '%4', '%25', '%5', '%22', '%6', '%19', '%7', '%18', 
                    '%16', '%8' ] }
body:             |
  bb.0:
    ; CHECK-LABEL: name: test_software_pipelining
    ; CHECK: renamable $vgpr36 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr37 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $sgpr0_sgpr1_sgpr2_sgpr3 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr20 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr0_vgpr1_vgpr2_vgpr3 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr4_vgpr5_vgpr6_vgpr7 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr8_vgpr9_vgpr10_vgpr11 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr12_vgpr13_vgpr14_vgpr15 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr16_vgpr17_vgpr18_vgpr19 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr38 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr24 = V_ADD_U32_e32 4096, $vgpr38, implicit $exec
    ; CHECK-NEXT: renamable $vgpr20 = V_ADD_U32_e32 $vgpr36, killed $vgpr20, implicit $exec
    ; CHECK-NEXT: renamable $vgpr20 = V_ADD_U32_e32 4096, killed $vgpr20, implicit $exec
    ; CHECK-NEXT: renamable $vgpr20_vgpr21_vgpr22_vgpr23 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr20, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (s128), align 1, addrspace 8)
    ; CHECK-NEXT: renamable $vgpr24_vgpr25_vgpr26_vgpr27 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr24, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (s128), align 1, addrspace 8)
    ; CHECK-NEXT: renamable $vgpr28_vgpr29_vgpr30_vgpr31 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr16_vgpr17_vgpr18_vgpr19 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 $vgpr28_vgpr29, $vgpr24_vgpr25, killed $vgpr16_vgpr17_vgpr18_vgpr19, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr32_vgpr33_vgpr34_vgpr35 = DS_READ_B128_gfx9 renamable $vgpr37, 4096, 0, implicit $exec :: (load (s128), addrspace 3)
    ; CHECK-NEXT: dead renamable $vgpr16_vgpr17_vgpr18_vgpr19 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 $vgpr30_vgpr31, $vgpr26_vgpr27, killed $vgpr16_vgpr17_vgpr18_vgpr19, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr12_vgpr13_vgpr14_vgpr15 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 $vgpr28_vgpr29, $vgpr20_vgpr21, killed $vgpr12_vgpr13_vgpr14_vgpr15, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr12_vgpr13_vgpr14_vgpr15 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 killed $vgpr30_vgpr31, $vgpr22_vgpr23, killed $vgpr12_vgpr13_vgpr14_vgpr15, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr16_vgpr17_vgpr18_vgpr19 = IMPLICIT_DEF
    ; CHECK-NEXT: renamable $vgpr8_vgpr9_vgpr10_vgpr11 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 $vgpr16_vgpr17, $vgpr24_vgpr25, killed $vgpr8_vgpr9_vgpr10_vgpr11, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr28_vgpr29_vgpr30_vgpr31 = DS_READ_B128_gfx9 killed renamable $vgpr37, 6144, 0, implicit $exec :: (load (s128), addrspace 3)
    ; CHECK-NEXT: renamable $vgpr8_vgpr9_vgpr10_vgpr11 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 $vgpr18_vgpr19, $vgpr26_vgpr27, killed $vgpr8_vgpr9_vgpr10_vgpr11, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr4_vgpr5_vgpr6_vgpr7 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 $vgpr16_vgpr17, $vgpr20_vgpr21, killed $vgpr4_vgpr5_vgpr6_vgpr7, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr4_vgpr5_vgpr6_vgpr7 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 killed $vgpr18_vgpr19, killed $vgpr22_vgpr23, killed $vgpr4_vgpr5_vgpr6_vgpr7, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr0_vgpr1_vgpr2_vgpr3 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 killed $vgpr32_vgpr33, killed $vgpr24_vgpr25, killed $vgpr0_vgpr1_vgpr2_vgpr3, 0, 0, 0, implicit $mode, implicit $exec
    ; CHECK-NEXT: renamable $vgpr20 = IMPLICIT_DEF
    ; CHECK-NEXT: dead renamable $vgpr20 = V_ADD_U32_e32 killed $vgpr36, killed $vgpr20, implicit $exec
    ; CHECK-NEXT: renamable $vgpr20_vgpr21_vgpr22_vgpr23 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr38, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 2048, 0, 0, implicit $exec :: (dereferenceable load (s128), align 1, addrspace 8)
    ; CHECK-NEXT: S_ENDPGM 0, implicit killed renamable $vgpr28_vgpr29_vgpr30_vgpr31, implicit killed renamable $vgpr8_vgpr9_vgpr10_vgpr11, implicit killed renamable $vgpr12_vgpr13_vgpr14_vgpr15, implicit killed renamable $vgpr4_vgpr5_vgpr6_vgpr7, implicit killed renamable $vgpr0_vgpr1_vgpr2_vgpr3, implicit killed renamable $vgpr20_vgpr21_vgpr22_vgpr23
    %0:vgpr_32 = IMPLICIT_DEF
    %1:vgpr_32 = IMPLICIT_DEF
    %2:sgpr_128 = IMPLICIT_DEF
    %3:vgpr_32 = IMPLICIT_DEF
    %4:vreg_128_align2 = IMPLICIT_DEF
    %5:vreg_128_align2 = IMPLICIT_DEF
    %6:vreg_128_align2 = IMPLICIT_DEF
    %7:vreg_128_align2 = IMPLICIT_DEF
    %8:vreg_128_align2 = IMPLICIT_DEF
    %9:vgpr_32 = IMPLICIT_DEF
    %10:vgpr_32 = V_ADD_U32_e32 4096, %9, implicit $exec
    %11:vgpr_32 = V_ADD_U32_e32 %0, %3, implicit $exec
    %12:vgpr_32 = V_ADD_U32_e32 4096, %11, implicit $exec
    %13:vreg_128_align2 = BUFFER_LOAD_DWORDX4_OFFEN %12, %2, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (s128), align 1, addrspace 8)
    %14:vreg_128_align2 = BUFFER_LOAD_DWORDX4_OFFEN %10, %2, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (s128), align 1, addrspace 8)
    %15:vreg_128_align2 = IMPLICIT_DEF
    %16:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %15.sub0_sub1, %14.sub0_sub1, %8, 0, 0, 0, implicit $mode, implicit $exec
    %17:vreg_128_align2 = DS_READ_B128_gfx9 %1, 4096, 0, implicit $exec :: (load (s128), addrspace 3)
    dead %18:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %15.sub2_sub3, %14.sub2_sub3, %16, 0, 0, 0, implicit $mode, implicit $exec
    %19:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %15.sub0_sub1, %13.sub0_sub1, %7, 0, 0, 0, implicit $mode, implicit $exec
    %20:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %15.sub2_sub3, %13.sub2_sub3, %19, 0, 0, 0, implicit $mode, implicit $exec
    %21:vreg_128_align2 = IMPLICIT_DEF
    %22:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %21.sub0_sub1, %14.sub0_sub1, %6, 0, 0, 0, implicit $mode, implicit $exec
    %23:vreg_128_align2 = DS_READ_B128_gfx9 %1, 6144, 0, implicit $exec :: (load (s128), addrspace 3)
    %24:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %21.sub2_sub3, %14.sub2_sub3, %22, 0, 0, 0, implicit $mode, implicit $exec
    %25:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %21.sub0_sub1, %13.sub0_sub1, %5, 0, 0, 0, implicit $mode, implicit $exec
    %26:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %21.sub2_sub3, %13.sub2_sub3, %25, 0, 0, 0, implicit $mode, implicit $exec
    %27:vreg_128_align2 = contract V_MFMA_F32_16X16X32_FP8_FP8_vgprcd_e64 %17.sub0_sub1, %14.sub0_sub1, %4, 0, 0, 0, implicit $mode, implicit $exec
    %28:vgpr_32 = IMPLICIT_DEF
    dead %29:vgpr_32 = V_ADD_U32_e32 %0, %28, implicit $exec
    %30:vreg_128_align2 = BUFFER_LOAD_DWORDX4_OFFEN %9, %2, 0, 2048, 0, 0, implicit $exec :: (dereferenceable load (s128), align 1, addrspace 8)
    S_ENDPGM 0, implicit %23, implicit %24, implicit %20, implicit %26, implicit %27, implicit %30
...
