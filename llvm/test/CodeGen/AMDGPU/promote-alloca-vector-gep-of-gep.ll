; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -mtriple=amdgcn-amd-amdhsa -passes=amdgpu-promote-alloca < %s | FileCheck %s
define amdgpu_ps void @scalar_alloca_ptr_with_vector_gep_of_gep(i32 %j) #0 {
; CHECK-LABEL: define amdgpu_ps void @scalar_alloca_ptr_with_vector_gep_of_gep(
; CHECK-SAME: i32 [[J:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[SORTEDFRAGMENTS:%.*]] = freeze <20 x i32> poison
; CHECK-NEXT:    [[TMP0:%.*]] = mul i32 [[J]], 2
; CHECK-NEXT:    [[TMP1:%.*]] = mul i32 [[J]], 2
; CHECK-NEXT:    [[TMP2:%.*]] = add i32 1, [[TMP1]]
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <20 x i32> [[SORTEDFRAGMENTS]], i32 [[TMP2]]
; CHECK-NEXT:    ret void
;
entry:
  %SortedFragments = alloca [10 x <2 x i32>], align 8, addrspace(5)
  %row = getelementptr [10 x <2 x i32>], ptr addrspace(5) %SortedFragments, i32 0, i32 %j
  %elt1 = getelementptr i8, ptr addrspace(5) %row, i32 4
  %val = load i32, ptr addrspace(5) %elt1, align 4
  ret void
}

define amdgpu_ps void @scalar_alloca_ptr_with_vector_gep_of_gep3(i32 %j) #0 {
; CHECK-LABEL: define amdgpu_ps void @scalar_alloca_ptr_with_vector_gep_of_gep3(
; CHECK-SAME: i32 [[J:%.*]]) #[[ATTR0]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[SORTEDFRAGMENTS:%.*]] = freeze <16 x i32> poison
; CHECK-NEXT:    [[TMP0:%.*]] = mul i32 [[J]], 2
; CHECK-NEXT:    [[TMP1:%.*]] = add i32 8, [[TMP0]]
; CHECK-NEXT:    [[TMP2:%.*]] = mul i32 [[J]], 2
; CHECK-NEXT:    [[TMP3:%.*]] = add i32 9, [[TMP2]]
; CHECK-NEXT:    [[TMP4:%.*]] = extractelement <16 x i32> [[SORTEDFRAGMENTS]], i32 [[TMP3]]
; CHECK-NEXT:    ret void
;
entry:
  %SortedFragments = alloca [2 x [4 x <2 x i32>]], align 8, addrspace(5)
  %lvl1 = getelementptr inbounds [2 x [4 x <2 x i32>]], ptr addrspace(5) %SortedFragments, i32 0, i32 1
  %lvl2 = getelementptr inbounds [4 x <2 x i32>], ptr addrspace(5) %lvl1, i32 0, i32 %j
  %byte = getelementptr inbounds i8, ptr addrspace(5) %lvl2, i32 4
  %val  = load i32, ptr addrspace(5) %byte, align 4
  ret void
}

attributes #0 = { "amdgpu-promote-alloca-to-vector-max-regs"="32" }
