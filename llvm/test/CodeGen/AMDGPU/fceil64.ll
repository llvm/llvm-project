; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=amdgcn -verify-machineinstrs < %s | FileCheck -allow-deprecated-dag-overlap -check-prefix=SI -check-prefix=FUNC %s
; RUN: llc -mtriple=amdgcn -mcpu=bonaire -verify-machineinstrs < %s | FileCheck -allow-deprecated-dag-overlap -check-prefix=CI -check-prefix=FUNC %s
; RUN: llc -mtriple=amdgcn -mcpu=tonga -verify-machineinstrs < %s | FileCheck -allow-deprecated-dag-overlap -check-prefix=CI -check-prefix=FUNC %s

declare double @llvm.ceil.f64(double) nounwind readnone
declare <2 x double> @llvm.ceil.v2f64(<2 x double>) nounwind readnone
declare <3 x double> @llvm.ceil.v3f64(<3 x double>) nounwind readnone
declare <4 x double> @llvm.ceil.v4f64(<4 x double>) nounwind readnone
declare <8 x double> @llvm.ceil.v8f64(<8 x double>) nounwind readnone
declare <16 x double> @llvm.ceil.v16f64(<16 x double>) nounwind readnone

; FUNC-LABEL: {{^}}fceil_f64:
; CI: v_ceil_f64_e32
; SI: s_bfe_u32 [[SEXP:s[0-9]+]], {{s[0-9]+}}, 0xb0014
; SI-DAG: s_and_b32 s{{[0-9]+}}, s{{[0-9]+}}, 0x80000000
; SI-DAG: s_addk_i32 [[SEXP]], 0xfc01
; SI-DAG: s_lshr_b64 s[{{[0-9]+:[0-9]+}}], s[{{[0-9]+:[0-9]+}}], [[SEXP]]
; SI-DAG: s_andn2_b64
; SI-DAG: cmp_gt_i32
; SI-DAG: s_cselect_b32
; SI-DAG: s_cselect_b32
; SI-DAG: cmp_lt_i32
; SI-DAG: s_cselect_b32
; SI-DAG: s_cselect_b32
; SI-DAG: v_cmp_gt_f64_e64 [[FCMP:s[[0-9]+:[0-9]+]]]
; SI-DAG: v_cmp_lg_f64_e32 vcc
; SI-DAG: s_and_b64 [[AND1:s[[0-9]+:[0-9]+]]], [[FCMP]], vcc
; SI-DAG: s_and_b64 [[AND1]], [[AND1]], exec
; SI-DAG: s_cselect_b32 s{{[0-9]+}}, 0x3ff00000, 0
; SI: v_add_f64
; SI: s_endpgm
define amdgpu_kernel void @fceil_f64(ptr addrspace(1) %out, double %x) {
; SI-LABEL: fceil_f64:
; SI:       ; %bb.0:
; SI-NEXT:    s_load_dwordx4 s[4:7], s[4:5], 0x9
; SI-NEXT:    s_mov_b32 s3, 0xf000
; SI-NEXT:    s_mov_b32 s2, -1
; SI-NEXT:    s_mov_b32 s9, 0xfffff
; SI-NEXT:    v_mov_b32_e32 v0, 0
; SI-NEXT:    v_mov_b32_e32 v3, 0x3ff00000
; SI-NEXT:    s_mov_b32 s8, s2
; SI-NEXT:    s_waitcnt lgkmcnt(0)
; SI-NEXT:    s_mov_b32 s0, s4
; SI-NEXT:    s_mov_b32 s1, s5
; SI-NEXT:    s_bfe_u32 s4, s7, 0xb0014
; SI-NEXT:    s_and_b32 s10, s7, 0x80000000
; SI-NEXT:    s_add_i32 s11, s4, 0xfffffc01
; SI-NEXT:    s_lshr_b64 s[4:5], s[8:9], s11
; SI-NEXT:    s_andn2_b64 s[4:5], s[6:7], s[4:5]
; SI-NEXT:    s_cmp_lt_i32 s11, 0
; SI-NEXT:    s_cselect_b32 s4, 0, s4
; SI-NEXT:    s_cselect_b32 s5, s10, s5
; SI-NEXT:    s_cmp_gt_i32 s11, 51
; SI-NEXT:    s_cselect_b32 s5, s7, s5
; SI-NEXT:    s_cselect_b32 s4, s6, s4
; SI-NEXT:    v_cmp_gt_f64_e64 s[8:9], s[6:7], 0
; SI-NEXT:    v_cndmask_b32_e64 v4, 0, 1, s[8:9]
; SI-NEXT:    v_mov_b32_e32 v1, s4
; SI-NEXT:    v_mov_b32_e32 v2, s5
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[6:7], v[1:2]
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, vcc
; SI-NEXT:    v_and_b32_e32 v1, v4, v1
; SI-NEXT:    v_and_b32_e32 v1, 1, v1
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v1
; SI-NEXT:    v_cndmask_b32_e32 v1, 0, v3, vcc
; SI-NEXT:    v_add_f64 v[0:1], s[4:5], v[0:1]
; SI-NEXT:    buffer_store_dwordx2 v[0:1], off, s[0:3], 0
; SI-NEXT:    s_endpgm
  %y = call double @llvm.ceil.f64(double %x) nounwind readnone
  store double %y, ptr addrspace(1) %out
  ret void
}

; FUNC-LABEL: {{^}}fceil_v2f64:
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
define amdgpu_kernel void @fceil_v2f64(ptr addrspace(1) %out, <2 x double> %x) {
; SI-LABEL: fceil_v2f64:
; SI:       ; %bb.0:
; SI-NEXT:    s_load_dwordx2 s[0:1], s[4:5], 0x9
; SI-NEXT:    s_load_dwordx4 s[4:7], s[4:5], 0xd
; SI-NEXT:    s_mov_b32 s3, 0xf000
; SI-NEXT:    s_mov_b32 s2, -1
; SI-NEXT:    s_mov_b32 s9, 0xfffff
; SI-NEXT:    v_mov_b32_e32 v0, 0
; SI-NEXT:    v_mov_b32_e32 v6, 0x3ff00000
; SI-NEXT:    s_mov_b32 s8, s2
; SI-NEXT:    s_waitcnt lgkmcnt(0)
; SI-NEXT:    s_bfe_u32 s12, s7, 0xb0014
; SI-NEXT:    s_and_b32 s13, s7, 0x80000000
; SI-NEXT:    v_cmp_gt_f64_e64 s[10:11], s[6:7], 0
; SI-NEXT:    v_cndmask_b32_e64 v3, 0, 1, s[10:11]
; SI-NEXT:    v_cmp_gt_f64_e64 s[10:11], s[4:5], 0
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, s[10:11]
; SI-NEXT:    s_addk_i32 s12, 0xfc01
; SI-NEXT:    s_lshr_b64 s[10:11], s[8:9], s12
; SI-NEXT:    s_andn2_b64 s[10:11], s[6:7], s[10:11]
; SI-NEXT:    s_cmp_lt_i32 s12, 0
; SI-NEXT:    s_cselect_b32 s10, 0, s10
; SI-NEXT:    s_cselect_b32 s11, s13, s11
; SI-NEXT:    s_cmp_gt_i32 s12, 51
; SI-NEXT:    s_cselect_b32 s11, s7, s11
; SI-NEXT:    s_cselect_b32 s10, s6, s10
; SI-NEXT:    s_bfe_u32 s12, s5, 0xb0014
; SI-NEXT:    s_and_b32 s13, s5, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v1, s10
; SI-NEXT:    v_mov_b32_e32 v2, s11
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[6:7], v[1:2]
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, vcc
; SI-NEXT:    s_addk_i32 s12, 0xfc01
; SI-NEXT:    v_and_b32_e32 v1, v3, v1
; SI-NEXT:    s_lshr_b64 s[6:7], s[8:9], s12
; SI-NEXT:    v_and_b32_e32 v1, 1, v1
; SI-NEXT:    s_andn2_b64 s[6:7], s[4:5], s[6:7]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v1
; SI-NEXT:    v_cndmask_b32_e32 v1, 0, v6, vcc
; SI-NEXT:    s_cmp_lt_i32 s12, 0
; SI-NEXT:    s_cselect_b32 s6, 0, s6
; SI-NEXT:    s_cselect_b32 s7, s13, s7
; SI-NEXT:    s_cmp_gt_i32 s12, 51
; SI-NEXT:    s_cselect_b32 s7, s5, s7
; SI-NEXT:    s_cselect_b32 s6, s4, s6
; SI-NEXT:    v_add_f64 v[2:3], s[10:11], v[0:1]
; SI-NEXT:    v_mov_b32_e32 v4, s6
; SI-NEXT:    v_mov_b32_e32 v5, s7
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[4:5], v[4:5]
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, vcc
; SI-NEXT:    v_and_b32_e32 v1, v7, v1
; SI-NEXT:    v_and_b32_e32 v1, 1, v1
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v1
; SI-NEXT:    v_cndmask_b32_e32 v1, 0, v6, vcc
; SI-NEXT:    v_add_f64 v[0:1], s[6:7], v[0:1]
; SI-NEXT:    buffer_store_dwordx4 v[0:3], off, s[0:3], 0
; SI-NEXT:    s_endpgm
  %y = call <2 x double> @llvm.ceil.v2f64(<2 x double> %x) nounwind readnone
  store <2 x double> %y, ptr addrspace(1) %out
  ret void
}

; FIXME-FUNC-LABEL: {{^}}fceil_v3f64:
; FIXME-CI: v_ceil_f64_e32
; FIXME-CI: v_ceil_f64_e32
; FIXME-CI: v_ceil_f64_e32
; define amdgpu_kernel void @fceil_v3f64(ptr addrspace(1) %out, <3 x double> %x) {
;   %y = call <3 x double> @llvm.ceil.v3f64(<3 x double> %x) nounwind readnone
;   store <3 x double> %y, ptr addrspace(1) %out
;   ret void
; }

; FUNC-LABEL: {{^}}fceil_v4f64:
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
define amdgpu_kernel void @fceil_v4f64(ptr addrspace(1) %out, <4 x double> %x) {
; SI-LABEL: fceil_v4f64:
; SI:       ; %bb.0:
; SI-NEXT:    s_load_dwordx2 s[8:9], s[4:5], 0x9
; SI-NEXT:    s_load_dwordx8 s[0:7], s[4:5], 0x11
; SI-NEXT:    s_mov_b32 s11, 0xf000
; SI-NEXT:    s_mov_b32 s10, -1
; SI-NEXT:    s_mov_b32 s13, 0xfffff
; SI-NEXT:    v_mov_b32_e32 v0, 0
; SI-NEXT:    v_mov_b32_e32 v2, 0x3ff00000
; SI-NEXT:    s_mov_b32 s12, s10
; SI-NEXT:    s_waitcnt lgkmcnt(0)
; SI-NEXT:    s_bfe_u32 s16, s3, 0xb0014
; SI-NEXT:    s_and_b32 s17, s3, 0x80000000
; SI-NEXT:    v_cmp_gt_f64_e64 s[14:15], s[2:3], 0
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, s[14:15]
; SI-NEXT:    v_cmp_gt_f64_e64 s[14:15], s[0:1], 0
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, s[14:15]
; SI-NEXT:    v_cmp_gt_f64_e64 s[14:15], s[6:7], 0
; SI-NEXT:    v_cndmask_b32_e64 v9, 0, 1, s[14:15]
; SI-NEXT:    v_cmp_gt_f64_e64 s[14:15], s[4:5], 0
; SI-NEXT:    v_cndmask_b32_e64 v11, 0, 1, s[14:15]
; SI-NEXT:    s_addk_i32 s16, 0xfc01
; SI-NEXT:    s_lshr_b64 s[14:15], s[12:13], s16
; SI-NEXT:    s_andn2_b64 s[14:15], s[2:3], s[14:15]
; SI-NEXT:    s_cmp_lt_i32 s16, 0
; SI-NEXT:    s_cselect_b32 s14, 0, s14
; SI-NEXT:    s_cselect_b32 s15, s17, s15
; SI-NEXT:    s_cmp_gt_i32 s16, 51
; SI-NEXT:    s_cselect_b32 s15, s3, s15
; SI-NEXT:    s_cselect_b32 s14, s2, s14
; SI-NEXT:    s_bfe_u32 s16, s1, 0xb0014
; SI-NEXT:    s_and_b32 s17, s1, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v3, s14
; SI-NEXT:    v_mov_b32_e32 v4, s15
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[2:3], v[3:4]
; SI-NEXT:    v_cndmask_b32_e64 v3, 0, 1, vcc
; SI-NEXT:    s_addk_i32 s16, 0xfc01
; SI-NEXT:    v_and_b32_e32 v1, v1, v3
; SI-NEXT:    s_lshr_b64 s[2:3], s[12:13], s16
; SI-NEXT:    v_and_b32_e32 v1, 1, v1
; SI-NEXT:    s_andn2_b64 s[2:3], s[0:1], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v1
; SI-NEXT:    v_cndmask_b32_e32 v1, 0, v2, vcc
; SI-NEXT:    s_cmp_lt_i32 s16, 0
; SI-NEXT:    v_add_f64 v[5:6], s[14:15], v[0:1]
; SI-NEXT:    s_cselect_b32 s2, 0, s2
; SI-NEXT:    s_cselect_b32 s3, s17, s3
; SI-NEXT:    s_cmp_gt_i32 s16, 51
; SI-NEXT:    s_cselect_b32 s3, s1, s3
; SI-NEXT:    s_cselect_b32 s2, s0, s2
; SI-NEXT:    s_bfe_u32 s14, s7, 0xb0014
; SI-NEXT:    s_and_b32 s15, s7, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v4, s3
; SI-NEXT:    v_mov_b32_e32 v3, s2
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[0:1], v[3:4]
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, vcc
; SI-NEXT:    s_addk_i32 s14, 0xfc01
; SI-NEXT:    v_and_b32_e32 v1, v7, v1
; SI-NEXT:    s_lshr_b64 s[0:1], s[12:13], s14
; SI-NEXT:    v_and_b32_e32 v1, 1, v1
; SI-NEXT:    s_andn2_b64 s[0:1], s[6:7], s[0:1]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v1
; SI-NEXT:    v_cndmask_b32_e32 v1, 0, v2, vcc
; SI-NEXT:    s_cmp_lt_i32 s14, 0
; SI-NEXT:    v_add_f64 v[3:4], s[2:3], v[0:1]
; SI-NEXT:    s_cselect_b32 s0, 0, s0
; SI-NEXT:    s_cselect_b32 s1, s15, s1
; SI-NEXT:    s_cmp_gt_i32 s14, 51
; SI-NEXT:    s_cselect_b32 s1, s7, s1
; SI-NEXT:    s_cselect_b32 s0, s6, s0
; SI-NEXT:    s_bfe_u32 s2, s5, 0xb0014
; SI-NEXT:    s_and_b32 s14, s5, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v8, s1
; SI-NEXT:    v_mov_b32_e32 v7, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[6:7], v[7:8]
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, vcc
; SI-NEXT:    s_add_i32 s6, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v1, v9, v1
; SI-NEXT:    s_lshr_b64 s[2:3], s[12:13], s6
; SI-NEXT:    v_and_b32_e32 v1, 1, v1
; SI-NEXT:    s_andn2_b64 s[2:3], s[4:5], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v1
; SI-NEXT:    v_cndmask_b32_e32 v1, 0, v2, vcc
; SI-NEXT:    s_cmp_lt_i32 s6, 0
; SI-NEXT:    s_cselect_b32 s2, 0, s2
; SI-NEXT:    s_cselect_b32 s3, s14, s3
; SI-NEXT:    s_cmp_gt_i32 s6, 51
; SI-NEXT:    s_cselect_b32 s3, s5, s3
; SI-NEXT:    s_cselect_b32 s2, s4, s2
; SI-NEXT:    v_add_f64 v[9:10], s[0:1], v[0:1]
; SI-NEXT:    v_mov_b32_e32 v8, s3
; SI-NEXT:    v_mov_b32_e32 v7, s2
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[4:5], v[7:8]
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, vcc
; SI-NEXT:    v_and_b32_e32 v1, v11, v1
; SI-NEXT:    v_and_b32_e32 v1, 1, v1
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v1
; SI-NEXT:    v_cndmask_b32_e32 v1, 0, v2, vcc
; SI-NEXT:    v_add_f64 v[7:8], s[2:3], v[0:1]
; SI-NEXT:    buffer_store_dwordx4 v[7:10], off, s[8:11], 0 offset:16
; SI-NEXT:    buffer_store_dwordx4 v[3:6], off, s[8:11], 0
; SI-NEXT:    s_endpgm
  %y = call <4 x double> @llvm.ceil.v4f64(<4 x double> %x) nounwind readnone
  store <4 x double> %y, ptr addrspace(1) %out
  ret void
}

; FUNC-LABEL: {{^}}fceil_v8f64:
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
define amdgpu_kernel void @fceil_v8f64(ptr addrspace(1) %out, <8 x double> %x) {
; SI-LABEL: fceil_v8f64:
; SI:       ; %bb.0:
; SI-NEXT:    s_load_dwordx2 s[16:17], s[4:5], 0x9
; SI-NEXT:    s_load_dwordx16 s[0:15], s[4:5], 0x19
; SI-NEXT:    s_mov_b32 s19, 0xf000
; SI-NEXT:    s_mov_b32 s18, -1
; SI-NEXT:    s_mov_b32 s21, 0xfffff
; SI-NEXT:    v_mov_b32_e32 v4, 0
; SI-NEXT:    v_mov_b32_e32 v6, 0x3ff00000
; SI-NEXT:    s_mov_b32 s20, s18
; SI-NEXT:    s_waitcnt lgkmcnt(0)
; SI-NEXT:    s_bfe_u32 s24, s3, 0xb0014
; SI-NEXT:    s_and_b32 s25, s3, 0x80000000
; SI-NEXT:    v_cmp_gt_f64_e64 s[22:23], s[2:3], 0
; SI-NEXT:    v_cndmask_b32_e64 v0, 0, 1, s[22:23]
; SI-NEXT:    v_cmp_gt_f64_e64 s[22:23], s[0:1], 0
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, s[22:23]
; SI-NEXT:    v_cmp_gt_f64_e64 s[22:23], s[6:7], 0
; SI-NEXT:    v_cndmask_b32_e64 v8, 0, 1, s[22:23]
; SI-NEXT:    v_cmp_gt_f64_e64 s[22:23], s[4:5], 0
; SI-NEXT:    v_cndmask_b32_e64 v10, 0, 1, s[22:23]
; SI-NEXT:    v_cmp_gt_f64_e64 s[22:23], s[10:11], 0
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, s[22:23]
; SI-NEXT:    v_cmp_gt_f64_e64 s[22:23], s[8:9], 0
; SI-NEXT:    v_cndmask_b32_e64 v9, 0, 1, s[22:23]
; SI-NEXT:    v_cmp_gt_f64_e64 s[22:23], s[14:15], 0
; SI-NEXT:    v_cndmask_b32_e64 v11, 0, 1, s[22:23]
; SI-NEXT:    v_cmp_gt_f64_e64 s[22:23], s[12:13], 0
; SI-NEXT:    v_cndmask_b32_e64 v12, 0, 1, s[22:23]
; SI-NEXT:    s_addk_i32 s24, 0xfc01
; SI-NEXT:    s_lshr_b64 s[22:23], s[20:21], s24
; SI-NEXT:    s_andn2_b64 s[22:23], s[2:3], s[22:23]
; SI-NEXT:    s_cmp_lt_i32 s24, 0
; SI-NEXT:    s_cselect_b32 s22, 0, s22
; SI-NEXT:    s_cselect_b32 s23, s25, s23
; SI-NEXT:    s_cmp_gt_i32 s24, 51
; SI-NEXT:    s_cselect_b32 s23, s3, s23
; SI-NEXT:    s_cselect_b32 s22, s2, s22
; SI-NEXT:    s_bfe_u32 s24, s1, 0xb0014
; SI-NEXT:    s_and_b32 s25, s1, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v2, s22
; SI-NEXT:    v_mov_b32_e32 v3, s23
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[2:3], v[2:3]
; SI-NEXT:    v_cndmask_b32_e64 v2, 0, 1, vcc
; SI-NEXT:    s_addk_i32 s24, 0xfc01
; SI-NEXT:    v_and_b32_e32 v0, v0, v2
; SI-NEXT:    s_lshr_b64 s[2:3], s[20:21], s24
; SI-NEXT:    v_and_b32_e32 v0, 1, v0
; SI-NEXT:    s_andn2_b64 s[2:3], s[0:1], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v0
; SI-NEXT:    v_cndmask_b32_e32 v5, 0, v6, vcc
; SI-NEXT:    s_cmp_lt_i32 s24, 0
; SI-NEXT:    v_add_f64 v[2:3], s[22:23], v[4:5]
; SI-NEXT:    s_cselect_b32 s2, 0, s2
; SI-NEXT:    s_cselect_b32 s3, s25, s3
; SI-NEXT:    s_cmp_gt_i32 s24, 51
; SI-NEXT:    s_cselect_b32 s3, s1, s3
; SI-NEXT:    s_cselect_b32 s2, s0, s2
; SI-NEXT:    s_bfe_u32 s22, s7, 0xb0014
; SI-NEXT:    s_and_b32 s23, s7, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v14, s3
; SI-NEXT:    v_mov_b32_e32 v13, s2
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[0:1], v[13:14]
; SI-NEXT:    v_cndmask_b32_e64 v0, 0, 1, vcc
; SI-NEXT:    s_addk_i32 s22, 0xfc01
; SI-NEXT:    v_and_b32_e32 v0, v1, v0
; SI-NEXT:    s_lshr_b64 s[0:1], s[20:21], s22
; SI-NEXT:    v_and_b32_e32 v0, 1, v0
; SI-NEXT:    s_andn2_b64 s[0:1], s[6:7], s[0:1]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v0
; SI-NEXT:    v_cndmask_b32_e32 v5, 0, v6, vcc
; SI-NEXT:    s_cmp_lt_i32 s22, 0
; SI-NEXT:    v_add_f64 v[0:1], s[2:3], v[4:5]
; SI-NEXT:    s_cselect_b32 s0, 0, s0
; SI-NEXT:    s_cselect_b32 s1, s23, s1
; SI-NEXT:    s_cmp_gt_i32 s22, 51
; SI-NEXT:    s_cselect_b32 s1, s7, s1
; SI-NEXT:    s_cselect_b32 s0, s6, s0
; SI-NEXT:    s_bfe_u32 s2, s5, 0xb0014
; SI-NEXT:    s_and_b32 s22, s5, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v14, s1
; SI-NEXT:    v_mov_b32_e32 v13, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[6:7], v[13:14]
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, vcc
; SI-NEXT:    s_add_i32 s6, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v5, v8, v5
; SI-NEXT:    s_lshr_b64 s[2:3], s[20:21], s6
; SI-NEXT:    v_and_b32_e32 v5, 1, v5
; SI-NEXT:    s_andn2_b64 s[2:3], s[4:5], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v5
; SI-NEXT:    v_cndmask_b32_e32 v5, 0, v6, vcc
; SI-NEXT:    s_cmp_lt_i32 s6, 0
; SI-NEXT:    v_add_f64 v[15:16], s[0:1], v[4:5]
; SI-NEXT:    s_cselect_b32 s0, 0, s2
; SI-NEXT:    s_cselect_b32 s1, s22, s3
; SI-NEXT:    s_cmp_gt_i32 s6, 51
; SI-NEXT:    s_cselect_b32 s1, s5, s1
; SI-NEXT:    s_cselect_b32 s0, s4, s0
; SI-NEXT:    s_bfe_u32 s2, s11, 0xb0014
; SI-NEXT:    s_and_b32 s6, s11, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v14, s1
; SI-NEXT:    v_mov_b32_e32 v13, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[4:5], v[13:14]
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, vcc
; SI-NEXT:    s_add_i32 s4, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v5, v10, v5
; SI-NEXT:    s_lshr_b64 s[2:3], s[20:21], s4
; SI-NEXT:    v_and_b32_e32 v5, 1, v5
; SI-NEXT:    s_andn2_b64 s[2:3], s[10:11], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v5
; SI-NEXT:    v_cndmask_b32_e32 v5, 0, v6, vcc
; SI-NEXT:    s_cmp_lt_i32 s4, 0
; SI-NEXT:    v_add_f64 v[13:14], s[0:1], v[4:5]
; SI-NEXT:    s_cselect_b32 s0, 0, s2
; SI-NEXT:    s_cselect_b32 s1, s6, s3
; SI-NEXT:    s_cmp_gt_i32 s4, 51
; SI-NEXT:    s_cselect_b32 s1, s11, s1
; SI-NEXT:    s_cselect_b32 s0, s10, s0
; SI-NEXT:    s_bfe_u32 s2, s9, 0xb0014
; SI-NEXT:    s_and_b32 s4, s9, 0x80000000
; SI-NEXT:    buffer_store_dwordx4 v[13:16], off, s[16:19], 0 offset:16
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v14, s1
; SI-NEXT:    v_mov_b32_e32 v13, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[10:11], v[13:14]
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, vcc
; SI-NEXT:    s_add_i32 s5, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v5, v7, v5
; SI-NEXT:    s_lshr_b64 s[2:3], s[20:21], s5
; SI-NEXT:    v_and_b32_e32 v5, 1, v5
; SI-NEXT:    s_andn2_b64 s[2:3], s[8:9], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v5
; SI-NEXT:    v_cndmask_b32_e32 v5, 0, v6, vcc
; SI-NEXT:    s_cmp_lt_i32 s5, 0
; SI-NEXT:    v_add_f64 v[15:16], s[0:1], v[4:5]
; SI-NEXT:    s_cselect_b32 s0, 0, s2
; SI-NEXT:    s_cselect_b32 s1, s4, s3
; SI-NEXT:    s_cmp_gt_i32 s5, 51
; SI-NEXT:    s_cselect_b32 s1, s9, s1
; SI-NEXT:    s_cselect_b32 s0, s8, s0
; SI-NEXT:    s_bfe_u32 s2, s15, 0xb0014
; SI-NEXT:    s_and_b32 s4, s15, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v8, s1
; SI-NEXT:    v_mov_b32_e32 v7, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[8:9], v[7:8]
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, vcc
; SI-NEXT:    s_add_i32 s5, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v5, v9, v5
; SI-NEXT:    s_lshr_b64 s[2:3], s[20:21], s5
; SI-NEXT:    v_and_b32_e32 v5, 1, v5
; SI-NEXT:    s_andn2_b64 s[2:3], s[14:15], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v5
; SI-NEXT:    v_cndmask_b32_e32 v5, 0, v6, vcc
; SI-NEXT:    s_cmp_lt_i32 s5, 0
; SI-NEXT:    v_add_f64 v[13:14], s[0:1], v[4:5]
; SI-NEXT:    s_cselect_b32 s0, 0, s2
; SI-NEXT:    s_cselect_b32 s1, s4, s3
; SI-NEXT:    s_cmp_gt_i32 s5, 51
; SI-NEXT:    s_cselect_b32 s1, s15, s1
; SI-NEXT:    s_cselect_b32 s0, s14, s0
; SI-NEXT:    s_bfe_u32 s2, s13, 0xb0014
; SI-NEXT:    s_and_b32 s4, s13, 0x80000000
; SI-NEXT:    buffer_store_dwordx4 v[13:16], off, s[16:19], 0 offset:32
; SI-NEXT:    v_mov_b32_e32 v8, s1
; SI-NEXT:    v_mov_b32_e32 v7, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[14:15], v[7:8]
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, vcc
; SI-NEXT:    s_add_i32 s5, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v5, v11, v5
; SI-NEXT:    s_lshr_b64 s[2:3], s[20:21], s5
; SI-NEXT:    v_and_b32_e32 v5, 1, v5
; SI-NEXT:    s_andn2_b64 s[2:3], s[12:13], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v5
; SI-NEXT:    v_cndmask_b32_e32 v5, 0, v6, vcc
; SI-NEXT:    s_cmp_lt_i32 s5, 0
; SI-NEXT:    s_cselect_b32 s2, 0, s2
; SI-NEXT:    s_cselect_b32 s3, s4, s3
; SI-NEXT:    s_cmp_gt_i32 s5, 51
; SI-NEXT:    s_cselect_b32 s3, s13, s3
; SI-NEXT:    s_cselect_b32 s2, s12, s2
; SI-NEXT:    v_add_f64 v[7:8], s[0:1], v[4:5]
; SI-NEXT:    v_mov_b32_e32 v10, s3
; SI-NEXT:    v_mov_b32_e32 v9, s2
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[12:13], v[9:10]
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, vcc
; SI-NEXT:    v_and_b32_e32 v5, v12, v5
; SI-NEXT:    v_and_b32_e32 v5, 1, v5
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v5
; SI-NEXT:    v_cndmask_b32_e32 v5, 0, v6, vcc
; SI-NEXT:    v_add_f64 v[5:6], s[2:3], v[4:5]
; SI-NEXT:    buffer_store_dwordx4 v[5:8], off, s[16:19], 0 offset:48
; SI-NEXT:    buffer_store_dwordx4 v[0:3], off, s[16:19], 0
; SI-NEXT:    s_endpgm
  %y = call <8 x double> @llvm.ceil.v8f64(<8 x double> %x) nounwind readnone
  store <8 x double> %y, ptr addrspace(1) %out
  ret void
}

; FUNC-LABEL: {{^}}fceil_v16f64:
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
; CI: v_ceil_f64_e32
define amdgpu_kernel void @fceil_v16f64(ptr addrspace(1) %out, <16 x double> %x) {
; SI-LABEL: fceil_v16f64:
; SI:       ; %bb.0:
; SI-NEXT:    s_load_dwordx2 s[36:37], s[4:5], 0x9
; SI-NEXT:    s_load_dwordx16 s[16:31], s[4:5], 0x29
; SI-NEXT:    s_load_dwordx16 s[0:15], s[4:5], 0x39
; SI-NEXT:    s_mov_b32 s39, 0xf000
; SI-NEXT:    s_mov_b32 s38, -1
; SI-NEXT:    s_mov_b32 s35, 0xfffff
; SI-NEXT:    v_mov_b32_e32 v8, 0
; SI-NEXT:    v_mov_b32_e32 v10, 0x3ff00000
; SI-NEXT:    s_mov_b32 s34, s38
; SI-NEXT:    s_waitcnt lgkmcnt(0)
; SI-NEXT:    s_bfe_u32 s40, s19, 0xb0014
; SI-NEXT:    s_and_b32 s33, s19, 0x80000000
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[18:19], 0
; SI-NEXT:    v_cndmask_b32_e64 v0, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[16:17], 0
; SI-NEXT:    v_cndmask_b32_e64 v1, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[22:23], 0
; SI-NEXT:    v_cndmask_b32_e64 v4, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[20:21], 0
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[26:27], 0
; SI-NEXT:    v_cndmask_b32_e64 v11, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[24:25], 0
; SI-NEXT:    v_cndmask_b32_e64 v12, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[30:31], 0
; SI-NEXT:    v_cndmask_b32_e64 v13, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[28:29], 0
; SI-NEXT:    v_cndmask_b32_e64 v14, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[2:3], 0
; SI-NEXT:    v_cndmask_b32_e64 v15, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[0:1], 0
; SI-NEXT:    v_cndmask_b32_e64 v16, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[6:7], 0
; SI-NEXT:    v_cndmask_b32_e64 v17, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[4:5], 0
; SI-NEXT:    v_cndmask_b32_e64 v18, 0, 1, s[42:43]
; SI-NEXT:    v_cmp_gt_f64_e64 s[42:43], s[10:11], 0
; SI-NEXT:    v_cndmask_b32_e64 v19, 0, 1, s[42:43]
; SI-NEXT:    s_add_i32 s42, s40, 0xfffffc01
; SI-NEXT:    s_lshr_b64 s[40:41], s[34:35], s42
; SI-NEXT:    s_andn2_b64 s[40:41], s[18:19], s[40:41]
; SI-NEXT:    s_cmp_lt_i32 s42, 0
; SI-NEXT:    s_cselect_b32 s40, 0, s40
; SI-NEXT:    s_cselect_b32 s33, s33, s41
; SI-NEXT:    s_cmp_gt_i32 s42, 51
; SI-NEXT:    s_cselect_b32 s41, s19, s33
; SI-NEXT:    s_cselect_b32 s40, s18, s40
; SI-NEXT:    s_bfe_u32 s33, s17, 0xb0014
; SI-NEXT:    s_and_b32 s42, s17, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v2, s40
; SI-NEXT:    v_mov_b32_e32 v3, s41
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[18:19], v[2:3]
; SI-NEXT:    v_cndmask_b32_e64 v2, 0, 1, vcc
; SI-NEXT:    s_addk_i32 s33, 0xfc01
; SI-NEXT:    v_and_b32_e32 v0, v0, v2
; SI-NEXT:    s_lshr_b64 s[18:19], s[34:35], s33
; SI-NEXT:    v_and_b32_e32 v0, 1, v0
; SI-NEXT:    s_andn2_b64 s[18:19], s[16:17], s[18:19]
; SI-NEXT:    s_cmp_lt_i32 s33, 0
; SI-NEXT:    s_cselect_b32 s19, s42, s19
; SI-NEXT:    s_cselect_b32 s18, 0, s18
; SI-NEXT:    s_cmp_gt_i32 s33, 51
; SI-NEXT:    s_cselect_b32 s19, s17, s19
; SI-NEXT:    s_cselect_b32 s18, s16, s18
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v0
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[16:17], v[2:3]
; SI-NEXT:    v_add_f64 v[2:3], s[40:41], v[8:9]
; SI-NEXT:    s_bfe_u32 s16, s23, 0xb0014
; SI-NEXT:    s_and_b32 s33, s23, 0x80000000
; SI-NEXT:    v_cndmask_b32_e64 v0, 0, 1, vcc
; SI-NEXT:    s_add_i32 s40, s16, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v0, v1, v0
; SI-NEXT:    v_and_b32_e32 v0, 1, v0
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v0
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_lshr_b64 s[16:17], s[34:35], s40
; SI-NEXT:    s_andn2_b64 s[16:17], s[22:23], s[16:17]
; SI-NEXT:    s_cmp_lt_i32 s40, 0
; SI-NEXT:    v_add_f64 v[0:1], s[18:19], v[8:9]
; SI-NEXT:    s_cselect_b32 s16, 0, s16
; SI-NEXT:    s_cselect_b32 s17, s33, s17
; SI-NEXT:    s_cmp_gt_i32 s40, 51
; SI-NEXT:    s_cselect_b32 s17, s23, s17
; SI-NEXT:    s_cselect_b32 s16, s22, s16
; SI-NEXT:    s_bfe_u32 s18, s21, 0xb0014
; SI-NEXT:    s_and_b32 s33, s21, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v6, s16
; SI-NEXT:    v_mov_b32_e32 v7, s17
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[22:23], v[6:7]
; SI-NEXT:    v_cndmask_b32_e64 v6, 0, 1, vcc
; SI-NEXT:    s_add_i32 s22, s18, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v4, v4, v6
; SI-NEXT:    s_lshr_b64 s[18:19], s[34:35], s22
; SI-NEXT:    v_and_b32_e32 v4, 1, v4
; SI-NEXT:    s_andn2_b64 s[18:19], s[20:21], s[18:19]
; SI-NEXT:    s_cmp_lt_i32 s22, 0
; SI-NEXT:    s_cselect_b32 s19, s33, s19
; SI-NEXT:    s_cselect_b32 s18, 0, s18
; SI-NEXT:    s_cmp_gt_i32 s22, 51
; SI-NEXT:    s_cselect_b32 s19, s21, s19
; SI-NEXT:    s_cselect_b32 s18, s20, s18
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v4
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    v_mov_b32_e32 v6, s18
; SI-NEXT:    v_mov_b32_e32 v7, s19
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[20:21], v[6:7]
; SI-NEXT:    v_cndmask_b32_e64 v4, 0, 1, vcc
; SI-NEXT:    v_and_b32_e32 v4, v5, v4
; SI-NEXT:    v_and_b32_e32 v4, 1, v4
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v4
; SI-NEXT:    v_add_f64 v[6:7], s[16:17], v[8:9]
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    v_add_f64 v[4:5], s[18:19], v[8:9]
; SI-NEXT:    buffer_store_dwordx4 v[4:7], off, s[36:39], 0 offset:16
; SI-NEXT:    v_cmp_gt_f64_e64 s[16:17], s[8:9], 0
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, s[16:17]
; SI-NEXT:    v_cmp_gt_f64_e64 s[16:17], s[14:15], 0
; SI-NEXT:    v_cndmask_b32_e64 v4, 0, 1, s[16:17]
; SI-NEXT:    s_bfe_u32 s16, s27, 0xb0014
; SI-NEXT:    s_and_b32 s18, s27, 0x80000000
; SI-NEXT:    s_add_i32 s19, s16, 0xfffffc01
; SI-NEXT:    s_lshr_b64 s[16:17], s[34:35], s19
; SI-NEXT:    s_andn2_b64 s[16:17], s[26:27], s[16:17]
; SI-NEXT:    s_cmp_lt_i32 s19, 0
; SI-NEXT:    s_cselect_b32 s16, 0, s16
; SI-NEXT:    s_cselect_b32 s17, s18, s17
; SI-NEXT:    s_cmp_gt_i32 s19, 51
; SI-NEXT:    s_cselect_b32 s17, s27, s17
; SI-NEXT:    s_cselect_b32 s16, s26, s16
; SI-NEXT:    s_bfe_u32 s18, s25, 0xb0014
; SI-NEXT:    s_and_b32 s20, s25, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v6, s16
; SI-NEXT:    v_mov_b32_e32 v7, s17
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[26:27], v[6:7]
; SI-NEXT:    v_cndmask_b32_e64 v6, 0, 1, vcc
; SI-NEXT:    s_add_i32 s21, s18, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v6, v11, v6
; SI-NEXT:    s_lshr_b64 s[18:19], s[34:35], s21
; SI-NEXT:    v_and_b32_e32 v6, 1, v6
; SI-NEXT:    s_andn2_b64 s[18:19], s[24:25], s[18:19]
; SI-NEXT:    s_cmp_lt_i32 s21, 0
; SI-NEXT:    s_cselect_b32 s19, s20, s19
; SI-NEXT:    s_cselect_b32 s18, 0, s18
; SI-NEXT:    s_cmp_gt_i32 s21, 51
; SI-NEXT:    s_cselect_b32 s19, s25, s19
; SI-NEXT:    s_cselect_b32 s18, s24, s18
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v6
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    v_mov_b32_e32 v6, s18
; SI-NEXT:    v_mov_b32_e32 v7, s19
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[24:25], v[6:7]
; SI-NEXT:    v_cndmask_b32_e64 v6, 0, 1, vcc
; SI-NEXT:    v_and_b32_e32 v6, v12, v6
; SI-NEXT:    v_and_b32_e32 v6, 1, v6
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v6
; SI-NEXT:    v_add_f64 v[22:23], s[16:17], v[8:9]
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    v_add_f64 v[20:21], s[18:19], v[8:9]
; SI-NEXT:    buffer_store_dwordx4 v[20:23], off, s[36:39], 0 offset:32
; SI-NEXT:    v_cmp_gt_f64_e64 s[16:17], s[12:13], 0
; SI-NEXT:    v_cndmask_b32_e64 v6, 0, 1, s[16:17]
; SI-NEXT:    s_bfe_u32 s16, s31, 0xb0014
; SI-NEXT:    s_and_b32 s18, s31, 0x80000000
; SI-NEXT:    s_add_i32 s19, s16, 0xfffffc01
; SI-NEXT:    s_lshr_b64 s[16:17], s[34:35], s19
; SI-NEXT:    s_andn2_b64 s[16:17], s[30:31], s[16:17]
; SI-NEXT:    s_cmp_lt_i32 s19, 0
; SI-NEXT:    s_cselect_b32 s16, 0, s16
; SI-NEXT:    s_cselect_b32 s17, s18, s17
; SI-NEXT:    s_cmp_gt_i32 s19, 51
; SI-NEXT:    s_cselect_b32 s17, s31, s17
; SI-NEXT:    s_cselect_b32 s16, s30, s16
; SI-NEXT:    s_bfe_u32 s18, s29, 0xb0014
; SI-NEXT:    s_and_b32 s20, s29, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v11, s16
; SI-NEXT:    v_mov_b32_e32 v12, s17
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[30:31], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, vcc
; SI-NEXT:    s_add_i32 s21, s18, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v7, v13, v7
; SI-NEXT:    s_lshr_b64 s[18:19], s[34:35], s21
; SI-NEXT:    v_and_b32_e32 v7, 1, v7
; SI-NEXT:    s_andn2_b64 s[18:19], s[28:29], s[18:19]
; SI-NEXT:    s_cmp_lt_i32 s21, 0
; SI-NEXT:    s_cselect_b32 s19, s20, s19
; SI-NEXT:    s_cselect_b32 s18, 0, s18
; SI-NEXT:    s_cmp_gt_i32 s21, 51
; SI-NEXT:    s_cselect_b32 s19, s29, s19
; SI-NEXT:    s_cselect_b32 s18, s28, s18
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v7
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    v_mov_b32_e32 v11, s18
; SI-NEXT:    v_mov_b32_e32 v12, s19
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[28:29], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, vcc
; SI-NEXT:    v_and_b32_e32 v7, v14, v7
; SI-NEXT:    v_add_f64 v[13:14], s[16:17], v[8:9]
; SI-NEXT:    s_bfe_u32 s16, s3, 0xb0014
; SI-NEXT:    s_and_b32 s20, s3, 0x80000000
; SI-NEXT:    s_add_i32 s21, s16, 0xfffffc01
; SI-NEXT:    s_lshr_b64 s[16:17], s[34:35], s21
; SI-NEXT:    v_and_b32_e32 v7, 1, v7
; SI-NEXT:    s_andn2_b64 s[16:17], s[2:3], s[16:17]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v7
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_cmp_lt_i32 s21, 0
; SI-NEXT:    v_add_f64 v[11:12], s[18:19], v[8:9]
; SI-NEXT:    s_cselect_b32 s16, 0, s16
; SI-NEXT:    s_cselect_b32 s17, s20, s17
; SI-NEXT:    s_cmp_gt_i32 s21, 51
; SI-NEXT:    s_cselect_b32 s17, s3, s17
; SI-NEXT:    s_cselect_b32 s16, s2, s16
; SI-NEXT:    s_bfe_u32 s18, s1, 0xb0014
; SI-NEXT:    s_and_b32 s19, s1, 0x80000000
; SI-NEXT:    buffer_store_dwordx4 v[11:14], off, s[36:39], 0 offset:48
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v11, s16
; SI-NEXT:    v_mov_b32_e32 v12, s17
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[2:3], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, vcc
; SI-NEXT:    s_addk_i32 s18, 0xfc01
; SI-NEXT:    v_and_b32_e32 v7, v15, v7
; SI-NEXT:    s_lshr_b64 s[2:3], s[34:35], s18
; SI-NEXT:    v_and_b32_e32 v7, 1, v7
; SI-NEXT:    s_andn2_b64 s[2:3], s[0:1], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v7
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_cmp_lt_i32 s18, 0
; SI-NEXT:    v_add_f64 v[13:14], s[16:17], v[8:9]
; SI-NEXT:    s_cselect_b32 s2, 0, s2
; SI-NEXT:    s_cselect_b32 s3, s19, s3
; SI-NEXT:    s_cmp_gt_i32 s18, 51
; SI-NEXT:    s_cselect_b32 s3, s1, s3
; SI-NEXT:    s_cselect_b32 s2, s0, s2
; SI-NEXT:    s_bfe_u32 s16, s7, 0xb0014
; SI-NEXT:    s_and_b32 s17, s7, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v12, s3
; SI-NEXT:    v_mov_b32_e32 v11, s2
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[0:1], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, vcc
; SI-NEXT:    s_addk_i32 s16, 0xfc01
; SI-NEXT:    v_and_b32_e32 v7, v16, v7
; SI-NEXT:    s_lshr_b64 s[0:1], s[34:35], s16
; SI-NEXT:    v_and_b32_e32 v7, 1, v7
; SI-NEXT:    s_andn2_b64 s[0:1], s[6:7], s[0:1]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v7
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_cmp_lt_i32 s16, 0
; SI-NEXT:    v_add_f64 v[11:12], s[2:3], v[8:9]
; SI-NEXT:    s_cselect_b32 s0, 0, s0
; SI-NEXT:    s_cselect_b32 s1, s17, s1
; SI-NEXT:    s_cmp_gt_i32 s16, 51
; SI-NEXT:    s_cselect_b32 s1, s7, s1
; SI-NEXT:    s_cselect_b32 s0, s6, s0
; SI-NEXT:    s_bfe_u32 s2, s5, 0xb0014
; SI-NEXT:    s_and_b32 s16, s5, 0x80000000
; SI-NEXT:    buffer_store_dwordx4 v[11:14], off, s[36:39], 0 offset:64
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v12, s1
; SI-NEXT:    v_mov_b32_e32 v11, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[6:7], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, vcc
; SI-NEXT:    s_add_i32 s6, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v7, v17, v7
; SI-NEXT:    s_lshr_b64 s[2:3], s[34:35], s6
; SI-NEXT:    v_and_b32_e32 v7, 1, v7
; SI-NEXT:    s_andn2_b64 s[2:3], s[4:5], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v7
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_cmp_lt_i32 s6, 0
; SI-NEXT:    v_add_f64 v[13:14], s[0:1], v[8:9]
; SI-NEXT:    s_cselect_b32 s0, 0, s2
; SI-NEXT:    s_cselect_b32 s1, s16, s3
; SI-NEXT:    s_cmp_gt_i32 s6, 51
; SI-NEXT:    s_cselect_b32 s1, s5, s1
; SI-NEXT:    s_cselect_b32 s0, s4, s0
; SI-NEXT:    s_bfe_u32 s2, s11, 0xb0014
; SI-NEXT:    s_and_b32 s6, s11, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v12, s1
; SI-NEXT:    v_mov_b32_e32 v11, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[4:5], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, vcc
; SI-NEXT:    s_add_i32 s4, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v7, v18, v7
; SI-NEXT:    s_lshr_b64 s[2:3], s[34:35], s4
; SI-NEXT:    v_and_b32_e32 v7, 1, v7
; SI-NEXT:    s_andn2_b64 s[2:3], s[10:11], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v7
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_cmp_lt_i32 s4, 0
; SI-NEXT:    v_add_f64 v[11:12], s[0:1], v[8:9]
; SI-NEXT:    s_cselect_b32 s0, 0, s2
; SI-NEXT:    s_cselect_b32 s1, s6, s3
; SI-NEXT:    s_cmp_gt_i32 s4, 51
; SI-NEXT:    s_cselect_b32 s1, s11, s1
; SI-NEXT:    s_cselect_b32 s0, s10, s0
; SI-NEXT:    s_bfe_u32 s2, s9, 0xb0014
; SI-NEXT:    s_and_b32 s4, s9, 0x80000000
; SI-NEXT:    buffer_store_dwordx4 v[11:14], off, s[36:39], 0 offset:80
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v12, s1
; SI-NEXT:    v_mov_b32_e32 v11, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[10:11], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, vcc
; SI-NEXT:    s_add_i32 s5, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v7, v19, v7
; SI-NEXT:    s_lshr_b64 s[2:3], s[34:35], s5
; SI-NEXT:    v_and_b32_e32 v7, 1, v7
; SI-NEXT:    s_andn2_b64 s[2:3], s[8:9], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v7
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_cmp_lt_i32 s5, 0
; SI-NEXT:    v_add_f64 v[13:14], s[0:1], v[8:9]
; SI-NEXT:    s_cselect_b32 s0, 0, s2
; SI-NEXT:    s_cselect_b32 s1, s4, s3
; SI-NEXT:    s_cmp_gt_i32 s5, 51
; SI-NEXT:    s_cselect_b32 s1, s9, s1
; SI-NEXT:    s_cselect_b32 s0, s8, s0
; SI-NEXT:    s_bfe_u32 s2, s15, 0xb0014
; SI-NEXT:    s_and_b32 s4, s15, 0x80000000
; SI-NEXT:    v_mov_b32_e32 v12, s1
; SI-NEXT:    v_mov_b32_e32 v11, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[8:9], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v7, 0, 1, vcc
; SI-NEXT:    s_add_i32 s5, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v5, v5, v7
; SI-NEXT:    s_lshr_b64 s[2:3], s[34:35], s5
; SI-NEXT:    v_and_b32_e32 v5, 1, v5
; SI-NEXT:    s_andn2_b64 s[2:3], s[14:15], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v5
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_cmp_lt_i32 s5, 0
; SI-NEXT:    v_add_f64 v[11:12], s[0:1], v[8:9]
; SI-NEXT:    s_cselect_b32 s0, 0, s2
; SI-NEXT:    s_cselect_b32 s1, s4, s3
; SI-NEXT:    s_cmp_gt_i32 s5, 51
; SI-NEXT:    s_cselect_b32 s1, s15, s1
; SI-NEXT:    s_cselect_b32 s0, s14, s0
; SI-NEXT:    s_bfe_u32 s2, s13, 0xb0014
; SI-NEXT:    s_and_b32 s4, s13, 0x80000000
; SI-NEXT:    buffer_store_dwordx4 v[11:14], off, s[36:39], 0 offset:96
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v12, s1
; SI-NEXT:    v_mov_b32_e32 v11, s0
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[14:15], v[11:12]
; SI-NEXT:    v_cndmask_b32_e64 v5, 0, 1, vcc
; SI-NEXT:    s_add_i32 s5, s2, 0xfffffc01
; SI-NEXT:    v_and_b32_e32 v4, v4, v5
; SI-NEXT:    s_lshr_b64 s[2:3], s[34:35], s5
; SI-NEXT:    v_and_b32_e32 v4, 1, v4
; SI-NEXT:    s_andn2_b64 s[2:3], s[12:13], s[2:3]
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v4
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    s_cmp_lt_i32 s5, 0
; SI-NEXT:    s_cselect_b32 s2, 0, s2
; SI-NEXT:    s_cselect_b32 s3, s4, s3
; SI-NEXT:    s_cmp_gt_i32 s5, 51
; SI-NEXT:    s_cselect_b32 s3, s13, s3
; SI-NEXT:    s_cselect_b32 s2, s12, s2
; SI-NEXT:    v_add_f64 v[11:12], s[0:1], v[8:9]
; SI-NEXT:    v_mov_b32_e32 v5, s3
; SI-NEXT:    v_mov_b32_e32 v4, s2
; SI-NEXT:    v_cmp_lg_f64_e32 vcc, s[12:13], v[4:5]
; SI-NEXT:    v_cndmask_b32_e64 v4, 0, 1, vcc
; SI-NEXT:    v_and_b32_e32 v4, v6, v4
; SI-NEXT:    v_and_b32_e32 v4, 1, v4
; SI-NEXT:    v_cmp_eq_u32_e32 vcc, 1, v4
; SI-NEXT:    v_cndmask_b32_e32 v9, 0, v10, vcc
; SI-NEXT:    v_add_f64 v[9:10], s[2:3], v[8:9]
; SI-NEXT:    buffer_store_dwordx4 v[9:12], off, s[36:39], 0 offset:112
; SI-NEXT:    buffer_store_dwordx4 v[0:3], off, s[36:39], 0
; SI-NEXT:    s_endpgm
  %y = call <16 x double> @llvm.ceil.v16f64(<16 x double> %x) nounwind readnone
  store <16 x double> %y, ptr addrspace(1) %out
  ret void
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CI: {{.*}}
; FUNC: {{.*}}
