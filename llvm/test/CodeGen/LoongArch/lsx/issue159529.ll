; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc --mtriple=loongarch32 --mattr=+32s,+lsx < %s | FileCheck %s
; RUN: llc --mtriple=loongarch64 --mattr=+lsx < %s | FileCheck %s

define <64 x i32> @test1(<64 x i32> %0) nounwind {
; CHECK-LABEL: test1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vld $vr8, $sp, 0
; CHECK-NEXT:    vld $vr9, $sp, 16
; CHECK-NEXT:    vld $vr10, $sp, 32
; CHECK-NEXT:    vld $vr11, $sp, 48
; CHECK-NEXT:    vld $vr12, $sp, 112
; CHECK-NEXT:    vld $vr13, $sp, 96
; CHECK-NEXT:    vld $vr14, $sp, 80
; CHECK-NEXT:    vld $vr15, $sp, 64
; CHECK-NEXT:    vst $vr12, $a0, 240
; CHECK-NEXT:    vst $vr13, $a0, 224
; CHECK-NEXT:    vst $vr14, $a0, 208
; CHECK-NEXT:    vst $vr15, $a0, 192
; CHECK-NEXT:    vst $vr11, $a0, 176
; CHECK-NEXT:    vst $vr10, $a0, 160
; CHECK-NEXT:    vst $vr9, $a0, 144
; CHECK-NEXT:    vst $vr8, $a0, 128
; CHECK-NEXT:    vst $vr7, $a0, 112
; CHECK-NEXT:    vst $vr6, $a0, 96
; CHECK-NEXT:    vst $vr5, $a0, 80
; CHECK-NEXT:    vst $vr4, $a0, 64
; CHECK-NEXT:    vst $vr3, $a0, 48
; CHECK-NEXT:    vst $vr2, $a0, 32
; CHECK-NEXT:    vst $vr1, $a0, 16
; CHECK-NEXT:    vst $vr0, $a0, 0
; CHECK-NEXT:    ret
entry:
  ret <64 x i32> %0
}

define <16 x double> @test2(<16 x double> %0, <16 x double> %1) nounwind {
; CHECK-LABEL: test2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vst $vr7, $a0, 112
; CHECK-NEXT:    vst $vr6, $a0, 96
; CHECK-NEXT:    vst $vr5, $a0, 80
; CHECK-NEXT:    vst $vr4, $a0, 64
; CHECK-NEXT:    vst $vr3, $a0, 48
; CHECK-NEXT:    vst $vr2, $a0, 32
; CHECK-NEXT:    vst $vr1, $a0, 16
; CHECK-NEXT:    vst $vr0, $a0, 0
; CHECK-NEXT:    ret
entry:
  ret <16 x double> %0
}
