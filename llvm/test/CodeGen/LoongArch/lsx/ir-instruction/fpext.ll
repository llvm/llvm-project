; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 6
; RUN: llc --mtriple=loongarch32 --mattr=+32s,+lsx < %s | FileCheck %s --check-prefixes=CHECK,LA32
; RUN: llc --mtriple=loongarch64 --mattr=+lsx < %s | FileCheck %s --check-prefixes=CHECK,LA64

;; fpext
define void @fpext_v1f32_to_v1f64(ptr %res, ptr %a0) nounwind {
; CHECK-LABEL: fpext_v1f32_to_v1f64:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    fld.s $fa0, $a1, 0
; CHECK-NEXT:    fcvt.d.s $fa0, $fa0
; CHECK-NEXT:    fst.d $fa0, $a0, 0
; CHECK-NEXT:    ret
entry:
  %v0 = load <1 x float>, ptr %a0
  %ext = fpext <1 x float> %v0 to <1 x double>
  store <1 x double> %ext, ptr %res
  ret void
}

define void @fpext_v2f32_to_v2f64(ptr %res, ptr %a0) nounwind {
; LA32-LABEL: fpext_v2f32_to_v2f64:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    fld.s $fa0, $a1, 4
; LA32-NEXT:    fld.s $fa1, $a1, 0
; LA32-NEXT:    vextrins.w $vr1, $vr0, 16
; LA32-NEXT:    vfcvtl.d.s $vr0, $vr1
; LA32-NEXT:    vst $vr0, $a0, 0
; LA32-NEXT:    ret
;
; LA64-LABEL: fpext_v2f32_to_v2f64:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    ld.d $a1, $a1, 0
; LA64-NEXT:    vinsgr2vr.d $vr0, $a1, 0
; LA64-NEXT:    vfcvtl.d.s $vr0, $vr0
; LA64-NEXT:    vst $vr0, $a0, 0
; LA64-NEXT:    ret
entry:
  %v0 = load <2 x float>, ptr %a0
  %ext = fpext <2 x float> %v0 to <2 x double>
  store <2 x double> %ext, ptr %res
  ret void
}

define void @fpext_v4f32_to_v4f64(ptr %res, ptr %a0) nounwind {
; CHECK-LABEL: fpext_v4f32_to_v4f64:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vld $vr0, $a1, 0
; CHECK-NEXT:    vfcvtl.d.s $vr1, $vr0
; CHECK-NEXT:    vfcvth.d.s $vr0, $vr0
; CHECK-NEXT:    vst $vr0, $a0, 16
; CHECK-NEXT:    vst $vr1, $a0, 0
; CHECK-NEXT:    ret
entry:
  %v0 = load <4 x float>, ptr %a0
  %ext = fpext <4 x float> %v0 to <4 x double>
  store <4 x double> %ext, ptr %res
  ret void
}
