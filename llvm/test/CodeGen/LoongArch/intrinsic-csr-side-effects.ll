; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc --mtriple=loongarch32 -mattr=+d < %s | FileCheck %s --check-prefix=LA32
; RUN: llc --mtriple=loongarch64 -mattr=+d < %s | FileCheck %s --check-prefix=LA64

declare i32 @llvm.loongarch.csrrd.w(i32 immarg) nounwind
declare i32 @llvm.loongarch.csrwr.w(i32, i32 immarg) nounwind
declare void @bug()

define dso_local void @foo(i32 noundef signext %flag) nounwind {
; LA32-LABEL: foo:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    beqz $a0, .LBB0_2
; LA32-NEXT:  # %bb.1: # %if.then
; LA32-NEXT:    csrrd $a0, 2
; LA32-NEXT:    ori $a0, $a0, 1
; LA32-NEXT:    csrwr $a0, 2
; LA32-NEXT:  .LBB0_2: # %if.end
; LA32-NEXT:    csrrd $a0, 2
; LA32-NEXT:    andi $a0, $a0, 1
; LA32-NEXT:    bnez $a0, .LBB0_4
; LA32-NEXT:  # %bb.3: # %if.then2
; LA32-NEXT:    b %plt(bug)
; LA32-NEXT:  .LBB0_4: # %if.end3
; LA32-NEXT:    ret
;
; LA64-LABEL: foo:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    beqz $a0, .LBB0_2
; LA64-NEXT:  # %bb.1: # %if.then
; LA64-NEXT:    csrrd $a0, 2
; LA64-NEXT:    ori $a0, $a0, 1
; LA64-NEXT:    csrwr $a0, 2
; LA64-NEXT:  .LBB0_2: # %if.end
; LA64-NEXT:    csrrd $a0, 2
; LA64-NEXT:    andi $a0, $a0, 1
; LA64-NEXT:    bnez $a0, .LBB0_4
; LA64-NEXT:  # %bb.3: # %if.then2
; LA64-NEXT:    pcaddu18i $t8, %call36(bug)
; LA64-NEXT:    jr $t8
; LA64-NEXT:  .LBB0_4: # %if.end3
; LA64-NEXT:    ret
entry:
  %tobool.not = icmp eq i32 %flag, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = tail call i32 @llvm.loongarch.csrrd.w(i32 2)
  %or = or i32 %0, 1
  %1 = tail call i32 @llvm.loongarch.csrwr.w(i32 %or, i32 2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = tail call i32 @llvm.loongarch.csrrd.w(i32 2)
  %and = and i32 %2, 1
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  tail call void @bug()
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  ret void
}
