; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -mtriple=nvptx64 -mcpu=sm_80 -mattr=+ptx74| FileCheck --check-prefixes=CHECK-PTX64 %s
; RUN: %if ptxas-11.4 %{ llc < %s -mtriple=nvptx64 -mcpu=sm_80 -mattr=+ptx74| %ptxas-verify -arch=sm_80 %}

target triple = "nvptx64-nvidia-cuda"

declare void  @llvm.nvvm.discard.global.L2(ptr addrspace(1) %global_ptr, i64 immarg %size)
declare void  @llvm.nvvm.discard.L2(ptr %ptr, i64 immarg %size)

define void @discard_global_L2(ptr addrspace(1) %global_ptr) {
; CHECK-PTX64-LABEL: discard_global_L2(
; CHECK-PTX64:       {
; CHECK-PTX64-NEXT:    .reg .b64 %rd<2>;
; CHECK-PTX64-EMPTY:
; CHECK-PTX64-NEXT:  // %bb.0:
; CHECK-PTX64-NEXT:    ld.param.u64 %rd1, [discard_global_L2_param_0];
; CHECK-PTX64-NEXT:    discard.global.L2 [%rd1], 128;
; CHECK-PTX64-NEXT:    ret;
  tail call void @llvm.nvvm.discard.global.L2(ptr addrspace(1) %global_ptr, i64 128)
  ret void
}

define void @discard_L2(ptr %ptr) {
; CHECK-PTX64-LABEL: discard_L2(
; CHECK-PTX64:       {
; CHECK-PTX64-NEXT:    .reg .b64 %rd<2>;
; CHECK-PTX64-EMPTY:
; CHECK-PTX64-NEXT:  // %bb.0:
; CHECK-PTX64-NEXT:    ld.param.u64 %rd1, [discard_L2_param_0];
; CHECK-PTX64-NEXT:    discard.L2 [%rd1], 128;
; CHECK-PTX64-NEXT:    ret;
  tail call void @llvm.nvvm.discard.L2(ptr %ptr, i64 128)
  ret void
}

