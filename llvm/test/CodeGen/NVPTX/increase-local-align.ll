; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=nvptx-increase-local-alignment < %s | FileCheck %s --check-prefixes=COMMON,DEFAULT
; RUN: opt -S -passes=nvptx-increase-local-alignment -nvptx-use-max-local-array-alignment < %s | FileCheck %s --check-prefixes=COMMON,MAX
target triple = "nvptx64-nvidia-cuda"

define void @test1() {
; COMMON-LABEL: define void @test1() {
; COMMON-NEXT:    [[A:%.*]] = alloca i8, align 1
; COMMON-NEXT:    ret void
;
  %a = alloca i8, align 1
  ret void
}

define void @test2() {
; DEFAULT-LABEL: define void @test2() {
; DEFAULT-NEXT:    [[A:%.*]] = alloca [63 x i8], align 1
; DEFAULT-NEXT:    ret void
;
; MAX-LABEL: define void @test2() {
; MAX-NEXT:    [[A:%.*]] = alloca [63 x i8], align 16
; MAX-NEXT:    ret void
;
  %a = alloca [63 x i8], align 1
  ret void
}

define void @test3() {
; COMMON-LABEL: define void @test3() {
; COMMON-NEXT:    [[A:%.*]] = alloca [64 x i8], align 16
; COMMON-NEXT:    ret void
;
  %a = alloca [64 x i8], align 1
  ret void
}

define void @test4() {
; DEFAULT-LABEL: define void @test4() {
; DEFAULT-NEXT:    [[A:%.*]] = alloca i8, i32 63, align 1
; DEFAULT-NEXT:    ret void
;
; MAX-LABEL: define void @test4() {
; MAX-NEXT:    [[A:%.*]] = alloca i8, i32 63, align 16
; MAX-NEXT:    ret void
;
  %a = alloca i8, i32 63, align 1
  ret void
}

define void @test5() {
; COMMON-LABEL: define void @test5() {
; COMMON-NEXT:    [[A:%.*]] = alloca i8, i32 64, align 16
; COMMON-NEXT:    ret void
;
  %a = alloca i8, i32 64, align 1
  ret void
}

define void @test6() {
; COMMON-LABEL: define void @test6() {
; COMMON-NEXT:    [[A:%.*]] = alloca i8, align 32
; COMMON-NEXT:    ret void
;
  %a = alloca i8, align 32
  ret void
}

define void @test7() {
; COMMON-LABEL: define void @test7() {
; COMMON-NEXT:    [[A:%.*]] = alloca i32, align 4
; COMMON-NEXT:    ret void
;
  %a = alloca i32, align 2
  ret void
}

define void @test8() {
; COMMON-LABEL: define void @test8() {
; COMMON-NEXT:    [[A:%.*]] = alloca [2 x i32], align 8
; COMMON-NEXT:    ret void
;
  %a = alloca [2 x i32], align 2
  ret void
}

