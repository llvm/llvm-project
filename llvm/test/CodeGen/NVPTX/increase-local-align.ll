; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=nvptx-increase-local-alignment -nvptx-ensure-minimum-local-alignment=1 < %s | FileCheck %s --check-prefixes=COMMON,MIN-1
; RUN: opt -S -passes=nvptx-increase-local-alignment -nvptx-ensure-minimum-local-alignment=8 < %s | FileCheck %s --check-prefixes=COMMON,MIN-8
; RUN: opt -S -passes=nvptx-increase-local-alignment -nvptx-ensure-minimum-local-alignment=16 < %s | FileCheck %s --check-prefixes=COMMON,MIN-16
target triple = "nvptx64-nvidia-cuda"

define void @test1() {
; COMMON-LABEL: define void @test1() {
; COMMON-NEXT:    [[A:%.*]] = alloca i8, align 1
; COMMON-NEXT:    ret void
;
  %a = alloca i8, align 1
  ret void
}

define void @test2() {
; MIN-1-LABEL: define void @test2() {
; MIN-1-NEXT:    [[A:%.*]] = alloca [63 x i8], align 1
; MIN-1-NEXT:    ret void
;
; MIN-8-LABEL: define void @test2() {
; MIN-8-NEXT:    [[A:%.*]] = alloca [63 x i8], align 8
; MIN-8-NEXT:    ret void
;
; MIN-16-LABEL: define void @test2() {
; MIN-16-NEXT:    [[A:%.*]] = alloca [63 x i8], align 16
; MIN-16-NEXT:    ret void
;
  %a = alloca [63 x i8], align 1
  ret void
}

define void @test3() {
; COMMON-LABEL: define void @test3() {
; COMMON-NEXT:    [[A:%.*]] = alloca [64 x i8], align 16
; COMMON-NEXT:    ret void
;
  %a = alloca [64 x i8], align 1
  ret void
}

define void @test4() {
; MIN-1-LABEL: define void @test4() {
; MIN-1-NEXT:    [[A:%.*]] = alloca i8, i32 63, align 1
; MIN-1-NEXT:    ret void
;
; MIN-8-LABEL: define void @test4() {
; MIN-8-NEXT:    [[A:%.*]] = alloca i8, i32 63, align 8
; MIN-8-NEXT:    ret void
;
; MIN-16-LABEL: define void @test4() {
; MIN-16-NEXT:    [[A:%.*]] = alloca i8, i32 63, align 16
; MIN-16-NEXT:    ret void
;
  %a = alloca i8, i32 63, align 1
  ret void
}

define void @test5() {
; COMMON-LABEL: define void @test5() {
; COMMON-NEXT:    [[A:%.*]] = alloca i8, i32 64, align 16
; COMMON-NEXT:    ret void
;
  %a = alloca i8, i32 64, align 1
  ret void
}

define void @test6() {
; COMMON-LABEL: define void @test6() {
; COMMON-NEXT:    [[A:%.*]] = alloca i8, align 32
; COMMON-NEXT:    ret void
;
  %a = alloca i8, align 32
  ret void
}

define void @test7() {
; COMMON-LABEL: define void @test7() {
; COMMON-NEXT:    [[A:%.*]] = alloca i32, align 4
; COMMON-NEXT:    ret void
;
  %a = alloca i32, align 2
  ret void
}

define void @test8() {
; COMMON-LABEL: define void @test8() {
; COMMON-NEXT:    [[A:%.*]] = alloca [2 x i32], align 8
; COMMON-NEXT:    ret void
;
  %a = alloca [2 x i32], align 2
  ret void
}

define void @test9() {
; COMMON-LABEL: define void @test9() {
; COMMON-NEXT:    [[A:%.*]] = alloca [0 x i32], align 1
; COMMON-NEXT:    ret void
;
  %a = alloca [0 x i32], align 1
  ret void
}
