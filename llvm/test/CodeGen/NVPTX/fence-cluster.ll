; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -march=nvptx64 -mcpu=sm_90 -mattr=+ptx87 | FileCheck %s --check-prefix=SM90
; RUN: %if ptxas-12.8 %{ llc < %s -march=nvptx64 -mcpu=sm_90 -mattr=+ptx87 | %ptxas-verify -arch=sm_90 %}

define void @fence_acquire_cluster() {
; SM90-LABEL: fence_acquire_cluster(
; SM90:       {
; SM90-EMPTY:
; SM90-EMPTY:
; SM90-NEXT:  // %bb.0:
; SM90-NEXT:    fence.acquire.cluster;
; SM90-NEXT:    ret;
    fence syncscope("cluster") acquire
    ret void
}


define void @fence_release_cluster() {
; SM90-LABEL: fence_release_cluster(
; SM90:       {
; SM90-EMPTY:
; SM90-EMPTY:
; SM90-NEXT:  // %bb.0:
; SM90-NEXT:    fence.release.cluster;
; SM90-NEXT:    ret;
    fence syncscope("cluster") release
    ret void
}


define void @fence_acq_rel_cluster() {
; SM90-LABEL: fence_acq_rel_cluster(
; SM90:       {
; SM90-EMPTY:
; SM90-EMPTY:
; SM90-NEXT:  // %bb.0:
; SM90-NEXT:    fence.acq_rel.cluster;
; SM90-NEXT:    ret;
    fence syncscope("cluster") acq_rel
    ret void
}


define void @fence_seq_cst_cluster() {
; SM90-LABEL: fence_seq_cst_cluster(
; SM90:       {
; SM90-EMPTY:
; SM90-EMPTY:
; SM90-NEXT:  // %bb.0:
; SM90-NEXT:    fence.sc.cluster;
; SM90-NEXT:    ret;
    fence syncscope("cluster") seq_cst
    ret void
}

