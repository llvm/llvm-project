; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=thumb-eabi < %s | FileCheck %s

define i1 @test_urem_odd(i13 %X) nounwind {
; CHECK-LABEL: test_urem_odd:
; CHECK:       @ %bb.0:
; CHECK-NEXT:    ldr r1, .LCPI0_0
; CHECK-NEXT:    ands r1, r0
; CHECK-NEXT:    ldr r0, .LCPI0_1
; CHECK-NEXT:    muls r0, r1, r0
; CHECK-NEXT:    ldr r1, .LCPI0_2
; CHECK-NEXT:    cmp r0, r1
; CHECK-NEXT:    blo .LBB0_2
; CHECK-NEXT:  @ %bb.1:
; CHECK-NEXT:    movs r0, #0
; CHECK-NEXT:    bx lr
; CHECK-NEXT:  .LBB0_2:
; CHECK-NEXT:    movs r0, #1
; CHECK-NEXT:    bx lr
; CHECK-NEXT:    .p2align 2
; CHECK-NEXT:  @ %bb.3:
; CHECK-NEXT:  .LCPI0_0:
; CHECK-NEXT:    .long 8191 @ 0x1fff
; CHECK-NEXT:  .LCPI0_1:
; CHECK-NEXT:    .long 3435973837 @ 0xcccccccd
; CHECK-NEXT:  .LCPI0_2:
; CHECK-NEXT:    .long 858993460 @ 0x33333334
  %urem = urem i13 %X, 5
  %cmp = icmp eq i13 %urem, 0
  ret i1 %cmp
}

define i1 @test_urem_even(i27 %X) nounwind {
; CHECK-LABEL: test_urem_even:
; CHECK:       @ %bb.0:
; CHECK-NEXT:    movs r1, #31
; CHECK-NEXT:    lsls r1, r1, #27
; CHECK-NEXT:    bics r0, r1
; CHECK-NEXT:    ldr r1, .LCPI1_0
; CHECK-NEXT:    muls r1, r0, r1
; CHECK-NEXT:    movs r0, #1
; CHECK-NEXT:    rors r1, r0
; CHECK-NEXT:    ldr r2, .LCPI1_1
; CHECK-NEXT:    cmp r1, r2
; CHECK-NEXT:    blo .LBB1_2
; CHECK-NEXT:  @ %bb.1:
; CHECK-NEXT:    movs r0, #0
; CHECK-NEXT:  .LBB1_2:
; CHECK-NEXT:    bx lr
; CHECK-NEXT:    .p2align 2
; CHECK-NEXT:  @ %bb.3:
; CHECK-NEXT:  .LCPI1_0:
; CHECK-NEXT:    .long 3067833783 @ 0xb6db6db7
; CHECK-NEXT:  .LCPI1_1:
; CHECK-NEXT:    .long 306783379 @ 0x12492493
  %urem = urem i27 %X, 14
  %cmp = icmp eq i27 %urem, 0
  ret i1 %cmp
}

define i1 @test_urem_odd_setne(i4 %X) nounwind {
; CHECK-LABEL: test_urem_odd_setne:
; CHECK:       @ %bb.0:
; CHECK-NEXT:    movs r1, #15
; CHECK-NEXT:    ands r1, r0
; CHECK-NEXT:    ldr r0, .LCPI2_0
; CHECK-NEXT:    muls r0, r1, r0
; CHECK-NEXT:    ldr r1, .LCPI2_1
; CHECK-NEXT:    cmp r0, r1
; CHECK-NEXT:    bhi .LBB2_2
; CHECK-NEXT:  @ %bb.1:
; CHECK-NEXT:    movs r0, #0
; CHECK-NEXT:    bx lr
; CHECK-NEXT:  .LBB2_2:
; CHECK-NEXT:    movs r0, #1
; CHECK-NEXT:    bx lr
; CHECK-NEXT:    .p2align 2
; CHECK-NEXT:  @ %bb.3:
; CHECK-NEXT:  .LCPI2_0:
; CHECK-NEXT:    .long 3435973837 @ 0xcccccccd
; CHECK-NEXT:  .LCPI2_1:
; CHECK-NEXT:    .long 858993459 @ 0x33333333
  %urem = urem i4 %X, 5
  %cmp = icmp ne i4 %urem, 0
  ret i1 %cmp
}

define i1 @test_urem_negative_odd(i9 %X) nounwind {
; CHECK-LABEL: test_urem_negative_odd:
; CHECK:       @ %bb.0:
; CHECK-NEXT:    ldr r1, .LCPI3_0
; CHECK-NEXT:    ands r1, r0
; CHECK-NEXT:    ldr r0, .LCPI3_1
; CHECK-NEXT:    muls r0, r1, r0
; CHECK-NEXT:    ldr r1, .LCPI3_2
; CHECK-NEXT:    cmp r0, r1
; CHECK-NEXT:    bhi .LBB3_2
; CHECK-NEXT:  @ %bb.1:
; CHECK-NEXT:    movs r0, #0
; CHECK-NEXT:    bx lr
; CHECK-NEXT:  .LBB3_2:
; CHECK-NEXT:    movs r0, #1
; CHECK-NEXT:    bx lr
; CHECK-NEXT:    .p2align 2
; CHECK-NEXT:  @ %bb.3:
; CHECK-NEXT:  .LCPI3_0:
; CHECK-NEXT:    .long 511 @ 0x1ff
; CHECK-NEXT:  .LCPI3_1:
; CHECK-NEXT:    .long 2837897523 @ 0xa926e133
; CHECK-NEXT:  .LCPI3_2:
; CHECK-NEXT:    .long 8471335 @ 0x814327
  %urem = urem i9 %X, -5
  %cmp = icmp ne i9 %urem, 0
  ret i1 %cmp
}

define <3 x i1> @test_urem_vec(<3 x i11> %X) nounwind {
; CHECK-LABEL: test_urem_vec:
; CHECK:       @ %bb.0:
; CHECK-NEXT:    .save {r4, r5, r6, lr}
; CHECK-NEXT:    push {r4, r5, r6, lr}
; CHECK-NEXT:    movs r3, r2
; CHECK-NEXT:    ldr r5, .LCPI4_0
; CHECK-NEXT:    ands r0, r5
; CHECK-NEXT:    ldr r6, .LCPI4_1
; CHECK-NEXT:    muls r6, r0, r6
; CHECK-NEXT:    movs r2, #1
; CHECK-NEXT:    rors r6, r2
; CHECK-NEXT:    ldr r0, .LCPI4_2
; CHECK-NEXT:    movs r4, #0
; CHECK-NEXT:    cmp r6, r0
; CHECK-NEXT:    push {r2}
; CHECK-NEXT:    pop {r0}
; CHECK-NEXT:    bhi .LBB4_2
; CHECK-NEXT:  @ %bb.1:
; CHECK-NEXT:    movs r0, r4
; CHECK-NEXT:  .LBB4_2:
; CHECK-NEXT:    ands r1, r5
; CHECK-NEXT:    ldr r6, .LCPI4_3
; CHECK-NEXT:    muls r6, r1, r6
; CHECK-NEXT:    ldr r1, .LCPI4_4
; CHECK-NEXT:    adds r1, r6, r1
; CHECK-NEXT:    ldr r6, .LCPI4_5
; CHECK-NEXT:    cmp r1, r6
; CHECK-NEXT:    push {r2}
; CHECK-NEXT:    pop {r1}
; CHECK-NEXT:    bhi .LBB4_4
; CHECK-NEXT:  @ %bb.3:
; CHECK-NEXT:    movs r1, r4
; CHECK-NEXT:  .LBB4_4:
; CHECK-NEXT:    ands r3, r5
; CHECK-NEXT:    ldr r5, .LCPI4_6
; CHECK-NEXT:    muls r5, r3, r5
; CHECK-NEXT:    ldr r3, .LCPI4_7
; CHECK-NEXT:    adds r3, r5, r3
; CHECK-NEXT:    ldr r5, .LCPI4_8
; CHECK-NEXT:    cmp r3, r5
; CHECK-NEXT:    bhi .LBB4_6
; CHECK-NEXT:  @ %bb.5:
; CHECK-NEXT:    movs r2, r4
; CHECK-NEXT:  .LBB4_6:
; CHECK-NEXT:    pop {r4, r5, r6}
; CHECK-NEXT:    pop {r3}
; CHECK-NEXT:    bx r3
; CHECK-NEXT:    .p2align 2
; CHECK-NEXT:  @ %bb.7:
; CHECK-NEXT:  .LCPI4_0:
; CHECK-NEXT:    .long 2047 @ 0x7ff
; CHECK-NEXT:  .LCPI4_1:
; CHECK-NEXT:    .long 2863311531 @ 0xaaaaaaab
; CHECK-NEXT:  .LCPI4_2:
; CHECK-NEXT:    .long 715827882 @ 0x2aaaaaaa
; CHECK-NEXT:  .LCPI4_3:
; CHECK-NEXT:    .long 3067833783 @ 0xb6db6db7
; CHECK-NEXT:  .LCPI4_4:
; CHECK-NEXT:    .long 1227133513 @ 0x49249249
; CHECK-NEXT:  .LCPI4_5:
; CHECK-NEXT:    .long 613566756 @ 0x24924924
; CHECK-NEXT:  .LCPI4_6:
; CHECK-NEXT:    .long 2198989619 @ 0x8311eb33
; CHECK-NEXT:  .LCPI4_7:
; CHECK-NEXT:    .long 4191955354 @ 0xf9dc299a
; CHECK-NEXT:  .LCPI4_8:
; CHECK-NEXT:    .long 2102284 @ 0x20140c
  %urem = urem <3 x i11> %X, <i11 6, i11 7, i11 -5>
  %cmp = icmp ne <3 x i11> %urem, <i11 0, i11 1, i11 2>
  ret <3 x i1> %cmp
}
