; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -disable-ppc-vsx-fma-mutation=false -mcpu=pwr10 -verify-machineinstrs \
; RUN:   -ppc-asm-full-reg-names -mtriple powerpc64-ibm-aix7.2.0.0 < %s | FileCheck %s

target datalayout = "E-m:a-Fi64-i64:64-n32:64-S128-v256:256:256-v512:512:512"

define void @initial(<2 x double> %0){
; CHECK-LABEL: initial:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xxlxor vs0, vs0, vs0
; CHECK-NEXT:    xxlxor f2, f2, f2
; CHECK-NEXT:    xxlxor f4, f4, f4
; CHECK-NEXT:    xxlxor f3, f3, f3
; CHECK-NEXT:    xvmuldp vs1, vs34, vs0
; CHECK-NEXT:    .align 5
; CHECK-NEXT:  L..BB0_1: # %for.cond251.preheader.lr.ph
; CHECK-NEXT:    #
; CHECK-NEXT:    fmr f5, f3
; CHECK-NEXT:    xsadddp f3, f3, f4
; CHECK-NEXT:    fmr f4, f5
; CHECK-NEXT:    xxmrghd vs3, vs3, vs2
; CHECK-NEXT:    xvmaddmdp vs3, vs0, vs1
; CHECK-NEXT:    b L..BB0_1
entry:
  %1 = fmul <2 x double> %0, zeroinitializer
  br label %for.cond251.preheader.lr.ph

for.cond251.preheader.lr.ph:                      ; preds = %for.cond251.preheader.lr.ph, %entry
  %2 = phi double [ %3, %for.cond251.preheader.lr.ph ], [ 0.000000e+00, %entry ]
  %3 = phi double [ %7, %for.cond251.preheader.lr.ph ], [ 0.000000e+00, %entry ]
  %add737 = fadd double %3, %2
  %4 = insertelement <2 x double> zeroinitializer, double %add737, i64 0
  %5 = fmul contract <2 x double> %4, zeroinitializer
  %6 = fadd contract <2 x double> %1, %5
  %7 = extractelement <2 x double> %6, i64 0
  br label %for.cond251.preheader.lr.ph
}
