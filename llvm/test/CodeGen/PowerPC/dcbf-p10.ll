; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=powerpc64le-unknown-linux-gnu < %s \
; RUN:     -verify-machineinstrs -ppc-asm-full-reg-names \
; RUN:     -ppc-vsr-nums-as-vr -mcpu=pwr10 | FileCheck %s
; RUN: llc -mtriple=powerpc64-unknown-linux-gnu < %s \
; RUN:     -verify-machineinstrs -ppc-asm-full-reg-names \
; RUN:     -ppc-vsr-nums-as-vr -mcpu=pwr10 | FileCheck %s

; Function Attrs: nounwind
define void @dcbfps_test(ptr %a) {
; CHECK-LABEL: dcbfps_test:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addi r3, r3, 3
; CHECK-NEXT:    dcbfps 0, r3
; CHECK-NEXT:    blr
entry:
  %add.a = getelementptr inbounds i8, ptr %a, i64 3
  tail call void @llvm.ppc.dcbfps(ptr %add.a)
ret void
}

declare void @llvm.ppc.dcbfps(ptr)

; Function Attrs: nounwind
define void @dcbstps_test(ptr %a) {
; CHECK-LABEL: dcbstps_test:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addi r3, r3, 3
; CHECK-NEXT:    dcbstps 0, r3
; CHECK-NEXT:    blr
entry:
  %add.a = getelementptr inbounds i8, ptr %a, i64 3
  tail call void @llvm.ppc.dcbstps(ptr %add.a)
ret void
}

declare void @llvm.ppc.dcbstps(ptr)
