; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py

; RUN: llc < %s -verify-machineinstrs -mattr=+simd128,+relaxed-simd | FileCheck %s
target datalayout = "e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20"
target triple = "wasm32-unknown-wasi"

define void @MADD_F32x4_a1(ptr noundef %i0, ptr noundef %i1, ptr noundef %i2, ptr noundef %i3, ptr noundef %i4, ptr noundef %i5, ptr nocapture noundef readonly %w, ptr noundef %output) local_unnamed_addr #0 {
; CHECK-LABEL: MADD_F32x4_a1:
; CHECK:         .functype MADD_F32x4_a1 (i32, i32, i32, i32, i32, i32, i32, i32) -> ()
; CHECK-NEXT:    .local v128
; CHECK-NEXT:  # %bb.0: # %entry
; CHECK-NEXT:    local.get 1
; CHECK-NEXT:    v128.load 0:p2align=0
; CHECK-NEXT:    local.get 6
; CHECK-NEXT:    v128.load 64:p2align=0
; CHECK-NEXT:    local.get 0
; CHECK-NEXT:    v128.load 0:p2align=0
; CHECK-NEXT:    local.get 6
; CHECK-NEXT:    v128.load 32:p2align=0
; CHECK-NEXT:    local.get 6
; CHECK-NEXT:    v128.load 0:p2align=0
; CHECK-NEXT:    f32x4.relaxed_madd
; CHECK-NEXT:    f32x4.relaxed_madd
; CHECK-NEXT:    local.set 8
; CHECK-NEXT:    local.get 7
; CHECK-NEXT:    local.get 5
; CHECK-NEXT:    v128.load 0:p2align=0
; CHECK-NEXT:    local.get 6
; CHECK-NEXT:    v128.load 192:p2align=0
; CHECK-NEXT:    local.get 4
; CHECK-NEXT:    v128.load 0:p2align=0
; CHECK-NEXT:    local.get 6
; CHECK-NEXT:    v128.load 160:p2align=0
; CHECK-NEXT:    local.get 3
; CHECK-NEXT:    v128.load 0:p2align=0
; CHECK-NEXT:    local.get 6
; CHECK-NEXT:    v128.load 128:p2align=0
; CHECK-NEXT:    local.get 2
; CHECK-NEXT:    v128.load 0:p2align=0
; CHECK-NEXT:    local.get 6
; CHECK-NEXT:    v128.load 96:p2align=0
; CHECK-NEXT:    local.get 8
; CHECK-NEXT:    f32x4.relaxed_madd
; CHECK-NEXT:    f32x4.relaxed_madd
; CHECK-NEXT:    f32x4.relaxed_madd
; CHECK-NEXT:    f32x4.relaxed_madd
; CHECK-NEXT:    v128.store 0:p2align=0
; CHECK-NEXT:    # fallthrough-return
entry:
  %33 = load <4 x float>, ptr %w, align 1
  %35 = load <4 x float>, ptr %i0, align 1
  %add.ptr109 = getelementptr inbounds float, ptr %w, i32 8
  %37 = load <4 x float>, ptr %add.ptr109, align 1
  %39 = tail call <4 x float> @llvm.wasm.relaxed.madd.v4f32(<4 x float> %35, <4 x float> %37, <4 x float> %33)
  %41 = load <4 x float>, ptr %i1, align 1
  %add.ptr119 = getelementptr inbounds float, ptr %w, i32 16
  %43 = load <4 x float>, ptr %add.ptr119, align 1
  %45 = tail call <4 x float> @llvm.wasm.relaxed.madd.v4f32(<4 x float> %41, <4 x float> %43, <4 x float> %39)
  %47 = load <4 x float>, ptr %i2, align 1
  %add.ptr129 = getelementptr inbounds float, ptr %w, i32 24
  %49 = load <4 x float>, ptr %add.ptr129, align 1
  %51 = tail call <4 x float> @llvm.wasm.relaxed.madd.v4f32(<4 x float> %47, <4 x float> %49, <4 x float> %45)
  %53 = load <4 x float>, ptr %i3, align 1
  %add.ptr139 = getelementptr inbounds float, ptr %w, i32 32
  %55 = load <4 x float>, ptr %add.ptr139, align 1
  %57 = tail call <4 x float> @llvm.wasm.relaxed.madd.v4f32(<4 x float> %53, <4 x float> %55, <4 x float> %51)
  %59 = load <4 x float>, ptr %i4, align 1
  %add.ptr149 = getelementptr inbounds float, ptr %w, i32 40
  %61 = load <4 x float>, ptr %add.ptr149, align 1
  %63 = tail call <4 x float> @llvm.wasm.relaxed.madd.v4f32(<4 x float> %59, <4 x float> %61, <4 x float> %57)
  %65 = load <4 x float>, ptr %i5, align 1
  %add.ptr159 = getelementptr inbounds float, ptr %w, i32 48
  %67 = load <4 x float>, ptr %add.ptr159, align 1
  %69 = tail call <4 x float> @llvm.wasm.relaxed.madd.v4f32(<4 x float> %65, <4 x float> %67, <4 x float> %63)
  store <4 x float> %69, ptr %output, align 1
  ret void
}

attributes #0 = { "target-features"="+simd128,+relaxed-simd" }
