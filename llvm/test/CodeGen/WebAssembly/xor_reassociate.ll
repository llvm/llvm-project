; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s | FileCheck %s

target triple = "wasm32-unknown-unknown"

define i32 @reassociate_xor(float %x, float %y) {
; CHECK-LABEL: reassociate_xor:
; CHECK:         .functype reassociate_xor (f32, f32) -> (i32)
; CHECK-NEXT:    .local i32
; CHECK-NEXT:  # %bb.0: # %entry
; CHECK-NEXT:    i32.const 1
; CHECK-NEXT:    local.set 2
; CHECK-NEXT:    block
; CHECK-NEXT:    local.get 1
; CHECK-NEXT:    f32.const 0x1p-23
; CHECK-NEXT:    f32.le
; CHECK-NEXT:    local.get 0
; CHECK-NEXT:    f32.const 0x1p-23
; CHECK-NEXT:    f32.gt
; CHECK-NEXT:    i32.ne
; CHECK-NEXT:    br_if 0 # 0: down to label0
; CHECK-NEXT:  # %bb.1: # %if.then.i
; CHECK-NEXT:    i32.const 0
; CHECK-NEXT:    local.set 2
; CHECK-NEXT:  .LBB0_2: # %if.end.i
; CHECK-NEXT:    end_block # label0:
; CHECK-NEXT:    local.get 2
; CHECK-NEXT:    # fallthrough-return
entry:                                           ; preds = %if.then, %entry
  %cmp0 = fcmp ule float %x, 0x3E80000000000000
  %cmp1 = fcmp ugt float %y, 0x3E80000000000000
  %cmp2 = xor i1 %cmp0, %cmp1
  br i1 %cmp2, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end
  %s = phi i32 [ 1, %entry ], [ 0, %if.then.i ]
  ret i32 %s
}
