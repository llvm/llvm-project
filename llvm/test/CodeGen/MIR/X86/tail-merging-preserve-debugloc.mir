# RUN: llc -o - %s -mtriple=x86_64-unknown-linux-gnu --run-pass=branch-folder -enable-tail-merge | FileCheck %s
#
# Generated with
#
# bin/llc -stop-before=branch-folder test.ll
# 
# target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
# target triple = "x86_64-grtev4-linux-gnu"
#
# define i32 @main(i1 %0) {
# entry:
#   br i1 %0, label %1, label %2
#
# 1:                                                ; preds = %entry
#   store i64 1, ptr null, align 1
#   br label %3, !dbg !3
#
# 2:                                                ; preds = %entry
#   store i64 0, ptr null, align 1
#   br label %3
#
# 3:                                                ; preds = %2, %1
#   ret i32 0
# }
#
# !llvm.dbg.cu = !{!0}
# !llvm.module.flags = !{!2}
# 
# !0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1, producer: "", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly, nameTableKind: None)
# !1 = !DIFile(filename: "foo.c", directory: "/tmp", checksumkind: CSK_MD5, checksum: "2d07c91bb9d9c2fa4eee31a1aeed20e3")
# !2 = !{i32 2, !"Debug Info Version", i32 3}
# !3 = !DILocation(line: 17, column: 3, scope: !4)
# !4 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 6, type: !5, scopeLine: 6, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
# !5 = !DISubroutineType(types: !6)
# !6 = !{}
--- |
  
  ; ModuleID = '../llvm/test/CodeGen/X86/tail-merging-preserve-debugloc.ll'
  source_filename = "../llvm/test/CodeGen/X86/tail-merging-preserve-debugloc.ll"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
  target triple = "x86_64-grtev4-linux-gnu"

  define i32 @main(i1 %0) {
  entry:
    br i1 %0, label %1, label %2

  1:                                                ; preds = %entry
    store i64 1, ptr null, align 1
    br label %3, !dbg !3

  2:                                                ; preds = %entry
    store i64 0, ptr null, align 1
    br label %3

  3:                                                ; preds = %2, %1
    ret i32 0
  }

  !llvm.dbg.cu = !{!0}
  !llvm.module.flags = !{!2}

  !0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1, isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly, nameTableKind: None)
  !1 = !DIFile(filename: "foo.c", directory: "/tmp", checksumkind: CSK_MD5, checksum: "2d07c91bb9d9c2fa4eee31a1aeed20e3")
  !2 = !{i32 2, !"Debug Info Version", i32 3}
  !3 = !DILocation(line: 17, column: 3, scope: !4)
  !4 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 6, type: !5, scopeLine: 6, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
  !5 = !DISubroutineType(types: !6)
  !6 = !{}

...
---
name:            main
body:             |
  bb.0.entry:
    successors: %bb.1(0x40000000), %bb.2(0x40000000)
    liveins: $edi

    TEST8ri renamable $dil, 1, implicit-def $eflags, implicit killed $edi
    JCC_1 %bb.2, 4, implicit killed $eflags
    JMP_1 %bb.1

  bb.1 (%ir-block.1):
    successors: %bb.3(0x80000000)

    MOV64mi32 $noreg, 1, $noreg, 0, $noreg, 1 :: (store (s64) into `ptr null`, align 1)
    JMP_1 %bb.3, debug-location !3

  bb.2 (%ir-block.2):
    successors: %bb.3(0x80000000)

    MOV64mi32 $noreg, 1, $noreg, 0, $noreg, 0 :: (store (s64) into `ptr null`, align 1)

  bb.3 (%ir-block.3):
    $eax = MOV32r0 implicit-def dead $eflags
    RET 0, killed $eax

...
# CHECK: [[DEBUGNUM:!.*]] = !DILocation(line: 17, column: 3,
# CHECK: JMP_1 %bb.3, debug-location [[DEBUGNUM]]
