# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -o - %s -mtriple=riscv64 -mattr=+c -simplify-mir \
# RUN:   -run-pass=riscv-make-compressible | FileCheck %s
--- |
  define void @foo(ptr noundef %ptr) #0 {
  entry:
    %0 = ptrtoint ptr %ptr to i64
    %1 = getelementptr inbounds i64, ptr %ptr, i64 100
    store i64 1, ptr %1, align 8
    %2 = getelementptr inbounds i64, ptr %ptr, i64 101
    store i64 %0, ptr %2, align 8
    %3 = getelementptr inbounds i64, ptr %ptr, i64 102
    store i64 2, ptr %3, align 8
    ret void
  }

  attributes #0 = { minsize }

...
---
name:            foo
alignment:       2
tracksRegLiveness: true
liveins:
  - { reg: '$x10' }
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: foo
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: renamable $x11 = ADDI $x0, 1
    ; CHECK-NEXT: $x12 = ADDI $x10, 768
    ; CHECK-NEXT: SD killed renamable $x11, $x12, 32 :: (store (s64) into %ir.1)
    ; CHECK-NEXT: SD renamable $x10, $x12, 40 :: (store (s64) into %ir.2)
    ; CHECK-NEXT: renamable $x11 = ADDI $x0, 2
    ; CHECK-NEXT: SD killed renamable $x11, killed $x12, 48 :: (store (s64) into %ir.3)
    ; CHECK-NEXT: PseudoRET
    renamable $x11 = ADDI $x0, 1
    SD killed renamable $x11, renamable $x10, 800 :: (store (s64) into %ir.1)
    SD renamable $x10, renamable $x10, 808 :: (store (s64) into %ir.2)
    renamable $x11 = ADDI $x0, 2
    SD killed renamable $x11, killed renamable $x10, 816 :: (store (s64) into %ir.3)
    PseudoRET

...
