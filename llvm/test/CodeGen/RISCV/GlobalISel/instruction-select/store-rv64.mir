# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv64 -run-pass=instruction-select %s -o - \
# RUN:   -disable-gisel-legality-check | FileCheck %s

---
name:            store_i8_i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:            |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_i8_i64
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SB [[COPY]], [[COPY1]], 0 :: (store (s8))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = COPY $x11
    G_STORE %0(s64), %1(p0) :: (store (s8))
    PseudoRET

...
---
name:            store_i16_i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:            |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_i16_i64
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SH [[COPY]], [[COPY1]], 0 :: (store (s16))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = COPY $x11
    G_STORE %0(s64), %1(p0) :: (store (s16))
    PseudoRET

...
---
name:            store_i8_i16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:            |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_i8_i16
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SB [[COPY]], [[COPY1]], 0 :: (store (s8))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = COPY $x11
    %2:gprb(s16) = G_TRUNC %0
    G_STORE %2(s16), %1(p0) :: (store (s8))
    PseudoRET

...
---
name:            store_i16_i16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:            |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_i16_i16
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SH [[COPY]], [[COPY1]], 0 :: (store (s16))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = COPY $x11
    %2:gprb(s16) = G_TRUNC %0
    G_STORE %2(s16), %1(p0) :: (store (s16))
    PseudoRET

...
---
name:            store_i32_i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:            |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_i32_i64
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SW [[COPY]], [[COPY1]], 0 :: (store (s32))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = COPY $x11
    G_STORE %0(s64), %1(p0) :: (store (s32))
    PseudoRET

...
---
name:            store_i64_i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:            |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_i64_i64
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SD [[COPY]], [[COPY1]], 0 :: (store (s64))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = COPY $x11
    G_STORE %0(s64), %1(p0) :: (store (s64))
    PseudoRET

...
---
name:            store_p0
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:            |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_p0
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SD [[COPY]], [[COPY1]], 0 :: (store (p0))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:gprb(p0) = COPY $x11
    G_STORE %0(p0), %1(p0) :: (store (p0))
    PseudoRET

...
---
name:            truncstore_i8_i32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: truncstore_i8_i32
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SB [[COPY1]], [[COPY]], 0 :: (store (s8))
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $x0
    ; CHECK-NEXT: $x10 = COPY [[COPY2]]
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:gprb(p0) = COPY $x10
    %3:gprb(s64) = COPY $x11
    %9:gprb(s32) = G_TRUNC %3(s64)
    G_STORE %9(s32), %0(p0) :: (store (s8))
    %7:gprb(s64) = G_CONSTANT i64 0
    $x10 = COPY %7(s64)
    PseudoRET implicit $x10

...
---
name:            truncstore_i16_i32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: truncstore_i16_i32
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SH [[COPY1]], [[COPY]], 0 :: (store (s16))
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $x0
    ; CHECK-NEXT: $x10 = COPY [[COPY2]]
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:gprb(p0) = COPY $x10
    %3:gprb(s64) = COPY $x11
    %9:gprb(s32) = G_TRUNC %3(s64)
    G_STORE %9(s32), %0(p0) :: (store (s16))
    %7:gprb(s64) = G_CONSTANT i64 0
    $x10 = COPY %7(s64)
    PseudoRET implicit $x10

...
---
name:            store_i32_i32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_i32_i32
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SW [[COPY1]], [[COPY]], 0 :: (store (s32))
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $x0
    ; CHECK-NEXT: $x10 = COPY [[COPY2]]
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:gprb(p0) = COPY $x10
    %3:gprb(s64) = COPY $x11
    %9:gprb(s32) = G_TRUNC %3(s64)
    G_STORE %9(s32), %0(p0) :: (store (s32))
    %7:gprb(s64) = G_CONSTANT i64 0
    $x10 = COPY %7(s64)
    PseudoRET implicit $x10

...
---
name:            store_fi_i64_i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true

stack:
  - { id: 0, offset: 0, size: 8, alignment: 8 }

body:            |
  bb.0:
    liveins: $x10

    ; CHECK-LABEL: name: store_fi_i64_i64
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: SD [[COPY]], %stack.0, 0 :: (store (s64))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = G_FRAME_INDEX %stack.0
    G_STORE %0(s64), %1(p0) :: (store (s64))
    PseudoRET

...
---
name:            store_fi_gep_i64_i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true

stack:
  - { id: 0, offset: 0, size: 16, alignment: 8 }

body:            |
  bb.0:
    liveins: $x10

    ; CHECK-LABEL: name: store_fi_gep_i64_i64
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: SD [[COPY]], %stack.0, 8 :: (store (s64))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = G_FRAME_INDEX %stack.0
    %2:gprb(s64) = G_CONSTANT i64 8
    %3:gprb(p0) = G_PTR_ADD %1(p0), %2(s64)
    G_STORE %0(s64), %3(p0) :: (store (s64))
    PseudoRET

...
---
name:            store_gep_i64_i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:            |
  bb.0:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: store_gep_i64_i64
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $x11
    ; CHECK-NEXT: SD [[COPY]], [[COPY1]], 8 :: (store (s64))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(s64) = COPY $x10
    %1:gprb(p0) = COPY $x11
    %2:gprb(s64) = G_CONSTANT i64 8
    %3:gprb(p0) = G_PTR_ADD %1(p0), %2(s64)
    G_STORE %0(s64), %3(p0) :: (store (s64))
    PseudoRET

...
