# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv32 -mattr=+d,+zfh -run-pass=instruction-select %s -o - \
# RUN:   | FileCheck %s
# RUN: llc -mtriple=riscv64 -mattr=+d,+zfh -run-pass=instruction-select %s -o - \
# RUN:   | FileCheck %s

---
name:            fp_store_f32
legalized:       true
regBankSelected: true
selected:        false
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10, $f10_f

    ; CHECK-LABEL: name: fp_store_f32
    ; CHECK: liveins: $x10, $f10_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:fpr32 = COPY $f10_f
    ; CHECK-NEXT: FSW [[COPY1]], [[COPY]], 0 :: (store (s32))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:fprb(s32) = COPY $f10_f
    G_STORE %1(s32), %0(p0) :: (store (s32))
    PseudoRET

...
---
name:            fp_store_f64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10, $f10_d

    ; CHECK-LABEL: name: fp_store_f64
    ; CHECK: liveins: $x10, $f10_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:fpr64 = COPY $f10_d
    ; CHECK-NEXT: FSD [[COPY1]], [[COPY]], 0 :: (store (s64))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:fprb(s64) = COPY $f10_d
    G_STORE %1(s64), %0(p0) :: (store (s64))
    PseudoRET

...
---
name:            fp_load_f32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10

    ; CHECK-LABEL: name: fp_load_f32
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[FLW:%[0-9]+]]:fpr32 = FLW [[COPY]], 0 :: (load (s32))
    ; CHECK-NEXT: $f10_f = COPY [[FLW]]
    ; CHECK-NEXT: PseudoRET implicit $f10_f
    %0:gprb(p0) = COPY $x10
    %1:fprb(s32) = G_LOAD %0(p0) :: (load (s32))
    $f10_f = COPY %1(s32)
    PseudoRET implicit $f10_f

...
---
name:            fp_load_f64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10

    ; CHECK-LABEL: name: fp_load_f64
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[FLD:%[0-9]+]]:fpr64 = FLD [[COPY]], 0 :: (load (s64))
    ; CHECK-NEXT: $f10_d = COPY [[FLD]]
    ; CHECK-NEXT: PseudoRET implicit $f10_d
    %0:gprb(p0) = COPY $x10
    %1:fprb(s64) = G_LOAD %0(p0) :: (load (s64))
    $f10_d = COPY %1(s64)
    PseudoRET implicit $f10_d

...
---
name:            fp_store_f16
legalized:       true
regBankSelected: true
selected:        false
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10, $f10_h

    ; CHECK-LABEL: name: fp_store_f16
    ; CHECK: liveins: $x10, $f10_h
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:fpr16 = COPY $f10_h
    ; CHECK-NEXT: FSH [[COPY1]], [[COPY]], 0 :: (store (s16))
    ; CHECK-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:fprb(s16) = COPY $f10_h
    G_STORE %1(s16), %0(p0) :: (store (s16))
    PseudoRET

...
---
name:            fp_load_f16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10

    ; CHECK-LABEL: name: fp_load_f16
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; CHECK-NEXT: [[FLH:%[0-9]+]]:fpr16 = FLH [[COPY]], 0 :: (load (s16))
    ; CHECK-NEXT: $f10_h = COPY [[FLH]]
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %0:gprb(p0) = COPY $x10
    %1:fprb(s16) = G_LOAD %0(p0) :: (load (s16))
    $f10_h = COPY %1(s16)
    PseudoRET implicit $f10_h

...
