# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mattr=+m -mtriple=riscv32 -run-pass=legalizer %s -o - \
# RUN: | FileCheck %s
# RUN: llc -mattr=+zmmul -mtriple=riscv32 -run-pass=legalizer %s -o - \
# RUN: | FileCheck %s
---
name:            mul_i7
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mul_i7
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $x11
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[MUL]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $x10
    %1:_(s32) = COPY $x11
    %2:_(s7) = G_TRUNC %0(s32)
    %3:_(s7) = G_TRUNC %1(s32)
    %4:_(s7) = G_MUL %2, %3
    %5:_(s32) = G_ANYEXT %4(s7)
    $x10 = COPY %5(s32)
    PseudoRET implicit $x10

...
---
name:            mul_i8
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mul_i8
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $x11
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[MUL]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $x10
    %1:_(s32) = COPY $x11
    %2:_(s8) = G_TRUNC %0(s32)
    %3:_(s8) = G_TRUNC %1(s32)
    %4:_(s8) = G_MUL %2, %3
    %5:_(s32) = G_ANYEXT %4(s8)
    $x10 = COPY %5(s32)
    PseudoRET implicit $x10

...
---
name:            mul_i16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mul_i16
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $x11
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[MUL]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $x10
    %1:_(s32) = COPY $x11
    %2:_(s16) = G_TRUNC %0(s32)
    %3:_(s16) = G_TRUNC %1(s32)
    %4:_(s16) = G_MUL %2, %3
    %5:_(s32) = G_ANYEXT %4(s16)
    $x10 = COPY %5(s32)
    PseudoRET implicit $x10

...
---
name:            mul_i32
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mul_i32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $x11
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[MUL]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $x10
    %1:_(s32) = COPY $x11
    %2:_(s32) = G_MUL %0, %1
    $x10 = COPY %2(s32)
    PseudoRET implicit $x10

...
---
name:            mul_i48
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mul_i48
    ; CHECK: %xlo:_(s32) = COPY $x10
    ; CHECK-NEXT: %xhi:_(s32) = COPY $x11
    ; CHECK-NEXT: %ylo:_(s32) = COPY $x12
    ; CHECK-NEXT: %yhi:_(s32) = COPY $x13
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL %xlo, %ylo
    ; CHECK-NEXT: [[MUL1:%[0-9]+]]:_(s32) = G_MUL %xhi, %ylo
    ; CHECK-NEXT: [[MUL2:%[0-9]+]]:_(s32) = G_MUL %xlo, %yhi
    ; CHECK-NEXT: [[UMULH:%[0-9]+]]:_(s32) = G_UMULH %xlo, %ylo
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[MUL1]], [[MUL2]]
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[ADD]], [[UMULH]]
    ; CHECK-NEXT: $x10 = COPY [[MUL]](s32)
    ; CHECK-NEXT: $x11 = COPY [[ADD1]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10, implicit $x11
    %xlo:_(s32) = COPY $x10
    %xhi:_(s32) = COPY $x11
    %ylo:_(s32) = COPY $x12
    %yhi:_(s32) = COPY $x13
    %x0:_(s64) = G_MERGE_VALUES %xlo(s32), %xhi(s32)
    %y0:_(s64) = G_MERGE_VALUES %ylo(s32), %yhi(s32)
    %x:_(s48) = G_TRUNC %x0(s64)
    %y:_(s48) = G_TRUNC %y0(s64)
    %z:_(s48) = G_MUL %x, %y
    %z0:_(s64) = G_ANYEXT %z(s48)
    %zlo:_(s32), %zhi:_(s32) = G_UNMERGE_VALUES %z0(s64)
    $x10 = COPY %zlo(s32)
    $x11 = COPY %zhi(s32)
    PseudoRET implicit $x10, implicit $x11

...
---
name:            mul_i64
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mul_i64
    ; CHECK: %lo1:_(s32) = COPY $x10
    ; CHECK-NEXT: %hi1:_(s32) = COPY $x11
    ; CHECK-NEXT: %lo2:_(s32) = COPY $x12
    ; CHECK-NEXT: %hi2:_(s32) = COPY $x13
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL %lo1, %lo2
    ; CHECK-NEXT: [[MUL1:%[0-9]+]]:_(s32) = G_MUL %hi1, %lo2
    ; CHECK-NEXT: [[MUL2:%[0-9]+]]:_(s32) = G_MUL %lo1, %hi2
    ; CHECK-NEXT: [[UMULH:%[0-9]+]]:_(s32) = G_UMULH %lo1, %lo2
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[MUL1]], [[MUL2]]
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[ADD]], [[UMULH]]
    ; CHECK-NEXT: $x10 = COPY [[MUL]](s32)
    ; CHECK-NEXT: $x11 = COPY [[ADD1]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10, implicit $x11
    %lo1:_(s32) = COPY $x10
    %hi1:_(s32) = COPY $x11
    %lo2:_(s32) = COPY $x12
    %hi2:_(s32) = COPY $x13
    %x1:_(s64) = G_MERGE_VALUES %lo1(s32), %hi1(s32)
    %x2:_(s64) = G_MERGE_VALUES %lo2(s32), %hi2(s32)
    %y:_(s64) = G_MUL %x1, %x2
    %loy:_(s32), %hiy:_(s32) = G_UNMERGE_VALUES %y(s64)
    $x10 = COPY %loy(s32)
    $x11 = COPY %hiy(s32)
    PseudoRET implicit $x10, implicit $x11

...
---
name:            mul_i96
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: mul_i96
    ; CHECK: %lo1:_(s32) = COPY $x10
    ; CHECK-NEXT: %mid1:_(s32) = COPY $x11
    ; CHECK-NEXT: %hi1:_(s32) = COPY $x12
    ; CHECK-NEXT: %lo2:_(s32) = COPY $x13
    ; CHECK-NEXT: %mid2:_(s32) = COPY $x14
    ; CHECK-NEXT: %hi2:_(s32) = COPY $x15
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL %lo1, %lo2
    ; CHECK-NEXT: [[MUL1:%[0-9]+]]:_(s32) = G_MUL %mid1, %lo2
    ; CHECK-NEXT: [[MUL2:%[0-9]+]]:_(s32) = G_MUL %lo1, %mid2
    ; CHECK-NEXT: [[UMULH:%[0-9]+]]:_(s32) = G_UMULH %lo1, %lo2
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[MUL1]], [[MUL2]]
    ; CHECK-NEXT: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ult), [[ADD]](s32), [[MUL2]]
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[ICMP]], [[C]]
    ; CHECK-NEXT: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[ADD]], [[UMULH]]
    ; CHECK-NEXT: [[ICMP1:%[0-9]+]]:_(s32) = G_ICMP intpred(ult), [[ADD1]](s32), [[UMULH]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s32) = G_AND [[ICMP1]], [[C1]]
    ; CHECK-NEXT: [[ADD2:%[0-9]+]]:_(s32) = G_ADD [[AND]], [[AND1]]
    ; CHECK-NEXT: [[MUL3:%[0-9]+]]:_(s32) = G_MUL %hi1, %lo2
    ; CHECK-NEXT: [[MUL4:%[0-9]+]]:_(s32) = G_MUL %mid1, %mid2
    ; CHECK-NEXT: [[MUL5:%[0-9]+]]:_(s32) = G_MUL %lo1, %hi2
    ; CHECK-NEXT: [[UMULH1:%[0-9]+]]:_(s32) = G_UMULH %mid1, %lo2
    ; CHECK-NEXT: [[UMULH2:%[0-9]+]]:_(s32) = G_UMULH %lo1, %mid2
    ; CHECK-NEXT: [[ADD3:%[0-9]+]]:_(s32) = G_ADD [[MUL3]], [[MUL4]]
    ; CHECK-NEXT: [[ADD4:%[0-9]+]]:_(s32) = G_ADD [[ADD3]], [[MUL5]]
    ; CHECK-NEXT: [[ADD5:%[0-9]+]]:_(s32) = G_ADD [[ADD4]], [[UMULH1]]
    ; CHECK-NEXT: [[ADD6:%[0-9]+]]:_(s32) = G_ADD [[ADD5]], [[UMULH2]]
    ; CHECK-NEXT: [[ADD7:%[0-9]+]]:_(s32) = G_ADD [[ADD6]], [[ADD2]]
    ; CHECK-NEXT: $x10 = COPY [[MUL]](s32)
    ; CHECK-NEXT: $x11 = COPY [[ADD1]](s32)
    ; CHECK-NEXT: $x12 = COPY [[ADD7]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10, implicit $x11, implicit $x12
    %lo1:_(s32) = COPY $x10
    %mid1:_(s32) = COPY $x11
    %hi1:_(s32) = COPY $x12
    %lo2:_(s32) = COPY $x13
    %mid2:_(s32) = COPY $x14
    %hi2:_(s32) = COPY $x15
    %x1:_(s96) = G_MERGE_VALUES %lo1(s32), %mid1(s32), %hi1(s32)
    %x2:_(s96) = G_MERGE_VALUES %lo2(s32), %mid2(s32), %hi2(s32)
    %y:_(s96) = G_MUL %x1, %x2
    %lo:_(s32), %mid:_(s32), %hi:_(s32) = G_UNMERGE_VALUES %y(s96)
    $x10 = COPY %lo(s32)
    $x11 = COPY %mid(s32)
    $x12 = COPY %hi(s32)
    PseudoRET implicit $x10, implicit $x11, implicit $x12

...
---
name:            smulh_i16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: smulh_i16
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $x11
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[C1]](s32)
    ; CHECK-NEXT: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C1]](s32)
    ; CHECK-NEXT: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[ASHR]], [[ASHR1]]
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CHECK-NEXT: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[MUL]], [[C2]](s32)
    ; CHECK-NEXT: $x10 = COPY [[ASHR2]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $x10
    %1:_(s32) = COPY $x11
    %2:_(s16) = G_TRUNC %0(s32)
    %3:_(s16) = G_TRUNC %1(s32)
    %4:_(s16) = G_SMULH %2, %3
    %5:_(s32) = G_ANYEXT %4(s16)
    $x10 = COPY %5(s32)
    PseudoRET implicit $x10

...
