# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 3
# RUN: llc -mtriple=riscv64 -mattr=+zfh -run-pass=legalizer %s -o - \
# RUN: | FileCheck %s

---
name:            sitofp_s16_s1
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: sitofp_s16_s1
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 31
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[TRUNC]], [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 31
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C1]](s64)
    ; CHECK-NEXT: [[SITOFP:%[0-9]+]]:_(s16) = G_SITOFP [[ASHR]](s32)
    ; CHECK-NEXT: $f10_h = COPY [[SITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %1:_(s64) = COPY $x10
    %0:_(s1) = G_TRUNC %1(s64)
    %2:_(s16) = G_SITOFP %0(s1)
    $f10_h = COPY %2(s16)
    PseudoRET implicit $f10_h

...
---
name:            uitofp_s16_s1
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: uitofp_s16_s1
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[TRUNC]], [[C]]
    ; CHECK-NEXT: [[UITOFP:%[0-9]+]]:_(s16) = G_UITOFP [[AND]](s32)
    ; CHECK-NEXT: $f10_h = COPY [[UITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %1:_(s64) = COPY $x10
    %0:_(s1) = G_TRUNC %1(s64)
    %2:_(s16) = G_UITOFP %0(s1)
    $f10_h = COPY %2(s16)
    PseudoRET implicit $f10_h

...
---
name:            sitofp_s16_s8
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: sitofp_s16_s8
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 24
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[TRUNC]], [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 24
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C1]](s64)
    ; CHECK-NEXT: [[SITOFP:%[0-9]+]]:_(s16) = G_SITOFP [[ASHR]](s32)
    ; CHECK-NEXT: $f10_h = COPY [[SITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %1:_(s64) = COPY $x10
    %0:_(s8) = G_TRUNC %1(s64)
    %2:_(s16) = G_SITOFP %0(s8)
    $f10_h = COPY %2(s16)
    PseudoRET implicit $f10_h

...
---
name:            uitofp_s16_s8
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: uitofp_s16_s8
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[TRUNC]], [[C]]
    ; CHECK-NEXT: [[UITOFP:%[0-9]+]]:_(s16) = G_UITOFP [[AND]](s32)
    ; CHECK-NEXT: $f10_h = COPY [[UITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %1:_(s64) = COPY $x10
    %0:_(s8) = G_TRUNC %1(s64)
    %2:_(s16) = G_UITOFP %0(s8)
    $f10_h = COPY %2(s16)
    PseudoRET implicit $f10_h

...
---
name:            sitofp_s16_s16
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: sitofp_s16_s16
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 16
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[TRUNC]], [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 16
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C1]](s64)
    ; CHECK-NEXT: [[SITOFP:%[0-9]+]]:_(s16) = G_SITOFP [[ASHR]](s32)
    ; CHECK-NEXT: $f10_h = COPY [[SITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %1:_(s64) = COPY $x10
    %0:_(s16) = G_TRUNC %1(s64)
    %2:_(s16) = G_SITOFP %0(s16)
    $f10_h = COPY %2(s16)
    PseudoRET implicit $f10_h

...
---
name:            uitofp_s16_s16
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: uitofp_s16_s16
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[TRUNC]], [[C]]
    ; CHECK-NEXT: [[UITOFP:%[0-9]+]]:_(s16) = G_UITOFP [[AND]](s32)
    ; CHECK-NEXT: $f10_h = COPY [[UITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %1:_(s64) = COPY $x10
    %0:_(s16) = G_TRUNC %1(s64)
    %2:_(s16) = G_UITOFP %0(s16)
    $f10_h = COPY %2(s16)
    PseudoRET implicit $f10_h

...
---
name:            sitofp_s16_s32
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: sitofp_s16_s32
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[SITOFP:%[0-9]+]]:_(s16) = G_SITOFP [[TRUNC]](s32)
    ; CHECK-NEXT: $f10_h = COPY [[SITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %1:_(s64) = COPY $x10
    %0:_(s32) = G_TRUNC %1(s64)
    %2:_(s16) = G_SITOFP %0(s32)
    $f10_h = COPY %2(s16)
    PseudoRET implicit $f10_h

...
---
name:            uitofp_s16_s32
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: uitofp_s16_s32
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[UITOFP:%[0-9]+]]:_(s16) = G_UITOFP [[TRUNC]](s32)
    ; CHECK-NEXT: $f10_h = COPY [[UITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %1:_(s64) = COPY $x10
    %0:_(s32) = G_TRUNC %1(s64)
    %2:_(s16) = G_UITOFP %0(s32)
    $f10_h = COPY %2(s16)
    PseudoRET implicit $f10_h

...
---
name:            sitofp_s16_s64
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: sitofp_s16_s64
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[SITOFP:%[0-9]+]]:_(s16) = G_SITOFP [[COPY]](s64)
    ; CHECK-NEXT: $f10_h = COPY [[SITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %0:_(s64) = COPY $x10
    %1:_(s16) = G_SITOFP %0(s64)
    $f10_h = COPY %1(s16)
    PseudoRET implicit $f10_h

...
---
name:            uitofp_s16_s64
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10

    ; CHECK-LABEL: name: uitofp_s16_s64
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[UITOFP:%[0-9]+]]:_(s16) = G_UITOFP [[COPY]](s64)
    ; CHECK-NEXT: $f10_h = COPY [[UITOFP]](s16)
    ; CHECK-NEXT: PseudoRET implicit $f10_h
    %0:_(s64) = COPY $x10
    %1:_(s16) = G_UITOFP %0(s64)
    $f10_h = COPY %1(s16)
    PseudoRET implicit $f10_h

...
