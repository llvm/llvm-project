# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv32 -mattr=+d -run-pass=legalizer %s -o - \
# RUN: | FileCheck %s

---
name:            fcmp_oeq_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_oeq_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(oeq), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(oeq), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ogt_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_ogt_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ogt), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(ogt), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_oge_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_oge_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(oge), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(oge), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_olt_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_olt_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(olt), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(olt), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ole_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_ole_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ole), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(ole), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_one_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_one_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(one), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(one), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ord_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_ord_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ord), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(ord), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ueq_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_ueq_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ueq), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(ueq), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ugt_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_ugt_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ugt), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(ugt), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_uge_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_uge_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(uge), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(uge), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ult_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_ult_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ult), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(ult), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ule_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_ule_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ule), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(ule), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_une_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_une_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(une), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(une), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_uno_f32
body:             |
  bb.1:
    liveins: $f10_f, $f11_f

    ; CHECK-LABEL: name: fcmp_uno_f32
    ; CHECK: liveins: $f10_f, $f11_f
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $f10_f
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $f11_f
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(uno), [[COPY]](s32), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s32) = COPY $f10_f
    %1:_(s32) = COPY $f11_f
    %2:_(s1) = G_FCMP floatpred(uno), %0(s32), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_oeq_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_oeq_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(oeq), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(oeq), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ogt_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_ogt_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ogt), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(ogt), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_oge_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_oge_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(oge), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(oge), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_olt_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_olt_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(olt), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(olt), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ole_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_ole_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ole), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(ole), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_one_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_one_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(one), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(one), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ord_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_ord_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ord), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(ord), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ueq_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_ueq_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ueq), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(ueq), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ugt_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_ugt_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ugt), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(ugt), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_uge_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_uge_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(uge), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(uge), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ult_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_ult_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ult), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(ult), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_ule_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_ule_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(ule), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(ule), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_une_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_une_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(une), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(une), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
---
name:            fcmp_uno_f64
body:             |
  bb.1:
    liveins: $f10_d, $f11_d

    ; CHECK-LABEL: name: fcmp_uno_f64
    ; CHECK: liveins: $f10_d, $f11_d
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $f11_d
    ; CHECK-NEXT: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(uno), [[COPY]](s64), [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[FCMP]](s32)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = COPY $f11_d
    %2:_(s1) = G_FCMP floatpred(uno), %0(s64), %1
    %3:_(s32) = G_ANYEXT %2(s1)
    $x10 = COPY %3(s32)
    PseudoRET implicit $x10

...
