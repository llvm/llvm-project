# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv64 -mattr=+v -run-pass=legalizer %s -o - | FileCheck %s

---
name:            insertelement_nxv1i1_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i1_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 1 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 1 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 false
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 1 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv1i1_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i1_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 1 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 1 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 true
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 1 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv1i1_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: insertelement_nxv1i1_2
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 1 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 4294967295
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[AND]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 1 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %2:_(s64) = COPY $x10
    %0:_(s1) = G_TRUNC %2(s64)
    %3:_(s64) = COPY $x11
    %1:_(s32) = G_TRUNC %3(s64)
    %5:_(<vscale x 1 x s1>) = G_IMPLICIT_DEF
    %6:_(s64) = G_ZEXT %1(s32)
    %4:_(<vscale x 1 x s1>) = G_INSERT_VECTOR_ELT %5, %0(s1), %6(s64)
    $v0 = COPY %4(<vscale x 1 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv2i1_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i1_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 2 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 2 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 false
    %3:_(s64) = G_CONSTANT i64 1
    %0:_(<vscale x 2 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 2 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv2i1_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i1_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 2 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 2 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 true
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 2 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 2 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv2i1_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: insertelement_nxv2i1_2
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 2 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 4294967295
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[AND]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 2 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %2:_(s64) = COPY $x10
    %0:_(s1) = G_TRUNC %2(s64)
    %3:_(s64) = COPY $x11
    %1:_(s32) = G_TRUNC %3(s64)
    %5:_(<vscale x 2 x s1>) = G_IMPLICIT_DEF
    %6:_(s64) = G_ZEXT %1(s32)
    %4:_(<vscale x 2 x s1>) = G_INSERT_VECTOR_ELT %5, %0(s1), %6(s64)
    $v0 = COPY %4(<vscale x 2 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv4i1_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i1_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 2
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 4 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 4 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 false
    %3:_(s64) = G_CONSTANT i64 2
    %0:_(<vscale x 4 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 4 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv4i1_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i1_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 4 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 4 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 true
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 4 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv4i1_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv4i1_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 4 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 4 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(s64) = COPY $x10
    %0:_(s1) = G_TRUNC %1(s64)
    %3:_(<vscale x 4 x s1>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 4 x s1>) = G_INSERT_VECTOR_ELT %3, %0(s1), %4(s64)
    $v0 = COPY %2(<vscale x 4 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv8i1_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i1_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 8 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 8 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 false
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 8 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv8i1_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i1_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 8 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 8 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 true
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 8 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv8i1_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: insertelement_nxv8i1_2
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 8 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 4294967295
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[AND]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 8 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %2:_(s64) = COPY $x10
    %0:_(s1) = G_TRUNC %2(s64)
    %3:_(s64) = COPY $x11
    %1:_(s32) = G_TRUNC %3(s64)
    %5:_(<vscale x 8 x s1>) = G_IMPLICIT_DEF
    %6:_(s64) = G_ZEXT %1(s32)
    %4:_(<vscale x 8 x s1>) = G_INSERT_VECTOR_ELT %5, %0(s1), %6(s64)
    $v0 = COPY %4(<vscale x 8 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv16i1_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv16i1_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 16 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 15
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 16 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 16 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 false
    %3:_(s64) = G_CONSTANT i64 15
    %0:_(<vscale x 16 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 16 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv16i1_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv16i1_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 16 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[C1]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 16 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %1:_(<vscale x 16 x s1>) = G_IMPLICIT_DEF
    %2:_(s1) = G_CONSTANT i1 true
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 16 x s1>) = G_INSERT_VECTOR_ELT %1, %2(s1), %3(s64)
    $v0 = COPY %0(<vscale x 16 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv16i1_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: insertelement_nxv16i1_2
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 16 x s1>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 4294967295
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s1>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s1), [[AND]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 16 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %2:_(s64) = COPY $x10
    %0:_(s1) = G_TRUNC %2(s64)
    %3:_(s64) = COPY $x11
    %1:_(s32) = G_TRUNC %3(s64)
    %5:_(<vscale x 16 x s1>) = G_IMPLICIT_DEF
    %6:_(s64) = G_ZEXT %1(s32)
    %4:_(<vscale x 16 x s1>) = G_INSERT_VECTOR_ELT %5, %0(s1), %6(s64)
    $v0 = COPY %4(<vscale x 16 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv4i1_3
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v0, $x10

    ; CHECK-LABEL: name: insertelement_nxv4i1_3
    ; CHECK: liveins: $v0, $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<vscale x 4 x s1>) = COPY $v0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[COPY1]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s1>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s1), [[C]](s64)
    ; CHECK-NEXT: $v0 = COPY [[IVEC]](<vscale x 4 x s1>)
    ; CHECK-NEXT: PseudoRET implicit $v0
    %0:_(<vscale x 4 x s1>) = COPY $v0
    %2:_(s64) = COPY $x10
    %1:_(s1) = G_TRUNC %2(s64)
    %4:_(s64) = G_CONSTANT i64 0
    %3:_(<vscale x 4 x s1>) = G_INSERT_VECTOR_ELT %0, %1(s1), %4(s64)
    $v0 = COPY %3(<vscale x 4 x s1>)
    PseudoRET implicit $v0
...
---
name:            insertelement_nxv1i8_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i8_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 1 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8 = COPY %0(<vscale x 1 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i8_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i8_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 1 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8 = COPY %0(<vscale x 1 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i8_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv1i8_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 1 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s8) = G_TRUNC %1(s64)
    %3:_(<vscale x 1 x s8>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 1 x s8>) = G_INSERT_VECTOR_ELT %3, %0(s8), %4(s64)
    $v8 = COPY %2(<vscale x 1 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i8_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i8_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 2 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 2 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8 = COPY %0(<vscale x 2 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i8_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i8_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 2 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 2 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8 = COPY %0(<vscale x 2 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i8_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv2i8_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 2 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s8) = G_TRUNC %1(s64)
    %3:_(<vscale x 2 x s8>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 2 x s8>) = G_INSERT_VECTOR_ELT %3, %0(s8), %4(s64)
    $v8 = COPY %2(<vscale x 2 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv4i8_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i8_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 4 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8 = COPY %0(<vscale x 4 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv4i8_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i8_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 4 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8 = COPY %0(<vscale x 4 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv4i8_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv4i8_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 4 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s8) = G_TRUNC %1(s64)
    %3:_(<vscale x 4 x s8>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT %3, %0(s8), %4(s64)
    $v8 = COPY %2(<vscale x 4 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv8i8_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i8_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 8 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 8 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8 = COPY %0(<vscale x 8 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv8i8_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i8_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 8 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 8 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8 = COPY %0(<vscale x 8 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv8i8_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv8i8_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 8 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 8 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s8) = G_TRUNC %1(s64)
    %3:_(<vscale x 8 x s8>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 8 x s8>) = G_INSERT_VECTOR_ELT %3, %0(s8), %4(s64)
    $v8 = COPY %2(<vscale x 8 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv16i8_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv16i8_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 16 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 16 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(<vscale x 16 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 16 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8m2 = COPY %0(<vscale x 16 x s8>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv16i8_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv16i8_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 16 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[C1]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 16 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(<vscale x 16 x s8>) = G_IMPLICIT_DEF
    %2:_(s8) = G_CONSTANT i8 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 16 x s8>) = G_INSERT_VECTOR_ELT %1, %2(s8), %3(s64)
    $v8m2 = COPY %0(<vscale x 16 x s8>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv16i8_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; CHECK-LABEL: name: insertelement_nxv16i8_2
    ; CHECK: liveins: $x10, $x11
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 16 x s8>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[COPY1]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 16 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %2:_(s64) = COPY $x10
    %0:_(s8) = G_TRUNC %2(s64)
    %1:_(s64) = COPY $x11
    %4:_(<vscale x 16 x s8>) = G_IMPLICIT_DEF
    %3:_(<vscale x 16 x s8>) = G_INSERT_VECTOR_ELT %4, %0(s8), %1(s64)
    $v8m2 = COPY %3(<vscale x 16 x s8>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv4i8_3
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8, $x10

    ; CHECK-LABEL: name: insertelement_nxv4i8_3
    ; CHECK: liveins: $v8, $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<vscale x 4 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[COPY1]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s8), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s8>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 4 x s8>) = COPY $v8
    %2:_(s64) = COPY $x10
    %1:_(s8) = G_TRUNC %2(s64)
    %4:_(s64) = G_CONSTANT i64 0
    %3:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT %0, %1(s8), %4(s64)
    $v8 = COPY %3(<vscale x 4 x s8>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i16_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i16_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 1 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8 = COPY %0(<vscale x 1 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i16_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i16_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 1 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8 = COPY %0(<vscale x 1 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i16_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv1i16_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 1 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s16) = G_TRUNC %1(s64)
    %3:_(<vscale x 1 x s16>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 1 x s16>) = G_INSERT_VECTOR_ELT %3, %0(s16), %4(s64)
    $v8 = COPY %2(<vscale x 1 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i16_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i16_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 1
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 2 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 0
    %3:_(s64) = G_CONSTANT i64 1
    %0:_(<vscale x 2 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8 = COPY %0(<vscale x 2 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i16_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i16_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 2 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 2 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8 = COPY %0(<vscale x 2 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i16_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv2i16_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 2 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s16) = G_TRUNC %1(s64)
    %3:_(<vscale x 2 x s16>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 2 x s16>) = G_INSERT_VECTOR_ELT %3, %0(s16), %4(s64)
    $v8 = COPY %2(<vscale x 2 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv4i16_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i16_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 4 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8 = COPY %0(<vscale x 4 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv4i16_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i16_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 4 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8 = COPY %0(<vscale x 4 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv4i16_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv4i16_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 4 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s16) = G_TRUNC %1(s64)
    %3:_(<vscale x 4 x s16>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT %3, %0(s16), %4(s64)
    $v8 = COPY %2(<vscale x 4 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv8i16_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i16_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 8 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(<vscale x 8 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8m2 = COPY %0(<vscale x 8 x s16>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv8i16_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i16_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 8 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(<vscale x 8 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8m2 = COPY %0(<vscale x 8 x s16>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv8i16_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv8i16_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 8 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 8 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(s64) = COPY $x10
    %0:_(s16) = G_TRUNC %1(s64)
    %3:_(<vscale x 8 x s16>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 8 x s16>) = G_INSERT_VECTOR_ELT %3, %0(s16), %4(s64)
    $v8m2 = COPY %2(<vscale x 8 x s16>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv16i16_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv16i16_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 16 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 16 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %1:_(<vscale x 16 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 16 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8m4 = COPY %0(<vscale x 16 x s16>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv16i16_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv16i16_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 16 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C1]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 16 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %1:_(<vscale x 16 x s16>) = G_IMPLICIT_DEF
    %2:_(s16) = G_CONSTANT i16 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 16 x s16>) = G_INSERT_VECTOR_ELT %1, %2(s16), %3(s64)
    $v8m4 = COPY %0(<vscale x 16 x s16>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv16i16_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv16i16_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 16 x s16>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[C]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 16 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %1:_(s64) = COPY $x10
    %0:_(s16) = G_TRUNC %1(s64)
    %3:_(<vscale x 16 x s16>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 16 x s16>) = G_INSERT_VECTOR_ELT %3, %0(s16), %4(s64)
    $v8m4 = COPY %2(<vscale x 16 x s16>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv4i16
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8, $x10

    ; CHECK-LABEL: name: insertelement_nxv4i16
    ; CHECK: liveins: $v8, $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<vscale x 4 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY1]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s16), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s16>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 4 x s16>) = COPY $v8
    %2:_(s64) = COPY $x10
    %1:_(s16) = G_TRUNC %2(s64)
    %4:_(s64) = G_CONSTANT i64 0
    %3:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT %0, %1(s16), %4(s64)
    $v8 = COPY %3(<vscale x 4 x s16>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i32_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i32_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 1 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8 = COPY %0(<vscale x 1 x s32>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i32_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i32_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 1 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8 = COPY %0(<vscale x 1 x s32>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i32_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv1i32_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 1 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s32) = G_TRUNC %1(s64)
    %3:_(<vscale x 1 x s32>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 1 x s32>) = G_INSERT_VECTOR_ELT %3, %0(s32), %4(s64)
    $v8 = COPY %2(<vscale x 1 x s32>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i32_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i32_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 2 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 2 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8 = COPY %0(<vscale x 2 x s32>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i32_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i32_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 2 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 2 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8 = COPY %0(<vscale x 2 x s32>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i32_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv2i32_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 2 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(s64) = COPY $x10
    %0:_(s32) = G_TRUNC %1(s64)
    %3:_(<vscale x 2 x s32>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 2 x s32>) = G_INSERT_VECTOR_ELT %3, %0(s32), %4(s64)
    $v8 = COPY %2(<vscale x 2 x s32>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv4i32_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i32_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 4 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(<vscale x 4 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8m2 = COPY %0(<vscale x 4 x s32>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv4i32_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i32_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 4 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(<vscale x 4 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8m2 = COPY %0(<vscale x 4 x s32>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv4i32_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv4i32_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 4 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 4 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(s64) = COPY $x10
    %0:_(s32) = G_TRUNC %1(s64)
    %3:_(<vscale x 4 x s32>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT %3, %0(s32), %4(s64)
    $v8m2 = COPY %2(<vscale x 4 x s32>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv8i32_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i32_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 8 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %1:_(<vscale x 8 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8m4 = COPY %0(<vscale x 8 x s32>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv8i32_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i32_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 8 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %1:_(<vscale x 8 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8m4 = COPY %0(<vscale x 8 x s32>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv8i32_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv8i32_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 8 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 8 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %1:_(s64) = COPY $x10
    %0:_(s32) = G_TRUNC %1(s64)
    %3:_(<vscale x 8 x s32>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 8 x s32>) = G_INSERT_VECTOR_ELT %3, %0(s32), %4(s64)
    $v8m4 = COPY %2(<vscale x 8 x s32>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv16i32_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv16i32_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 16 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m8
    %1:_(<vscale x 16 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 0
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 16 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8m8 = COPY %0(<vscale x 16 x s32>)
    PseudoRET implicit $v8m8
...
---
name:            insertelement_nxv16i32_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv16i32_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 16 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C1]](s64)
    ; CHECK-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m8
    %1:_(<vscale x 16 x s32>) = G_IMPLICIT_DEF
    %2:_(s32) = G_CONSTANT i32 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 16 x s32>) = G_INSERT_VECTOR_ELT %1, %2(s32), %3(s64)
    $v8m8 = COPY %0(<vscale x 16 x s32>)
    PseudoRET implicit $v8m8
...
---
name:            insertelement_nxv16i32_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv16i32_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 16 x s32>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 16 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s32), [[C]](s64)
    ; CHECK-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 16 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m8
    %1:_(s64) = COPY $x10
    %0:_(s32) = G_TRUNC %1(s64)
    %3:_(<vscale x 16 x s32>) = G_IMPLICIT_DEF
    %4:_(s64) = G_CONSTANT i64 0
    %2:_(<vscale x 16 x s32>) = G_INSERT_VECTOR_ELT %3, %0(s32), %4(s64)
    $v8m8 = COPY %2(<vscale x 16 x s32>)
    PseudoRET implicit $v8m8
...
---
name:            insertelement_nxv4i32
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $v8m2

    ; CHECK-LABEL: name: insertelement_nxv4i32
    ; CHECK: liveins: $x10, $v8m2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<vscale x 4 x s32>) = COPY $v8m2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY1]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s32), [[C]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 4 x s32>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %0:_(<vscale x 4 x s32>) = COPY $v8m2
    %2:_(s64) = COPY $x10
    %1:_(s32) = G_TRUNC %2(s64)
    %4:_(s64) = G_CONSTANT i64 0
    %3:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT %0, %1(s32), %4(s64)
    $v8m2 = COPY %3(<vscale x 4 x s32>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv1i64_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i64_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 1 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %2(s64)
    $v8 = COPY %0(<vscale x 1 x s64>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i64_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv1i64_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 1 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C1]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %1:_(<vscale x 1 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 1 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %3(s64)
    $v8 = COPY %0(<vscale x 1 x s64>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv1i64_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv1i64_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 1 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 1 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[COPY]](s64), [[C]](s64)
    ; CHECK-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8
    %0:_(s64) = COPY $x10
    %2:_(<vscale x 1 x s64>) = G_IMPLICIT_DEF
    %3:_(s64) = G_CONSTANT i64 0
    %1:_(<vscale x 1 x s64>) = G_INSERT_VECTOR_ELT %2, %0(s64), %3(s64)
    $v8 = COPY %1(<vscale x 1 x s64>)
    PseudoRET implicit $v8
...
---
name:            insertelement_nxv2i64_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i64_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 2 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(<vscale x 2 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 2 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %2(s64)
    $v8m2 = COPY %0(<vscale x 2 x s64>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv2i64_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv2i64_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 2 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C1]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 2 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %1:_(<vscale x 2 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 2 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %3(s64)
    $v8m2 = COPY %0(<vscale x 2 x s64>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv2i64_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv2i64_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 2 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 2 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[COPY]](s64), [[C]](s64)
    ; CHECK-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 2 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m2
    %0:_(s64) = COPY $x10
    %2:_(<vscale x 2 x s64>) = G_IMPLICIT_DEF
    %3:_(s64) = G_CONSTANT i64 0
    %1:_(<vscale x 2 x s64>) = G_INSERT_VECTOR_ELT %2, %0(s64), %3(s64)
    $v8m2 = COPY %1(<vscale x 2 x s64>)
    PseudoRET implicit $v8m2
...
---
name:            insertelement_nxv4i64_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i64_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 4 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %1:_(<vscale x 4 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %2(s64)
    $v8m4 = COPY %0(<vscale x 4 x s64>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv4i64_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv4i64_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 4 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C1]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 4 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %1:_(<vscale x 4 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 4 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %3(s64)
    $v8m4 = COPY %0(<vscale x 4 x s64>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv4i64_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv4i64_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 4 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 4 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[COPY]](s64), [[C]](s64)
    ; CHECK-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 4 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m4
    %0:_(s64) = COPY $x10
    %2:_(<vscale x 4 x s64>) = G_IMPLICIT_DEF
    %3:_(s64) = G_CONSTANT i64 0
    %1:_(<vscale x 4 x s64>) = G_INSERT_VECTOR_ELT %2, %0(s64), %3(s64)
    $v8m4 = COPY %1(<vscale x 4 x s64>)
    PseudoRET implicit $v8m4
...
---
name:            insertelement_nxv8i64_0
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i64_0
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C]](s64)
    ; CHECK-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 8 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m8
    %1:_(<vscale x 8 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %2(s64)
    $v8m8 = COPY %0(<vscale x 8 x s64>)
    PseudoRET implicit $v8m8
...
---
name:            insertelement_nxv8i64_1
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: insertelement_nxv8i64_1
    ; CHECK: [[DEF:%[0-9]+]]:_(<vscale x 8 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 -1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C1]](s64)
    ; CHECK-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 8 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m8
    %1:_(<vscale x 8 x s64>) = G_IMPLICIT_DEF
    %2:_(s64) = G_CONSTANT i64 -1
    %3:_(s64) = G_CONSTANT i64 0
    %0:_(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT %1, %2(s64), %3(s64)
    $v8m8 = COPY %0(<vscale x 8 x s64>)
    PseudoRET implicit $v8m8
...
---
name:            insertelement_nxv8i64_2
legalized:       false
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10

    ; CHECK-LABEL: name: insertelement_nxv8i64_2
    ; CHECK: liveins: $x10
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[DEF:%[0-9]+]]:_(<vscale x 8 x s64>) = G_IMPLICIT_DEF
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: [[IVEC:%[0-9]+]]:_(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[COPY]](s64), [[C]](s64)
    ; CHECK-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 8 x s64>)
    ; CHECK-NEXT: PseudoRET implicit $v8m8
    %0:_(s64) = COPY $x10
    %2:_(<vscale x 8 x s64>) = G_IMPLICIT_DEF
    %3:_(s64) = G_CONSTANT i64 0
    %1:_(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT %2, %0(s64), %3(s64)
    $v8m8 = COPY %1(<vscale x 8 x s64>)
    PseudoRET implicit $v8m8
...
