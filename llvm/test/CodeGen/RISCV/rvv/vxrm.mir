# RUN: llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs -stop-after prologepilog -o - %s | FileCheck %s --check-prefix=MIR
# RUN: llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs -o - %s | FileCheck %s --check-prefix=ASM

---
name:    verify_vxrm
tracksRegLiveness: true
body:     |
  bb.0.entry:
    liveins: $v8, $v9, $x10

    ; MIR-LABEL: name: verify_vxrm
    ; MIR: liveins: $v8, $v9, $x10
    ; MIR-NEXT: {{  $}}
    ; MIR-NEXT: WriteVXRMImm 0, implicit-def $vxrm
    ; MIR-NEXT: dead $x0 = PseudoVSETVLI killed renamable $x10, 197 /* e8, mf8, ta, ma */, implicit-def $vl, implicit-def $vtype
    ; MIR-NEXT: renamable $v8 = PseudoVAADD_VV_MF8 undef $v8, killed renamable $v8, killed renamable $v9, 0, $noreg, 3 /* e8 */, 0  /* tu, mu */, implicit $vxrm, implicit $vl, implicit $vtype
    ; MIR-NEXT: PseudoRET implicit $v8
    ; ASM-LABEL: verify_vxrm:
    ; ASM:        # %bb.0:
    ; ASM-NEXT:    csrwi	vxrm, 0
    ; ASM-NEXT:    vsetvli	zero, a0, e8, mf8, ta, ma
    ; ASM-NEXT:    vaadd.vv	v8, v8, v9
    ; ASM-NEXT:    ret
    %0:vr = COPY $v8
    %1:vr = COPY $v9
    %2:gprnox0 = COPY $x10
    renamable $v8 = PseudoVAADD_VV_MF8 undef $noreg, %0, %1, 0, %2, 3 /* e8 */, 0
    PseudoRET implicit $v8
...
