; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv32 -mattr=+experimental-v -verify-machineinstrs -riscv-v-vector-bits-min=128 -riscv-v-fixed-length-vector-lmul-max=2 -verify-machineinstrs < %s | FileCheck %s --check-prefixes=CHECK,LMULMAX2-RV32
; RUN: llc -mtriple=riscv64 -mattr=+experimental-v -verify-machineinstrs -riscv-v-vector-bits-min=128 -riscv-v-fixed-length-vector-lmul-max=2 -verify-machineinstrs < %s | FileCheck %s --check-prefixes=CHECK,LMULMAX2-RV64
; RUN: llc -mtriple=riscv32 -mattr=+experimental-v -verify-machineinstrs -riscv-v-vector-bits-min=128 -riscv-v-fixed-length-vector-lmul-max=1 -verify-machineinstrs < %s | FileCheck %s --check-prefixes=CHECK,LMULMAX1
; RUN: llc -mtriple=riscv64 -mattr=+experimental-v -verify-machineinstrs -riscv-v-vector-bits-min=128 -riscv-v-fixed-length-vector-lmul-max=1 -verify-machineinstrs < %s | FileCheck %s --check-prefixes=CHECK,LMULMAX1

define void @bswap_v8i16(<8 x i16>* %x, <8 x i16>* %y) {
; CHECK-LABEL: bswap_v8i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi sp, sp, -16
; CHECK-NEXT:    .cfi_def_cfa_offset 16
; CHECK-NEXT:    vsetivli a1, 8, e16,m1,ta,mu
; CHECK-NEXT:    vle16.v v25, (a0)
; CHECK-NEXT:    vsetvli zero, zero, e8,m1,ta,mu
; CHECK-NEXT:    vmv.x.s a1, v25
; CHECK-NEXT:    sb a1, 1(sp)
; CHECK-NEXT:    vsetivli a1, 1, e8,m1,ta,mu
; CHECK-NEXT:    vslidedown.vi v26, v25, 14
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 15(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 15
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 14(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 12
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 13(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 13
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 12(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 10
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 11(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 11
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 10(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 8
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 9(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 9
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 8(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 6
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 7(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 7
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 6(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 4
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 5(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 5
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 4(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 2
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 3(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 3
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 2(sp)
; CHECK-NEXT:    vslidedown.vi v25, v25, 1
; CHECK-NEXT:    vmv.x.s a1, v25
; CHECK-NEXT:    sb a1, 0(sp)
; CHECK-NEXT:    vsetivli a1, 16, e8,m1,ta,mu
; CHECK-NEXT:    vle8.v v25, (sp)
; CHECK-NEXT:    vsetivli a1, 8, e16,m1,ta,mu
; CHECK-NEXT:    vse16.v v25, (a0)
; CHECK-NEXT:    addi sp, sp, 16
; CHECK-NEXT:    ret
  %a = load <8 x i16>, <8 x i16>* %x
  %b = load <8 x i16>, <8 x i16>* %y
  %c = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %a)
  store <8 x i16> %c, <8 x i16>* %x
  ret void
}
declare <8 x i16> @llvm.bswap.v8i16(<8 x i16>)

define void @bswap_v4i32(<4 x i32>* %x, <4 x i32>* %y) {
; CHECK-LABEL: bswap_v4i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi sp, sp, -16
; CHECK-NEXT:    .cfi_def_cfa_offset 16
; CHECK-NEXT:    vsetivli a1, 4, e32,m1,ta,mu
; CHECK-NEXT:    vle32.v v25, (a0)
; CHECK-NEXT:    vsetvli zero, zero, e8,m1,ta,mu
; CHECK-NEXT:    vmv.x.s a1, v25
; CHECK-NEXT:    sb a1, 3(sp)
; CHECK-NEXT:    vsetivli a1, 1, e8,m1,ta,mu
; CHECK-NEXT:    vslidedown.vi v26, v25, 12
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 15(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 13
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 14(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 14
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 13(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 15
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 12(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 8
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 11(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 9
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 10(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 10
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 9(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 11
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 8(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 4
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 7(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 5
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 6(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 6
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 5(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 7
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 4(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 1
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 2(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 2
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 1(sp)
; CHECK-NEXT:    vslidedown.vi v25, v25, 3
; CHECK-NEXT:    vmv.x.s a1, v25
; CHECK-NEXT:    sb a1, 0(sp)
; CHECK-NEXT:    vsetivli a1, 16, e8,m1,ta,mu
; CHECK-NEXT:    vle8.v v25, (sp)
; CHECK-NEXT:    vsetivli a1, 4, e32,m1,ta,mu
; CHECK-NEXT:    vse32.v v25, (a0)
; CHECK-NEXT:    addi sp, sp, 16
; CHECK-NEXT:    ret
  %a = load <4 x i32>, <4 x i32>* %x
  %b = load <4 x i32>, <4 x i32>* %y
  %c = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %a)
  store <4 x i32> %c, <4 x i32>* %x
  ret void
}
declare <4 x i32> @llvm.bswap.v4i32(<4 x i32>)

define void @bswap_v2i64(<2 x i64>* %x, <2 x i64>* %y) {
; CHECK-LABEL: bswap_v2i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi sp, sp, -16
; CHECK-NEXT:    .cfi_def_cfa_offset 16
; CHECK-NEXT:    vsetivli a1, 2, e64,m1,ta,mu
; CHECK-NEXT:    vle64.v v25, (a0)
; CHECK-NEXT:    vsetvli zero, zero, e8,m1,ta,mu
; CHECK-NEXT:    vmv.x.s a1, v25
; CHECK-NEXT:    sb a1, 7(sp)
; CHECK-NEXT:    vsetivli a1, 1, e8,m1,ta,mu
; CHECK-NEXT:    vslidedown.vi v26, v25, 8
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 15(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 9
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 14(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 10
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 13(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 11
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 12(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 12
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 11(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 13
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 10(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 14
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 9(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 15
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 8(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 1
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 6(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 2
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 5(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 3
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 4(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 4
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 3(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 5
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 2(sp)
; CHECK-NEXT:    vslidedown.vi v26, v25, 6
; CHECK-NEXT:    vmv.x.s a1, v26
; CHECK-NEXT:    sb a1, 1(sp)
; CHECK-NEXT:    vslidedown.vi v25, v25, 7
; CHECK-NEXT:    vmv.x.s a1, v25
; CHECK-NEXT:    sb a1, 0(sp)
; CHECK-NEXT:    vsetivli a1, 16, e8,m1,ta,mu
; CHECK-NEXT:    vle8.v v25, (sp)
; CHECK-NEXT:    vsetivli a1, 2, e64,m1,ta,mu
; CHECK-NEXT:    vse64.v v25, (a0)
; CHECK-NEXT:    addi sp, sp, 16
; CHECK-NEXT:    ret
  %a = load <2 x i64>, <2 x i64>* %x
  %b = load <2 x i64>, <2 x i64>* %y
  %c = call <2 x i64> @llvm.bswap.v2i64(<2 x i64> %a)
  store <2 x i64> %c, <2 x i64>* %x
  ret void
}
declare <2 x i64> @llvm.bswap.v2i64(<2 x i64>)

define void @bswap_v16i16(<16 x i16>* %x, <16 x i16>* %y) {
; LMULMAX2-RV32-LABEL: bswap_v16i16:
; LMULMAX2-RV32:       # %bb.0:
; LMULMAX2-RV32-NEXT:    addi sp, sp, -64
; LMULMAX2-RV32-NEXT:    .cfi_def_cfa_offset 64
; LMULMAX2-RV32-NEXT:    sw ra, 60(sp) # 4-byte Folded Spill
; LMULMAX2-RV32-NEXT:    sw s0, 56(sp) # 4-byte Folded Spill
; LMULMAX2-RV32-NEXT:    .cfi_offset ra, -4
; LMULMAX2-RV32-NEXT:    .cfi_offset s0, -8
; LMULMAX2-RV32-NEXT:    addi s0, sp, 64
; LMULMAX2-RV32-NEXT:    .cfi_def_cfa s0, 0
; LMULMAX2-RV32-NEXT:    andi sp, sp, -32
; LMULMAX2-RV32-NEXT:    vsetivli a1, 16, e16,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vle16.v v26, (a0)
; LMULMAX2-RV32-NEXT:    vsetvli zero, zero, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV32-NEXT:    sb a1, 1(sp)
; LMULMAX2-RV32-NEXT:    vsetivli a1, 1, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 30
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 31(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 31
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 30(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 28
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 29(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 29
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 28(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 26
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 27(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 27
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 26(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 24
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 25(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 25
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 24(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 22
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 23(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 23
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 22(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 20
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 21(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 21
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 20(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 18
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 19(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 19
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 18(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 16
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 17(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 17
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 16(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 14
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 15(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 15
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 14(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 12
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 13(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 13
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 12(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 10
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 11(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 11
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 10(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 8
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 9(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 9
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 8(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 6
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 7(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 7
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 6(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 4
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 5(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 5
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 4(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 2
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 3(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 3
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 2(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v26, v26, 1
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV32-NEXT:    sb a1, 0(sp)
; LMULMAX2-RV32-NEXT:    addi a1, zero, 32
; LMULMAX2-RV32-NEXT:    vsetvli a1, a1, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vle8.v v26, (sp)
; LMULMAX2-RV32-NEXT:    vsetivli a1, 16, e16,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vse16.v v26, (a0)
; LMULMAX2-RV32-NEXT:    addi sp, s0, -64
; LMULMAX2-RV32-NEXT:    lw s0, 56(sp) # 4-byte Folded Reload
; LMULMAX2-RV32-NEXT:    lw ra, 60(sp) # 4-byte Folded Reload
; LMULMAX2-RV32-NEXT:    addi sp, sp, 64
; LMULMAX2-RV32-NEXT:    ret
;
; LMULMAX2-RV64-LABEL: bswap_v16i16:
; LMULMAX2-RV64:       # %bb.0:
; LMULMAX2-RV64-NEXT:    addi sp, sp, -64
; LMULMAX2-RV64-NEXT:    .cfi_def_cfa_offset 64
; LMULMAX2-RV64-NEXT:    sd ra, 56(sp) # 8-byte Folded Spill
; LMULMAX2-RV64-NEXT:    sd s0, 48(sp) # 8-byte Folded Spill
; LMULMAX2-RV64-NEXT:    .cfi_offset ra, -8
; LMULMAX2-RV64-NEXT:    .cfi_offset s0, -16
; LMULMAX2-RV64-NEXT:    addi s0, sp, 64
; LMULMAX2-RV64-NEXT:    .cfi_def_cfa s0, 0
; LMULMAX2-RV64-NEXT:    andi sp, sp, -32
; LMULMAX2-RV64-NEXT:    vsetivli a1, 16, e16,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vle16.v v26, (a0)
; LMULMAX2-RV64-NEXT:    vsetvli zero, zero, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV64-NEXT:    sb a1, 1(sp)
; LMULMAX2-RV64-NEXT:    vsetivli a1, 1, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 30
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 31(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 31
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 30(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 28
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 29(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 29
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 28(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 26
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 27(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 27
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 26(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 24
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 25(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 25
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 24(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 22
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 23(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 23
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 22(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 20
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 21(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 21
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 20(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 18
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 19(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 19
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 18(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 16
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 17(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 17
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 16(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 14
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 15(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 15
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 14(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 12
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 13(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 13
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 12(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 10
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 11(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 11
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 10(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 8
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 9(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 9
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 8(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 6
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 7(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 7
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 6(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 4
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 5(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 5
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 4(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 2
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 3(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 3
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 2(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v26, v26, 1
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV64-NEXT:    sb a1, 0(sp)
; LMULMAX2-RV64-NEXT:    addi a1, zero, 32
; LMULMAX2-RV64-NEXT:    vsetvli a1, a1, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vle8.v v26, (sp)
; LMULMAX2-RV64-NEXT:    vsetivli a1, 16, e16,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vse16.v v26, (a0)
; LMULMAX2-RV64-NEXT:    addi sp, s0, -64
; LMULMAX2-RV64-NEXT:    ld s0, 48(sp) # 8-byte Folded Reload
; LMULMAX2-RV64-NEXT:    ld ra, 56(sp) # 8-byte Folded Reload
; LMULMAX2-RV64-NEXT:    addi sp, sp, 64
; LMULMAX2-RV64-NEXT:    ret
;
; LMULMAX1-LABEL: bswap_v16i16:
; LMULMAX1:       # %bb.0:
; LMULMAX1-NEXT:    addi sp, sp, -32
; LMULMAX1-NEXT:    .cfi_def_cfa_offset 32
; LMULMAX1-NEXT:    vsetivli a1, 8, e16,m1,ta,mu
; LMULMAX1-NEXT:    addi a1, a0, 16
; LMULMAX1-NEXT:    vle16.v v26, (a1)
; LMULMAX1-NEXT:    vle16.v v25, (a0)
; LMULMAX1-NEXT:    vsetvli zero, zero, e8,m1,ta,mu
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 1(sp)
; LMULMAX1-NEXT:    vsetivli a2, 1, e8,m1,ta,mu
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 14
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 15(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 15
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 14(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 12
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 13(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 13
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 12(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 10
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 11(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 11
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 10(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 8
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 9(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 9
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 8(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 6
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 7(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 7
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 6(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 4
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 5(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 5
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 4(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 2
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 3(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 3
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 2(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v26, 1
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 0(sp)
; LMULMAX1-NEXT:    vmv.x.s a2, v25
; LMULMAX1-NEXT:    sb a2, 17(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 14
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 31(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 15
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 30(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 12
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 29(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 13
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 28(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 10
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 27(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 11
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 26(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 8
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 25(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 9
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 24(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 6
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 23(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 7
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 22(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 4
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 21(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 5
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 20(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 2
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 19(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 3
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 18(sp)
; LMULMAX1-NEXT:    vslidedown.vi v25, v25, 1
; LMULMAX1-NEXT:    vmv.x.s a2, v25
; LMULMAX1-NEXT:    sb a2, 16(sp)
; LMULMAX1-NEXT:    vsetivli a2, 16, e8,m1,ta,mu
; LMULMAX1-NEXT:    addi a2, sp, 16
; LMULMAX1-NEXT:    vle8.v v25, (a2)
; LMULMAX1-NEXT:    vle8.v v26, (sp)
; LMULMAX1-NEXT:    vsetivli a2, 8, e16,m1,ta,mu
; LMULMAX1-NEXT:    vse16.v v25, (a0)
; LMULMAX1-NEXT:    vse16.v v26, (a1)
; LMULMAX1-NEXT:    addi sp, sp, 32
; LMULMAX1-NEXT:    ret
  %a = load <16 x i16>, <16 x i16>* %x
  %b = load <16 x i16>, <16 x i16>* %y
  %c = call <16 x i16> @llvm.bswap.v16i16(<16 x i16> %a)
  store <16 x i16> %c, <16 x i16>* %x
  ret void
}
declare <16 x i16> @llvm.bswap.v16i16(<16 x i16>)

define void @bswap_v8i32(<8 x i32>* %x, <8 x i32>* %y) {
; LMULMAX2-RV32-LABEL: bswap_v8i32:
; LMULMAX2-RV32:       # %bb.0:
; LMULMAX2-RV32-NEXT:    addi sp, sp, -64
; LMULMAX2-RV32-NEXT:    .cfi_def_cfa_offset 64
; LMULMAX2-RV32-NEXT:    sw ra, 60(sp) # 4-byte Folded Spill
; LMULMAX2-RV32-NEXT:    sw s0, 56(sp) # 4-byte Folded Spill
; LMULMAX2-RV32-NEXT:    .cfi_offset ra, -4
; LMULMAX2-RV32-NEXT:    .cfi_offset s0, -8
; LMULMAX2-RV32-NEXT:    addi s0, sp, 64
; LMULMAX2-RV32-NEXT:    .cfi_def_cfa s0, 0
; LMULMAX2-RV32-NEXT:    andi sp, sp, -32
; LMULMAX2-RV32-NEXT:    vsetivli a1, 8, e32,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vle32.v v26, (a0)
; LMULMAX2-RV32-NEXT:    vsetvli zero, zero, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV32-NEXT:    sb a1, 3(sp)
; LMULMAX2-RV32-NEXT:    vsetivli a1, 1, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 28
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 31(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 29
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 30(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 30
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 29(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 31
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 28(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 24
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 27(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 25
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 26(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 26
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 25(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 27
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 24(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 20
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 23(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 21
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 22(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 22
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 21(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 23
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 20(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 16
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 19(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 17
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 18(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 18
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 17(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 19
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 16(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 12
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 15(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 13
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 14(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 14
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 13(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 15
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 12(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 8
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 11(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 9
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 10(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 10
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 9(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 11
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 8(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 4
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 7(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 5
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 6(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 6
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 5(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 7
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 4(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 1
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 2(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 2
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 1(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v26, v26, 3
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV32-NEXT:    sb a1, 0(sp)
; LMULMAX2-RV32-NEXT:    addi a1, zero, 32
; LMULMAX2-RV32-NEXT:    vsetvli a1, a1, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vle8.v v26, (sp)
; LMULMAX2-RV32-NEXT:    vsetivli a1, 8, e32,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vse32.v v26, (a0)
; LMULMAX2-RV32-NEXT:    addi sp, s0, -64
; LMULMAX2-RV32-NEXT:    lw s0, 56(sp) # 4-byte Folded Reload
; LMULMAX2-RV32-NEXT:    lw ra, 60(sp) # 4-byte Folded Reload
; LMULMAX2-RV32-NEXT:    addi sp, sp, 64
; LMULMAX2-RV32-NEXT:    ret
;
; LMULMAX2-RV64-LABEL: bswap_v8i32:
; LMULMAX2-RV64:       # %bb.0:
; LMULMAX2-RV64-NEXT:    addi sp, sp, -64
; LMULMAX2-RV64-NEXT:    .cfi_def_cfa_offset 64
; LMULMAX2-RV64-NEXT:    sd ra, 56(sp) # 8-byte Folded Spill
; LMULMAX2-RV64-NEXT:    sd s0, 48(sp) # 8-byte Folded Spill
; LMULMAX2-RV64-NEXT:    .cfi_offset ra, -8
; LMULMAX2-RV64-NEXT:    .cfi_offset s0, -16
; LMULMAX2-RV64-NEXT:    addi s0, sp, 64
; LMULMAX2-RV64-NEXT:    .cfi_def_cfa s0, 0
; LMULMAX2-RV64-NEXT:    andi sp, sp, -32
; LMULMAX2-RV64-NEXT:    vsetivli a1, 8, e32,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vle32.v v26, (a0)
; LMULMAX2-RV64-NEXT:    vsetvli zero, zero, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV64-NEXT:    sb a1, 3(sp)
; LMULMAX2-RV64-NEXT:    vsetivli a1, 1, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 28
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 31(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 29
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 30(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 30
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 29(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 31
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 28(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 24
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 27(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 25
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 26(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 26
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 25(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 27
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 24(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 20
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 23(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 21
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 22(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 22
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 21(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 23
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 20(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 16
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 19(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 17
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 18(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 18
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 17(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 19
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 16(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 12
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 15(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 13
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 14(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 14
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 13(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 15
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 12(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 8
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 11(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 9
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 10(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 10
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 9(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 11
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 8(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 4
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 7(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 5
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 6(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 6
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 5(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 7
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 4(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 1
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 2(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 2
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 1(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v26, v26, 3
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV64-NEXT:    sb a1, 0(sp)
; LMULMAX2-RV64-NEXT:    addi a1, zero, 32
; LMULMAX2-RV64-NEXT:    vsetvli a1, a1, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vle8.v v26, (sp)
; LMULMAX2-RV64-NEXT:    vsetivli a1, 8, e32,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vse32.v v26, (a0)
; LMULMAX2-RV64-NEXT:    addi sp, s0, -64
; LMULMAX2-RV64-NEXT:    ld s0, 48(sp) # 8-byte Folded Reload
; LMULMAX2-RV64-NEXT:    ld ra, 56(sp) # 8-byte Folded Reload
; LMULMAX2-RV64-NEXT:    addi sp, sp, 64
; LMULMAX2-RV64-NEXT:    ret
;
; LMULMAX1-LABEL: bswap_v8i32:
; LMULMAX1:       # %bb.0:
; LMULMAX1-NEXT:    addi sp, sp, -32
; LMULMAX1-NEXT:    .cfi_def_cfa_offset 32
; LMULMAX1-NEXT:    vsetivli a1, 4, e32,m1,ta,mu
; LMULMAX1-NEXT:    addi a1, a0, 16
; LMULMAX1-NEXT:    vle32.v v26, (a1)
; LMULMAX1-NEXT:    vle32.v v25, (a0)
; LMULMAX1-NEXT:    vsetvli zero, zero, e8,m1,ta,mu
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 3(sp)
; LMULMAX1-NEXT:    vsetivli a2, 1, e8,m1,ta,mu
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 12
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 15(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 13
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 14(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 14
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 13(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 15
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 12(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 8
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 11(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 9
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 10(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 10
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 9(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 11
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 8(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 4
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 7(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 5
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 6(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 6
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 5(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 7
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 4(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 1
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 2(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 2
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 1(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v26, 3
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 0(sp)
; LMULMAX1-NEXT:    vmv.x.s a2, v25
; LMULMAX1-NEXT:    sb a2, 19(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 12
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 31(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 13
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 30(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 14
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 29(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 15
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 28(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 8
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 27(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 9
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 26(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 10
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 25(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 11
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 24(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 4
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 23(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 5
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 22(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 6
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 21(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 7
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 20(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 1
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 18(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 2
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 17(sp)
; LMULMAX1-NEXT:    vslidedown.vi v25, v25, 3
; LMULMAX1-NEXT:    vmv.x.s a2, v25
; LMULMAX1-NEXT:    sb a2, 16(sp)
; LMULMAX1-NEXT:    vsetivli a2, 16, e8,m1,ta,mu
; LMULMAX1-NEXT:    addi a2, sp, 16
; LMULMAX1-NEXT:    vle8.v v25, (a2)
; LMULMAX1-NEXT:    vle8.v v26, (sp)
; LMULMAX1-NEXT:    vsetivli a2, 4, e32,m1,ta,mu
; LMULMAX1-NEXT:    vse32.v v25, (a0)
; LMULMAX1-NEXT:    vse32.v v26, (a1)
; LMULMAX1-NEXT:    addi sp, sp, 32
; LMULMAX1-NEXT:    ret
  %a = load <8 x i32>, <8 x i32>* %x
  %b = load <8 x i32>, <8 x i32>* %y
  %c = call <8 x i32> @llvm.bswap.v8i32(<8 x i32> %a)
  store <8 x i32> %c, <8 x i32>* %x
  ret void
}
declare <8 x i32> @llvm.bswap.v8i32(<8 x i32>)

define void @bswap_v4i64(<4 x i64>* %x, <4 x i64>* %y) {
; LMULMAX2-RV32-LABEL: bswap_v4i64:
; LMULMAX2-RV32:       # %bb.0:
; LMULMAX2-RV32-NEXT:    addi sp, sp, -64
; LMULMAX2-RV32-NEXT:    .cfi_def_cfa_offset 64
; LMULMAX2-RV32-NEXT:    sw ra, 60(sp) # 4-byte Folded Spill
; LMULMAX2-RV32-NEXT:    sw s0, 56(sp) # 4-byte Folded Spill
; LMULMAX2-RV32-NEXT:    .cfi_offset ra, -4
; LMULMAX2-RV32-NEXT:    .cfi_offset s0, -8
; LMULMAX2-RV32-NEXT:    addi s0, sp, 64
; LMULMAX2-RV32-NEXT:    .cfi_def_cfa s0, 0
; LMULMAX2-RV32-NEXT:    andi sp, sp, -32
; LMULMAX2-RV32-NEXT:    vsetivli a1, 4, e64,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vle64.v v26, (a0)
; LMULMAX2-RV32-NEXT:    vsetvli zero, zero, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV32-NEXT:    sb a1, 7(sp)
; LMULMAX2-RV32-NEXT:    vsetivli a1, 1, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 24
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 31(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 25
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 30(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 26
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 29(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 27
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 28(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 28
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 27(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 29
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 26(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 30
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 25(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 31
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 24(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 16
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 23(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 17
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 22(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 18
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 21(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 19
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 20(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 20
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 19(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 21
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 18(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 22
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 17(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 23
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 16(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 8
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 15(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 9
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 14(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 10
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 13(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 11
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 12(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 12
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 11(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 13
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 10(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 14
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 9(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 15
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 8(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 1
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 6(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 2
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 5(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 3
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 4(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 4
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 3(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 5
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 2(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v28, v26, 6
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV32-NEXT:    sb a1, 1(sp)
; LMULMAX2-RV32-NEXT:    vslidedown.vi v26, v26, 7
; LMULMAX2-RV32-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV32-NEXT:    sb a1, 0(sp)
; LMULMAX2-RV32-NEXT:    addi a1, zero, 32
; LMULMAX2-RV32-NEXT:    vsetvli a1, a1, e8,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vle8.v v26, (sp)
; LMULMAX2-RV32-NEXT:    vsetivli a1, 4, e64,m2,ta,mu
; LMULMAX2-RV32-NEXT:    vse64.v v26, (a0)
; LMULMAX2-RV32-NEXT:    addi sp, s0, -64
; LMULMAX2-RV32-NEXT:    lw s0, 56(sp) # 4-byte Folded Reload
; LMULMAX2-RV32-NEXT:    lw ra, 60(sp) # 4-byte Folded Reload
; LMULMAX2-RV32-NEXT:    addi sp, sp, 64
; LMULMAX2-RV32-NEXT:    ret
;
; LMULMAX2-RV64-LABEL: bswap_v4i64:
; LMULMAX2-RV64:       # %bb.0:
; LMULMAX2-RV64-NEXT:    addi sp, sp, -64
; LMULMAX2-RV64-NEXT:    .cfi_def_cfa_offset 64
; LMULMAX2-RV64-NEXT:    sd ra, 56(sp) # 8-byte Folded Spill
; LMULMAX2-RV64-NEXT:    sd s0, 48(sp) # 8-byte Folded Spill
; LMULMAX2-RV64-NEXT:    .cfi_offset ra, -8
; LMULMAX2-RV64-NEXT:    .cfi_offset s0, -16
; LMULMAX2-RV64-NEXT:    addi s0, sp, 64
; LMULMAX2-RV64-NEXT:    .cfi_def_cfa s0, 0
; LMULMAX2-RV64-NEXT:    andi sp, sp, -32
; LMULMAX2-RV64-NEXT:    vsetivli a1, 4, e64,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vle64.v v26, (a0)
; LMULMAX2-RV64-NEXT:    vsetvli zero, zero, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV64-NEXT:    sb a1, 7(sp)
; LMULMAX2-RV64-NEXT:    vsetivli a1, 1, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 24
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 31(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 25
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 30(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 26
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 29(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 27
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 28(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 28
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 27(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 29
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 26(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 30
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 25(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 31
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 24(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 16
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 23(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 17
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 22(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 18
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 21(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 19
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 20(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 20
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 19(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 21
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 18(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 22
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 17(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 23
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 16(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 8
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 15(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 9
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 14(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 10
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 13(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 11
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 12(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 12
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 11(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 13
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 10(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 14
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 9(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 15
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 8(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 1
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 6(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 2
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 5(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 3
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 4(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 4
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 3(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 5
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 2(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v28, v26, 6
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v28
; LMULMAX2-RV64-NEXT:    sb a1, 1(sp)
; LMULMAX2-RV64-NEXT:    vslidedown.vi v26, v26, 7
; LMULMAX2-RV64-NEXT:    vmv.x.s a1, v26
; LMULMAX2-RV64-NEXT:    sb a1, 0(sp)
; LMULMAX2-RV64-NEXT:    addi a1, zero, 32
; LMULMAX2-RV64-NEXT:    vsetvli a1, a1, e8,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vle8.v v26, (sp)
; LMULMAX2-RV64-NEXT:    vsetivli a1, 4, e64,m2,ta,mu
; LMULMAX2-RV64-NEXT:    vse64.v v26, (a0)
; LMULMAX2-RV64-NEXT:    addi sp, s0, -64
; LMULMAX2-RV64-NEXT:    ld s0, 48(sp) # 8-byte Folded Reload
; LMULMAX2-RV64-NEXT:    ld ra, 56(sp) # 8-byte Folded Reload
; LMULMAX2-RV64-NEXT:    addi sp, sp, 64
; LMULMAX2-RV64-NEXT:    ret
;
; LMULMAX1-LABEL: bswap_v4i64:
; LMULMAX1:       # %bb.0:
; LMULMAX1-NEXT:    addi sp, sp, -32
; LMULMAX1-NEXT:    .cfi_def_cfa_offset 32
; LMULMAX1-NEXT:    vsetivli a1, 2, e64,m1,ta,mu
; LMULMAX1-NEXT:    addi a1, a0, 16
; LMULMAX1-NEXT:    vle64.v v26, (a1)
; LMULMAX1-NEXT:    vle64.v v25, (a0)
; LMULMAX1-NEXT:    vsetvli zero, zero, e8,m1,ta,mu
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 7(sp)
; LMULMAX1-NEXT:    vsetivli a2, 1, e8,m1,ta,mu
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 8
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 15(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 9
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 14(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 10
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 13(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 11
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 12(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 12
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 11(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 13
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 10(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 14
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 9(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 15
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 8(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 1
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 6(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 2
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 5(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 3
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 4(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 4
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 3(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 5
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 2(sp)
; LMULMAX1-NEXT:    vslidedown.vi v27, v26, 6
; LMULMAX1-NEXT:    vmv.x.s a2, v27
; LMULMAX1-NEXT:    sb a2, 1(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v26, 7
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 0(sp)
; LMULMAX1-NEXT:    vmv.x.s a2, v25
; LMULMAX1-NEXT:    sb a2, 23(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 8
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 31(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 9
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 30(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 10
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 29(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 11
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 28(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 12
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 27(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 13
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 26(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 14
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 25(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 15
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 24(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 1
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 22(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 2
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 21(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 3
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 20(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 4
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 19(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 5
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 18(sp)
; LMULMAX1-NEXT:    vslidedown.vi v26, v25, 6
; LMULMAX1-NEXT:    vmv.x.s a2, v26
; LMULMAX1-NEXT:    sb a2, 17(sp)
; LMULMAX1-NEXT:    vslidedown.vi v25, v25, 7
; LMULMAX1-NEXT:    vmv.x.s a2, v25
; LMULMAX1-NEXT:    sb a2, 16(sp)
; LMULMAX1-NEXT:    vsetivli a2, 16, e8,m1,ta,mu
; LMULMAX1-NEXT:    addi a2, sp, 16
; LMULMAX1-NEXT:    vle8.v v25, (a2)
; LMULMAX1-NEXT:    vle8.v v26, (sp)
; LMULMAX1-NEXT:    vsetivli a2, 2, e64,m1,ta,mu
; LMULMAX1-NEXT:    vse64.v v25, (a0)
; LMULMAX1-NEXT:    vse64.v v26, (a1)
; LMULMAX1-NEXT:    addi sp, sp, 32
; LMULMAX1-NEXT:    ret
  %a = load <4 x i64>, <4 x i64>* %x
  %b = load <4 x i64>, <4 x i64>* %y
  %c = call <4 x i64> @llvm.bswap.v4i64(<4 x i64> %a)
  store <4 x i64> %c, <4 x i64>* %x
  ret void
}
declare <4 x i64> @llvm.bswap.v4i64(<4 x i64>)
