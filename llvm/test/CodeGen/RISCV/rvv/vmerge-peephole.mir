# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc %s -o - -mtriple=riscv64 -mattr=+v -run-pass=riscv-vector-peephole -verify-machineinstrs | FileCheck %s

---
name: vle32
body: |
  bb.0:
    liveins: $x8, $v0, $v8
    ; CHECK-LABEL: name: vle32
    ; CHECK: liveins: $x8, $v0, $v8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %avl:gprnox0 = COPY $x8
    ; CHECK-NEXT: %passthru:vrnov0 = COPY $v8
    ; CHECK-NEXT: %mask:vmv0 = COPY $v0
    ; CHECK-NEXT: %y:vrnov0 = PseudoVLE32_V_M1_MASK %passthru, $noreg, %mask, %avl, 5 /* e32 */, 0 /* tu, mu */ :: (load unknown-size, align 1)
    %avl:gprnox0 = COPY $x8
    %passthru:vrnov0 = COPY $v8
    %x:vr = PseudoVLE32_V_M1 $noreg, $noreg, %avl, 5 /* e32 */, 2 /* tu, ma */ :: (load unknown-size)
    %mask:vmv0 = COPY $v0
    %y:vrnov0 = PseudoVMERGE_VVM_M1 %passthru, %passthru, %x, %mask, %avl, 5 /* e32 */
...
---
name: vle32_no_passthru
body: |
  bb.0:
    liveins: $x8, $v0, $v8
    ; CHECK-LABEL: name: vle32_no_passthru
    ; CHECK: liveins: $x8, $v0, $v8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %avl:gprnox0 = COPY $x8
    ; CHECK-NEXT: %false:vrnov0 = COPY $v8
    ; CHECK-NEXT: %mask:vmv0 = COPY $v0
    ; CHECK-NEXT: %y:vrnov0 = PseudoVLE32_V_M1_MASK %false, $noreg, %mask, %avl, 5 /* e32 */, 1 /* ta, mu */ :: (load unknown-size, align 1)
    %avl:gprnox0 = COPY $x8
    %false:vr = COPY $v8
    %x:vr = PseudoVLE32_V_M1 $noreg, $noreg, %avl, 5 /* e32 */, 2 /* tu, ma */ :: (load unknown-size)
    %mask:vmv0 = COPY $v0
    %y:vrnov0 = PseudoVMERGE_VVM_M1 $noreg, %false, %x, %mask, %avl, 5 /* e32 */
...
---
name: vle32_move_past_passthru
body: |
  bb.0:
    liveins: $x8, $v0, $v8
    ; CHECK-LABEL: name: vle32_move_past_passthru
    ; CHECK: liveins: $x8, $v0, $v8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %avl:gprnox0 = COPY $x8
    ; CHECK-NEXT: %passthru:vrnov0 = COPY $v8
    ; CHECK-NEXT: %mask:vmv0 = COPY $v0
    ; CHECK-NEXT: %y:vrnov0 = PseudoVLE32_V_M1_MASK %passthru, $noreg, %mask, %avl, 5 /* e32 */, 0 /* tu, mu */ :: (load unknown-size, align 1)
    %avl:gprnox0 = COPY $x8
    %x:vr = PseudoVLE32_V_M1 $noreg, $noreg, %avl, 5 /* e32 */, 2 /* tu, ma */ :: (load unknown-size)
    %passthru:vrnov0 = COPY $v8
    %mask:vmv0 = COPY $v0
    %y:vrnov0 = PseudoVMERGE_VVM_M1 %passthru, %passthru, %x, %mask, %avl, 5 /* e32 */
...
---
name: vnclip_move_past_passthru
body: |
  bb.0:
    liveins: $x8, $v0, $v8
    ; CHECK-LABEL: name: vnclip_move_past_passthru
    ; CHECK: liveins: $x8, $v0, $v8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %avl:gprnox0 = COPY $x8
    ; CHECK-NEXT: %passthru:vrnov0 = COPY $v8
    ; CHECK-NEXT: %mask:vmv0 = COPY $v0
    ; CHECK-NEXT: %y:vrnov0 = PseudoVNCLIPU_WV_MF2_MASK %passthru, $noreg, $noreg, %mask, 0, %avl, 5 /* e32 */, 0 /* tu, mu */, implicit-def $vxsat
    %avl:gprnox0 = COPY $x8
    %x:vr = PseudoVNCLIPU_WV_MF2 $noreg, $noreg, $noreg, 0, -1, 5, 3, implicit-def $vxsat
    %passthru:vrnov0 = COPY $v8
    %mask:vmv0 = COPY $v0
    %y:vrnov0 = PseudoVMERGE_VVM_M1 %passthru, %passthru, %x, %mask, %avl, 5 /* e32 */
...
---
name: vnclip_cant_move_past_passthru
body: |
  bb.0:
    liveins: $x8, $v0, $v8
    ; CHECK-LABEL: name: vnclip_cant_move_past_passthru
    ; CHECK: liveins: $x8, $v0, $v8
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %avl:gprnox0 = COPY $x8
    ; CHECK-NEXT: %x:vr = PseudoVNCLIPU_WV_MF2 $noreg, $noreg, $noreg, 0, -1, 5 /* e32 */, 3 /* ta, ma */, implicit-def $vxsat
    ; CHECK-NEXT: %vxsat:gpr = COPY $vxsat
    ; CHECK-NEXT: %passthru:vrnov0 = COPY $v8
    ; CHECK-NEXT: %mask:vmv0 = COPY $v0
    ; CHECK-NEXT: %y:vrnov0 = PseudoVMERGE_VVM_M1 %passthru, %passthru, %x, %mask, %avl, 5 /* e32 */
    %avl:gprnox0 = COPY $x8
    %x:vr = PseudoVNCLIPU_WV_MF2 $noreg, $noreg, $noreg, 0, -1, 5, 3, implicit-def $vxsat
    %vxsat:gpr = COPY $vxsat
    %passthru:vrnov0 = COPY $v8
    %mask:vmv0 = COPY $v0
    %y:vrnov0 = PseudoVMERGE_VVM_M1 %passthru, %passthru, %x, %mask, %avl, 5 /* e32 */
...
