# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc %s -mtriple=riscv64 -run-pass=riscv-cleanup-vsetvli -o - | FileCheck %s

--- |
  ; ModuleID = '../llvm/test/CodeGen/RISCV/rvv/add-vsetvli-vlmax.ll'
  source_filename = "../llvm/test/CodeGen/RISCV/rvv/add-vsetvli-vlmax.ll"
  target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"
  target triple = "riscv64"

  define void @cleanup_vsetvli0() #0 {
    ret void
  }

  define void @cleanup_vsetvli1() #0 {
    ret void
  }

  attributes #0 = { "target-features"="+experimental-v" }

...
---
# Make sure we don't combine these two VSETVLIs in the cleanup pass. The first
# keeps the previous value of VL, the second sets it to VLMAX. We can't remove
# the first since we can't tell if this is a change of VL.
name:            cleanup_vsetvli0
alignment:       4
tracksRegLiveness: true
registers:
  - { id: 0, class: gpr }
frameInfo:
  maxAlignment:    1
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.0):
    ; CHECK-LABEL: name: cleanup_vsetvli0
    ; CHECK: dead $x0 = PseudoVSETVLI $x0, 12, implicit-def $vl, implicit-def $vtype
    ; CHECK: dead %0:gpr = PseudoVSETVLI $x0, 12, implicit-def $vl, implicit-def $vtype
    ; CHECK: PseudoRET
    dead $x0  = PseudoVSETVLI $x0, 12, implicit-def $vl, implicit-def $vtype
    dead %0:gpr  = PseudoVSETVLI $x0, 12, implicit-def $vl, implicit-def $vtype
    PseudoRET

...
---
# 1. Ensure we can remove the second VSETVLI which takes its AVL from the first VSETVLI.
# 2. Ensure we can remove the fourth VSETVLI which takes its AVL from the VSETIVLI.
# 3. Make sure we don't combine the latter two VSETVLIs; the first outputs to a
# physical register which is clobbered by a later instruction.
name:            cleanup_vsetvli1
alignment:       4
tracksRegLiveness: true
registers:
  - { id: 0, class: gpr }
frameInfo:
  maxAlignment:    1
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.0):
    liveins: $x3
    ; CHECK-LABEL: name: cleanup_vsetvli1
    ; CHECK: liveins: $x3
    ; CHECK: [[PseudoVSETVLI:%[0-9]+]]:gpr = PseudoVSETVLI $x0, 12, implicit-def $vl, implicit-def $vtype
    ; CHECK: [[PseudoVSETIVLI:%[0-9]+]]:gpr = PseudoVSETIVLI 4, 12, implicit-def $vl, implicit-def $vtype
    ; CHECK: $x1 = PseudoVSETVLI $x0, 12, implicit-def $vl, implicit-def $vtype
    ; CHECK: $x1 = COPY $x3
    ; CHECK: dead %4:gpr = PseudoVSETVLI $x1, 12, implicit-def $vl, implicit-def $vtype
    ; CHECK: PseudoRET
    %0:gpr  = PseudoVSETVLI $x0, 12, implicit-def $vl, implicit-def $vtype
    dead %1:gpr  = PseudoVSETVLI %0, 12, implicit-def $vl, implicit-def $vtype

    %2:gpr  = PseudoVSETIVLI 4, 12, implicit-def $vl, implicit-def $vtype
    dead %3:gpr  = PseudoVSETVLI %2, 12, implicit-def $vl, implicit-def $vtype

    $x1  = PseudoVSETVLI $x0, 12, implicit-def $vl, implicit-def $vtype
    $x1 = COPY $x3
    dead %4:gpr  = PseudoVSETVLI $x1, 12, implicit-def $vl, implicit-def $vtype
    PseudoRET

...
