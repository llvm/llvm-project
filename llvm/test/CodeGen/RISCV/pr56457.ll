; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=riscv64 -mattr=+m | FileCheck %s

declare i15 @llvm.ctlz.i15(i15, i1)

define i15 @foo(i15 %x) nounwind {
; CHECK-LABEL: foo:
; CHECK:       # %bb.0:
; CHECK-NEXT:    slli a1, a0, 49
; CHECK-NEXT:    beqz a1, .LBB0_2
; CHECK-NEXT:  # %bb.1: # %cond.false
; CHECK-NEXT:    addi sp, sp, -16
; CHECK-NEXT:    sd ra, 8(sp) # 8-byte Folded Spill
; CHECK-NEXT:    srli a1, a1, 50
; CHECK-NEXT:    or a0, a0, a1
; CHECK-NEXT:    slli a1, a0, 49
; CHECK-NEXT:    srli a1, a1, 51
; CHECK-NEXT:    or a0, a0, a1
; CHECK-NEXT:    slli a1, a0, 49
; CHECK-NEXT:    srli a1, a1, 53
; CHECK-NEXT:    or a0, a0, a1
; CHECK-NEXT:    slli a1, a0, 49
; CHECK-NEXT:    srli a1, a1, 57
; CHECK-NEXT:    or a0, a0, a1
; CHECK-NEXT:    not a0, a0
; CHECK-NEXT:    slli a0, a0, 49
; CHECK-NEXT:    srli a0, a0, 49
; CHECK-NEXT:    call __popcountdi2
; CHECK-NEXT:    ld ra, 8(sp) # 8-byte Folded Reload
; CHECK-NEXT:    addi sp, sp, 16
; CHECK-NEXT:    ret
; CHECK-NEXT:  .LBB0_2:
; CHECK-NEXT:    li a0, 15
; CHECK-NEXT:    ret
  %a = call i15 @llvm.ctlz.i15(i15 %x, i1 false)
  ret i15 %a
}
