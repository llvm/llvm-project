; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=m68k --show-mc-encoding -mattr=+xgot -relocation-model=pic -code-model=large < %s | FileCheck %s

@VBRTag = external global [2147483647 x i8]

define i1 @folded_offset(i32 %conv29) {
; CHECK-LABEL: folded_offset:
; CHECK:         .cfi_startproc
; CHECK-NEXT:  ; %bb.0: ; %entry
; CHECK-NEXT:    lea (0,%pc), %a0 ; encoding: [0x41,0xfa,0x00,0x00]
; CHECK-NEXT:    lea _GLOBAL_OFFSET_TABLE_, %a1 ; encoding: [0x43,0xf9,A,A,A,A]
; CHECK-NEXT:    ; fixup A - offset: 2, value: _GLOBAL_OFFSET_TABLE_, kind: FK_Data_4
; CHECK-NEXT:    suba.l %a0, %a1 ; encoding: [0x93,0xc8]
; CHECK-NEXT:    move.l #VBRTag@GOTOFF, %d0 ; encoding: [0x20,0x3c,A,A,A,A]
; CHECK-NEXT:    ; fixup A - offset: 2, value: VBRTag@GOTOFF, kind: FK_Data_4
; CHECK-NEXT:    move.b (1,%a1,%d0), %d0 ; encoding: [0x10,0x31,0x08,0x01]
; CHECK-NEXT:    ext.w %d0 ; encoding: [0x48,0x80]
; CHECK-NEXT:    ext.l %d0 ; encoding: [0x48,0xc0]
; CHECK-NEXT:    sub.l (4,%sp), %d0 ; encoding: [0x90,0xaf,0x00,0x04]
; CHECK-NEXT:    seq %d0 ; encoding: [0x57,0xc0]
; CHECK-NEXT:    rts ; encoding: [0x4e,0x75]
entry:
  %0 = load i8, ptr getelementptr inbounds ([2147483647 x i8], ptr @VBRTag, i32 0, i32 1), align 1
  %conv30 = sext i8 %0 to i32
  %cmp31.not = icmp eq i32 %conv30, %conv29
  ret i1 %cmp31.not
}

define i1 @non_folded_offset(i32 %conv29) {
; CHECK-LABEL: non_folded_offset:
; CHECK:         .cfi_startproc
; CHECK-NEXT:  ; %bb.0: ; %entry
; CHECK-NEXT:    lea (0,%pc), %a0 ; encoding: [0x41,0xfa,0x00,0x00]
; CHECK-NEXT:    lea _GLOBAL_OFFSET_TABLE_, %a1 ; encoding: [0x43,0xf9,A,A,A,A]
; CHECK-NEXT:    ; fixup A - offset: 2, value: _GLOBAL_OFFSET_TABLE_, kind: FK_Data_4
; CHECK-NEXT:    suba.l %a0, %a1 ; encoding: [0x93,0xc8]
; CHECK-NEXT:    move.l #2147483645, %d0 ; encoding: [0x20,0x3c,0x7f,0xff,0xff,0xfd]
; CHECK-NEXT:    adda.l #VBRTag@GOTOFF, %a1 ; encoding: [0xd3,0xfc,A,A,A,A]
; CHECK-NEXT:    ; fixup A - offset: 2, value: VBRTag@GOTOFF, kind: FK_Data_4
; CHECK-NEXT:    move.b (0,%a1,%d0), %d0 ; encoding: [0x10,0x31,0x08,0x00]
; CHECK-NEXT:    ext.w %d0 ; encoding: [0x48,0x80]
; CHECK-NEXT:    ext.l %d0 ; encoding: [0x48,0xc0]
; CHECK-NEXT:    sub.l (4,%sp), %d0 ; encoding: [0x90,0xaf,0x00,0x04]
; CHECK-NEXT:    seq %d0 ; encoding: [0x57,0xc0]
; CHECK-NEXT:    rts ; encoding: [0x4e,0x75]
entry:
  %0 = load i8, ptr getelementptr inbounds ([2147483647 x i8], ptr @VBRTag, i32 0, i32 2147483645), align 1
  %conv30 = sext i8 %0 to i32
  %cmp31.not = icmp eq i32 %conv30, %conv29
  ret i1 %cmp31.not
}
