; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=m68k-linux -verify-machineinstrs | FileCheck %s

define { i32, i32, i32, i32 } @test0() {
; CHECK-LABEL: test0:
; CHECK:         .cfi_startproc
; CHECK-NEXT:  ; %bb.0: ; %start
; CHECK-NEXT:    move.l (4,%sp), %a0
; CHECK-NEXT:    move.l #23, (12,%a0)
; CHECK-NEXT:    move.l #19, (8,%a0)
; CHECK-NEXT:    move.l #17, (4,%a0)
; CHECK-NEXT:    move.l #13, (%a0)
; CHECK-NEXT:    move.l %a0, %d0
; CHECK-NEXT:    move.l (%sp), %a1
; CHECK-NEXT:    adda.l #4, %sp
; CHECK-NEXT:    move.l %a1, (%sp)
; CHECK-NEXT:    rts
start:
  ret { i32, i32, i32, i32 } { i32 13, i32 17, i32 19, i32 23 }
}

define void @call_test0() {
; CHECK-LABEL: call_test0:
; CHECK:         .cfi_startproc
; CHECK-NEXT:  ; %bb.0: ; %start
; CHECK-NEXT:    suba.l #20, %sp
; CHECK-NEXT:    .cfi_def_cfa_offset -24
; CHECK-NEXT:    lea (4,%sp), %a0
; CHECK-NEXT:    move.l %a0, (%sp)
; CHECK-NEXT:    jsr test0
; CHECK-NEXT:    adda.l #16, %sp
; CHECK-NEXT:    rts
start:
  %val = call { i32, i32, i32, i32 } @test0()
  ret void
}

define void @test1(ptr sret({ i32, i32, i32, i32 }) %ret_val) {
; CHECK-LABEL: test1:
; CHECK:         .cfi_startproc
; CHECK-NEXT:  ; %bb.0: ; %start
; CHECK-NEXT:    move.l (4,%sp), %d0
; CHECK-NEXT:    move.l (%sp), %a1
; CHECK-NEXT:    adda.l #4, %sp
; CHECK-NEXT:    move.l %a1, (%sp)
; CHECK-NEXT:    rts
start:
  ret void
}

define void @call_test1() {
; CHECK-LABEL: call_test1:
; CHECK:         .cfi_startproc
; CHECK-NEXT:  ; %bb.0: ; %start
; CHECK-NEXT:    suba.l #20, %sp
; CHECK-NEXT:    .cfi_def_cfa_offset -24
; CHECK-NEXT:    lea (4,%sp), %a0
; CHECK-NEXT:    move.l %a0, (%sp)
; CHECK-NEXT:    jsr test1
; CHECK-NEXT:    adda.l #16, %sp
; CHECK-NEXT:    rts
start:
  %ret_val = alloca { i32, i32, i32, i32 }
  call void @test1(ptr %ret_val)
  ret void
}

define i32 @test2() {
; CHECK-LABEL: test2:
; CHECK:         .cfi_startproc
; CHECK-NEXT:  ; %bb.0: ; %start
; CHECK-NEXT:    moveq #13, %d0
; CHECK-NEXT:    rts
start:
  ret i32 13
}

define void @call_test2() {
; CHECK-LABEL: call_test2:
; CHECK:         .cfi_startproc
; CHECK-NEXT:  ; %bb.0: ; %start
; CHECK-NEXT:    suba.l #4, %sp
; CHECK-NEXT:    .cfi_def_cfa_offset -8
; CHECK-NEXT:    jsr test2
; CHECK-NEXT:    adda.l #4, %sp
; CHECK-NEXT:    rts
start:
  %0 = call i32 @test2()
  ret void
}
