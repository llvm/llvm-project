; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=sparc-unknown-linux-gnu | FileCheck %s --check-prefixes=SPARC
; RUN: llc < %s -mtriple=sparc64-unknown-linux-gnu | FileCheck %s --check-prefixes=SPARC64
; RUN: llc < %s -mtriple=sparc64-unknown-linux-gnu -mattr=vis3 | FileCheck %s --check-prefixes=SPARC64-VIS3

define { i128, i8 } @muloti_test(i128 %l, i128 %r) nounwind {
; SPARC-LABEL: muloti_test:
; SPARC:       ! %bb.0: ! %overflow.entry
; SPARC-NEXT:    save %sp, -96, %sp
; SPARC-NEXT:    ld [%fp+96], %l1
; SPARC-NEXT:    ld [%fp+92], %g4
; SPARC-NEXT:    or %i1, %i0, %l0
; SPARC-NEXT:    cmp %l0, 0
; SPARC-NEXT:    mov %i3, %g2
; SPARC-NEXT:    be .LBB0_33
; SPARC-NEXT:    mov %i2, %g3
; SPARC-NEXT:  ! %bb.1: ! %overflow.lhs
; SPARC-NEXT:    or %i5, %i4, %l2
; SPARC-NEXT:    cmp %l2, 0
; SPARC-NEXT:    be .LBB0_40
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.2: ! %overflow
; SPARC-NEXT:    umul %g3, %i5, %i2
; SPARC-NEXT:    rd %y, %l7
; SPARC-NEXT:    umul %i4, %g2, %i3
; SPARC-NEXT:    rd %y, %o2
; SPARC-NEXT:    umul %i5, %g2, %l5
; SPARC-NEXT:    rd %y, %o0
; SPARC-NEXT:    umul %g4, %i1, %l4
; SPARC-NEXT:    rd %y, %l3
; SPARC-NEXT:    add %i3, %i2, %i2
; SPARC-NEXT:    umul %i0, %l1, %i3
; SPARC-NEXT:    rd %y, %l6
; SPARC-NEXT:    add %o0, %i2, %o1
; SPARC-NEXT:    umul %i1, %l1, %i1
; SPARC-NEXT:    rd %y, %i5
; SPARC-NEXT:    add %i3, %l4, %i2
; SPARC-NEXT:    add %i5, %i2, %l4
; SPARC-NEXT:    addcc %i1, %l5, %i1
; SPARC-NEXT:    umul %g2, %l1, %i3
; SPARC-NEXT:    rd %y, %i2
; SPARC-NEXT:    addxcc %l4, %o1, %o4
; SPARC-NEXT:    umul %g3, %l1, %l1
; SPARC-NEXT:    rd %y, %l5
; SPARC-NEXT:    addcc %l1, %i2, %i2
; SPARC-NEXT:    addxcc %l5, 0, %l1
; SPARC-NEXT:    umul %g2, %g4, %g2
; SPARC-NEXT:    rd %y, %l5
; SPARC-NEXT:    addcc %g2, %i2, %i2
; SPARC-NEXT:    addxcc %l5, 0, %g2
; SPARC-NEXT:    addcc %l1, %g2, %g2
; SPARC-NEXT:    addxcc %g0, 0, %l1
; SPARC-NEXT:    umul %g3, %g4, %l5
; SPARC-NEXT:    rd %y, %o3
; SPARC-NEXT:    addcc %l5, %g2, %l5
; SPARC-NEXT:    addxcc %o3, %l1, %o3
; SPARC-NEXT:    addcc %l5, %i1, %i1
; SPARC-NEXT:    addxcc %o3, %o4, %g2
; SPARC-NEXT:    mov 1, %l1
; SPARC-NEXT:    cmp %g2, %o3
; SPARC-NEXT:    bcs .LBB0_4
; SPARC-NEXT:    mov %l1, %o4
; SPARC-NEXT:  ! %bb.3: ! %overflow
; SPARC-NEXT:    mov %g0, %o4
; SPARC-NEXT:  .LBB0_4: ! %overflow
; SPARC-NEXT:    cmp %i1, %l5
; SPARC-NEXT:    bcs .LBB0_6
; SPARC-NEXT:    mov %l1, %l5
; SPARC-NEXT:  ! %bb.5: ! %overflow
; SPARC-NEXT:    mov %g0, %l5
; SPARC-NEXT:  .LBB0_6: ! %overflow
; SPARC-NEXT:    cmp %g2, %o3
; SPARC-NEXT:    be .LBB0_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.7: ! %overflow
; SPARC-NEXT:    mov %o4, %l5
; SPARC-NEXT:  .LBB0_8: ! %overflow
; SPARC-NEXT:    cmp %i4, 0
; SPARC-NEXT:    bne .LBB0_10
; SPARC-NEXT:    mov %l1, %o3
; SPARC-NEXT:  ! %bb.9: ! %overflow
; SPARC-NEXT:    mov %g0, %o3
; SPARC-NEXT:  .LBB0_10: ! %overflow
; SPARC-NEXT:    cmp %g3, 0
; SPARC-NEXT:    bne .LBB0_12
; SPARC-NEXT:    mov %l1, %o4
; SPARC-NEXT:  ! %bb.11: ! %overflow
; SPARC-NEXT:    mov %g0, %o4
; SPARC-NEXT:  .LBB0_12: ! %overflow
; SPARC-NEXT:    cmp %o2, 0
; SPARC-NEXT:    bne .LBB0_14
; SPARC-NEXT:    mov %l1, %o2
; SPARC-NEXT:  ! %bb.13: ! %overflow
; SPARC-NEXT:    mov %g0, %o2
; SPARC-NEXT:  .LBB0_14: ! %overflow
; SPARC-NEXT:    cmp %l7, 0
; SPARC-NEXT:    bne .LBB0_16
; SPARC-NEXT:    mov %l1, %g3
; SPARC-NEXT:  ! %bb.15: ! %overflow
; SPARC-NEXT:    mov %g0, %g3
; SPARC-NEXT:  .LBB0_16: ! %overflow
; SPARC-NEXT:    cmp %o1, %o0
; SPARC-NEXT:    bcs .LBB0_18
; SPARC-NEXT:    mov %l1, %i4
; SPARC-NEXT:  ! %bb.17: ! %overflow
; SPARC-NEXT:    mov %g0, %i4
; SPARC-NEXT:  .LBB0_18: ! %overflow
; SPARC-NEXT:    cmp %i0, 0
; SPARC-NEXT:    bne .LBB0_20
; SPARC-NEXT:    mov %l1, %i0
; SPARC-NEXT:  ! %bb.19: ! %overflow
; SPARC-NEXT:    mov %g0, %i0
; SPARC-NEXT:  .LBB0_20: ! %overflow
; SPARC-NEXT:    cmp %g4, 0
; SPARC-NEXT:    bne .LBB0_22
; SPARC-NEXT:    mov %l1, %l7
; SPARC-NEXT:  ! %bb.21: ! %overflow
; SPARC-NEXT:    mov %g0, %l7
; SPARC-NEXT:  .LBB0_22: ! %overflow
; SPARC-NEXT:    cmp %l6, 0
; SPARC-NEXT:    bne .LBB0_24
; SPARC-NEXT:    mov %l1, %g4
; SPARC-NEXT:  ! %bb.23: ! %overflow
; SPARC-NEXT:    mov %g0, %g4
; SPARC-NEXT:  .LBB0_24: ! %overflow
; SPARC-NEXT:    and %o3, %o4, %l6
; SPARC-NEXT:    cmp %l3, 0
; SPARC-NEXT:    and %i0, %l7, %l7
; SPARC-NEXT:    bne .LBB0_26
; SPARC-NEXT:    mov %l1, %i0
; SPARC-NEXT:  ! %bb.25: ! %overflow
; SPARC-NEXT:    mov %g0, %i0
; SPARC-NEXT:  .LBB0_26: ! %overflow
; SPARC-NEXT:    or %l6, %o2, %l3
; SPARC-NEXT:    cmp %l4, %i5
; SPARC-NEXT:    or %l7, %g4, %g4
; SPARC-NEXT:    bcs .LBB0_28
; SPARC-NEXT:    mov %l1, %i5
; SPARC-NEXT:  ! %bb.27: ! %overflow
; SPARC-NEXT:    mov %g0, %i5
; SPARC-NEXT:  .LBB0_28: ! %overflow
; SPARC-NEXT:    or %l3, %g3, %g3
; SPARC-NEXT:    cmp %l2, 0
; SPARC-NEXT:    or %g4, %i0, %g4
; SPARC-NEXT:    bne .LBB0_30
; SPARC-NEXT:    mov %l1, %i0
; SPARC-NEXT:  ! %bb.29: ! %overflow
; SPARC-NEXT:    mov %g0, %i0
; SPARC-NEXT:  .LBB0_30: ! %overflow
; SPARC-NEXT:    or %g3, %i4, %i4
; SPARC-NEXT:    cmp %l0, 0
; SPARC-NEXT:    bne .LBB0_32
; SPARC-NEXT:    or %g4, %i5, %i5
; SPARC-NEXT:  ! %bb.31: ! %overflow
; SPARC-NEXT:    mov %g0, %l1
; SPARC-NEXT:  .LBB0_32: ! %overflow
; SPARC-NEXT:    and %l1, %i0, %i0
; SPARC-NEXT:    or %i0, %i5, %i0
; SPARC-NEXT:    or %i0, %i4, %i0
; SPARC-NEXT:    ba .LBB0_49
; SPARC-NEXT:    or %i0, %l5, %i0
; SPARC-NEXT:  .LBB0_33: ! %overflow.no.lhs
; SPARC-NEXT:    or %i5, %i4, %i2
; SPARC-NEXT:    cmp %i2, 0
; SPARC-NEXT:    be .LBB0_48
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.34: ! %overflow.no.lhs.only
; SPARC-NEXT:    umul %g3, %l1, %i2
; SPARC-NEXT:    rd %y, %l0
; SPARC-NEXT:    umul %g2, %l1, %i3
; SPARC-NEXT:    rd %y, %l2
; SPARC-NEXT:    addcc %i2, %l2, %i2
; SPARC-NEXT:    addxcc %l0, 0, %l0
; SPARC-NEXT:    umul %g2, %g4, %l2
; SPARC-NEXT:    rd %y, %l3
; SPARC-NEXT:    addcc %l2, %i2, %i2
; SPARC-NEXT:    addxcc %l3, 0, %l2
; SPARC-NEXT:    addcc %l0, %l2, %l0
; SPARC-NEXT:    addxcc %g0, 0, %l2
; SPARC-NEXT:    umul %g3, %g4, %l3
; SPARC-NEXT:    rd %y, %l4
; SPARC-NEXT:    addcc %l3, %l0, %l0
; SPARC-NEXT:    smul %l1, %i0, %l3
; SPARC-NEXT:    umul %l1, %i1, %l1
; SPARC-NEXT:    rd %y, %l5
; SPARC-NEXT:    addxcc %l4, %l2, %l2
; SPARC-NEXT:    add %l5, %l3, %l3
; SPARC-NEXT:    smul %g4, %i1, %g4
; SPARC-NEXT:    add %l3, %g4, %g4
; SPARC-NEXT:    addcc %l0, %l1, %l0
; SPARC-NEXT:    umul %g2, %i5, %l1
; SPARC-NEXT:    rd %y, %l3
; SPARC-NEXT:    addxcc %l2, %g4, %g4
; SPARC-NEXT:    umul %g3, %i5, %l2
; SPARC-NEXT:    rd %y, %l4
; SPARC-NEXT:    addcc %l2, %l3, %l2
; SPARC-NEXT:    addxcc %l4, 0, %l3
; SPARC-NEXT:    umul %g2, %i4, %g2
; SPARC-NEXT:    rd %y, %l4
; SPARC-NEXT:    addcc %g2, %l2, %g2
; SPARC-NEXT:    addxcc %l4, 0, %l2
; SPARC-NEXT:    addcc %l3, %l2, %l2
; SPARC-NEXT:    addxcc %g0, 0, %l3
; SPARC-NEXT:    umul %g3, %i4, %g3
; SPARC-NEXT:    rd %y, %l4
; SPARC-NEXT:    addcc %g3, %l2, %g3
; SPARC-NEXT:    smul %i5, %i0, %i0
; SPARC-NEXT:    umul %i5, %i1, %i5
; SPARC-NEXT:    rd %y, %l2
; SPARC-NEXT:    addxcc %l4, %l3, %l3
; SPARC-NEXT:    add %l2, %i0, %i0
; SPARC-NEXT:    smul %i4, %i1, %i1
; SPARC-NEXT:    add %i0, %i1, %i0
; SPARC-NEXT:    addcc %g3, %i5, %i4
; SPARC-NEXT:    addxcc %l3, %i0, %i5
; SPARC-NEXT:    addcc %l0, %l1, %i1
; SPARC-NEXT:    addxcc %g4, %g2, %g2
; SPARC-NEXT:    mov 1, %i0
; SPARC-NEXT:    cmp %g2, %g4
; SPARC-NEXT:    bcs .LBB0_36
; SPARC-NEXT:    mov %i0, %g3
; SPARC-NEXT:  ! %bb.35: ! %overflow.no.lhs.only
; SPARC-NEXT:    mov %g0, %g3
; SPARC-NEXT:  .LBB0_36: ! %overflow.no.lhs.only
; SPARC-NEXT:    cmp %i1, %l0
; SPARC-NEXT:    bcs .LBB0_38
; SPARC-NEXT:    mov %i0, %l0
; SPARC-NEXT:  ! %bb.37: ! %overflow.no.lhs.only
; SPARC-NEXT:    mov %g0, %l0
; SPARC-NEXT:  .LBB0_38: ! %overflow.no.lhs.only
; SPARC-NEXT:    cmp %g2, %g4
; SPARC-NEXT:    be .LBB0_46
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.39: ! %overflow.no.lhs.only
; SPARC-NEXT:    ba .LBB0_46
; SPARC-NEXT:    mov %g3, %l0
; SPARC-NEXT:  .LBB0_40: ! %overflow.no.rhs.only
; SPARC-NEXT:    umul %g4, %g2, %i2
; SPARC-NEXT:    rd %y, %l0
; SPARC-NEXT:    umul %l1, %g2, %i3
; SPARC-NEXT:    rd %y, %l2
; SPARC-NEXT:    addcc %i2, %l2, %i2
; SPARC-NEXT:    addxcc %l0, 0, %l0
; SPARC-NEXT:    umul %l1, %g3, %l2
; SPARC-NEXT:    rd %y, %l3
; SPARC-NEXT:    addcc %l2, %i2, %i2
; SPARC-NEXT:    addxcc %l3, 0, %l2
; SPARC-NEXT:    addcc %l0, %l2, %l0
; SPARC-NEXT:    addxcc %g0, 0, %l2
; SPARC-NEXT:    umul %g4, %g3, %l3
; SPARC-NEXT:    rd %y, %l4
; SPARC-NEXT:    addcc %l3, %l0, %l0
; SPARC-NEXT:    smul %g2, %i4, %l3
; SPARC-NEXT:    umul %g2, %i5, %g2
; SPARC-NEXT:    rd %y, %l5
; SPARC-NEXT:    addxcc %l4, %l2, %l2
; SPARC-NEXT:    add %l5, %l3, %l3
; SPARC-NEXT:    smul %g3, %i5, %g3
; SPARC-NEXT:    add %l3, %g3, %g3
; SPARC-NEXT:    addcc %l0, %g2, %l0
; SPARC-NEXT:    umul %l1, %i1, %g2
; SPARC-NEXT:    rd %y, %l3
; SPARC-NEXT:    addxcc %l2, %g3, %g3
; SPARC-NEXT:    umul %g4, %i1, %l2
; SPARC-NEXT:    rd %y, %l4
; SPARC-NEXT:    addcc %l2, %l3, %l2
; SPARC-NEXT:    addxcc %l4, 0, %l3
; SPARC-NEXT:    umul %l1, %i0, %l1
; SPARC-NEXT:    rd %y, %l4
; SPARC-NEXT:    addcc %l1, %l2, %l1
; SPARC-NEXT:    addxcc %l4, 0, %l2
; SPARC-NEXT:    addcc %l3, %l2, %l2
; SPARC-NEXT:    addxcc %g0, 0, %l3
; SPARC-NEXT:    umul %g4, %i0, %g4
; SPARC-NEXT:    rd %y, %l4
; SPARC-NEXT:    addcc %g4, %l2, %g4
; SPARC-NEXT:    smul %i1, %i4, %i4
; SPARC-NEXT:    umul %i1, %i5, %i1
; SPARC-NEXT:    rd %y, %l2
; SPARC-NEXT:    addxcc %l4, %l3, %l3
; SPARC-NEXT:    add %l2, %i4, %i4
; SPARC-NEXT:    smul %i0, %i5, %i0
; SPARC-NEXT:    add %i4, %i0, %i0
; SPARC-NEXT:    addcc %g4, %i1, %i4
; SPARC-NEXT:    addxcc %l3, %i0, %i5
; SPARC-NEXT:    addcc %l0, %g2, %i1
; SPARC-NEXT:    addxcc %g3, %l1, %g2
; SPARC-NEXT:    mov 1, %i0
; SPARC-NEXT:    cmp %g2, %g3
; SPARC-NEXT:    bcs .LBB0_42
; SPARC-NEXT:    mov %i0, %g4
; SPARC-NEXT:  ! %bb.41: ! %overflow.no.rhs.only
; SPARC-NEXT:    mov %g0, %g4
; SPARC-NEXT:  .LBB0_42: ! %overflow.no.rhs.only
; SPARC-NEXT:    cmp %i1, %l0
; SPARC-NEXT:    bcs .LBB0_44
; SPARC-NEXT:    mov %i0, %l0
; SPARC-NEXT:  ! %bb.43: ! %overflow.no.rhs.only
; SPARC-NEXT:    mov %g0, %l0
; SPARC-NEXT:  .LBB0_44: ! %overflow.no.rhs.only
; SPARC-NEXT:    cmp %g2, %g3
; SPARC-NEXT:    be .LBB0_46
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.45: ! %overflow.no.rhs.only
; SPARC-NEXT:    mov %g4, %l0
; SPARC-NEXT:  .LBB0_46: ! %overflow.no.rhs.only
; SPARC-NEXT:    addcc %i4, %l0, %i4
; SPARC-NEXT:    addxcc %i5, 0, %i5
; SPARC-NEXT:    or %i4, %i5, %i4
; SPARC-NEXT:    cmp %i4, 0
; SPARC-NEXT:    bne .LBB0_49
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.47: ! %overflow.no.rhs.only
; SPARC-NEXT:    ba .LBB0_49
; SPARC-NEXT:    mov %g0, %i0
; SPARC-NEXT:  .LBB0_48: ! %overflow.no
; SPARC-NEXT:    smul %l1, %i0, %i3
; SPARC-NEXT:    umul %l1, %i1, %i2
; SPARC-NEXT:    rd %y, %l0
; SPARC-NEXT:    mov %g0, %i0
; SPARC-NEXT:    add %l0, %i3, %i3
; SPARC-NEXT:    smul %g4, %i1, %i1
; SPARC-NEXT:    smul %i5, %g3, %l0
; SPARC-NEXT:    umul %i5, %g2, %i5
; SPARC-NEXT:    rd %y, %l2
; SPARC-NEXT:    add %i3, %i1, %i1
; SPARC-NEXT:    add %l2, %l0, %i3
; SPARC-NEXT:    smul %i4, %g2, %i4
; SPARC-NEXT:    add %i3, %i4, %i4
; SPARC-NEXT:    addcc %i5, %i2, %i5
; SPARC-NEXT:    umul %g2, %l1, %i3
; SPARC-NEXT:    rd %y, %i2
; SPARC-NEXT:    addxcc %i4, %i1, %i4
; SPARC-NEXT:    umul %g3, %l1, %i1
; SPARC-NEXT:    rd %y, %l0
; SPARC-NEXT:    addcc %i1, %i2, %i1
; SPARC-NEXT:    addxcc %l0, 0, %l0
; SPARC-NEXT:    umul %g2, %g4, %i2
; SPARC-NEXT:    rd %y, %g2
; SPARC-NEXT:    addcc %i2, %i1, %i2
; SPARC-NEXT:    addxcc %g2, 0, %i1
; SPARC-NEXT:    addcc %l0, %i1, %i1
; SPARC-NEXT:    addxcc %g0, 0, %g2
; SPARC-NEXT:    umul %g3, %g4, %g3
; SPARC-NEXT:    rd %y, %g4
; SPARC-NEXT:    addcc %g3, %i1, %i1
; SPARC-NEXT:    addxcc %g4, %g2, %g2
; SPARC-NEXT:    addcc %i1, %i5, %i1
; SPARC-NEXT:    addxcc %g2, %i4, %g2
; SPARC-NEXT:  .LBB0_49: ! %overflow.res
; SPARC-NEXT:    and %i0, 1, %i4
; SPARC-NEXT:    ret
; SPARC-NEXT:    restore %g0, %g2, %o0
;
; SPARC64-LABEL: muloti_test:
; SPARC64:         .register %g2, #scratch
; SPARC64-NEXT:    .register %g3, #scratch
; SPARC64-NEXT:  ! %bb.0: ! %overflow.entry
; SPARC64-NEXT:    save %sp, -176, %sp
; SPARC64-NEXT:    brz %i0, .LBB0_3
; SPARC64-NEXT:    mov %i1, %i4
; SPARC64-NEXT:  ! %bb.1: ! %overflow.lhs
; SPARC64-NEXT:    brz %i2, .LBB0_5
; SPARC64-NEXT:    nop
; SPARC64-NEXT:  ! %bb.2: ! %overflow
; SPARC64-NEXT:    mov %g0, %o0
; SPARC64-NEXT:    mov %i2, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    call __multi3
; SPARC64-NEXT:    mov %i4, %o3
; SPARC64-NEXT:    mov %o0, %i5
; SPARC64-NEXT:    mov %o1, %i1
; SPARC64-NEXT:    mov %g0, %o0
; SPARC64-NEXT:    mov %i0, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    call __multi3
; SPARC64-NEXT:    mov %i3, %o3
; SPARC64-NEXT:    mov %o0, %l0
; SPARC64-NEXT:    add %o1, %i1, %l1
; SPARC64-NEXT:    mov %g0, %o0
; SPARC64-NEXT:    mov %i4, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    call __multi3
; SPARC64-NEXT:    mov %i3, %o3
; SPARC64-NEXT:    mov %o1, %i1
; SPARC64-NEXT:    mov %g0, %i4
; SPARC64-NEXT:    mov %g0, %g2
; SPARC64-NEXT:    mov %g0, %g3
; SPARC64-NEXT:    mov %g0, %g4
; SPARC64-NEXT:    mov %g0, %g5
; SPARC64-NEXT:    add %o0, %l1, %i3
; SPARC64-NEXT:    cmp %i3, %o0
; SPARC64-NEXT:    movrnz %i2, 1, %g2
; SPARC64-NEXT:    movrnz %i0, 1, %g3
; SPARC64-NEXT:    and %g3, %g2, %i0
; SPARC64-NEXT:    movcs %xcc, 1, %i4
; SPARC64-NEXT:    movrnz %l0, 1, %g4
; SPARC64-NEXT:    or %i0, %g4, %i0
; SPARC64-NEXT:    movrnz %i5, 1, %g5
; SPARC64-NEXT:    or %i0, %g5, %i0
; SPARC64-NEXT:    ba .LBB0_8
; SPARC64-NEXT:    or %i0, %i4, %i0
; SPARC64-NEXT:  .LBB0_3: ! %overflow.no.lhs
; SPARC64-NEXT:    brz %i2, .LBB0_7
; SPARC64-NEXT:    nop
; SPARC64-NEXT:  ! %bb.4: ! %overflow.no.lhs.only
; SPARC64-NEXT:    mov %i0, %o0
; SPARC64-NEXT:    mov %i4, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    call __multi3
; SPARC64-NEXT:    mov %i3, %o3
; SPARC64-NEXT:    mov %o0, %i5
; SPARC64-NEXT:    mov %o1, %i1
; SPARC64-NEXT:    mov %i0, %o0
; SPARC64-NEXT:    mov %i4, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    call __multi3
; SPARC64-NEXT:    mov %i2, %o3
; SPARC64-NEXT:    mov %g0, %i2
; SPARC64-NEXT:    mov %g0, %i0
; SPARC64-NEXT:    add %i5, %o1, %i3
; SPARC64-NEXT:    ba .LBB0_6
; SPARC64-NEXT:    cmp %i3, %i5
; SPARC64-NEXT:  .LBB0_5: ! %overflow.no.rhs.only
; SPARC64-NEXT:    mov %i2, %o0
; SPARC64-NEXT:    mov %i3, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    call __multi3
; SPARC64-NEXT:    mov %i4, %o3
; SPARC64-NEXT:    mov %o0, %i4
; SPARC64-NEXT:    mov %o1, %i1
; SPARC64-NEXT:    mov %i2, %o0
; SPARC64-NEXT:    mov %i3, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    call __multi3
; SPARC64-NEXT:    mov %i0, %o3
; SPARC64-NEXT:    mov %g0, %i2
; SPARC64-NEXT:    mov %g0, %i0
; SPARC64-NEXT:    add %i4, %o1, %i3
; SPARC64-NEXT:    cmp %i3, %i4
; SPARC64-NEXT:  .LBB0_6: ! %overflow.res
; SPARC64-NEXT:    movcs %xcc, 1, %i2
; SPARC64-NEXT:    srl %i2, 0, %i2
; SPARC64-NEXT:    add %o0, %i2, %i2
; SPARC64-NEXT:    ba .LBB0_8
; SPARC64-NEXT:    movrnz %i2, 1, %i0
; SPARC64-NEXT:  .LBB0_7: ! %overflow.no
; SPARC64-NEXT:    mov %i0, %o0
; SPARC64-NEXT:    mov %i4, %o1
; SPARC64-NEXT:    mov %i2, %o2
; SPARC64-NEXT:    call __multi3
; SPARC64-NEXT:    mov %i3, %o3
; SPARC64-NEXT:    mov %o0, %i3
; SPARC64-NEXT:    mov %o1, %i1
; SPARC64-NEXT:    mov %g0, %i0
; SPARC64-NEXT:  .LBB0_8: ! %overflow.res
; SPARC64-NEXT:    and %i0, 1, %i2
; SPARC64-NEXT:    ret
; SPARC64-NEXT:    restore %g0, %i3, %o0
;
; SPARC64-VIS3-LABEL: muloti_test:
; SPARC64-VIS3:         .register %g2, #scratch
; SPARC64-VIS3-NEXT:    .register %g3, #scratch
; SPARC64-VIS3-NEXT:  ! %bb.0: ! %overflow.entry
; SPARC64-VIS3-NEXT:    save %sp, -128, %sp
; SPARC64-VIS3-NEXT:    brz %i0, .LBB0_3
; SPARC64-VIS3-NEXT:    nop
; SPARC64-VIS3-NEXT:  ! %bb.1: ! %overflow.lhs
; SPARC64-VIS3-NEXT:    brz %i2, .LBB0_5
; SPARC64-VIS3-NEXT:    nop
; SPARC64-VIS3-NEXT:  ! %bb.2: ! %overflow
; SPARC64-VIS3-NEXT:    mov %g0, %i5
; SPARC64-VIS3-NEXT:    mov %g0, %g2
; SPARC64-VIS3-NEXT:    mov %g0, %g3
; SPARC64-VIS3-NEXT:    mov %g0, %g4
; SPARC64-VIS3-NEXT:    mov %g0, %g5
; SPARC64-VIS3-NEXT:    mulx %i2, %i1, %i4
; SPARC64-VIS3-NEXT:    mulx %i0, %i3, %l0
; SPARC64-VIS3-NEXT:    add %l0, %i4, %i4
; SPARC64-VIS3-NEXT:    umulxhi %i1, %i3, %l0
; SPARC64-VIS3-NEXT:    add %l0, %i4, %i4
; SPARC64-VIS3-NEXT:    cmp %i4, %l0
; SPARC64-VIS3-NEXT:    movrnz %i2, 1, %g2
; SPARC64-VIS3-NEXT:    movrnz %i0, 1, %g3
; SPARC64-VIS3-NEXT:    and %g3, %g2, %g2
; SPARC64-VIS3-NEXT:    umulxhi %i0, %i3, %i0
; SPARC64-VIS3-NEXT:    movrnz %i0, 1, %g4
; SPARC64-VIS3-NEXT:    movcs %xcc, 1, %i5
; SPARC64-VIS3-NEXT:    or %g2, %g4, %i0
; SPARC64-VIS3-NEXT:    umulxhi %i2, %i1, %i2
; SPARC64-VIS3-NEXT:    movrnz %i2, 1, %g5
; SPARC64-VIS3-NEXT:    or %i0, %g5, %i0
; SPARC64-VIS3-NEXT:    ba .LBB0_7
; SPARC64-VIS3-NEXT:    or %i0, %i5, %i5
; SPARC64-VIS3-NEXT:  .LBB0_3: ! %overflow.no.lhs
; SPARC64-VIS3-NEXT:    brz %i2, .LBB0_6
; SPARC64-VIS3-NEXT:    nop
; SPARC64-VIS3-NEXT:  ! %bb.4: ! %overflow.no.lhs.only
; SPARC64-VIS3-NEXT:    mov %g0, %g2
; SPARC64-VIS3-NEXT:    mov %g0, %i5
; SPARC64-VIS3-NEXT:    mulx %i0, %i3, %i4
; SPARC64-VIS3-NEXT:    umulxhi %i1, %i3, %g3
; SPARC64-VIS3-NEXT:    add %g3, %i4, %g3
; SPARC64-VIS3-NEXT:    mulx %i0, %i2, %i0
; SPARC64-VIS3-NEXT:    umulxhi %i1, %i2, %i4
; SPARC64-VIS3-NEXT:    add %i4, %i0, %i0
; SPARC64-VIS3-NEXT:    mulx %i1, %i3, %i3
; SPARC64-VIS3-NEXT:    mulx %i1, %i2, %i2
; SPARC64-VIS3-NEXT:    mov %i3, %i1
; SPARC64-VIS3-NEXT:    add %g3, %i2, %i4
; SPARC64-VIS3-NEXT:    cmp %i4, %g3
; SPARC64-VIS3-NEXT:    movcs %xcc, 1, %g2
; SPARC64-VIS3-NEXT:    srl %g2, 0, %i2
; SPARC64-VIS3-NEXT:    add %i0, %i2, %i0
; SPARC64-VIS3-NEXT:    ba .LBB0_8
; SPARC64-VIS3-NEXT:    movrnz %i0, 1, %i5
; SPARC64-VIS3-NEXT:  .LBB0_5: ! %overflow.no.rhs.only
; SPARC64-VIS3-NEXT:    mov %g0, %g2
; SPARC64-VIS3-NEXT:    mov %g0, %i5
; SPARC64-VIS3-NEXT:    mulx %i2, %i1, %i4
; SPARC64-VIS3-NEXT:    umulxhi %i3, %i1, %g3
; SPARC64-VIS3-NEXT:    add %g3, %i4, %g3
; SPARC64-VIS3-NEXT:    mulx %i2, %i0, %i2
; SPARC64-VIS3-NEXT:    umulxhi %i3, %i0, %i4
; SPARC64-VIS3-NEXT:    add %i4, %i2, %i2
; SPARC64-VIS3-NEXT:    mulx %i3, %i1, %i1
; SPARC64-VIS3-NEXT:    mulx %i3, %i0, %i0
; SPARC64-VIS3-NEXT:    add %g3, %i0, %i4
; SPARC64-VIS3-NEXT:    cmp %i4, %g3
; SPARC64-VIS3-NEXT:    movcs %xcc, 1, %g2
; SPARC64-VIS3-NEXT:    srl %g2, 0, %i0
; SPARC64-VIS3-NEXT:    add %i2, %i0, %i0
; SPARC64-VIS3-NEXT:    ba .LBB0_8
; SPARC64-VIS3-NEXT:    movrnz %i0, 1, %i5
; SPARC64-VIS3-NEXT:  .LBB0_6: ! %overflow.no
; SPARC64-VIS3-NEXT:    mov %g0, %i5
; SPARC64-VIS3-NEXT:    mulx %i1, %i2, %i2
; SPARC64-VIS3-NEXT:    umulxhi %i1, %i3, %i4
; SPARC64-VIS3-NEXT:    add %i4, %i2, %i2
; SPARC64-VIS3-NEXT:    mulx %i0, %i3, %i0
; SPARC64-VIS3-NEXT:    add %i2, %i0, %i4
; SPARC64-VIS3-NEXT:  .LBB0_7: ! %overflow.res
; SPARC64-VIS3-NEXT:    mulx %i1, %i3, %i1
; SPARC64-VIS3-NEXT:  .LBB0_8: ! %overflow.res
; SPARC64-VIS3-NEXT:    and %i5, 1, %i2
; SPARC64-VIS3-NEXT:    ret
; SPARC64-VIS3-NEXT:    restore %g0, %i4, %o0
start:
  %0 = tail call { i128, i1 } @llvm.umul.with.overflow.i128(i128 %l, i128 %r)
  %1 = extractvalue { i128, i1 } %0, 0
  %2 = extractvalue { i128, i1 } %0, 1
  %3 = zext i1 %2 to i8
  %4 = insertvalue { i128, i8 } undef, i128 %1, 0
  %5 = insertvalue { i128, i8 } %4, i8 %3, 1
  ret { i128, i8 } %5
}

declare { i128, i1 } @llvm.umul.with.overflow.i128(i128, i128)
