# RUN: llc -mtriple=x86_64-apple-macos %s -start-before=livedebugvalues -filetype=obj -o - | llvm-dwarfdump - | FileCheck %s
# CHECK: DW_TAG_subprogram
# Test that LiveDebugValues can handle MBBs that are not reachable in a RPOT.
--- |
  define hidden zeroext i1 @__foo_block_invoke(i8* nocapture noundef readonly %.block_descriptor, i64 noundef %type) !dbg !7 {
  entry:
    unreachable
  do.body.i129.i:                                   ; preds = %if.else6.i128.i
    unreachable
  }
  !llvm.dbg.cu = !{!3}
  !llvm.module.flags = !{!5, !6}
  !2 = !{}
  !3 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4, producer: "clang", runtimeVersion: 0, emissionKind: FullDebug)
  !4 = !DIFile(filename: "t.c", directory: "/")
  !5 = !{i32 2, !"Debug Info Version", i32 3}
  !6 = !{i32 1, !"LTOPostLink", i32 1}
  !7 = distinct !DISubprogram(name: "__foo_block_invoke", scope: !4, file: !4, line: 573, type: !9, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, retainedNodes: !2)
  !9 = !DISubroutineType(types: !2)
  !11 = !DILocalVariable(name: ".block_descriptor", arg: 1, scope: !7, file: !4, line: 557, type: !12, flags: DIFlagArtificial)
  !12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
  !13 = !DICompositeType(tag: DW_TAG_structure_type, name: "__block_literal_1", scope: !4, file: !4, line: 557, size: 392, elements: !2)
  !15 = !DILocation(line: 558, column: 7, scope: !7)
name:            __foo_block_invoke
body:             |
  bb.0.entry:
    DBG_VALUE $rdi, $noreg, !11, !DIExpression(), debug-location !15
    $ecx = MOV32rr undef $edi, implicit $dil, debug-location !15
  bb.2:
    successors: 
    TRAP
  bb.21.do.body.i129.i (machine-block-address-taken):
