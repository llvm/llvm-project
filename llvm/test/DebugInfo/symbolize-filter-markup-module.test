RUN: split-file %s %t
RUN: llvm-symbolizer --filter-markup < %t/log > %t.out 2> %t.err
RUN: FileCheck %s --input-file=%t.out --match-full-lines \
RUN:   --implicit-check-not {{.}}
RUN: FileCheck %s --check-prefix=ERR -input-file=%t.err --match-full-lines

CHECK: [[BEGIN:\[{3}]]ELF module #0x0 "a.o"; BuildID=ab[[END:\]{3}]]
CHECK: [[BEGIN]]ELF module #0x1 "b.o"; BuildID=abb50d82b6bdc861[[END]]
CHECK: [[BEGIN]]ELF module #0x2 "c.o"; BuildID=cd[[END]]
CHECK: [[BEGIN]]ELF module #0x1 "b.o"; adds 0x0(r)[[END]]

ERR: error: expected at least 3 fields; found 0
ERR: error: unknown module type
ERR: error: duplicate module ID
ERR: error: expected 4 fields; found 3

;--- log
{{{module:0:a.o:elf:ab}}}
{{{module:1:b.o:elf:abb50d82b6bdc861}}}
{{{module:2:c.o:elf:cd}}}
{{{mmap:0:10000000:load:1:r:0}}}

{{{module}}}
{{{module:3:d.o:foo}}}
{{{module:0:d.o:elf:ef}}}
{{{module:4:d.o:elf}}}
