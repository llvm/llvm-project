# RUN: llc %s  --run-pass=x86-fixup-setcc -o - | FileCheck %s

## Check the debug-isntr-number transfers from MOVZX32rr8 to the SETCC
## after the mov is replaced with an INSERT_SUBREG, updating the substitutions
## table.

# CHECK: debugValueSubstitutions:
# CHECK:  - { srcinst: 1, srcop: 0, dstinst: 2, dstop: 0, subreg: 0 }

# CHECK: %[[#]]:gr8 = SETCCr 15, implicit $eflags,  debug-instr-number 2
# CHECK: INSERT_SUBREG
# CHECK-NOT: debug-instr-number
# CHECK-NEXT: DBG_INSTR_REF ![[#]], !DIExpression(DW_OP_LLVM_arg, 0), dbg-instr-ref(1, 0)

--- |
  source_filename = "reduced.ll"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
  target triple = "x86_64-unknown-linux-gnu"

  define i32 @main(i32 %call2) {
  entry:
    %cmp12 = icmp sgt i32 %call2, 0
    %conv13 = zext i1 %cmp12 to i32
      #dbg_value(i32 %conv13, !4, !DIExpression(), !8)
    ret i32 %conv13
  }

  !llvm.dbg.cu = !{!0}
  !llvm.module.flags = !{!3}

  !0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 22.0.0git", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2, splitDebugInlining: false, nameTableKind: None)
  !1 = !DIFile(filename: "test.c", directory: "/")
  !2 = !{}
  !3 = !{i32 2, !"Debug Info Version", i32 3}
  !4 = !DILocalVariable(name: "v_3", scope: !5, file: !1, line: 10, type: !7)
  !5 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 5, type: !6, scopeLine: 6, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2, keyInstructions: true)
  !6 = !DISubroutineType(types: !2)
  !7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
  !8 = !DILocation(line: 0, scope: !5)
...
---
name:            main
body:             |
  bb.0.entry:
    liveins: $edi

    %0:gr32 = COPY $edi
    TEST32rr %0, %0, implicit-def $eflags
    %1:gr8 = SETCCr 15, implicit $eflags
    %2:gr32 = MOVZX32rr8 killed %1,  debug-instr-number 1
    DBG_INSTR_REF !4, !DIExpression(DW_OP_LLVM_arg, 0), dbg-instr-ref(1, 0),  debug-location !8
    $eax = COPY %2
    RET 0, $eax
...
