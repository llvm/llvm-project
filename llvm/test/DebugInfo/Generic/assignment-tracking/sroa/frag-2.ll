; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals
; RUN: opt -passes=sroa -S %s -o - -experimental-assignment-tracking | FileCheck %s

;; $ cat test.cpp
;; class a {
;; public:
;;   float b[4];
;;   void c();
;; };
;; class B {
;; public:
;;   B(a d) : e(d) {}
;;   a &f() { return e; }
;;   B operator*(const B &)const;
;;   int g;
;;   a e;
;; };
;; B B::operator*(const B &)const { return e; }
;; class h {
;; public:
;;   B i();
;; };
;; void j() {
;;   h convexbody, k;
;;   B l = k.i(), m = convexbody.i(), n = l * m;
;;   a o = n.f(); // Looking at this store, o[0, 128] <- n[32, 160].
;;   o.c();
;; }
;; Generated by grabbing IR before sroa in:
;; $ clang++ -O2 -g -c test.cpp -Xclang -fexperimental-assignment-tracking

;; Check that the store 4xfloat split into 2x store 2xfloat has correct debug
;; info when the source (n, 160 bits of int+5*float) is split beforehand (see
;; comment in test.cpp above). Ensure that only the value-expression gets
;; fragment info; that the address-expression remains untouched.

;; Check nearby instructions to make sure we're looking in the right place.



%class.B = type { i32, %class.a }
%class.a = type { [4 x float] }
%class.h = type { i8 }

$_ZN1BC2E1a = comdat any

$_ZN1B1fEv = comdat any

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_ZNK1BmlERKS_(ptr noalias nocapture sret(%class.B) align 4 %agg.result, ptr nocapture readonly %this, ptr nocapture nonnull readnone align 4 dereferenceable(20) %0) local_unnamed_addr #0 align 2 !dbg !7 {
; CHECK-LABEL: @_ZNK1BmlERKS_(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[AGG_TMP_SROA_0_0__SROA_IDX:%.*]] = getelementptr inbounds [[CLASS_B:%.*]], ptr [[THIS:%.*]], i64 0, i32 1, !dbg [[DBG42:![0-9]+]]
; CHECK-NEXT:    [[AGG_TMP_SROA_0_0__SROA_CAST:%.*]] = bitcast ptr [[AGG_TMP_SROA_0_0__SROA_IDX]] to ptr, !dbg [[DBG42]]
; CHECK-NEXT:    [[AGG_TMP_SROA_0_0_COPYLOAD:%.*]] = load <2 x float>, ptr [[AGG_TMP_SROA_0_0__SROA_CAST]], align 4, !dbg [[DBG42]]
; CHECK-NEXT:    [[AGG_TMP_SROA_2_0__SROA_IDX2:%.*]] = getelementptr inbounds [[CLASS_B]], ptr [[THIS]], i64 0, i32 1, i32 0, i64 2, !dbg [[DBG42]]
; CHECK-NEXT:    [[AGG_TMP_SROA_2_0__SROA_CAST:%.*]] = bitcast ptr [[AGG_TMP_SROA_2_0__SROA_IDX2]] to ptr, !dbg [[DBG42]]
; CHECK-NEXT:    [[AGG_TMP_SROA_2_0_COPYLOAD:%.*]] = load <2 x float>, ptr [[AGG_TMP_SROA_2_0__SROA_CAST]], align 4, !dbg [[DBG42]]
; CHECK-NEXT:    [[D_SROA_0_0__SROA_IDX_I:%.*]] = getelementptr inbounds [[CLASS_B]], ptr [[AGG_RESULT:%.*]], i64 0, i32 1, !dbg [[DBG43:![0-9]+]]
; CHECK-NEXT:    [[D_SROA_0_0__SROA_CAST_I:%.*]] = bitcast ptr [[D_SROA_0_0__SROA_IDX_I]] to ptr, !dbg [[DBG43]]
; CHECK-NEXT:    store <2 x float> [[AGG_TMP_SROA_0_0_COPYLOAD]], ptr [[D_SROA_0_0__SROA_CAST_I]], align 4, !dbg [[DBG43]]
; CHECK-NEXT:    [[D_SROA_2_0__SROA_IDX2_I:%.*]] = getelementptr inbounds [[CLASS_B]], ptr [[AGG_RESULT]], i64 0, i32 1, i32 0, i64 2, !dbg [[DBG43]]
; CHECK-NEXT:    [[D_SROA_2_0__SROA_CAST_I:%.*]] = bitcast ptr [[D_SROA_2_0__SROA_IDX2_I]] to ptr, !dbg [[DBG43]]
; CHECK-NEXT:    store <2 x float> [[AGG_TMP_SROA_2_0_COPYLOAD]], ptr [[D_SROA_2_0__SROA_CAST_I]], align 4, !dbg [[DBG43]]
; CHECK-NEXT:    ret void, !dbg [[DBG50:![0-9]+]]
;
entry:
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %class.B, ptr %this, i64 0, i32 1, !dbg !42
  %agg.tmp.sroa.0.0..sroa_cast = bitcast ptr %agg.tmp.sroa.0.0..sroa_idx to ptr, !dbg !42
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, ptr %agg.tmp.sroa.0.0..sroa_cast, align 4, !dbg !42
  %agg.tmp.sroa.2.0..sroa_idx2 = getelementptr inbounds %class.B, ptr %this, i64 0, i32 1, i32 0, i64 2, !dbg !42
  %agg.tmp.sroa.2.0..sroa_cast = bitcast ptr %agg.tmp.sroa.2.0..sroa_idx2 to ptr, !dbg !42
  %agg.tmp.sroa.2.0.copyload = load <2 x float>, ptr %agg.tmp.sroa.2.0..sroa_cast, align 4, !dbg !42
  %d.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.B, ptr %agg.result, i64 0, i32 1, !dbg !47
  %d.sroa.0.0..sroa_cast.i = bitcast ptr %d.sroa.0.0..sroa_idx.i to ptr, !dbg !47
  store <2 x float> %agg.tmp.sroa.0.0.copyload, ptr %d.sroa.0.0..sroa_cast.i, align 4, !dbg !47
  %d.sroa.2.0..sroa_idx2.i = getelementptr inbounds %class.B, ptr %agg.result, i64 0, i32 1, i32 0, i64 2, !dbg !47
  %d.sroa.2.0..sroa_cast.i = bitcast ptr %d.sroa.2.0..sroa_idx2.i to ptr, !dbg !47
  store <2 x float> %agg.tmp.sroa.2.0.copyload, ptr %d.sroa.2.0..sroa_cast.i, align 4, !dbg !47
  ret void, !dbg !54
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN1BC2E1a(ptr %this, <2 x float> %d.coerce0, <2 x float> %d.coerce1) unnamed_addr #2 comdat align 2 !dbg !48 {
; CHECK-LABEL: @_ZN1BC2E1a(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[D_SROA_0_0__SROA_IDX:%.*]] = getelementptr inbounds [[CLASS_B:%.*]], ptr [[THIS:%.*]], i64 0, i32 1, !dbg [[DBG51:![0-9]+]]
; CHECK-NEXT:    [[D_SROA_0_0__SROA_CAST:%.*]] = bitcast ptr [[D_SROA_0_0__SROA_IDX]] to ptr, !dbg [[DBG51]]
; CHECK-NEXT:    store <2 x float> [[D_COERCE0:%.*]], ptr [[D_SROA_0_0__SROA_CAST]], align 4, !dbg [[DBG51]]
; CHECK-NEXT:    [[D_SROA_2_0__SROA_IDX2:%.*]] = getelementptr inbounds [[CLASS_B]], ptr [[THIS]], i64 0, i32 1, i32 0, i64 2, !dbg [[DBG51]]
; CHECK-NEXT:    [[D_SROA_2_0__SROA_CAST:%.*]] = bitcast ptr [[D_SROA_2_0__SROA_IDX2]] to ptr, !dbg [[DBG51]]
; CHECK-NEXT:    store <2 x float> [[D_COERCE1:%.*]], ptr [[D_SROA_2_0__SROA_CAST]], align 4, !dbg [[DBG51]]
; CHECK-NEXT:    ret void, !dbg [[DBG52:![0-9]+]]
;
entry:
  %d.sroa.0.0..sroa_idx = getelementptr inbounds %class.B, ptr %this, i64 0, i32 1, !dbg !55
  %d.sroa.0.0..sroa_cast = bitcast ptr %d.sroa.0.0..sroa_idx to ptr, !dbg !55
  store <2 x float> %d.coerce0, ptr %d.sroa.0.0..sroa_cast, align 4, !dbg !55
  %d.sroa.2.0..sroa_idx2 = getelementptr inbounds %class.B, ptr %this, i64 0, i32 1, i32 0, i64 2, !dbg !55
  %d.sroa.2.0..sroa_cast = bitcast ptr %d.sroa.2.0..sroa_idx2 to ptr, !dbg !55
  store <2 x float> %d.coerce1, ptr %d.sroa.2.0..sroa_cast, align 4, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.assign(metadata, metadata, metadata, metadata, metadata, metadata) #3

; Function Attrs: uwtable
define dso_local void @_Z1jv() local_unnamed_addr #4 !dbg !57 {
; CHECK-LABEL: @_Z1jv(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CONVEXBODY:%.*]] = alloca [[CLASS_H:%.*]], align 1, !DIAssignID [[DIASSIGNID69:![0-9]+]]
; CHECK-NEXT:    call void @llvm.dbg.assign(metadata i1 undef, metadata [[META57:![0-9]+]], metadata !DIExpression(), metadata [[DIASSIGNID69]], metadata ptr [[CONVEXBODY]], metadata !DIExpression()), !dbg [[DBG70:![0-9]+]]
; CHECK-NEXT:    [[K:%.*]] = alloca [[CLASS_H]], align 1, !DIAssignID [[DIASSIGNID71:![0-9]+]]
; CHECK-NEXT:    call void @llvm.dbg.assign(metadata i1 undef, metadata [[META64:![0-9]+]], metadata !DIExpression(), metadata [[DIASSIGNID71]], metadata ptr [[K]], metadata !DIExpression()), !dbg [[DBG70]]
; CHECK-NEXT:    [[L:%.*]] = alloca [[CLASS_B:%.*]], align 4, !DIAssignID [[DIASSIGNID72:![0-9]+]]
; CHECK-NEXT:    call void @llvm.dbg.assign(metadata i1 undef, metadata [[META65:![0-9]+]], metadata !DIExpression(), metadata [[DIASSIGNID72]], metadata ptr [[L]], metadata !DIExpression()), !dbg [[DBG70]]
; CHECK-NEXT:    [[M:%.*]] = alloca [[CLASS_B]], align 4, !DIAssignID [[DIASSIGNID73:![0-9]+]]
; CHECK-NEXT:    call void @llvm.dbg.assign(metadata i1 undef, metadata [[META66:![0-9]+]], metadata !DIExpression(), metadata [[DIASSIGNID73]], metadata ptr [[M]], metadata !DIExpression()), !dbg [[DBG70]]
; CHECK-NEXT:    call void @llvm.dbg.assign(metadata i1 undef, metadata [[META67:![0-9]+]], metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32), metadata [[META74:![0-9]+]], metadata ptr undef, metadata !DIExpression()), !dbg [[DBG70]]
; CHECK-NEXT:    [[O:%.*]] = alloca [[CLASS_A:%.*]], align 4, !DIAssignID [[DIASSIGNID75:![0-9]+]]
; CHECK-NEXT:    call void @llvm.dbg.assign(metadata i1 undef, metadata [[META68:![0-9]+]], metadata !DIExpression(), metadata [[DIASSIGNID75]], metadata ptr [[O]], metadata !DIExpression()), !dbg [[DBG70]]
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr inbounds [[CLASS_H]], ptr [[CONVEXBODY]], i64 0, i32 0, !dbg [[DBG76:![0-9]+]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 1, ptr nonnull [[TMP0]]), !dbg [[DBG76]]
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr inbounds [[CLASS_H]], ptr [[K]], i64 0, i32 0, !dbg [[DBG76]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 1, ptr nonnull [[TMP1]]), !dbg [[DBG76]]
; CHECK-NEXT:    [[TMP2:%.*]] = bitcast ptr [[L]] to ptr, !dbg [[DBG77:![0-9]+]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 20, ptr nonnull [[TMP2]]), !dbg [[DBG77]]
; CHECK-NEXT:    call void @_ZN1h1iEv(ptr nonnull sret([[CLASS_B]]) align 4 [[L]], ptr nonnull [[K]]), !dbg [[DBG78:![0-9]+]]
; CHECK-NEXT:    [[TMP3:%.*]] = bitcast ptr [[M]] to ptr, !dbg [[DBG77]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 20, ptr nonnull [[TMP3]]), !dbg [[DBG77]]
; CHECK-NEXT:    call void @_ZN1h1iEv(ptr nonnull sret([[CLASS_B]]) align 4 [[M]], ptr nonnull [[CONVEXBODY]]), !dbg [[DBG79:![0-9]+]]
; CHECK-NEXT:    [[AGG_TMP_SROA_0_0__SROA_IDX_I:%.*]] = getelementptr inbounds [[CLASS_B]], ptr [[L]], i64 0, i32 1, !dbg [[DBG80:![0-9]+]]
; CHECK-NEXT:    [[AGG_TMP_SROA_0_0__SROA_CAST_I:%.*]] = bitcast ptr [[AGG_TMP_SROA_0_0__SROA_IDX_I]] to ptr, !dbg [[DBG80]]
; CHECK-NEXT:    [[AGG_TMP_SROA_0_0_COPYLOAD_I:%.*]] = load <2 x float>, ptr [[AGG_TMP_SROA_0_0__SROA_CAST_I]], align 4, !dbg [[DBG80]]
; CHECK-NEXT:    [[AGG_TMP_SROA_2_0__SROA_IDX2_I:%.*]] = getelementptr inbounds [[CLASS_B]], ptr [[L]], i64 0, i32 1, i32 0, i64 2, !dbg [[DBG80]]
; CHECK-NEXT:    [[AGG_TMP_SROA_2_0__SROA_CAST_I:%.*]] = bitcast ptr [[AGG_TMP_SROA_2_0__SROA_IDX2_I]] to ptr, !dbg [[DBG80]]
; CHECK-NEXT:    [[AGG_TMP_SROA_2_0_COPYLOAD_I:%.*]] = load <2 x float>, ptr [[AGG_TMP_SROA_2_0__SROA_CAST_I]], align 4, !dbg [[DBG80]]
; CHECK-NEXT:    call void @llvm.dbg.value(metadata <2 x float> [[AGG_TMP_SROA_0_0_COPYLOAD_I]], metadata [[META67]], metadata !DIExpression(DW_OP_LLVM_fragment, 32, 64)), !dbg [[DBG70]]
; CHECK-NEXT:    call void @llvm.dbg.value(metadata <2 x float> [[AGG_TMP_SROA_2_0_COPYLOAD_I]], metadata [[META67]], metadata !DIExpression(DW_OP_LLVM_fragment, 96, 64)), !dbg [[DBG70]]
; CHECK-NEXT:    [[TMP4:%.*]] = bitcast ptr [[O]] to ptr, !dbg [[DBG82:![0-9]+]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr nonnull [[TMP4]]), !dbg [[DBG82]]
; CHECK-NEXT:    store <2 x float> [[AGG_TMP_SROA_0_0_COPYLOAD_I]], ptr [[TMP4]], align 4, !dbg [[DBG83:![0-9]+]], !DIAssignID [[DIASSIGNID84:![0-9]+]]
; CHECK-NEXT:    [[N_SROA_4_4__SROA_IDX:%.*]] = getelementptr inbounds i8, ptr [[TMP4]], i64 8, !dbg [[DBG83]]
; CHECK-NEXT:    store <2 x float> [[AGG_TMP_SROA_2_0_COPYLOAD_I]], ptr [[N_SROA_4_4__SROA_IDX]], align 4, !dbg [[DBG83]], !DIAssignID [[DIASSIGNID85:![0-9]+]]
; CHECK-NEXT:    call void @llvm.dbg.assign(metadata <2 x float> [[AGG_TMP_SROA_0_0_COPYLOAD_I]], metadata [[META68]], metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64), metadata [[DIASSIGNID84]], metadata ptr [[TMP4]], metadata !DIExpression()), !dbg [[DBG70]]
; CHECK-NEXT:    call void @llvm.dbg.assign(metadata <2 x float> [[AGG_TMP_SROA_2_0_COPYLOAD_I]], metadata [[META68]], metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64), metadata [[DIASSIGNID85]], metadata ptr [[N_SROA_4_4__SROA_IDX]], metadata !DIExpression()), !dbg [[DBG70]]
; CHECK-NEXT:    call void @_ZN1a1cEv(ptr nonnull [[O]]), !dbg [[DBG86:![0-9]+]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr nonnull [[TMP4]]), !dbg [[DBG87:![0-9]+]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 20, ptr nonnull [[TMP3]]), !dbg [[DBG87]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 20, ptr nonnull [[TMP2]]), !dbg [[DBG87]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 1, ptr nonnull [[TMP1]]), !dbg [[DBG87]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 1, ptr nonnull [[TMP0]]), !dbg [[DBG87]]
; CHECK-NEXT:    ret void, !dbg [[DBG87]]
;
entry:
  %convexbody = alloca %class.h, align 1, !DIAssignID !73
  call void @llvm.dbg.assign(metadata i1 undef, metadata !61, metadata !DIExpression(), metadata !73, metadata ptr %convexbody, metadata !DIExpression()), !dbg !74
  %k = alloca %class.h, align 1, !DIAssignID !75
  call void @llvm.dbg.assign(metadata i1 undef, metadata !68, metadata !DIExpression(), metadata !75, metadata ptr %k, metadata !DIExpression()), !dbg !74
  %l = alloca %class.B, align 4, !DIAssignID !76
  call void @llvm.dbg.assign(metadata i1 undef, metadata !69, metadata !DIExpression(), metadata !76, metadata ptr %l, metadata !DIExpression()), !dbg !74
  %m = alloca %class.B, align 4, !DIAssignID !77
  call void @llvm.dbg.assign(metadata i1 undef, metadata !70, metadata !DIExpression(), metadata !77, metadata ptr %m, metadata !DIExpression()), !dbg !74
  %n = alloca %class.B, align 4, !DIAssignID !78
  call void @llvm.dbg.assign(metadata i1 undef, metadata !71, metadata !DIExpression(), metadata !78, metadata ptr %n, metadata !DIExpression()), !dbg !74
  %o = alloca %class.a, align 4, !DIAssignID !79
  call void @llvm.dbg.assign(metadata i1 undef, metadata !72, metadata !DIExpression(), metadata !79, metadata ptr %o, metadata !DIExpression()), !dbg !74
  %0 = getelementptr inbounds %class.h, ptr %convexbody, i64 0, i32 0, !dbg !80
  call void @llvm.lifetime.start.p0i8(i64 1, ptr nonnull %0) #7, !dbg !80
  %1 = getelementptr inbounds %class.h, ptr %k, i64 0, i32 0, !dbg !80
  call void @llvm.lifetime.start.p0i8(i64 1, ptr nonnull %1) #7, !dbg !80
  %2 = bitcast ptr %l to ptr, !dbg !81
  call void @llvm.lifetime.start.p0i8(i64 20, ptr nonnull %2) #7, !dbg !81
  call void @_ZN1h1iEv(ptr nonnull sret(%class.B) align 4 %l, ptr nonnull %k), !dbg !82
  %3 = bitcast ptr %m to ptr, !dbg !81
  call void @llvm.lifetime.start.p0i8(i64 20, ptr nonnull %3) #7, !dbg !81
  call void @_ZN1h1iEv(ptr nonnull sret(%class.B) align 4 %m, ptr nonnull %convexbody), !dbg !83
  %4 = bitcast ptr %n to ptr, !dbg !81
  call void @llvm.lifetime.start.p0i8(i64 20, ptr nonnull %4) #7, !dbg !81
  %agg.tmp.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.B, ptr %l, i64 0, i32 1, !dbg !84
  %agg.tmp.sroa.0.0..sroa_cast.i = bitcast ptr %agg.tmp.sroa.0.0..sroa_idx.i to ptr, !dbg !84
  %agg.tmp.sroa.0.0.copyload.i = load <2 x float>, ptr %agg.tmp.sroa.0.0..sroa_cast.i, align 4, !dbg !84
  %agg.tmp.sroa.2.0..sroa_idx2.i = getelementptr inbounds %class.B, ptr %l, i64 0, i32 1, i32 0, i64 2, !dbg !84
  %agg.tmp.sroa.2.0..sroa_cast.i = bitcast ptr %agg.tmp.sroa.2.0..sroa_idx2.i to ptr, !dbg !84
  %agg.tmp.sroa.2.0.copyload.i = load <2 x float>, ptr %agg.tmp.sroa.2.0..sroa_cast.i, align 4, !dbg !84
  %d.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %class.B, ptr %n, i64 0, i32 1, !dbg !89
  %d.sroa.0.0..sroa_cast.i.i = bitcast ptr %d.sroa.0.0..sroa_idx.i.i to ptr, !dbg !89
  store <2 x float> %agg.tmp.sroa.0.0.copyload.i, ptr %d.sroa.0.0..sroa_cast.i.i, align 4, !dbg !89
  %d.sroa.2.0..sroa_idx2.i.i = getelementptr inbounds %class.B, ptr %n, i64 0, i32 1, i32 0, i64 2, !dbg !89
  %d.sroa.2.0..sroa_cast.i.i = bitcast ptr %d.sroa.2.0..sroa_idx2.i.i to ptr, !dbg !89
  store <2 x float> %agg.tmp.sroa.2.0.copyload.i, ptr %d.sroa.2.0..sroa_cast.i.i, align 4, !dbg !89
  %5 = bitcast ptr %o to ptr, !dbg !91
  call void @llvm.lifetime.start.p0i8(i64 16, ptr nonnull %5) #7, !dbg !91
  %e.i = getelementptr inbounds %class.B, ptr %n, i64 0, i32 1, !dbg !92
  %6 = bitcast ptr %e.i to ptr, !dbg !97
  call void @llvm.memcpy.p0i8.p0i8.i64(ptr nonnull align 4 dereferenceable(16) %5, ptr nonnull align 4 dereferenceable(16) %6, i64 16, i1 false), !dbg !97, !DIAssignID !98
  call void @llvm.dbg.assign(metadata i1 undef, metadata !72, metadata !DIExpression(), metadata !98, metadata ptr %5, metadata !DIExpression()), !dbg !74
  call void @_ZN1a1cEv(ptr nonnull %o), !dbg !99
  call void @llvm.lifetime.end.p0i8(i64 16, ptr nonnull %5) #7, !dbg !100
  call void @llvm.lifetime.end.p0i8(i64 20, ptr nonnull %4) #7, !dbg !100
  call void @llvm.lifetime.end.p0i8(i64 20, ptr nonnull %3) #7, !dbg !100
  call void @llvm.lifetime.end.p0i8(i64 20, ptr nonnull %2) #7, !dbg !100
  call void @llvm.lifetime.end.p0i8(i64 1, ptr nonnull %1) #7, !dbg !100
  call void @llvm.lifetime.end.p0i8(i64 1, ptr nonnull %0) #7, !dbg !100
  ret void, !dbg !100
}

declare void @llvm.lifetime.start.p0i8(i64 immarg, ptr nocapture) #1
declare dso_local void @_ZN1h1iEv(ptr sret(%class.B) align 4, ptr) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local nonnull align 4 dereferenceable(16) ptr @_ZN1B1fEv(ptr %this) local_unnamed_addr #6 comdat align 2 !dbg !93 {
; CHECK-LABEL: @_ZN1B1fEv(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[E:%.*]] = getelementptr inbounds [[CLASS_B:%.*]], ptr [[THIS:%.*]], i64 0, i32 1, !dbg [[DBG91:![0-9]+]]
; CHECK-NEXT:    ret ptr [[E]], !dbg [[DBG92:![0-9]+]]
;
entry:
  %e = getelementptr inbounds %class.B, ptr %this, i64 0, i32 1, !dbg !101
  ret ptr %e, !dbg !102
}

declare dso_local void @_ZN1a1cEv(ptr) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, ptr nocapture) #1

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 12.0.0", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "reduce.cpp", directory: "/")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 12.0.0"}
!7 = distinct !DISubprogram(name: "operator*", linkageName: "_ZNK1BmlERKS_", scope: !8, file: !1, line: 14, type: !33, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, declaration: !32, retainedNodes: !38)
!8 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "B", file: !1, line: 6, size: 160, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !9, identifier: "_ZTS1B")
!9 = !{!10, !12, !24, !28, !32}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !8, file: !1, line: 11, baseType: !11, size: 32, flags: DIFlagPublic)
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !8, file: !1, line: 12, baseType: !13, size: 128, offset: 32, flags: DIFlagPublic)
!13 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "a", file: !1, line: 1, size: 128, flags: DIFlagTypePassByValue, elements: !14, identifier: "_ZTS1a")
!14 = !{!15, !20}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !13, file: !1, line: 3, baseType: !16, size: 128, flags: DIFlagPublic)
!16 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 128, elements: !18)
!17 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!18 = !{!19}
!19 = !DISubrange(count: 4)
!20 = !DISubprogram(name: "c", linkageName: "_ZN1a1cEv", scope: !13, file: !1, line: 4, type: !21, scopeLine: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!21 = !DISubroutineType(types: !22)
!22 = !{null, !23}
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!24 = !DISubprogram(name: "B", scope: !8, file: !1, line: 8, type: !25, scopeLine: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!25 = !DISubroutineType(types: !26)
!26 = !{null, !27, !13}
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!28 = !DISubprogram(name: "f", linkageName: "_ZN1B1fEv", scope: !8, file: !1, line: 9, type: !29, scopeLine: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!29 = !DISubroutineType(types: !30)
!30 = !{!31, !27}
!31 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !13, size: 64)
!32 = !DISubprogram(name: "operator*", linkageName: "_ZNK1BmlERKS_", scope: !8, file: !1, line: 10, type: !33, scopeLine: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!33 = !DISubroutineType(types: !34)
!34 = !{!8, !35, !37}
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!36 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!37 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !36, size: 64)
!38 = !{!39, !41}
!39 = !DILocalVariable(name: "this", arg: 1, scope: !7, type: !40, flags: DIFlagArtificial | DIFlagObjectPointer)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
!41 = !DILocalVariable(arg: 2, scope: !7, file: !1, line: 14, type: !37)
!42 = !DILocation(line: 14, column: 41, scope: !7)
!47 = !DILocation(line: 8, column: 12, scope: !48, inlinedAt: !53)
!48 = distinct !DISubprogram(name: "B", linkageName: "_ZN1BC2E1a", scope: !8, file: !1, line: 8, type: !25, scopeLine: 8, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, declaration: !24, retainedNodes: !49)
!49 = !{!50, !52}
!50 = !DILocalVariable(name: "this", arg: 1, scope: !48, type: !51, flags: DIFlagArtificial | DIFlagObjectPointer)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!52 = !DILocalVariable(name: "d", arg: 2, scope: !48, file: !1, line: 8, type: !13)
!53 = distinct !DILocation(line: 14, column: 41, scope: !7)
!54 = !DILocation(line: 14, column: 34, scope: !7)
!55 = !DILocation(line: 8, column: 12, scope: !48)
!56 = !DILocation(line: 8, column: 18, scope: !48)
!57 = distinct !DISubprogram(name: "j", linkageName: "_Z1jv", scope: !1, file: !1, line: 19, type: !58, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !60)
!58 = !DISubroutineType(types: !59)
!59 = !{null}
!60 = !{!61, !68, !69, !70, !71, !72}
!61 = !DILocalVariable(name: "convexbody", scope: !57, file: !1, line: 20, type: !62)
!62 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "h", file: !1, line: 15, size: 8, flags: DIFlagTypePassByValue, elements: !63, identifier: "_ZTS1h")
!63 = !{!64}
!64 = !DISubprogram(name: "i", linkageName: "_ZN1h1iEv", scope: !62, file: !1, line: 17, type: !65, scopeLine: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!65 = !DISubroutineType(types: !66)
!66 = !{!8, !67}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!68 = !DILocalVariable(name: "k", scope: !57, file: !1, line: 20, type: !62)
!69 = !DILocalVariable(name: "l", scope: !57, file: !1, line: 21, type: !8)
!70 = !DILocalVariable(name: "m", scope: !57, file: !1, line: 21, type: !8)
!71 = !DILocalVariable(name: "n", scope: !57, file: !1, line: 21, type: !8)
!72 = !DILocalVariable(name: "o", scope: !57, file: !1, line: 22, type: !13)
!73 = distinct !DIAssignID()
!74 = !DILocation(line: 0, scope: !57)
!75 = distinct !DIAssignID()
!76 = distinct !DIAssignID()
!77 = distinct !DIAssignID()
!78 = distinct !DIAssignID()
!79 = distinct !DIAssignID()
!80 = !DILocation(line: 20, column: 3, scope: !57)
!81 = !DILocation(line: 21, column: 3, scope: !57)
!82 = !DILocation(line: 21, column: 11, scope: !57)
!83 = !DILocation(line: 21, column: 31, scope: !57)
!84 = !DILocation(line: 14, column: 41, scope: !7, inlinedAt: !85)
!85 = distinct !DILocation(line: 21, column: 42, scope: !57)
!89 = !DILocation(line: 8, column: 12, scope: !48, inlinedAt: !90)
!90 = distinct !DILocation(line: 14, column: 41, scope: !7, inlinedAt: !85)
!91 = !DILocation(line: 22, column: 3, scope: !57)
!92 = !DILocation(line: 9, column: 19, scope: !93, inlinedAt: !96)
!93 = distinct !DISubprogram(name: "f", linkageName: "_ZN1B1fEv", scope: !8, file: !1, line: 9, type: !29, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, declaration: !28, retainedNodes: !94)
!94 = !{!95}
!95 = !DILocalVariable(name: "this", arg: 1, scope: !93, type: !51, flags: DIFlagArtificial | DIFlagObjectPointer)
!96 = distinct !DILocation(line: 22, column: 11, scope: !57)
!97 = !DILocation(line: 22, column: 9, scope: !57)
!98 = distinct !DIAssignID()
!99 = !DILocation(line: 23, column: 5, scope: !57)
!100 = !DILocation(line: 24, column: 1, scope: !57)
!101 = !DILocation(line: 9, column: 19, scope: !93)
!102 = !DILocation(line: 9, column: 12, scope: !93)
;.
; CHECK: attributes #[[ATTR0:[0-9]+]] = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
; CHECK: attributes #[[ATTR1:[0-9]+]] = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
; CHECK: attributes #[[ATTR2:[0-9]+]] = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
;.
; CHECK: [[META0:![0-9]+]] = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 12.0.0", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
; CHECK: [[META1:![0-9]+]] = !DIFile(filename: "reduce.cpp", directory: "/")
; CHECK: [[META2:![0-9]+]] = !{}
; CHECK: [[META3:![0-9]+]] = !{i32 7, !"Dwarf Version", i32 4}
; CHECK: [[META4:![0-9]+]] = !{i32 2, !"Debug Info Version", i32 3}
; CHECK: [[META5:![0-9]+]] = !{i32 1, !"wchar_size", i32 4}
; CHECK: [[META6:![0-9]+]] = !{!"clang version 12.0.0"}
; CHECK: [[META7:![0-9]+]] = distinct !DISubprogram(name: "operator*", linkageName: "_ZNK1BmlERKS_", scope: !8, file: !1, line: 14, type: !33, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, declaration: !32, retainedNodes: !38)
; CHECK: [[META8:![0-9]+]] = distinct !DICompositeType(tag: DW_TAG_class_type, name: "B", file: !1, line: 6, size: 160, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !9, identifier: "_ZTS1B")
; CHECK: [[META9:![0-9]+]] = !{!10, !12, !24, !28, !32}
; CHECK: [[META10:![0-9]+]] = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !8, file: !1, line: 11, baseType: !11, size: 32, flags: DIFlagPublic)
; CHECK: [[META11:![0-9]+]] = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
; CHECK: [[META12:![0-9]+]] = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !8, file: !1, line: 12, baseType: !13, size: 128, offset: 32, flags: DIFlagPublic)
; CHECK: [[META13:![0-9]+]] = distinct !DICompositeType(tag: DW_TAG_class_type, name: "a", file: !1, line: 1, size: 128, flags: DIFlagTypePassByValue, elements: !14, identifier: "_ZTS1a")
; CHECK: [[META14:![0-9]+]] = !{!15, !20}
; CHECK: [[META15:![0-9]+]] = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !13, file: !1, line: 3, baseType: !16, size: 128, flags: DIFlagPublic)
; CHECK: [[META16:![0-9]+]] = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 128, elements: !18)
; CHECK: [[META17:![0-9]+]] = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
; CHECK: [[META18:![0-9]+]] = !{!19}
; CHECK: [[META19:![0-9]+]] = !DISubrange(count: 4)
; CHECK: [[META20:![0-9]+]] = !DISubprogram(name: "c", linkageName: "_ZN1a1cEv", scope: !13, file: !1, line: 4, type: !21, scopeLine: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
; CHECK: [[META21:![0-9]+]] = !DISubroutineType(types: !22)
; CHECK: [[META22:![0-9]+]] = !{null, !23}
; CHECK: [[META23:![0-9]+]] = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
; CHECK: [[META24:![0-9]+]] = !DISubprogram(name: "B", scope: !8, file: !1, line: 8, type: !25, scopeLine: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
; CHECK: [[META25:![0-9]+]] = !DISubroutineType(types: !26)
; CHECK: [[META26:![0-9]+]] = !{null, !27, !13}
; CHECK: [[META27:![0-9]+]] = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
; CHECK: [[META28:![0-9]+]] = !DISubprogram(name: "f", linkageName: "_ZN1B1fEv", scope: !8, file: !1, line: 9, type: !29, scopeLine: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
; CHECK: [[META29:![0-9]+]] = !DISubroutineType(types: !30)
; CHECK: [[META30:![0-9]+]] = !{!31, !27}
; CHECK: [[META31:![0-9]+]] = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !13, size: 64)
; CHECK: [[META32:![0-9]+]] = !DISubprogram(name: "operator*", linkageName: "_ZNK1BmlERKS_", scope: !8, file: !1, line: 10, type: !33, scopeLine: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
; CHECK: [[META33:![0-9]+]] = !DISubroutineType(types: !34)
; CHECK: [[META34:![0-9]+]] = !{!8, !35, !37}
; CHECK: [[META35:![0-9]+]] = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
; CHECK: [[META36:![0-9]+]] = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
; CHECK: [[META37:![0-9]+]] = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !36, size: 64)
; CHECK: [[META38:![0-9]+]] = !{!39, !41}
; CHECK: [[META39:![0-9]+]] = !DILocalVariable(name: "this", arg: 1, scope: !7, type: !40, flags: DIFlagArtificial | DIFlagObjectPointer)
; CHECK: [[META40:![0-9]+]] = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
; CHECK: [[META41:![0-9]+]] = !DILocalVariable(arg: 2, scope: !7, file: !1, line: 14, type: !37)
; CHECK: [[DBG42]] = !DILocation(line: 14, column: 41, scope: !7)
; CHECK: [[DBG43]] = !DILocation(line: 8, column: 12, scope: !44, inlinedAt: !49)
; CHECK: [[META44:![0-9]+]] = distinct !DISubprogram(name: "B", linkageName: "_ZN1BC2E1a", scope: !8, file: !1, line: 8, type: !25, scopeLine: 8, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, declaration: !24, retainedNodes: !45)
; CHECK: [[META45:![0-9]+]] = !{!46, !48}
; CHECK: [[META46:![0-9]+]] = !DILocalVariable(name: "this", arg: 1, scope: !44, type: !47, flags: DIFlagArtificial | DIFlagObjectPointer)
; CHECK: [[META47:![0-9]+]] = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
; CHECK: [[META48:![0-9]+]] = !DILocalVariable(name: "d", arg: 2, scope: !44, file: !1, line: 8, type: !13)
; CHECK: [[META49:![0-9]+]] = distinct !DILocation(line: 14, column: 41, scope: !7)
; CHECK: [[DBG50]] = !DILocation(line: 14, column: 34, scope: !7)
; CHECK: [[DBG51]] = !DILocation(line: 8, column: 12, scope: !44)
; CHECK: [[DBG52]] = !DILocation(line: 8, column: 18, scope: !44)
; CHECK: [[META53:![0-9]+]] = distinct !DISubprogram(name: "j", linkageName: "_Z1jv", scope: !1, file: !1, line: 19, type: !54, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !56)
; CHECK: [[META54:![0-9]+]] = !DISubroutineType(types: !55)
; CHECK: [[META55:![0-9]+]] = !{null}
; CHECK: [[META56:![0-9]+]] = !{!57, !64, !65, !66, !67, !68}
; CHECK: [[META57]] = !DILocalVariable(name: "convexbody", scope: !53, file: !1, line: 20, type: !58)
; CHECK: [[META58:![0-9]+]] = distinct !DICompositeType(tag: DW_TAG_class_type, name: "h", file: !1, line: 15, size: 8, flags: DIFlagTypePassByValue, elements: !59, identifier: "_ZTS1h")
; CHECK: [[META59:![0-9]+]] = !{!60}
; CHECK: [[META60:![0-9]+]] = !DISubprogram(name: "i", linkageName: "_ZN1h1iEv", scope: !58, file: !1, line: 17, type: !61, scopeLine: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
; CHECK: [[META61:![0-9]+]] = !DISubroutineType(types: !62)
; CHECK: [[META62:![0-9]+]] = !{!8, !63}
; CHECK: [[META63:![0-9]+]] = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
; CHECK: [[META64]] = !DILocalVariable(name: "k", scope: !53, file: !1, line: 20, type: !58)
; CHECK: [[META65]] = !DILocalVariable(name: "l", scope: !53, file: !1, line: 21, type: !8)
; CHECK: [[META66]] = !DILocalVariable(name: "m", scope: !53, file: !1, line: 21, type: !8)
; CHECK: [[META67]] = !DILocalVariable(name: "n", scope: !53, file: !1, line: 21, type: !8)
; CHECK: [[META68]] = !DILocalVariable(name: "o", scope: !53, file: !1, line: 22, type: !13)
; CHECK: [[DIASSIGNID69]] = distinct !DIAssignID()
; CHECK: [[DBG70]] = !DILocation(line: 0, scope: !53)
; CHECK: [[DIASSIGNID71]] = distinct !DIAssignID()
; CHECK: [[DIASSIGNID72]] = distinct !DIAssignID()
; CHECK: [[DIASSIGNID73]] = distinct !DIAssignID()
; CHECK: [[META74]] = distinct !DIAssignID()
; CHECK: [[DIASSIGNID75]] = distinct !DIAssignID()
; CHECK: [[DBG76]] = !DILocation(line: 20, column: 3, scope: !53)
; CHECK: [[DBG77]] = !DILocation(line: 21, column: 3, scope: !53)
; CHECK: [[DBG78]] = !DILocation(line: 21, column: 11, scope: !53)
; CHECK: [[DBG79]] = !DILocation(line: 21, column: 31, scope: !53)
; CHECK: [[DBG80]] = !DILocation(line: 14, column: 41, scope: !7, inlinedAt: !81)
; CHECK: [[META81:![0-9]+]] = distinct !DILocation(line: 21, column: 42, scope: !53)
; CHECK: [[DBG82]] = !DILocation(line: 22, column: 3, scope: !53)
; CHECK: [[DBG83]] = !DILocation(line: 22, column: 9, scope: !53)
; CHECK: [[DIASSIGNID84]] = distinct !DIAssignID()
; CHECK: [[DIASSIGNID85]] = distinct !DIAssignID()
; CHECK: [[DBG86]] = !DILocation(line: 23, column: 5, scope: !53)
; CHECK: [[DBG87]] = !DILocation(line: 24, column: 1, scope: !53)
; CHECK: [[META88:![0-9]+]] = distinct !DISubprogram(name: "f", linkageName: "_ZN1B1fEv", scope: !8, file: !1, line: 9, type: !29, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, declaration: !28, retainedNodes: !89)
; CHECK: [[META89:![0-9]+]] = !{!90}
; CHECK: [[META90:![0-9]+]] = !DILocalVariable(name: "this", arg: 1, scope: !88, type: !47, flags: DIFlagArtificial | DIFlagObjectPointer)
; CHECK: [[DBG91]] = !DILocation(line: 9, column: 19, scope: !88)
; CHECK: [[DBG92]] = !DILocation(line: 9, column: 12, scope: !88)
;.
