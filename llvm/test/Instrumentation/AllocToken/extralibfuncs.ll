; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; Test for special libfuncs not automatically considered allocation functions.
;
; RUN: opt < %s -passes=inferattrs,alloc-token -S | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

declare {ptr, i64} @__size_returning_new(i64)

define ptr @test_extra_libfuncs() sanitize_alloc_token {
; CHECK-LABEL: define ptr @test_extra_libfuncs(
; CHECK-SAME: ) #[[ATTR1:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = call { ptr, i64 } @__alloc_token___size_returning_new(i64 10, i64 2689373973731826898), !alloc_token [[META0:![0-9]+]]
; CHECK-NEXT:    [[PTR1:%.*]] = extractvalue { ptr, i64 } [[TMP0]], 0
; CHECK-NEXT:    ret ptr [[PTR1]]
;
entry:
  %srn = call {ptr, i64} @__size_returning_new(i64 10), !alloc_token !0
  %ptr1  = extractvalue {ptr, i64} %srn, 0
  ret ptr %ptr1
}

declare ptr @_Znwm(i64) nobuiltin allocsize(0)
declare ptr @_Znam(i64) nobuiltin allocsize(0)

define ptr @test_replaceable_new() sanitize_alloc_token {
; CHECK-LABEL: define ptr @test_replaceable_new(
; CHECK-SAME: ) #[[ATTR1]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = call ptr @__alloc_token__Znwm(i64 32, i64 2689373973731826898), !alloc_token [[META0]]
; CHECK-NEXT:    [[TMP1:%.*]] = call ptr @__alloc_token__Znam(i64 64, i64 2689373973731826898), !alloc_token [[META0]]
; CHECK-NEXT:    ret ptr [[TMP0]]
;
entry:
  %ptr1 = call ptr @_Znwm(i64 32), !alloc_token !0
  %ptr2 = call ptr @_Znam(i64 64), !alloc_token !0
  ret ptr %ptr1
}

!0 = !{!"int"}
;.
; CHECK: [[META0]] = !{!"int"}
;.
