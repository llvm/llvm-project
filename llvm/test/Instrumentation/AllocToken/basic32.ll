; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=inferattrs,alloc-token -alloc-token-mode=increment -S | FileCheck %s

target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S128"

declare ptr @malloc(i32)
declare ptr @_Znwm(i32)

define ptr @test_basic_rewriting() sanitize_alloc_token {
; CHECK-LABEL: define ptr @test_basic_rewriting(
; CHECK-SAME: ) #[[ATTR2:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = call ptr @__alloc_token_malloc(i32 64, i32 0)
; CHECK-NEXT:    ret ptr [[TMP0]]
;
entry:
  %ptr1 = call ptr @malloc(i32 64)
  ret ptr %ptr1
}

define ptr @test_cpp_operators() sanitize_alloc_token {
; CHECK-LABEL: define ptr @test_cpp_operators(
; CHECK-SAME: ) #[[ATTR2]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = call ptr @__alloc_token__Znwm(i32 32, i32 1)
; CHECK-NEXT:    ret ptr [[TMP0]]
;
entry:
  %ptr1 = call ptr @_Znwm(i32 32)
  ret ptr %ptr1
}
