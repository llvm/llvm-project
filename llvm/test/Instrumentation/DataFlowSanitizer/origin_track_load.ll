; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 6
; RUN: opt < %s -passes=dfsan -dfsan-track-origins=2 -dfsan-add-global-name-suffix=0 -S | FileCheck %s
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define i64 @load64(ptr %p) {
; CHECK-LABEL: define i64 @load64(
; CHECK-SAME: ptr [[P:%.*]]) {
; CHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr @__dfsan_arg_origin_tls, align 4
; CHECK-NEXT:    [[TMP2:%.*]] = load i8, ptr @__dfsan_arg_tls, align 2
; CHECK-NEXT:    [[TMP3:%.*]] = call zeroext i64 @__dfsan_load_label_and_origin(ptr [[P]], i64 8)
; CHECK-NEXT:    [[TMP4:%.*]] = lshr i64 [[TMP3]], 32
; CHECK-NEXT:    [[TMP5:%.*]] = trunc i64 [[TMP4]] to i8
; CHECK-NEXT:    [[TMP6:%.*]] = trunc i64 [[TMP3]] to i32
; CHECK-NEXT:    [[TMP7:%.*]] = call i32 @__dfsan_chain_origin_if_tainted(i8 [[TMP5]], i32 [[TMP6]])
; CHECK-NEXT:    [[TMP8:%.*]] = or i8 [[TMP5]], [[TMP2]]
; CHECK-NEXT:    [[TMP9:%.*]] = icmp ne i8 [[TMP2]], 0
; CHECK-NEXT:    [[TMP10:%.*]] = select i1 [[TMP9]], i32 [[TMP1]], i32 [[TMP7]]
; CHECK-NEXT:    [[A:%.*]] = load i64, ptr [[P]], align 8
; CHECK-NEXT:    store i8 [[TMP8]], ptr @__dfsan_retval_tls, align 2
; CHECK-NEXT:    store i32 [[TMP10]], ptr @__dfsan_retval_origin_tls, align 4
; CHECK-NEXT:    ret i64 [[A]]
;
  %a = load i64, ptr %p
  ret i64 %a
}
