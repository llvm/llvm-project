# REQUIRES: shell
# ALLOW_RETRIES: 1

# Cleanup
# RUN: rm -f %t.ok %t.e8.out %t.e8.err %t.e16.out %t.e16.err

# --- e8 ---
# Produce output (allow non-zero exit)
# RUN: llvm-exegesis -mtriple=riscv64 -mcpu=sifive-x280 -benchmark-phase=assemble-measured-code --mode=inverse_throughput --opcode-name=PseudoVNCLIPU_WX_M1_MASK --riscv-filter-config="vtype = {VXRM: rod, AVL: VLMAX, SEW: e8, Policy: ta/mu}" --max-configs-per-opcode=1000 --min-instructions=10 > %t.e8.out 2> %t.e8.err || true
# If stdout exists: run FileCheck and mark success
# RUN: sh -c 'if test -s %t.e8.out; then FileCheck --check-prefix=E8 %s < %t.e8.out && touch %t.ok; fi'
# If stdout is empty: accept only the known “Failed to produce any snippet” message, and reject any other error signs
# RUN: sh -c 'if test ! -s %t.e8.out; then grep -q "Failed to produce any snippet" %t.e8.err; fi'
# RUN: sh -c 'if test ! -s %t.e8.out; then ! grep -Eiq "(error:|Assertion|Sanitizer|Segmentation|stack trace)" %t.e8.err; fi'

# --- e16 ---
# RUN: llvm-exegesis -mtriple=riscv64 -mcpu=sifive-x280 -benchmark-phase=assemble-measured-code --mode=inverse_throughput --opcode-name=PseudoVNCLIPU_WX_M1_MASK --riscv-filter-config="vtype = {VXRM: rod, AVL: VLMAX, SEW: e16, Policy: ta/mu}" --max-configs-per-opcode=1000 --min-instructions=10 > %t.e16.out 2> %t.e16.err || true
# RUN: sh -c 'if test -s %t.e16.out; then FileCheck --check-prefix=E16 %s < %t.e16.out && touch %t.ok; fi'
# RUN: sh -c 'if test ! -s %t.e16.out; then grep -q "Failed to produce any snippet" %t.e16.err; fi'
# RUN: sh -c 'if test ! -s %t.e16.out; then ! grep -Eiq "(error:|Assertion|Sanitizer|Segmentation|stack trace)" %t.e16.err; fi'

# Require at least one config to actually produce stdout successfully
# RUN: test -f %t.ok

# Success path (stdout exists) should contain:
# E8:  config:          'vtype = {VXRM: rod, AVL: VLMAX, SEW: e8, Policy: ta/mu}'
# E16: config:          'vtype = {VXRM: rod, AVL: VLMAX, SEW: e16, Policy: ta/mu}'

# Success path should NOT show e32/e64 (stdout-only check):
# E8-NOT:  config:          'vtype = {VXRM: rod, AVL: VLMAX, SEW: e(32|64), Policy: ta/mu}'
# E16-NOT: config:          'vtype = {VXRM: rod, AVL: VLMAX, SEW: e(32|64), Policy: ta/mu}'
