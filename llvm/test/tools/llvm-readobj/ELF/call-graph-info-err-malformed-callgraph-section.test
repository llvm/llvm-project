## Tests that --call-graph-info fails if .llvm.callgraph section has invalid size.

# REQUIRES: x86-registered-target

# RUN: llvm-mc %s -filetype=obj -triple=x86_64-pc-linux -o %t
# RUN: not llvm-readelf --call-graph-info %t 2>&1 | FileCheck %s --match-full-lines -DFILE=%t --check-prefix=ERR
# RUN: not llvm-readelf --elf-output-style=LLVM --call-graph-info %t 2>&1 | FileCheck %s --match-full-lines -DFILE=%t --check-prefix=ERR
# RUN: not llvm-readelf --elf-output-style=JSON --pretty-print --call-graph-info %t 2>&1 | FileCheck %s --match-full-lines -DFILE=%t --check-prefix=ERR
 
# ERR: {{.*}}llvm-readelf{{.*}}: error: 'While reading call graph info's [number of indirect callsites] for function at [0x0]': unexpected end of data at offset 0x19 while reading [0x18, 0x20)

.text
.globl _Z3foov
.type _Z3foov,@function
_Z3foov:
 callq _Z3foov@PLT

.section	.llvm.callgraph,"o",@llvm_call_graph_section,.text
# Each unit in .callgraph section must have 64bit size. Therefore, byte size
# must be divisible by 64.
.quad 0
.quad 0
.quad 0
.byte 0
.text
