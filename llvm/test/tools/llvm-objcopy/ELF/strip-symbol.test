# RUN: extract yaml %s | yaml2obj - -o %t
# RUN: llvm-objcopy --strip-symbol baz -N bar %t %t2
# RUN: llvm-readobj --symbols --sections %t2 | FileCheck %s
# RUN: llvm-strip --strip-symbol baz -N bar %t -o %t3
# RUN: cmp %t2 %t3
# RUN: llvm-strip --regex --strip-symbol '^b.*' -N bar %t -o %t4
# RUN: cmp %t3 %t4
# RUN: extract list1 %s -o %t-list.txt && llvm-objcopy --strip-symbols %t-list.txt %t %t5
# RUN: cmp %t3 %t5
# RUN: extract list2 %s -o %t-list2.txt && llvm-objcopy --regex --strip-symbols %t-list2.txt %t %t6
# RUN: cmp %t3 %t6

#--- list1
bar # bar
baz # baz
# no symbol

#--- list2
b.* # bar & baz

#--- yaml
!ELF
FileHeader:
  Class:           ELFCLASS64
  Data:            ELFDATA2LSB
  Type:            ET_REL
  Machine:         EM_X86_64
Sections:
  - Name:            .text
    Type:            SHT_PROGBITS
    Flags:           [ SHF_ALLOC, SHF_EXECINSTR ]
    Address:         0x1000
    AddressAlign:    0x0000000000000010
    Size:            64
Symbols:
  - Name:     foo
    Type:     STT_FUNC
    Section:  .text
    Value:    0x1000
    Size:     8
  - Name:     bar
    Type:     STT_FUNC
    Size:     8
    Section:  .text
    Value:    0x1008
    Binding:  STB_WEAK
  - Name:     baz
    Type:     STT_FUNC
    Size:     8
    Section:  .text
    Value:    0x1010
    Binding:  STB_GLOBAL

#CHECK: Symbols [
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name:
#CHECK-NEXT:    Value: 0x0
#CHECK-NEXT:    Size: 0
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: None
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: Undefined
#CHECK-NEXT:  }
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name: foo
#CHECK-NEXT:    Value: 0x1000
#CHECK-NEXT:    Size: 8
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: Function
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: .text
#CHECK-NEXT:  }
#CHECK-NEXT:]
