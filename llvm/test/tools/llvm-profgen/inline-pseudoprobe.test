; RUN: llvm-profgen --format=text --ignore-stack-samples --perfscript=%S/Inputs/inline-cs-pseudoprobe.perfscript --binary=%S/Inputs/inline-cs-pseudoprobe.perfbin --output=%t --profile-summary-cold-count=0
; RUN: FileCheck %s --input-file %t
; RUN: llvm-profgen --format=text --ignore-stack-samples --perfscript=%S/Inputs/inline-cs-pseudoprobe.perfscript --binary=%S/Inputs/inline-cs-pseudoprobe.perfbin --output=%t1 --profile-summary-cold-count=0 --mark-all-context-preinlined
; RUN: FileCheck %s --input-file %t1 --check-prefix=CHECK-MARK-PREINLINED

; CHECK:     main:88:0
; CHECK-NEXT: 1: 0
; CHECK-NEXT: 2: foo:88
; CHECK-NEXT:  1: 0
; CHECK-NEXT:  2: 15
; CHECK-NEXT:  3: 15
; CHECK-NEXT:  4: 14
; CHECK-NEXT:  5: 1
; CHECK-NEXT:  6: 15
; CHECK-NEXT:  7: 0
; CHECK-NEXT:  9: 0
; CHECK-NEXT:  8: bar:28
; CHECK-NEXT:   1: 14
; CHECK-NEXT:   4: 14
; CHECK-NEXT:   !CFGChecksum: 72617220756
; CHECK-NEXT:  !CFGChecksum: 563088904013236
; CHECK-NEXT: !CFGChecksum: 281479271677951

; CHECK-MARK-PREINLINED:     main:88:0
; CHECK-MARK-PREINLINED-NEXT: 1: 0
; CHECK-MARK-PREINLINED-NEXT: 2: foo:88
; CHECK-MARK-PREINLINED-NEXT:  1: 0
; CHECK-MARK-PREINLINED-NEXT:  2: 15
; CHECK-MARK-PREINLINED-NEXT:  3: 15
; CHECK-MARK-PREINLINED-NEXT:  4: 14
; CHECK-MARK-PREINLINED-NEXT:  5: 1
; CHECK-MARK-PREINLINED-NEXT:  6: 15
; CHECK-MARK-PREINLINED-NEXT:  7: 0
; CHECK-MARK-PREINLINED-NEXT:  9: 0
; CHECK-MARK-PREINLINED-NEXT:  8: bar:28
; CHECK-MARK-PREINLINED-NEXT:   1: 14
; CHECK-MARK-PREINLINED-NEXT:   4: 14
; CHECK-MARK-PREINLINED-NEXT:   !CFGChecksum: 72617220756
; CHECK-MARK-PREINLINED-NEXT:   !Attributes: 2 
; CHECK-MARK-PREINLINED-NEXT:  !CFGChecksum: 563088904013236
; CHECK-MARK-PREINLINED-NEXT:  !Attributes: 2
; CHECK-MARK-PREINLINED-NEXT: !CFGChecksum: 281479271677951
; CHECK-MARK-PREINLINED-NEXT: !Attributes: 2

; clang -O3 -fuse-ld=lld -fpseudo-probe-for-profiling
; -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -Xclang -mdisable-tail-calls
; -g test.c  -o a.out

#include <stdio.h>

int bar(int x, int y) {
  if (x % 3) {
    return x - y;
  }
  return x + y;
}

void foo() {
  int s, i = 0;
  while (i++ < 4000 * 4000)
    if (i % 91) s = bar(i, s); else s += 30;
  printf("sum is %d\n", s);
}

int main() {
  foo();
  return 0;
}
