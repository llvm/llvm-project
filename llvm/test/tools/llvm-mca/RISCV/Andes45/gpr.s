# NOTE: Assertions have been autogenerated by utils/update_mca_test_checks.py
# RUN: llvm-mca -mtriple=riscv64 -mcpu=andes-nx45 -timeline -iterations=1 < %s | FileCheck %s

# Two ALUs without dependency can be dispatched in the same cycle.
add a0, a0, a0
sub a1, a1, a1

# Otherwise, they can't be dispatched in the same cycle.
addw a0, a0, a0
subw a0, a0, a0

// MDU
mul a0, a0, a0
div a0, a0, a0

// Memory
lb a0, 4(a1)
lw a0, 4(a1)
sb a0, 4(a1)
sw a0, 4(a1)

// CSR
csrrw a0, mstatus, zero

// Bitmanip
sh1add a0, a0, a0

# CHECK:      Iterations:        1
# CHECK-NEXT: Instructions:      12
# CHECK-NEXT: Total Cycles:      49
# CHECK-NEXT: Total uOps:        12

# CHECK:      Dispatch Width:    2
# CHECK-NEXT: uOps Per Cycle:    0.24
# CHECK-NEXT: IPC:               0.24
# CHECK-NEXT: Block RThroughput: 40.0

# CHECK:      Instruction Info:
# CHECK-NEXT: [1]: #uOps
# CHECK-NEXT: [2]: Latency
# CHECK-NEXT: [3]: RThroughput
# CHECK-NEXT: [4]: MayLoad
# CHECK-NEXT: [5]: MayStore
# CHECK-NEXT: [6]: HasSideEffects (U)

# CHECK:      [1]    [2]    [3]    [4]    [5]    [6]    Instructions:
# CHECK-NEXT:  1      1     0.50                        add	a0, a0, a0
# CHECK-NEXT:  1      1     0.50                        sub	a1, a1, a1
# CHECK-NEXT:  1      1     0.50                        addw	a0, a0, a0
# CHECK-NEXT:  1      1     0.50                        subw	a0, a0, a0
# CHECK-NEXT:  1      3     1.00                        mul	a0, a0, a0
# CHECK-NEXT:  1      39    39.00                       div	a0, a0, a0
# CHECK-NEXT:  1      5     1.00    *                   lb	a0, 4(a1)
# CHECK-NEXT:  1      3     1.00    *                   lw	a0, 4(a1)
# CHECK-NEXT:  1      1     1.00           *            sb	a0, 4(a1)
# CHECK-NEXT:  1      1     1.00           *            sw	a0, 4(a1)
# CHECK-NEXT:  1      1     1.00                  U     csrrw	a0, mstatus, zero
# CHECK-NEXT:  1      1     0.50                        sh1add	a0, a0, a0

# CHECK:      Resources:
# CHECK-NEXT: [0.0] - Andes45ALU
# CHECK-NEXT: [0.1] - Andes45ALU
# CHECK-NEXT: [1]   - Andes45CSR
# CHECK-NEXT: [2]   - Andes45FDIV
# CHECK-NEXT: [3]   - Andes45FMAC
# CHECK-NEXT: [4]   - Andes45FMISC
# CHECK-NEXT: [5]   - Andes45FMV
# CHECK-NEXT: [6]   - Andes45LSU
# CHECK-NEXT: [7]   - Andes45MDU

# CHECK:      Resource pressure per iteration:
# CHECK-NEXT: [0.0]  [0.1]  [1]    [2]    [3]    [4]    [5]    [6]    [7]
# CHECK-NEXT: 2.00   3.00   1.00    -      -      -      -     4.00   40.00

# CHECK:      Resource pressure by instruction:
# CHECK-NEXT: [0.0]  [0.1]  [1]    [2]    [3]    [4]    [5]    [6]    [7]    Instructions:
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -     add	a0, a0, a0
# CHECK-NEXT: 1.00    -      -      -      -      -      -      -      -     sub	a1, a1, a1
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -     addw	a0, a0, a0
# CHECK-NEXT: 1.00    -      -      -      -      -      -      -      -     subw	a0, a0, a0
# CHECK-NEXT:  -      -      -      -      -      -      -      -     1.00   mul	a0, a0, a0
# CHECK-NEXT:  -      -      -      -      -      -      -      -     39.00  div	a0, a0, a0
# CHECK-NEXT:  -      -      -      -      -      -      -     1.00    -     lb	a0, 4(a1)
# CHECK-NEXT:  -      -      -      -      -      -      -     1.00    -     lw	a0, 4(a1)
# CHECK-NEXT:  -      -      -      -      -      -      -     1.00    -     sb	a0, 4(a1)
# CHECK-NEXT:  -      -      -      -      -      -      -     1.00    -     sw	a0, 4(a1)
# CHECK-NEXT:  -      -     1.00    -      -      -      -      -      -     csrrw	a0, mstatus, zero
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -     sh1add	a0, a0, a0

# CHECK:      Timeline view:
# CHECK-NEXT:                     0123456789          0123456789
# CHECK-NEXT: Index     0123456789          0123456789          012345678

# CHECK:      [0,0]     DE   .    .    .    .    .    .    .    .    .  .   add	a0, a0, a0
# CHECK-NEXT: [0,1]     DE   .    .    .    .    .    .    .    .    .  .   sub	a1, a1, a1
# CHECK-NEXT: [0,2]     .DE  .    .    .    .    .    .    .    .    .  .   addw	a0, a0, a0
# CHECK-NEXT: [0,3]     . DE .    .    .    .    .    .    .    .    .  .   subw	a0, a0, a0
# CHECK-NEXT: [0,4]     .  DeeE   .    .    .    .    .    .    .    .  .   mul	a0, a0, a0
# CHECK-NEXT: [0,5]     .    .DeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeE  .   div	a0, a0, a0
# CHECK-NEXT: [0,6]     .    .    .    .    .    .    .    .    DeeeeE  .   lb	a0, 4(a1)
# CHECK-NEXT: [0,7]     .    .    .    .    .    .    .    .    . DeeE  .   lw	a0, 4(a1)
# CHECK-NEXT: [0,8]     .    .    .    .    .    .    .    .    .    DE .   sb	a0, 4(a1)
# CHECK-NEXT: [0,9]     .    .    .    .    .    .    .    .    .    .DE.   sw	a0, 4(a1)
# CHECK-NEXT: [0,10]    .    .    .    .    .    .    .    .    .    .DE.   csrrw	a0, mstatus, zero
# CHECK-NEXT: [0,11]    .    .    .    .    .    .    .    .    .    . DE   sh1add	a0, a0, a0

# CHECK:      Average Wait times (based on the timeline view):
# CHECK-NEXT: [0]: Executions
# CHECK-NEXT: [1]: Average time spent waiting in a scheduler's queue
# CHECK-NEXT: [2]: Average time spent waiting in a scheduler's queue while ready
# CHECK-NEXT: [3]: Average time elapsed from WB until retire stage

# CHECK:            [0]    [1]    [2]    [3]
# CHECK-NEXT: 0.     1     0.0    0.0    0.0       add	a0, a0, a0
# CHECK-NEXT: 1.     1     0.0    0.0    0.0       sub	a1, a1, a1
# CHECK-NEXT: 2.     1     0.0    0.0    0.0       addw	a0, a0, a0
# CHECK-NEXT: 3.     1     0.0    0.0    0.0       subw	a0, a0, a0
# CHECK-NEXT: 4.     1     0.0    0.0    0.0       mul	a0, a0, a0
# CHECK-NEXT: 5.     1     0.0    0.0    0.0       div	a0, a0, a0
# CHECK-NEXT: 6.     1     0.0    0.0    0.0       lb	a0, 4(a1)
# CHECK-NEXT: 7.     1     0.0    0.0    0.0       lw	a0, 4(a1)
# CHECK-NEXT: 8.     1     0.0    0.0    0.0       sb	a0, 4(a1)
# CHECK-NEXT: 9.     1     0.0    0.0    0.0       sw	a0, 4(a1)
# CHECK-NEXT: 10.    1     0.0    0.0    0.0       csrrw	a0, mstatus, zero
# CHECK-NEXT: 11.    1     0.0    0.0    0.0       sh1add	a0, a0, a0
# CHECK-NEXT:        1     0.0    0.0    0.0       <total>
