## Check how obj2yaml produces YAML .llvm_bb_addr_map descriptions.

## Check that obj2yaml uses the "Entries" tag to describe an .llvm_bb_addr_map section.

# RUN: yaml2obj --docnum=1 %s -o %t1
# RUN: obj2yaml %t1 | FileCheck %s --check-prefix=VALID

# VALID:      --- !ELF
# VALID-NEXT: FileHeader:
# VALID-NEXT:   Class:   ELFCLASS64
# VALID-NEXT:   Data:    ELFDATA2LSB
# VALID-NEXT:   Type:    ET_EXEC
# VALID-NEXT: Sections:
# VALID-NEXT:   - Name: .llvm_bb_addr_map
# VALID-NEXT:     Type: SHT_LLVM_BB_ADDR_MAP
# VALID-NEXT:     Entries:
## The 'Address' field is omitted when it's zero.
# VALID-NEXT:         BBEntries:
# VALID-NEXT:           - AddressOffset:    0x00000001
# VALID-NEXT:             Size:             0x00000002
# VALID-NEXT:             Metadata:         0x00000003
# VALID-NEXT:           - AddressOffset:    0x00000004
# VALID-NEXT:             Size:             0x00000005
# VALID-NEXT:             Metadata:         0x00000006
# VALID-NEXT:           - AddressOffset:    0x00000007
# VALID-NEXT:             Size:             0x00000008
# VALID-NEXT:             Metadata:         0x00000009
# VALID-NEXT:       - Address:   0x0000000000000020
# VALID-NEXT:         BBEntries:
# VALID-NEXT:           - AddressOffset:    0x0000000A
# VALID-NEXT:             Size:             0x0000000B
# VALID-NEXT:             Metadata:         0x0000000C

--- !ELF
FileHeader:
  Class: ELFCLASS64
  Data:  ELFDATA2LSB
  Type:  ET_EXEC
Sections:
  - Name:    .llvm_bb_addr_map
    Type:    SHT_LLVM_BB_ADDR_MAP
    Entries:
      - Address:   0x0000000000000000
        BBEntries:
          - AddressOffset:    0x00000001
            Size:             0x00000002
            Metadata:         0x00000003
          - AddressOffset:    0x00000004
            Size:             0x00000005
            Metadata:         0x00000006
          - AddressOffset:    0x00000007
            Size:             0x00000008
            Metadata:         0x00000009
      - Address:   0x0000000000000020
        BBEntries:
          - AddressOffset:    0x0000000A
            Size:             0x0000000B
            Metadata:         0x0000000C

## Check that obj2yaml uses the "Content" tag to describe an .llvm_bb_addr_map section
## when it can't extract the entries. For instance, when truncated data is given as
## 'Content'.

# RUN: yaml2obj --docnum=2 %s -o %t2
# RUN: obj2yaml %t2 | FileCheck %s --check-prefix=INVALID

# INVALID:      --- !ELF
# INVALID-NEXT: FileHeader:
# INVALID-NEXT:   Class:   ELFCLASS64
# INVALID-NEXT:   Data:    ELFDATA2LSB
# INVALID-NEXT:   Type:    ET_EXEC
# INVALID-NEXT: Sections:
# INVALID-NEXT:   - Name: .llvm_bb_addr_map
# INVALID-NEXT:     Type: SHT_LLVM_BB_ADDR_MAP
# INVALID-NEXT:     Content: '10000000000000'

--- !ELF
FileHeader:
  Class: ELFCLASS64
  Data:  ELFDATA2LSB
  Type:  ET_EXEC
Sections:
  - Name:    .llvm_bb_addr_map
    Type:    SHT_LLVM_BB_ADDR_MAP
    Content: '10000000000000'

## Check obj2yaml can dump empty .llvm_bb_addr_map sections.

# RUN: yaml2obj --docnum=3 %s -o %t3
# RUN: obj2yaml %t3 | FileCheck %s --check-prefix=EMPTY

# EMPTY:      --- !ELF
# EMPTY-NEXT: FileHeader:
# EMPTY-NEXT:   Class: ELFCLASS64
# EMPTY-NEXT:   Data:  ELFDATA2LSB
# EMPTY-NEXT:   Type:  ET_EXEC
# EMPTY-NEXT: Sections:
# EMPTY-NEXT:   - Name:    .llvm_bb_addr_map
# EMPTY-NEXT:     Type:    SHT_LLVM_BB_ADDR_MAP
# EMPTY-NOT:      Content:

--- !ELF
FileHeader:
  Class: ELFCLASS64
  Data:  ELFDATA2LSB
  Type:  ET_EXEC
Sections:
  - Name:    .llvm_bb_addr_map
    Type:    SHT_LLVM_BB_ADDR_MAP
    Content: ""

## Check obj2yaml can dump multiple .llvm_bb_addr_map sections.

# RUN: yaml2obj --docnum=4 %s -o %t4
# RUN: obj2yaml %t4 | FileCheck %s --check-prefix=MULTI

# MULTI:      --- !ELF
# MULTI-NEXT: FileHeader:
# MULTI-NEXT:   Class: ELFCLASS64
# MULTI-NEXT:   Data:  ELFDATA2LSB
# MULTI-NEXT:   Type:  ET_EXEC
# MULTI-NEXT: Sections:
# MULTI-NEXT:   - Name:    .llvm_bb_addr_map
# MULTI-NEXT:     Type:    SHT_LLVM_BB_ADDR_MAP
# MULTI-NEXT:     Entries:
## The 'Address' field is omitted when it's zero.
# MULTI-NEXT:       - BBEntries:
# MULTI-NEXT:           - AddressOffset:    0x00000001
# MULTI-NEXT:             Size:             0x00000002
# MULTI-NEXT:             Metadata:         0x00000003
# MULTI-NEXT:   - Name:    '.llvm_bb_addr_map (1)'
# MULTI-NEXT:     Type:    SHT_LLVM_BB_ADDR_MAP
# MULTI-NEXT:     Entries:
# MULTI-NEXT:       - Address: 0x0000000000000020
# MULTI-NEXT:         BBEntries: []

--- !ELF
FileHeader:
  Class: ELFCLASS64
  Data:  ELFDATA2LSB
  Type:  ET_EXEC
Sections:
  - Name:    .llvm_bb_addr_map
    Type:    SHT_LLVM_BB_ADDR_MAP
    Entries:
## Check that obj2yaml does not emit the Address field when it's zero.
      - Address:   0x0000000000000000
        BBEntries:
          - AddressOffset:    0x00000001
            Size:             0x00000002
            Metadata:         0x00000003
  - Name:    '.llvm_bb_addr_map (1)'
    Type:    SHT_LLVM_BB_ADDR_MAP
    Entries:
      - Address:   0x0000000000000020
