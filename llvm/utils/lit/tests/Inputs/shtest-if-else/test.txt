#       CHECK: -- Testing:{{.*}}
#  CHECK-NEXT: PASS: shtest-if-else :: test.txt (1 of 1)
#  CHECK-NEXT: Exit Code: 0
# CHECK-EMPTY:
#  CHECK-NEXT: Command Output (stdout):
#  CHECK-NEXT: --

# RUN: %if feature %{ echo "test-1" %}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-1
# CHECK-EMPTY:

# If %else is not present it is treated like %else %{%}. Empty commands
# are ignored.
#
# RUN: %if nofeature %{ echo "fail" %}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#   CHECK-NOT: fail

# RUN: %if nofeature %{ echo "fail" %} %else %{ echo "test-2" %}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-2
# CHECK-EMPTY:

# Spaces inside curly braces are not ignored
#
# RUN: echo test-%if feature %{ 3 %} %else %{ fail %}-test
# RUN: echo test-%if feature %{ 4 4 %} %else %{ fail %}-test
# RUN: echo test-%if nofeature %{ fail %} %else %{ 5 5 %}-test
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-3]]"
#       CHECK: # command output:
#  CHECK-NEXT: test- 3 -test
# CHECK-EMPTY:
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-6]]"
#       CHECK: # command output:
#  CHECK-NEXT: test- 4 4 -test
# CHECK-EMPTY:
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-9]]"
#       CHECK: # command output:
#  CHECK-NEXT: test- 5 5 -test
# CHECK-EMPTY:

# Escape line breaks for multi-line expressions
#
# RUN: %if feature  \
# RUN:   %{ echo     \
# RUN:     "test-5" \
# RUN:   %}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-4]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-5
# CHECK-EMPTY:

# RUN: %if nofeature       \
# RUN:   %{ echo "fail" %}   \
# RUN: %else               \
# RUN:   %{ echo "test-6" %}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-4]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-6
# CHECK-EMPTY:

# RUN: echo "test%if feature %{%} %else %{%}-7"
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-7
# CHECK-EMPTY:

# Escape %if. Without %if..%else context '%{' and '%}' are treated
# literally.
#
# RUN: echo %%if feature %{ echo "test-8" %}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#       CHECK: # command output:
#  CHECK-NEXT: %if feature %{ echo test-8 %}
# CHECK-EMPTY:

# Nested expressions are supported:
#
# RUN: echo %if feature %{ %if feature %{ %if nofeature %{"fail"%} %else %{"test-9"%} %} %}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-9
# CHECK-EMPTY:

# Binary expression evaluation and regex match can be used as
# conditions.
#
# RUN: echo %if feature && !nofeature %{ "test-10" %}
# RUN: echo %if feature && nofeature %{ "fail" %} %else %{ "test-11" %}
# RUN: echo %if {{fea.+}} %{ "test-12" %} %else %{ "fail" %}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-3]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-10
# CHECK-EMPTY:
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-6]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-11
# CHECK-EMPTY:
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-9]]"
#       CHECK: # command output:
#  CHECK-NEXT: test-12
# CHECK-EMPTY:

# Spaces between %if and %else are ignored. If there is no %else -
# space after %if %{...%} is not ignored.
#
# RUN: echo XX %if feature %{YY%} ZZ
# RUN: echo AA %if feature %{BB%} %else %{CC%} DD
# RUN: echo AA %if nofeature %{BB%} %else %{CC%} DD
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-3]]"
#       CHECK: # command output:
#  CHECK-NEXT: XX YY ZZ
# CHECK-EMPTY:
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-6]]"
#       CHECK: # command output:
#  CHECK-NEXT: AA BB DD
# CHECK-EMPTY:
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-9]]"
#       CHECK: # command output:
#  CHECK-NEXT: AA CC DD
# CHECK-EMPTY:

# '{' and '}' can be used without escaping
#
# RUN: %if feature %{echo {}%}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#       CHECK: # command output:
#  CHECK-NEXT: {}
# CHECK-EMPTY:

# Spaces are not required
#
# RUN: echo %if feature%{"ok"%}%else%{"fail"%}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#       CHECK: # command output:
#  CHECK-NEXT: ok
# CHECK-EMPTY:

# Substitutions with braces are handled correctly
#
# RUN: echo %{sub} %if feature%{test-%{sub}%}%else%{"fail"%}
#  CHECK-NEXT: {{^.*"RUN}}: at line [[#@LINE-1]]"
#       CHECK: # command output:
#  CHECK-NEXT: ok test-ok
# CHECK-EMPTY:
