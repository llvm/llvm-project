//===-- llvm/CodeGen/ISDOpcodes.cpp - CodeGen opcodes -----------*- C++ -*-===//
//
// Modified by Sunscreen under the AGPLv3 license; see the README at the
// repository root for more information
//
//===----------------------------------------------------------------------===//
//
// This file declares codegen opcodes and related utilities.
//
//===----------------------------------------------------------------------===//


#include "llvm/CodeGen/ISDOpcodes.h"

using namespace llvm;

std::string ISD::getISDOpcodeName(unsigned Opcode) {
  switch (Opcode) {
    case ISD::DELETED_NODE: return "DELETED_NODE";
    case ISD::EntryToken: return "EntryToken";
    case ISD::TokenFactor: return "TokenFactor";
    case ISD::AssertSext: return "AssertSext";
    case ISD::AssertZext: return "AssertZext";
    case ISD::AssertAlign: return "AssertAlign";
    case ISD::BasicBlock: return "BasicBlock";
    case ISD::VALUETYPE: return "VALUETYPE";
    case ISD::CONDCODE: return "CONDCODE";
    case ISD::Register: return "Register";
    case ISD::RegisterMask: return "RegisterMask";
    case ISD::Constant: return "Constant";
    case ISD::ConstantFP: return "ConstantFP";
    case ISD::GlobalAddress: return "GlobalAddress";
    case ISD::GlobalTLSAddress: return "GlobalTLSAddress";
    case ISD::FrameIndex: return "FrameIndex";
    case ISD::JumpTable: return "JumpTable";
    case ISD::ConstantPool: return "ConstantPool";
    case ISD::ExternalSymbol: return "ExternalSymbol";
    case ISD::BlockAddress: return "BlockAddress";
    case ISD::GLOBAL_OFFSET_TABLE: return "GLOBAL_OFFSET_TABLE";
    case ISD::FRAMEADDR: return "FRAMEADDR";
    case ISD::RETURNADDR: return "RETURNADDR";
    case ISD::ADDROFRETURNADDR: return "ADDROFRETURNADDR";
    case ISD::SPONENTRY: return "SPONENTRY";
    case ISD::LOCAL_RECOVER: return "LOCAL_RECOVER";
    case ISD::READ_REGISTER: return "READ_REGISTER";
    case ISD::WRITE_REGISTER: return "WRITE_REGISTER";
    case ISD::FRAME_TO_ARGS_OFFSET: return "FRAME_TO_ARGS_OFFSET";
    case ISD::EH_DWARF_CFA: return "EH_DWARF_CFA";
    case ISD::EH_RETURN: return "EH_RETURN";
    case ISD::EH_SJLJ_SETJMP: return "EH_SJLJ_SETJMP";
    case ISD::EH_SJLJ_LONGJMP: return "EH_SJLJ_LONGJMP";
    case ISD::EH_SJLJ_SETUP_DISPATCH: return "EH_SJLJ_SETUP_DISPATCH";
    case ISD::TargetConstant: return "TargetConstant";
    case ISD::TargetConstantFP: return "TargetConstantFP";
    case ISD::TargetGlobalAddress: return "TargetGlobalAddress";
    case ISD::TargetGlobalTLSAddress: return "TargetGlobalTLSAddress";
    case ISD::TargetFrameIndex: return "TargetFrameIndex";
    case ISD::TargetJumpTable: return "TargetJumpTable";
    case ISD::TargetConstantPool: return "TargetConstantPool";
    case ISD::TargetExternalSymbol: return "TargetExternalSymbol";
    case ISD::TargetBlockAddress: return "TargetBlockAddress";
    case ISD::MCSymbol: return "MCSymbol";
    case ISD::TargetIndex: return "TargetIndex";
    case ISD::INTRINSIC_WO_CHAIN: return "INTRINSIC_WO_CHAIN";
    case ISD::INTRINSIC_W_CHAIN: return "INTRINSIC_W_CHAIN";
    case ISD::INTRINSIC_VOID: return "INTRINSIC_VOID";
    case ISD::CopyToReg: return "CopyToReg";
    case ISD::CopyFromReg: return "CopyFromReg";
    case ISD::UNDEF: return "UNDEF";
    case ISD::FREEZE: return "FREEZE";
    case ISD::EXTRACT_ELEMENT: return "EXTRACT_ELEMENT";
    case ISD::BUILD_PAIR: return "BUILD_PAIR";
    case ISD::MERGE_VALUES: return "MERGE_VALUES";
    case ISD::ADD: return "ADD";
    case ISD::SUB: return "SUB";
    case ISD::MUL: return "MUL";
    case ISD::SDIV: return "SDIV";
    case ISD::UDIV: return "UDIV";
    case ISD::SREM: return "SREM";
    case ISD::UREM: return "UREM";
    case ISD::SMUL_LOHI: return "SMUL_LOHI";
    case ISD::UMUL_LOHI: return "UMUL_LOHI";
    case ISD::SDIVREM: return "SDIVREM";
    case ISD::UDIVREM: return "UDIVREM";
    case ISD::CARRY_FALSE: return "CARRY_FALSE";
    case ISD::ADDC: return "ADDC";
    case ISD::SUBC: return "SUBC";
    case ISD::ADDE: return "ADDE";
    case ISD::SUBE: return "SUBE";
    case ISD::UADDO_CARRY: return "UADDO_CARRY";
    case ISD::USUBO_CARRY: return "USUBO_CARRY";
    case ISD::SADDO_CARRY: return "SADDO_CARRY";
    case ISD::SSUBO_CARRY: return "SSUBO_CARRY";
    case ISD::SADDO: return "SADDO";
    case ISD::UADDO: return "UADDO";
    case ISD::SSUBO: return "SSUBO";
    case ISD::USUBO: return "USUBO";
    case ISD::SMULO: return "SMULO";
    case ISD::UMULO: return "UMULO";
    case ISD::SADDSAT: return "SADDSAT";
    case ISD::UADDSAT: return "UADDSAT";
    case ISD::SSUBSAT: return "SSUBSAT";
    case ISD::USUBSAT: return "USUBSAT";
    case ISD::SSHLSAT: return "SSHLSAT";
    case ISD::USHLSAT: return "USHLSAT";
    case ISD::SMULFIX: return "SMULFIX";
    case ISD::UMULFIX: return "UMULFIX";
    case ISD::SMULFIXSAT: return "SMULFIXSAT";
    case ISD::UMULFIXSAT: return "UMULFIXSAT";
    case ISD::SDIVFIX: return "SDIVFIX";
    case ISD::UDIVFIX: return "UDIVFIX";
    case ISD::SDIVFIXSAT: return "SDIVFIXSAT";
    case ISD::UDIVFIXSAT: return "UDIVFIXSAT";
    case ISD::FADD: return "FADD";
    case ISD::FSUB: return "FSUB";
    case ISD::FMUL: return "FMUL";
    case ISD::FDIV: return "FDIV";
    case ISD::FREM: return "FREM";
    case ISD::STRICT_FADD: return "STRICT_FADD";
    case ISD::STRICT_FSUB: return "STRICT_FSUB";
    case ISD::STRICT_FMUL: return "STRICT_FMUL";
    case ISD::STRICT_FDIV: return "STRICT_FDIV";
    case ISD::STRICT_FREM: return "STRICT_FREM";
    case ISD::STRICT_FMA: return "STRICT_FMA";
    case ISD::STRICT_FSQRT: return "STRICT_FSQRT";
    case ISD::STRICT_FPOW: return "STRICT_FPOW";
    case ISD::STRICT_FPOWI: return "STRICT_FPOWI";
    case ISD::STRICT_FLDEXP: return "STRICT_FLDEXP";
    case ISD::STRICT_FSIN: return "STRICT_FSIN";
    case ISD::STRICT_FCOS: return "STRICT_FCOS";
    case ISD::STRICT_FEXP: return "STRICT_FEXP";
    case ISD::STRICT_FEXP2: return "STRICT_FEXP2";
    case ISD::STRICT_FLOG: return "STRICT_FLOG";
    case ISD::STRICT_FLOG10: return "STRICT_FLOG10";
    case ISD::STRICT_FLOG2: return "STRICT_FLOG2";
    case ISD::STRICT_FRINT: return "STRICT_FRINT";
    case ISD::STRICT_FNEARBYINT: return "STRICT_FNEARBYINT";
    case ISD::STRICT_FMAXNUM: return "STRICT_FMAXNUM";
    case ISD::STRICT_FMINNUM: return "STRICT_FMINNUM";
    case ISD::STRICT_FCEIL: return "STRICT_FCEIL";
    case ISD::STRICT_FFLOOR: return "STRICT_FFLOOR";
    case ISD::STRICT_FROUND: return "STRICT_FROUND";
    case ISD::STRICT_FROUNDEVEN: return "STRICT_FROUNDEVEN";
    case ISD::STRICT_FTRUNC: return "STRICT_FTRUNC";
    case ISD::STRICT_LROUND: return "STRICT_LROUND";
    case ISD::STRICT_LLROUND: return "STRICT_LLROUND";
    case ISD::STRICT_LRINT: return "STRICT_LRINT";
    case ISD::STRICT_LLRINT: return "STRICT_LLRINT";
    case ISD::STRICT_FMAXIMUM: return "STRICT_FMAXIMUM";
    case ISD::STRICT_FMINIMUM: return "STRICT_FMINIMUM";
    case ISD::STRICT_FP_TO_SINT: return "STRICT_FP_TO_SINT";
    case ISD::STRICT_FP_TO_UINT: return "STRICT_FP_TO_UINT";
    case ISD::STRICT_SINT_TO_FP: return "STRICT_SINT_TO_FP";
    case ISD::STRICT_UINT_TO_FP: return "STRICT_UINT_TO_FP";
    case ISD::STRICT_FP_ROUND: return "STRICT_FP_ROUND";
    case ISD::STRICT_FP_EXTEND: return "STRICT_FP_EXTEND";
    case ISD::STRICT_FSETCC: return "STRICT_FSETCC";
    case ISD::STRICT_FSETCCS: return "STRICT_FSETCCS";
    case ISD::FPTRUNC_ROUND: return "FPTRUNC_ROUND";
    case ISD::FMA: return "FMA";
    case ISD::FMAD: return "FMAD";
    case ISD::FCOPYSIGN: return "FCOPYSIGN";
    case ISD::FGETSIGN: return "FGETSIGN";
    case ISD::FCANONICALIZE: return "FCANONICALIZE";
    case ISD::IS_FPCLASS: return "IS_FPCLASS";
    case ISD::BUILD_VECTOR: return "BUILD_VECTOR";
    case ISD::INSERT_VECTOR_ELT: return "INSERT_VECTOR_ELT";
    case ISD::EXTRACT_VECTOR_ELT: return "EXTRACT_VECTOR_ELT";
    case ISD::CONCAT_VECTORS: return "CONCAT_VECTORS";
    case ISD::INSERT_SUBVECTOR: return "INSERT_SUBVECTOR";
    case ISD::EXTRACT_SUBVECTOR: return "EXTRACT_SUBVECTOR";
    case ISD::VECTOR_DEINTERLEAVE: return "VECTOR_DEINTERLEAVE";
    case ISD::VECTOR_INTERLEAVE: return "VECTOR_INTERLEAVE";
    case ISD::VECTOR_REVERSE: return "VECTOR_REVERSE";
    case ISD::VECTOR_SHUFFLE: return "VECTOR_SHUFFLE";
    case ISD::VECTOR_SPLICE: return "VECTOR_SPLICE";
    case ISD::SCALAR_TO_VECTOR: return "SCALAR_TO_VECTOR";
    case ISD::SPLAT_VECTOR: return "SPLAT_VECTOR";
    case ISD::SPLAT_VECTOR_PARTS: return "SPLAT_VECTOR_PARTS";
    case ISD::STEP_VECTOR: return "STEP_VECTOR";
    case ISD::MULHU: return "MULHU";
    case ISD::MULHS: return "MULHS";
    case ISD::AVGFLOORS: return "AVGFLOORS";
    case ISD::AVGFLOORU: return "AVGFLOORU";
    case ISD::AVGCEILS: return "AVGCEILS";
    case ISD::AVGCEILU: return "AVGCEILU";
    case ISD::ABDS: return "ABDS";
    case ISD::ABDU: return "ABDU";
    case ISD::SMIN: return "SMIN";
    case ISD::SMAX: return "SMAX";
    case ISD::UMIN: return "UMIN";
    case ISD::UMAX: return "UMAX";
    case ISD::AND: return "AND";
    case ISD::OR: return "OR";
    case ISD::XOR: return "XOR";
    case ISD::ABS: return "ABS";
    case ISD::SHL: return "SHL";
    case ISD::SRA: return "SRA";
    case ISD::SRL: return "SRL";
    case ISD::ROTL: return "ROTL";
    case ISD::ROTR: return "ROTR";
    case ISD::FSHL: return "FSHL";
    case ISD::FSHR: return "FSHR";
    case ISD::BSWAP: return "BSWAP";
    case ISD::CTTZ: return "CTTZ";
    case ISD::CTLZ: return "CTLZ";
    case ISD::CTPOP: return "CTPOP";
    case ISD::BITREVERSE: return "BITREVERSE";
    case ISD::PARITY: return "PARITY";
    case ISD::CTTZ_ZERO_UNDEF: return "CTTZ_ZERO_UNDEF";
    case ISD::CTLZ_ZERO_UNDEF: return "CTLZ_ZERO_UNDEF";
    case ISD::SELECT: return "SELECT";
    case ISD::VSELECT: return "VSELECT";
    case ISD::SELECT_CC: return "SELECT_CC";
    case ISD::SETCC: return "SETCC";
    case ISD::SETCCCARRY: return "SETCCCARRY";
    case ISD::SHL_PARTS: return "SHL_PARTS";
    case ISD::SRA_PARTS: return "SRA_PARTS";
    case ISD::SRL_PARTS: return "SRL_PARTS";
    case ISD::SIGN_EXTEND: return "SIGN_EXTEND";
    case ISD::ZERO_EXTEND: return "ZERO_EXTEND";
    case ISD::ANY_EXTEND: return "ANY_EXTEND";
    case ISD::TRUNCATE: return "TRUNCATE";
    case ISD::SINT_TO_FP: return "SINT_TO_FP";
    case ISD::UINT_TO_FP: return "UINT_TO_FP";
    case ISD::SIGN_EXTEND_INREG: return "SIGN_EXTEND_INREG";
    case ISD::ANY_EXTEND_VECTOR_INREG: return "ANY_EXTEND_VECTOR_INREG";
    case ISD::SIGN_EXTEND_VECTOR_INREG: return "SIGN_EXTEND_VECTOR_INREG";
    case ISD::ZERO_EXTEND_VECTOR_INREG: return "ZERO_EXTEND_VECTOR_INREG";
    case ISD::FP_TO_SINT: return "FP_TO_SINT";
    case ISD::FP_TO_UINT: return "FP_TO_UINT";
    case ISD::FP_TO_SINT_SAT: return "FP_TO_SINT_SAT";
    case ISD::FP_TO_UINT_SAT: return "FP_TO_UINT_SAT";
    case ISD::FP_ROUND: return "FP_ROUND";
    case ISD::GET_ROUNDING: return "GET_ROUNDING";
    case ISD::SET_ROUNDING: return "SET_ROUNDING";
    case ISD::FP_EXTEND: return "FP_EXTEND";
    case ISD::BITCAST: return "BITCAST";
    case ISD::ADDRSPACECAST: return "ADDRSPACECAST";
    case ISD::FP16_TO_FP: return "FP16_TO_FP";
    case ISD::FP_TO_FP16: return "FP_TO_FP16";
    case ISD::STRICT_FP16_TO_FP: return "STRICT_FP16_TO_FP";
    case ISD::STRICT_FP_TO_FP16: return "STRICT_FP_TO_FP16";
    case ISD::BF16_TO_FP: return "BF16_TO_FP";
    case ISD::FP_TO_BF16: return "FP_TO_BF16";
    case ISD::FNEG: return "FNEG";
    case ISD::FABS: return "FABS";
    case ISD::FSQRT: return "FSQRT";
    case ISD::FCBRT: return "FCBRT";
    case ISD::FSIN: return "FSIN";
    case ISD::FCOS: return "FCOS";
    case ISD::FPOW: return "FPOW";
    case ISD::FPOWI: return "FPOWI";
    case ISD::FLDEXP: return "FLDEXP";
    case ISD::FFREXP: return "FFREXP";
    case ISD::FLOG: return "FLOG";
    case ISD::FLOG2: return "FLOG2";
    case ISD::FLOG10: return "FLOG10";
    case ISD::FEXP: return "FEXP";
    case ISD::FEXP2: return "FEXP2";
    case ISD::FEXP10: return "FEXP10";
    case ISD::FCEIL: return "FCEIL";
    case ISD::FTRUNC: return "FTRUNC";
    case ISD::FRINT: return "FRINT";
    case ISD::FNEARBYINT: return "FNEARBYINT";
    case ISD::FROUND: return "FROUND";
    case ISD::FROUNDEVEN: return "FROUNDEVEN";
    case ISD::FFLOOR: return "FFLOOR";
    case ISD::LROUND: return "LROUND";
    case ISD::LLROUND: return "LLROUND";
    case ISD::LRINT: return "LRINT";
    case ISD::LLRINT: return "LLRINT";
    case ISD::FMINNUM: return "FMINNUM";
    case ISD::FMAXNUM: return "FMAXNUM";
    case ISD::FMINNUM_IEEE: return "FMINNUM_IEEE";
    case ISD::FMAXNUM_IEEE: return "FMAXNUM_IEEE";
    case ISD::FMINIMUM: return "FMINIMUM";
    case ISD::FMAXIMUM: return "FMAXIMUM";
    case ISD::FSINCOS: return "FSINCOS";
    case ISD::GET_FPENV: return "GET_FPENV";
    case ISD::SET_FPENV: return "SET_FPENV";
    case ISD::RESET_FPENV: return "RESET_FPENV";
    case ISD::GET_FPENV_MEM: return "GET_FPENV_MEM";
    case ISD::SET_FPENV_MEM: return "SET_FPENV_MEM";
    case ISD::GET_FPMODE: return "GET_FPMODE";
    case ISD::SET_FPMODE: return "SET_FPMODE";
    case ISD::RESET_FPMODE: return "RESET_FPMODE";
    case ISD::LOAD: return "LOAD";
    case ISD::STORE: return "STORE";
    case ISD::DYNAMIC_STACKALLOC: return "DYNAMIC_STACKALLOC";
    case ISD::BR: return "BR";
    case ISD::BRIND: return "BRIND";
    case ISD::BR_JT: return "BR_JT";
    case ISD::JUMP_TABLE_DEBUG_INFO: return "JUMP_TABLE_DEBUG_INFO";
    case ISD::BRCOND: return "BRCOND";
    case ISD::BR_CC: return "BR_CC";
    case ISD::INLINEASM: return "INLINEASM";
    case ISD::INLINEASM_BR: return "INLINEASM_BR";
    case ISD::EH_LABEL: return "EH_LABEL";
    case ISD::ANNOTATION_LABEL: return "ANNOTATION_LABEL";
    case ISD::CATCHRET: return "CATCHRET";
    case ISD::CLEANUPRET: return "CLEANUPRET";
    case ISD::STACKSAVE: return "STACKSAVE";
    case ISD::STACKRESTORE: return "STACKRESTORE";
    case ISD::CALLSEQ_START: return "CALLSEQ_START" ;
    case ISD::CALLSEQ_END: return "CALLSEQ_END"   ;
    case ISD::VAARG: return "VAARG";
    case ISD::VACOPY: return "VACOPY";
    case ISD::VAEND: return "VAEND";
    case ISD::VASTART: return "VASTART";
    case ISD::PREALLOCATED_SETUP: return "PREALLOCATED_SETUP";
    case ISD::PREALLOCATED_ARG: return "PREALLOCATED_ARG";
    case ISD::SRCVALUE: return "SRCVALUE";
    case ISD::MDNODE_SDNODE: return "MDNODE_SDNODE";
    case ISD::PCMARKER: return "PCMARKER";
    case ISD::READCYCLECOUNTER: return "READCYCLECOUNTER";
    case ISD::HANDLENODE: return "HANDLENODE";
    case ISD::INIT_TRAMPOLINE: return "INIT_TRAMPOLINE";
    case ISD::ADJUST_TRAMPOLINE: return "ADJUST_TRAMPOLINE";
    case ISD::TRAP: return "TRAP";
    case ISD::DEBUGTRAP: return "DEBUGTRAP";
    case ISD::UBSANTRAP: return "UBSANTRAP";
    case ISD::PREFETCH: return "PREFETCH";
    case ISD::ARITH_FENCE: return "ARITH_FENCE";
    case ISD::MEMBARRIER: return "MEMBARRIER";
    case ISD::ATOMIC_FENCE: return "ATOMIC_FENCE";
    case ISD::ATOMIC_LOAD: return "ATOMIC_LOAD";
    case ISD::ATOMIC_STORE: return "ATOMIC_STORE";
    case ISD::ATOMIC_CMP_SWAP: return "ATOMIC_CMP_SWAP";
    case ISD::ATOMIC_CMP_SWAP_WITH_SUCCESS: return "ATOMIC_CMP_SWAP_WITH_SUCCESS";
    case ISD::ATOMIC_SWAP: return "ATOMIC_SWAP";
    case ISD::ATOMIC_LOAD_ADD: return "ATOMIC_LOAD_ADD";
    case ISD::ATOMIC_LOAD_SUB: return "ATOMIC_LOAD_SUB";
    case ISD::ATOMIC_LOAD_AND: return "ATOMIC_LOAD_AND";
    case ISD::ATOMIC_LOAD_CLR: return "ATOMIC_LOAD_CLR";
    case ISD::ATOMIC_LOAD_OR: return "ATOMIC_LOAD_OR";
    case ISD::ATOMIC_LOAD_XOR: return "ATOMIC_LOAD_XOR";
    case ISD::ATOMIC_LOAD_NAND: return "ATOMIC_LOAD_NAND";
    case ISD::ATOMIC_LOAD_MIN: return "ATOMIC_LOAD_MIN";
    case ISD::ATOMIC_LOAD_MAX: return "ATOMIC_LOAD_MAX";
    case ISD::ATOMIC_LOAD_UMIN: return "ATOMIC_LOAD_UMIN";
    case ISD::ATOMIC_LOAD_UMAX: return "ATOMIC_LOAD_UMAX";
    case ISD::ATOMIC_LOAD_FADD: return "ATOMIC_LOAD_FADD";
    case ISD::ATOMIC_LOAD_FSUB: return "ATOMIC_LOAD_FSUB";
    case ISD::ATOMIC_LOAD_FMAX: return "ATOMIC_LOAD_FMAX";
    case ISD::ATOMIC_LOAD_FMIN: return "ATOMIC_LOAD_FMIN";
    case ISD::ATOMIC_LOAD_UINC_WRAP: return "ATOMIC_LOAD_UINC_WRAP";
    case ISD::ATOMIC_LOAD_UDEC_WRAP: return "ATOMIC_LOAD_UDEC_WRAP";
    case ISD::MLOAD: return "MLOAD";
    case ISD::MSTORE: return "MSTORE";
    case ISD::MGATHER: return "MGATHER";
    case ISD::MSCATTER: return "MSCATTER";
    case ISD::LIFETIME_START: return "LIFETIME_START";
    case ISD::LIFETIME_END: return "LIFETIME_END";
    case ISD::GC_TRANSITION_START: return "GC_TRANSITION_START";
    case ISD::GC_TRANSITION_END: return "GC_TRANSITION_END";
    case ISD::GET_DYNAMIC_AREA_OFFSET: return "GET_DYNAMIC_AREA_OFFSET";
    case ISD::PSEUDO_PROBE: return "PSEUDO_PROBE";
    case ISD::VSCALE: return "VSCALE";
    case ISD::VECREDUCE_SEQ_FADD: return "VECREDUCE_SEQ_FADD";
    case ISD::VECREDUCE_SEQ_FMUL: return "VECREDUCE_SEQ_FMUL";
    case ISD::VECREDUCE_FADD: return "VECREDUCE_FADD";
    case ISD::VECREDUCE_FMUL: return "VECREDUCE_FMUL";
    case ISD::VECREDUCE_FMAX: return "VECREDUCE_FMAX";
    case ISD::VECREDUCE_FMIN: return "VECREDUCE_FMIN";
    case ISD::VECREDUCE_FMAXIMUM: return "VECREDUCE_FMAXIMUM";
    case ISD::VECREDUCE_FMINIMUM: return "VECREDUCE_FMINIMUM";
    case ISD::VECREDUCE_ADD: return "VECREDUCE_ADD";
    case ISD::VECREDUCE_MUL: return "VECREDUCE_MUL";
    case ISD::VECREDUCE_AND: return "VECREDUCE_AND";
    case ISD::VECREDUCE_OR: return "VECREDUCE_OR";
    case ISD::VECREDUCE_XOR: return "VECREDUCE_XOR";
    case ISD::VECREDUCE_SMAX: return "VECREDUCE_SMAX";
    case ISD::VECREDUCE_SMIN: return "VECREDUCE_SMIN";
    case ISD::VECREDUCE_UMAX: return "VECREDUCE_UMAX";
    case ISD::VECREDUCE_UMIN: return "VECREDUCE_UMIN";
    case ISD::STACKMAP: return "STACKMAP";
    case ISD::PATCHPOINT: return "PATCHPOINT";
    case ISD::BUILTIN_OP_END: return "BUILTIN_OP_END";
    default: return "UNKNOWN";
  }

}
