//===- ParasolInstPrinter.h - Convert Parasol MCInst to assembly syntax ---===//
//
// Modified by Sunscreen under the AGPLv3 license; see the README at the
// repository root for more information
//
//===----------------------------------------------------------------------===//
//
// This class prints a Parasol MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_PARASOL_INSTPRINTER_PARASOLINSTPRINTER_H
#define LLVM_LIB_TARGET_PARASOL_INSTPRINTER_PARASOLINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"
#include <utility>

namespace llvm {

class ParasolInstPrinter : public MCInstPrinter {
public:
  ParasolInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                     const MCRegisterInfo &MRI);

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  static const char *getRegisterName(MCRegister RegNo);

  void printRegName(raw_ostream &OS, MCRegister RegNo) const override;
  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;

  bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &O);

  void printCustomAliasOperand(const MCInst *MI, uint64_t Address,
                               unsigned OpIdx, unsigned PrintMethodIdx,
                               raw_ostream &O);

  // Autogenerated by tblgen I think
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;

private:
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
};
} // end namespace llvm

#endif // end LLVM_LIB_TARGET_PARASOL_INSTPRINTER_PARASOLINSTPRINTER_H
