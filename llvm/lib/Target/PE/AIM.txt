第一阶段：
寄存器   ABI 名字      描述                                      Saver
x0      zero        0值寄存器，硬编码为0,写入数据忽略，读取永远为0   -
x1      ra          返回地址                                   Caller
x2      sp          栈指针                                    Callee
x3      gp          全局指针                                   -
x4      tp          线程指针                                   -
x5      t0          临时寄存器或者备用的链接寄存器               Caller
x6-x7   t1-t2       临时寄存器                                 Caller
x8      s0/fp       需要保存的寄存器或者帧指针寄存器             Callee
x9      s1          需要保存的寄存器，保存原进程中的关键数据，避免在函数调用过程中被破坏 Callee
x10-x11 a0-a1       函数参数/返回值                            Caller
x12-x17 a2-a7       函数参数                                  Caller
x18-x27 s2-s11      需要保存的寄存器                           Callee
x28-x31 t3-t6       临时寄存器                                 Caller

测试程序test.ll
define i32 @test() {
    ret i32 1
}

RISCV生成汇编程序test.s
    .text
    .attribute  4, 16
    .attribute  5, "rv32i2p0"
    .file   "test.ll"
    .globl  test                            # -- Begin function test
    .p2align    2
    .type   test,@function
test:                                   # @test
    .cfi_startproc
# %bb.0:
    addi    a0, zero, 1
    ret
.Lfunc_end0:
    .size   test, .Lfunc_end0-test
    .cfi_endproc
                                        # -- End function
    .section    ".note.GNU-stack","",@progbits