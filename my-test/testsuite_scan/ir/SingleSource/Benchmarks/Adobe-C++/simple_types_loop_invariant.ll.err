In file included from /home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/simple_types_loop_invariant.cpp:70:
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/benchmark_shared_tests.h:15:10: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
   15 |         return (abs(diff) < 1.0e-6);
      |                 ^
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/benchmark_shared_tests.h:73:7: note: in instantiation of function template specialization 'tolerance_equal<unsigned char>' requested here
   73 |         if (!tolerance_equal<T>(result,temp))
      |              ^
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/benchmark_shared_tests.h:685:5: note: in instantiation of function template specialization 'check_shifted_variable_sum<unsigned char, custom_add_variable<unsigned char>>' requested here
  685 |     check_shifted_variable_sum<T, Shifter>(result, v1);
      |     ^
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/simple_types_loop_invariant.cpp:151:2: note: in instantiation of function template specialization 'test_variable1<unsigned char, custom_add_variable<unsigned char>>' requested here
  151 |         test_variable1< uint8_t, custom_add_variable<uint8_t> > (data8unsigned, SIZE, var1uint8_1, "uint8_t variable add");
      |         ^
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/benchmark_shared_tests.h:15:10: note: remove the call to 'abs' since unsigned values cannot be negative
   15 |         return (abs(diff) < 1.0e-6);
      |                 ^~~
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/benchmark_shared_tests.h:15:10: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
   15 |         return (abs(diff) < 1.0e-6);
      |                 ^
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/benchmark_shared_tests.h:73:7: note: in instantiation of function template specialization 'tolerance_equal<unsigned short>' requested here
   73 |         if (!tolerance_equal<T>(result,temp))
      |              ^
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/benchmark_shared_tests.h:685:5: note: in instantiation of function template specialization 'check_shifted_variable_sum<unsigned short, custom_add_variable<unsigned short>>' requested here
  685 |     check_shifted_variable_sum<T, Shifter>(result, v1);
      |     ^
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/simple_types_loop_invariant.cpp:223:2: note: in instantiation of function template specialization 'test_variable1<unsigned short, custom_add_variable<unsigned short>>' requested here
  223 |         test_variable1< uint16_t, custom_add_variable<uint16_t> > (data16unsigned, SIZE, var1uint16_1, "uint16_t variable add");
      |         ^
/home/youzhewei.linux/work/llvm-project/llvm-test-suite/SingleSource/Benchmarks/Adobe-C++/benchmark_shared_tests.h:15:10: note: remove the call to 'abs' since unsigned values cannot be negative
   15 |         return (abs(diff) < 1.0e-6);
      |                 ^~~
2 warnings generated.
