// RUN: cir-opt %s | FileCheck %s

!s32i = !cir.int<s, 32>

module {

cir.func @f1()

cir.func @f2() {
  cir.call @f1() : () -> ()
  cir.return
}

// CHECK:      cir.func @f2() {
// CHECK-NEXT:   cir.call @f1() : () -> ()
// CHECK-NEXT:   cir.return
// CHECK-NEXT: }

cir.func @f3() -> !s32i

cir.func @f4() -> !s32i {
  %0 = cir.call @f3() : () -> !s32i
  cir.return %0 : !s32i
}

// CHECK:      cir.func @f4() -> !s32i {
// CHECK-NEXT:   %[[#x:]] = cir.call @f3() : () -> !s32i
// CHECK-NEXT:   cir.return %[[#x]] : !s32i
// CHECK-NEXT: }

}
