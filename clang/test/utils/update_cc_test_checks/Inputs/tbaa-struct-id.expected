// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py
// RUN: %clang_cc1 -flegacy-pass-manager -triple arm64-apple-iphoneos -Oz -mllvm -enable-constraint-elimination=true -fpass-by-value-is-noalias -emit-llvm -o - %s | FileCheck %s

typedef struct {
  void *a;
  void *b;
  void *c;
  void *d;
  void *e;
} Foo;

static void bar(Foo f) {
  if (f.b)
    __builtin_trap();
}

static int baz(Foo f) {
  bar(f);
  return *(int *)f.a;
}

// CHECK-LABEL: @barbar(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[BYVAL_TEMP_SROA_3_0__SROA_IDX4:%.*]] = getelementptr inbounds [[STRUCT_FOO:%.*]], %struct.Foo* [[ARG:%.*]], i64 0, i32 1
// CHECK-NEXT:    [[BYVAL_TEMP_SROA_3_0_COPYLOAD:%.*]] = load i8*, i8** [[BYVAL_TEMP_SROA_3_0__SROA_IDX4]], align 8, !tbaa.struct [[TBAAST6:![0-9]+]]
// CHECK-NEXT:    [[TOBOOL_NOT_I_I:%.*]] = icmp eq i8* [[BYVAL_TEMP_SROA_3_0_COPYLOAD]], null
// CHECK-NEXT:    br i1 [[TOBOOL_NOT_I_I]], label [[BAZ_EXIT:%.*]], label [[IF_THEN_I_I:%.*]]
// CHECK:       if.then.i.i:
// CHECK-NEXT:    tail call void @llvm.trap() #[[ATTR2:[0-9]+]], !noalias !11
// CHECK-NEXT:    unreachable
// CHECK:       baz.exit:
// CHECK-NEXT:    ret i32 undef
//
int barbar(Foo arg) {
  int a, b;
  a = baz(arg);
  return a - b;
}
