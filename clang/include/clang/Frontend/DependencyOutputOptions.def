//===--- DependencyOutputOptions.def -------------------------------C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file contains the DependencyOutput options, to use this file one needs
// to define the TYPED_DEPENDENCY_OUTPUTOPT and/or the DEPENDECY_OUTPUTOPT macro
// to get more information about bitfields.
//
//===----------------------------------------------------------------------===//

#ifndef TYPED_DEPENDENCY_OUTPUTOPT
#define TYPED_DEPENDENCY_OUTPUTOPT(Type, Name, Description)
#endif

#ifndef DEPENDENCY_OUTPUTOPT
#define DEPENDENCY_OUTPUTOPT(Name, Bits, Description)                          \
  TYPED_DEPENDENCY_OUTPUTOPT(unsigned, Name, Description)
#endif

DEPENDENCY_OUTPUTOPT(IncludeSystemHeaders, 1, "Include system header dependencies.")
DEPENDENCY_OUTPUTOPT(ShowHeaderIncludes, 1, "Show header inclusions (-H).")
DEPENDENCY_OUTPUTOPT(UsePhonyTargets, 1, "Include phony targets for each dependency, which can "
                     "avoid some 'make' problems.")
DEPENDENCY_OUTPUTOPT(AddMissingHeaderDeps, 1, "Add missing headers to dependency list.")
DEPENDENCY_OUTPUTOPT(IncludeModuleFiles, 1, "Include module file dependencies.")

TYPED_DEPENDENCY_OUTPUTOPT(ShowIncludesDestination, ShowIncludesDest, "Destination of cl.exe style /showIncludes info.")

TYPED_DEPENDENCY_OUTPUTOPT(DependencyOutputFormat, OutputFormat, "The format for the dependency file")

TYPED_DEPENDENCY_OUTPUTOPT(std::string, OutputFile, "The file to write dependency output to.")

TYPED_DEPENDENCY_OUTPUTOPT(std::string, HeaderIncludeOutputFile, "The file to write header include output to. This is orthogonal to ShowHeaderIncludes (-H) and will include headers mentioned in the predefines buffer. If the output file is \"-\", output will be sent to stderr.")

TYPED_DEPENDENCY_OUTPUTOPT(std::vector<std::string>, Targets, "A list of names to use as the targets in the dependency file; this list must contain at least one entry.")

TYPED_DEPENDENCY_OUTPUTOPT(std::vector<std::string>, ExtraDeps, "A list of filenames to be used as extra dependencies for every target.")

TYPED_DEPENDENCY_OUTPUTOPT(std::string, ShowIncludesPretendHeader, "In /showIncludes mode, pretend the main TU is a header with this name.")

TYPED_DEPENDENCY_OUTPUTOPT(std::string, DOTOutputFile, "The file to write GraphViz-formatted header dependencies to.")

TYPED_DEPENDENCY_OUTPUTOPT(std::string, ModuleDependencyOutputDir, "The directory to copy module dependencies to when collecting them.")

#undef TYPED_DEPENDENCY_OUTPUTOPT
#undef DEPENDENCY_OUTPUTOPT