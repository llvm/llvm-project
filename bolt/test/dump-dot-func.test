# Test the --dump-dot-func option with multiple functions

RUN: %clang %p/Inputs/multi-func.c -o %t.exe -Wl,-q

# Test 1: --dump-dot-func with specific function name
RUN: llvm-bolt %t.exe -o %t.bolt1 --dump-dot-func=add --print-only=add -v=1 2>&1 | FileCheck %s --check-prefix=ADD
RUN: ls add-*.dot | wc -l | FileCheck %s --check-prefix=COUNT-ONE

# Test 2: --dump-dot-func with regex pattern (main.*)
RUN: llvm-bolt %t.exe -o %t.bolt2 --dump-dot-func="main.*" --print-only=main,main_helper,main_secondary -v=1 2>&1 | FileCheck %s --check-prefix=MAIN-REGEX

# Test 3: --dump-dot-func with multiple specific functions
RUN: llvm-bolt %t.exe -o %t.bolt3 --dump-dot-func=add,multiply --print-only=add,multiply -v=1 2>&1 | FileCheck %s --check-prefix=MULTI

# Test 4: No option specified should create no dot files
RUN: llvm-bolt %t.exe -o %t.bolt4 --print-only=main 2>&1 | FileCheck %s --check-prefix=NONE

# Test 5: --dump-dot-func with non-existent function
RUN: llvm-bolt %t.exe -o %t.bolt5 --dump-dot-func=nonexistent --print-only=main -v=1 2>&1 | FileCheck %s --check-prefix=NONEXISTENT

# Test 6: Backward compatibility - --dump-dot-all should still work
RUN: llvm-bolt %t.exe -o %t.bolt6 --dump-dot-all --print-only=main -v=1 2>&1 | FileCheck %s --check-prefix=ALL

# Check that specific functions are dumped
ADD: BOLT-INFO: dumping CFG to add-00_build-cfg.dot

MAIN-REGEX-DAG: BOLT-INFO: dumping CFG to main-00_build-cfg.dot
MAIN-REGEX-DAG: BOLT-INFO: dumping CFG to main_helper-00_build-cfg.dot
MAIN-REGEX-DAG: BOLT-INFO: dumping CFG to main_secondary-00_build-cfg.dot

MULTI-DAG: BOLT-INFO: dumping CFG to add-00_build-cfg.dot
MULTI-DAG: BOLT-INFO: dumping CFG to multiply-00_build-cfg.dot

# Should be no dumping messages when no option is specified
NONE-NOT: BOLT-INFO: dumping CFG

# Should be no dumping messages for non-existent function
NONEXISTENT-NOT: BOLT-INFO: dumping CFG

ALL: BOLT-INFO: dumping CFG to main-00_build-cfg.dot

# Count checks
COUNT-ONE: 1