# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.26)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS LLVMDemangle LLVMSupport LLVMTableGen LLVMTableGenBasic LLVMTableGenCommon llvm-tblgen LLVMCore LLVMFuzzerCLI LLVMFuzzMutate LLVMFileCheck LLVMInterfaceStub LLVMIRPrinter LLVMIRReader LLVMCGData LLVMCodeGen LLVMSelectionDAG LLVMAsmPrinter LLVMMIRParser LLVMGlobalISel LLVMCodeGenTypes LLVMBinaryFormat LLVMBitReader LLVMBitWriter LLVMBitstreamReader LLVMDWARFLinker LLVMDWARFLinkerClassic LLVMDWARFLinkerParallel LLVMExtensions LLVMFrontendAtomic LLVMFrontendDriver LLVMFrontendHLSL LLVMFrontendOpenACC LLVMFrontendOpenMP LLVMFrontendOffloading LLVMTransformUtils LLVMInstrumentation LLVMAggressiveInstCombine LLVMInstCombine LLVMScalarOpts LLVMipo LLVMVectorize LLVMObjCARCOpts LLVMCoroutines LLVMCFGuard LLVMHipStdPar LLVMLinker LLVMAnalysis LLVMLTO LLVMMC LLVMMCParser LLVMMCDisassembler LLVMMCA LLVMObjCopy LLVMObject LLVMObjectYAML LLVMOption LLVMRemarks LLVMDebuginfod LLVMDebugInfoDWARF LLVMDebugInfoGSYM LLVMDebugInfoLogicalView LLVMDebugInfoMSF LLVMDebugInfoCodeView LLVMDebugInfoPDB LLVMSymbolize LLVMDebugInfoBTF LLVMDWP LLVMExecutionEngine LLVMInterpreter LLVMJITLink LLVMMCJIT LLVMOrcJIT LLVMOrcDebugging LLVMOrcShared LLVMOrcTargetProcess LLVMRuntimeDyld LLVMTarget LLVMAArch64CodeGen LLVMAArch64AsmParser LLVMAArch64Disassembler LLVMAArch64Desc LLVMAArch64Info LLVMAArch64Utils LLVMAMDGPUCodeGen LLVMAMDGPUAsmParser LLVMAMDGPUDisassembler LLVMAMDGPUTargetMCA LLVMAMDGPUDesc LLVMAMDGPUInfo LLVMAMDGPUUtils LLVMARMCodeGen LLVMARMAsmParser LLVMARMDisassembler LLVMARMDesc LLVMARMInfo LLVMARMUtils LLVMAVRCodeGen LLVMAVRAsmParser LLVMAVRDisassembler LLVMAVRDesc LLVMAVRInfo LLVMBPFCodeGen LLVMBPFAsmParser LLVMBPFDisassembler LLVMBPFDesc LLVMBPFInfo LLVMHexagonCodeGen LLVMHexagonAsmParser LLVMHexagonDisassembler LLVMHexagonDesc LLVMHexagonInfo LLVMLanaiCodeGen LLVMLanaiAsmParser LLVMLanaiDisassembler LLVMLanaiDesc LLVMLanaiInfo LLVMLoongArchCodeGen LLVMLoongArchAsmParser LLVMLoongArchDisassembler LLVMLoongArchDesc LLVMLoongArchInfo LLVMMipsCodeGen LLVMMipsAsmParser LLVMMipsDisassembler LLVMMipsDesc LLVMMipsInfo LLVMMSP430CodeGen LLVMMSP430Desc LLVMMSP430Info LLVMMSP430AsmParser LLVMMSP430Disassembler LLVMNVPTXCodeGen LLVMNVPTXDesc LLVMNVPTXInfo LLVMPowerPCCodeGen LLVMPowerPCAsmParser LLVMPowerPCDisassembler LLVMPowerPCDesc LLVMPowerPCInfo LLVMRISCVCodeGen LLVMRISCVAsmParser LLVMRISCVDisassembler LLVMRISCVDesc LLVMRISCVTargetMCA LLVMRISCVInfo LLVMSparcCodeGen LLVMSparcAsmParser LLVMSparcDisassembler LLVMSparcDesc LLVMSparcInfo LLVMSPIRVCodeGen LLVMSPIRVDesc LLVMSPIRVInfo LLVMSPIRVAnalysis LLVMSystemZCodeGen LLVMSystemZAsmParser LLVMSystemZDisassembler LLVMSystemZDesc LLVMSystemZInfo LLVMVECodeGen LLVMVEAsmParser LLVMVEDisassembler LLVMVEInfo LLVMVEDesc LLVMWebAssemblyCodeGen LLVMWebAssemblyAsmParser LLVMWebAssemblyDisassembler LLVMWebAssemblyDesc LLVMWebAssemblyInfo LLVMWebAssemblyUtils LLVMX86CodeGen LLVMX86AsmParser LLVMX86Disassembler LLVMX86TargetMCA LLVMX86Desc LLVMX86Info LLVMXCoreCodeGen LLVMXCoreDisassembler LLVMXCoreDesc LLVMXCoreInfo LLVMSandboxIR LLVMAsmParser LLVMLineEditor LLVMProfileData LLVMCoverage LLVMPasses LLVMTargetParser LLVMTextAPI LLVMTextAPIBinaryReader LLVMTelemetry LLVMDlltoolDriver LLVMLibDriver LLVMXRay LLVMWindowsDriver LLVMWindowsManifest omp LTO llvm-ar llvm-config llvm-ctxprof-util llvm-lto llvm-profdata bugpoint dsymutil llc lli llvm-as llvm-bcanalyzer llvm-c-test llvm-cat llvm-cfi-verify LLVMCFIVerify llvm-cgdata llvm-cov llvm-cvtres llvm-cxxdump llvm-cxxfilt llvm-cxxmap llvm-debuginfo-analyzer llvm-debuginfod llvm-debuginfod-find llvm-diff LLVMDiff llvm-dis llvm-dwarfdump llvm-dwarfutil llvm-dwp LLVMExegesisX86 LLVMExegesisAArch64 LLVMExegesisPowerPC LLVMExegesisMips LLVMExegesisRISCV LLVMExegesis llvm-exegesis llvm-extract llvm-gsymutil llvm-ifs llvm-jitlink llvm-libtool-darwin llvm-link llvm-lipo llvm-lto2 llvm-mc llvm-mca llvm-ml llvm-modextract llvm-mt llvm-nm llvm-objcopy llvm-objdump llvm-opt-report llvm-pdbutil llvm-profgen llvm-rc llvm-readobj llvm-readtapi llvm-reduce llvm-remarkutil llvm-rtdyld llvm-sim llvm-size llvm-split llvm-stress llvm-strings llvm-symbolizer llvm-tli-checker llvm-undname llvm-xray LLVMOptDriver opt reduce-chunk-list Remarks sancov sanstats verify-uselistorder)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target LLVMDemangle
add_library(LLVMDemangle SHARED IMPORTED)

# Create imported target LLVMSupport
add_library(LLVMSupport SHARED IMPORTED)

# Create imported target LLVMTableGen
add_library(LLVMTableGen SHARED IMPORTED)

# Create imported target LLVMTableGenBasic
add_library(LLVMTableGenBasic SHARED IMPORTED)

# Create imported target LLVMTableGenCommon
add_library(LLVMTableGenCommon SHARED IMPORTED)

# Create imported target llvm-tblgen
add_executable(llvm-tblgen IMPORTED)

# Create imported target LLVMCore
add_library(LLVMCore SHARED IMPORTED)

# Create imported target LLVMFuzzerCLI
add_library(LLVMFuzzerCLI SHARED IMPORTED)

# Create imported target LLVMFuzzMutate
add_library(LLVMFuzzMutate SHARED IMPORTED)

# Create imported target LLVMFileCheck
add_library(LLVMFileCheck SHARED IMPORTED)

set_target_properties(LLVMFileCheck PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMSupport"
)

# Create imported target LLVMInterfaceStub
add_library(LLVMInterfaceStub SHARED IMPORTED)

# Create imported target LLVMIRPrinter
add_library(LLVMIRPrinter SHARED IMPORTED)

# Create imported target LLVMIRReader
add_library(LLVMIRReader SHARED IMPORTED)

# Create imported target LLVMCGData
add_library(LLVMCGData SHARED IMPORTED)

# Create imported target LLVMCodeGen
add_library(LLVMCodeGen SHARED IMPORTED)

# Create imported target LLVMSelectionDAG
add_library(LLVMSelectionDAG SHARED IMPORTED)

# Create imported target LLVMAsmPrinter
add_library(LLVMAsmPrinter SHARED IMPORTED)

# Create imported target LLVMMIRParser
add_library(LLVMMIRParser SHARED IMPORTED)

# Create imported target LLVMGlobalISel
add_library(LLVMGlobalISel SHARED IMPORTED)

# Create imported target LLVMCodeGenTypes
add_library(LLVMCodeGenTypes SHARED IMPORTED)

# Create imported target LLVMBinaryFormat
add_library(LLVMBinaryFormat SHARED IMPORTED)

# Create imported target LLVMBitReader
add_library(LLVMBitReader SHARED IMPORTED)

# Create imported target LLVMBitWriter
add_library(LLVMBitWriter SHARED IMPORTED)

# Create imported target LLVMBitstreamReader
add_library(LLVMBitstreamReader SHARED IMPORTED)

# Create imported target LLVMDWARFLinker
add_library(LLVMDWARFLinker SHARED IMPORTED)

# Create imported target LLVMDWARFLinkerClassic
add_library(LLVMDWARFLinkerClassic SHARED IMPORTED)

# Create imported target LLVMDWARFLinkerParallel
add_library(LLVMDWARFLinkerParallel SHARED IMPORTED)

# Create imported target LLVMExtensions
add_library(LLVMExtensions SHARED IMPORTED)

# Create imported target LLVMFrontendAtomic
add_library(LLVMFrontendAtomic SHARED IMPORTED)

# Create imported target LLVMFrontendDriver
add_library(LLVMFrontendDriver SHARED IMPORTED)

# Create imported target LLVMFrontendHLSL
add_library(LLVMFrontendHLSL SHARED IMPORTED)

# Create imported target LLVMFrontendOpenACC
add_library(LLVMFrontendOpenACC SHARED IMPORTED)

set_target_properties(LLVMFrontendOpenACC PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMSupport"
)

# Create imported target LLVMFrontendOpenMP
add_library(LLVMFrontendOpenMP SHARED IMPORTED)

# Create imported target LLVMFrontendOffloading
add_library(LLVMFrontendOffloading SHARED IMPORTED)

# Create imported target LLVMTransformUtils
add_library(LLVMTransformUtils SHARED IMPORTED)

# Create imported target LLVMInstrumentation
add_library(LLVMInstrumentation SHARED IMPORTED)

# Create imported target LLVMAggressiveInstCombine
add_library(LLVMAggressiveInstCombine SHARED IMPORTED)

# Create imported target LLVMInstCombine
add_library(LLVMInstCombine SHARED IMPORTED)

# Create imported target LLVMScalarOpts
add_library(LLVMScalarOpts SHARED IMPORTED)

# Create imported target LLVMipo
add_library(LLVMipo SHARED IMPORTED)

# Create imported target LLVMVectorize
add_library(LLVMVectorize SHARED IMPORTED)

# Create imported target LLVMObjCARCOpts
add_library(LLVMObjCARCOpts SHARED IMPORTED)

# Create imported target LLVMCoroutines
add_library(LLVMCoroutines SHARED IMPORTED)

# Create imported target LLVMCFGuard
add_library(LLVMCFGuard SHARED IMPORTED)

# Create imported target LLVMHipStdPar
add_library(LLVMHipStdPar SHARED IMPORTED)

# Create imported target LLVMLinker
add_library(LLVMLinker SHARED IMPORTED)

# Create imported target LLVMAnalysis
add_library(LLVMAnalysis SHARED IMPORTED)

# Create imported target LLVMLTO
add_library(LLVMLTO SHARED IMPORTED)

# Create imported target LLVMMC
add_library(LLVMMC SHARED IMPORTED)

# Create imported target LLVMMCParser
add_library(LLVMMCParser SHARED IMPORTED)

# Create imported target LLVMMCDisassembler
add_library(LLVMMCDisassembler SHARED IMPORTED)

# Create imported target LLVMMCA
add_library(LLVMMCA SHARED IMPORTED)

# Create imported target LLVMObjCopy
add_library(LLVMObjCopy SHARED IMPORTED)

# Create imported target LLVMObject
add_library(LLVMObject SHARED IMPORTED)

# Create imported target LLVMObjectYAML
add_library(LLVMObjectYAML SHARED IMPORTED)

# Create imported target LLVMOption
add_library(LLVMOption SHARED IMPORTED)

# Create imported target LLVMRemarks
add_library(LLVMRemarks SHARED IMPORTED)

# Create imported target LLVMDebuginfod
add_library(LLVMDebuginfod SHARED IMPORTED)

# Create imported target LLVMDebugInfoDWARF
add_library(LLVMDebugInfoDWARF SHARED IMPORTED)

# Create imported target LLVMDebugInfoGSYM
add_library(LLVMDebugInfoGSYM SHARED IMPORTED)

# Create imported target LLVMDebugInfoLogicalView
add_library(LLVMDebugInfoLogicalView SHARED IMPORTED)

# Create imported target LLVMDebugInfoMSF
add_library(LLVMDebugInfoMSF SHARED IMPORTED)

# Create imported target LLVMDebugInfoCodeView
add_library(LLVMDebugInfoCodeView SHARED IMPORTED)

# Create imported target LLVMDebugInfoPDB
add_library(LLVMDebugInfoPDB SHARED IMPORTED)

# Create imported target LLVMSymbolize
add_library(LLVMSymbolize SHARED IMPORTED)

# Create imported target LLVMDebugInfoBTF
add_library(LLVMDebugInfoBTF SHARED IMPORTED)

# Create imported target LLVMDWP
add_library(LLVMDWP SHARED IMPORTED)

# Create imported target LLVMExecutionEngine
add_library(LLVMExecutionEngine SHARED IMPORTED)

set_target_properties(LLVMExecutionEngine PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMRuntimeDyld"
)

# Create imported target LLVMInterpreter
add_library(LLVMInterpreter SHARED IMPORTED)

# Create imported target LLVMJITLink
add_library(LLVMJITLink SHARED IMPORTED)

# Create imported target LLVMMCJIT
add_library(LLVMMCJIT SHARED IMPORTED)

# Create imported target LLVMOrcJIT
add_library(LLVMOrcJIT SHARED IMPORTED)

# Create imported target LLVMOrcDebugging
add_library(LLVMOrcDebugging SHARED IMPORTED)

# Create imported target LLVMOrcShared
add_library(LLVMOrcShared SHARED IMPORTED)

# Create imported target LLVMOrcTargetProcess
add_library(LLVMOrcTargetProcess SHARED IMPORTED)

# Create imported target LLVMRuntimeDyld
add_library(LLVMRuntimeDyld SHARED IMPORTED)

# Create imported target LLVMTarget
add_library(LLVMTarget SHARED IMPORTED)

# Create imported target LLVMAArch64CodeGen
add_library(LLVMAArch64CodeGen SHARED IMPORTED)

# Create imported target LLVMAArch64AsmParser
add_library(LLVMAArch64AsmParser SHARED IMPORTED)

# Create imported target LLVMAArch64Disassembler
add_library(LLVMAArch64Disassembler SHARED IMPORTED)

# Create imported target LLVMAArch64Desc
add_library(LLVMAArch64Desc SHARED IMPORTED)

# Create imported target LLVMAArch64Info
add_library(LLVMAArch64Info SHARED IMPORTED)

# Create imported target LLVMAArch64Utils
add_library(LLVMAArch64Utils SHARED IMPORTED)

# Create imported target LLVMAMDGPUCodeGen
add_library(LLVMAMDGPUCodeGen SHARED IMPORTED)

# Create imported target LLVMAMDGPUAsmParser
add_library(LLVMAMDGPUAsmParser SHARED IMPORTED)

# Create imported target LLVMAMDGPUDisassembler
add_library(LLVMAMDGPUDisassembler SHARED IMPORTED)

# Create imported target LLVMAMDGPUTargetMCA
add_library(LLVMAMDGPUTargetMCA SHARED IMPORTED)

# Create imported target LLVMAMDGPUDesc
add_library(LLVMAMDGPUDesc SHARED IMPORTED)

# Create imported target LLVMAMDGPUInfo
add_library(LLVMAMDGPUInfo SHARED IMPORTED)

# Create imported target LLVMAMDGPUUtils
add_library(LLVMAMDGPUUtils SHARED IMPORTED)

# Create imported target LLVMARMCodeGen
add_library(LLVMARMCodeGen SHARED IMPORTED)

# Create imported target LLVMARMAsmParser
add_library(LLVMARMAsmParser SHARED IMPORTED)

# Create imported target LLVMARMDisassembler
add_library(LLVMARMDisassembler SHARED IMPORTED)

# Create imported target LLVMARMDesc
add_library(LLVMARMDesc SHARED IMPORTED)

# Create imported target LLVMARMInfo
add_library(LLVMARMInfo SHARED IMPORTED)

# Create imported target LLVMARMUtils
add_library(LLVMARMUtils SHARED IMPORTED)

# Create imported target LLVMAVRCodeGen
add_library(LLVMAVRCodeGen SHARED IMPORTED)

# Create imported target LLVMAVRAsmParser
add_library(LLVMAVRAsmParser SHARED IMPORTED)

# Create imported target LLVMAVRDisassembler
add_library(LLVMAVRDisassembler SHARED IMPORTED)

# Create imported target LLVMAVRDesc
add_library(LLVMAVRDesc SHARED IMPORTED)

# Create imported target LLVMAVRInfo
add_library(LLVMAVRInfo SHARED IMPORTED)

# Create imported target LLVMBPFCodeGen
add_library(LLVMBPFCodeGen SHARED IMPORTED)

# Create imported target LLVMBPFAsmParser
add_library(LLVMBPFAsmParser SHARED IMPORTED)

# Create imported target LLVMBPFDisassembler
add_library(LLVMBPFDisassembler SHARED IMPORTED)

# Create imported target LLVMBPFDesc
add_library(LLVMBPFDesc SHARED IMPORTED)

# Create imported target LLVMBPFInfo
add_library(LLVMBPFInfo SHARED IMPORTED)

# Create imported target LLVMHexagonCodeGen
add_library(LLVMHexagonCodeGen SHARED IMPORTED)

# Create imported target LLVMHexagonAsmParser
add_library(LLVMHexagonAsmParser SHARED IMPORTED)

# Create imported target LLVMHexagonDisassembler
add_library(LLVMHexagonDisassembler SHARED IMPORTED)

# Create imported target LLVMHexagonDesc
add_library(LLVMHexagonDesc SHARED IMPORTED)

# Create imported target LLVMHexagonInfo
add_library(LLVMHexagonInfo SHARED IMPORTED)

# Create imported target LLVMLanaiCodeGen
add_library(LLVMLanaiCodeGen SHARED IMPORTED)

# Create imported target LLVMLanaiAsmParser
add_library(LLVMLanaiAsmParser SHARED IMPORTED)

# Create imported target LLVMLanaiDisassembler
add_library(LLVMLanaiDisassembler SHARED IMPORTED)

# Create imported target LLVMLanaiDesc
add_library(LLVMLanaiDesc SHARED IMPORTED)

# Create imported target LLVMLanaiInfo
add_library(LLVMLanaiInfo SHARED IMPORTED)

# Create imported target LLVMLoongArchCodeGen
add_library(LLVMLoongArchCodeGen SHARED IMPORTED)

# Create imported target LLVMLoongArchAsmParser
add_library(LLVMLoongArchAsmParser SHARED IMPORTED)

# Create imported target LLVMLoongArchDisassembler
add_library(LLVMLoongArchDisassembler SHARED IMPORTED)

# Create imported target LLVMLoongArchDesc
add_library(LLVMLoongArchDesc SHARED IMPORTED)

# Create imported target LLVMLoongArchInfo
add_library(LLVMLoongArchInfo SHARED IMPORTED)

# Create imported target LLVMMipsCodeGen
add_library(LLVMMipsCodeGen SHARED IMPORTED)

# Create imported target LLVMMipsAsmParser
add_library(LLVMMipsAsmParser SHARED IMPORTED)

# Create imported target LLVMMipsDisassembler
add_library(LLVMMipsDisassembler SHARED IMPORTED)

# Create imported target LLVMMipsDesc
add_library(LLVMMipsDesc SHARED IMPORTED)

# Create imported target LLVMMipsInfo
add_library(LLVMMipsInfo SHARED IMPORTED)

# Create imported target LLVMMSP430CodeGen
add_library(LLVMMSP430CodeGen SHARED IMPORTED)

# Create imported target LLVMMSP430Desc
add_library(LLVMMSP430Desc SHARED IMPORTED)

# Create imported target LLVMMSP430Info
add_library(LLVMMSP430Info SHARED IMPORTED)

# Create imported target LLVMMSP430AsmParser
add_library(LLVMMSP430AsmParser SHARED IMPORTED)

# Create imported target LLVMMSP430Disassembler
add_library(LLVMMSP430Disassembler SHARED IMPORTED)

# Create imported target LLVMNVPTXCodeGen
add_library(LLVMNVPTXCodeGen SHARED IMPORTED)

# Create imported target LLVMNVPTXDesc
add_library(LLVMNVPTXDesc SHARED IMPORTED)

# Create imported target LLVMNVPTXInfo
add_library(LLVMNVPTXInfo SHARED IMPORTED)

# Create imported target LLVMPowerPCCodeGen
add_library(LLVMPowerPCCodeGen SHARED IMPORTED)

# Create imported target LLVMPowerPCAsmParser
add_library(LLVMPowerPCAsmParser SHARED IMPORTED)

# Create imported target LLVMPowerPCDisassembler
add_library(LLVMPowerPCDisassembler SHARED IMPORTED)

# Create imported target LLVMPowerPCDesc
add_library(LLVMPowerPCDesc SHARED IMPORTED)

# Create imported target LLVMPowerPCInfo
add_library(LLVMPowerPCInfo SHARED IMPORTED)

# Create imported target LLVMRISCVCodeGen
add_library(LLVMRISCVCodeGen SHARED IMPORTED)

# Create imported target LLVMRISCVAsmParser
add_library(LLVMRISCVAsmParser SHARED IMPORTED)

# Create imported target LLVMRISCVDisassembler
add_library(LLVMRISCVDisassembler SHARED IMPORTED)

# Create imported target LLVMRISCVDesc
add_library(LLVMRISCVDesc SHARED IMPORTED)

# Create imported target LLVMRISCVTargetMCA
add_library(LLVMRISCVTargetMCA SHARED IMPORTED)

# Create imported target LLVMRISCVInfo
add_library(LLVMRISCVInfo SHARED IMPORTED)

# Create imported target LLVMSparcCodeGen
add_library(LLVMSparcCodeGen SHARED IMPORTED)

# Create imported target LLVMSparcAsmParser
add_library(LLVMSparcAsmParser SHARED IMPORTED)

# Create imported target LLVMSparcDisassembler
add_library(LLVMSparcDisassembler SHARED IMPORTED)

# Create imported target LLVMSparcDesc
add_library(LLVMSparcDesc SHARED IMPORTED)

# Create imported target LLVMSparcInfo
add_library(LLVMSparcInfo SHARED IMPORTED)

# Create imported target LLVMSPIRVCodeGen
add_library(LLVMSPIRVCodeGen SHARED IMPORTED)

# Create imported target LLVMSPIRVDesc
add_library(LLVMSPIRVDesc SHARED IMPORTED)

# Create imported target LLVMSPIRVInfo
add_library(LLVMSPIRVInfo SHARED IMPORTED)

# Create imported target LLVMSPIRVAnalysis
add_library(LLVMSPIRVAnalysis SHARED IMPORTED)

# Create imported target LLVMSystemZCodeGen
add_library(LLVMSystemZCodeGen SHARED IMPORTED)

# Create imported target LLVMSystemZAsmParser
add_library(LLVMSystemZAsmParser SHARED IMPORTED)

# Create imported target LLVMSystemZDisassembler
add_library(LLVMSystemZDisassembler SHARED IMPORTED)

# Create imported target LLVMSystemZDesc
add_library(LLVMSystemZDesc SHARED IMPORTED)

# Create imported target LLVMSystemZInfo
add_library(LLVMSystemZInfo SHARED IMPORTED)

# Create imported target LLVMVECodeGen
add_library(LLVMVECodeGen SHARED IMPORTED)

# Create imported target LLVMVEAsmParser
add_library(LLVMVEAsmParser SHARED IMPORTED)

# Create imported target LLVMVEDisassembler
add_library(LLVMVEDisassembler SHARED IMPORTED)

# Create imported target LLVMVEInfo
add_library(LLVMVEInfo SHARED IMPORTED)

# Create imported target LLVMVEDesc
add_library(LLVMVEDesc SHARED IMPORTED)

# Create imported target LLVMWebAssemblyCodeGen
add_library(LLVMWebAssemblyCodeGen SHARED IMPORTED)

# Create imported target LLVMWebAssemblyAsmParser
add_library(LLVMWebAssemblyAsmParser SHARED IMPORTED)

# Create imported target LLVMWebAssemblyDisassembler
add_library(LLVMWebAssemblyDisassembler SHARED IMPORTED)

# Create imported target LLVMWebAssemblyDesc
add_library(LLVMWebAssemblyDesc SHARED IMPORTED)

# Create imported target LLVMWebAssemblyInfo
add_library(LLVMWebAssemblyInfo SHARED IMPORTED)

# Create imported target LLVMWebAssemblyUtils
add_library(LLVMWebAssemblyUtils SHARED IMPORTED)

# Create imported target LLVMX86CodeGen
add_library(LLVMX86CodeGen SHARED IMPORTED)

# Create imported target LLVMX86AsmParser
add_library(LLVMX86AsmParser SHARED IMPORTED)

# Create imported target LLVMX86Disassembler
add_library(LLVMX86Disassembler SHARED IMPORTED)

# Create imported target LLVMX86TargetMCA
add_library(LLVMX86TargetMCA SHARED IMPORTED)

# Create imported target LLVMX86Desc
add_library(LLVMX86Desc SHARED IMPORTED)

# Create imported target LLVMX86Info
add_library(LLVMX86Info SHARED IMPORTED)

# Create imported target LLVMXCoreCodeGen
add_library(LLVMXCoreCodeGen SHARED IMPORTED)

# Create imported target LLVMXCoreDisassembler
add_library(LLVMXCoreDisassembler SHARED IMPORTED)

# Create imported target LLVMXCoreDesc
add_library(LLVMXCoreDesc SHARED IMPORTED)

# Create imported target LLVMXCoreInfo
add_library(LLVMXCoreInfo SHARED IMPORTED)

# Create imported target LLVMSandboxIR
add_library(LLVMSandboxIR SHARED IMPORTED)

# Create imported target LLVMAsmParser
add_library(LLVMAsmParser SHARED IMPORTED)

# Create imported target LLVMLineEditor
add_library(LLVMLineEditor SHARED IMPORTED)

# Create imported target LLVMProfileData
add_library(LLVMProfileData SHARED IMPORTED)

# Create imported target LLVMCoverage
add_library(LLVMCoverage SHARED IMPORTED)

# Create imported target LLVMPasses
add_library(LLVMPasses SHARED IMPORTED)

# Create imported target LLVMTargetParser
add_library(LLVMTargetParser SHARED IMPORTED)

# Create imported target LLVMTextAPI
add_library(LLVMTextAPI SHARED IMPORTED)

# Create imported target LLVMTextAPIBinaryReader
add_library(LLVMTextAPIBinaryReader SHARED IMPORTED)

# Create imported target LLVMTelemetry
add_library(LLVMTelemetry SHARED IMPORTED)

# Create imported target LLVMDlltoolDriver
add_library(LLVMDlltoolDriver SHARED IMPORTED)

# Create imported target LLVMLibDriver
add_library(LLVMLibDriver SHARED IMPORTED)

# Create imported target LLVMXRay
add_library(LLVMXRay SHARED IMPORTED)

# Create imported target LLVMWindowsDriver
add_library(LLVMWindowsDriver SHARED IMPORTED)

# Create imported target LLVMWindowsManifest
add_library(LLVMWindowsManifest SHARED IMPORTED)

# Create imported target omp
add_library(omp SHARED IMPORTED)

set_target_properties(omp PROPERTIES
  INTERFACE_LINK_LIBRARIES "-lm;dl"
)

# Create imported target LTO
add_library(LTO SHARED IMPORTED)

# Create imported target llvm-ar
add_executable(llvm-ar IMPORTED)

# Create imported target llvm-config
add_executable(llvm-config IMPORTED)

# Create imported target llvm-ctxprof-util
add_executable(llvm-ctxprof-util IMPORTED)

# Create imported target llvm-lto
add_executable(llvm-lto IMPORTED)

# Create imported target llvm-profdata
add_executable(llvm-profdata IMPORTED)

# Create imported target bugpoint
add_executable(bugpoint IMPORTED)
set_property(TARGET bugpoint PROPERTY ENABLE_EXPORTS 1)

# Create imported target dsymutil
add_executable(dsymutil IMPORTED)

# Create imported target llc
add_executable(llc IMPORTED)
set_property(TARGET llc PROPERTY ENABLE_EXPORTS 1)

# Create imported target lli
add_executable(lli IMPORTED)
set_property(TARGET lli PROPERTY ENABLE_EXPORTS 1)

# Create imported target llvm-as
add_executable(llvm-as IMPORTED)

# Create imported target llvm-bcanalyzer
add_executable(llvm-bcanalyzer IMPORTED)

# Create imported target llvm-c-test
add_executable(llvm-c-test IMPORTED)

# Create imported target llvm-cat
add_executable(llvm-cat IMPORTED)

# Create imported target llvm-cfi-verify
add_executable(llvm-cfi-verify IMPORTED)

# Create imported target LLVMCFIVerify
add_library(LLVMCFIVerify SHARED IMPORTED)

# Create imported target llvm-cgdata
add_executable(llvm-cgdata IMPORTED)

# Create imported target llvm-cov
add_executable(llvm-cov IMPORTED)

# Create imported target llvm-cvtres
add_executable(llvm-cvtres IMPORTED)

# Create imported target llvm-cxxdump
add_executable(llvm-cxxdump IMPORTED)

# Create imported target llvm-cxxfilt
add_executable(llvm-cxxfilt IMPORTED)

# Create imported target llvm-cxxmap
add_executable(llvm-cxxmap IMPORTED)

# Create imported target llvm-debuginfo-analyzer
add_executable(llvm-debuginfo-analyzer IMPORTED)

# Create imported target llvm-debuginfod
add_executable(llvm-debuginfod IMPORTED)

# Create imported target llvm-debuginfod-find
add_executable(llvm-debuginfod-find IMPORTED)

# Create imported target llvm-diff
add_executable(llvm-diff IMPORTED)

# Create imported target LLVMDiff
add_library(LLVMDiff SHARED IMPORTED)

# Create imported target llvm-dis
add_executable(llvm-dis IMPORTED)

# Create imported target llvm-dwarfdump
add_executable(llvm-dwarfdump IMPORTED)

# Create imported target llvm-dwarfutil
add_executable(llvm-dwarfutil IMPORTED)

# Create imported target llvm-dwp
add_executable(llvm-dwp IMPORTED)

# Create imported target LLVMExegesisX86
add_library(LLVMExegesisX86 SHARED IMPORTED)

# Create imported target LLVMExegesisAArch64
add_library(LLVMExegesisAArch64 SHARED IMPORTED)

# Create imported target LLVMExegesisPowerPC
add_library(LLVMExegesisPowerPC SHARED IMPORTED)

# Create imported target LLVMExegesisMips
add_library(LLVMExegesisMips SHARED IMPORTED)

# Create imported target LLVMExegesisRISCV
add_library(LLVMExegesisRISCV SHARED IMPORTED)

# Create imported target LLVMExegesis
add_library(LLVMExegesis SHARED IMPORTED)

# Create imported target llvm-exegesis
add_executable(llvm-exegesis IMPORTED)

# Create imported target llvm-extract
add_executable(llvm-extract IMPORTED)

# Create imported target llvm-gsymutil
add_executable(llvm-gsymutil IMPORTED)

# Create imported target llvm-ifs
add_executable(llvm-ifs IMPORTED)

# Create imported target llvm-jitlink
add_executable(llvm-jitlink IMPORTED)
set_property(TARGET llvm-jitlink PROPERTY ENABLE_EXPORTS 1)

# Create imported target llvm-libtool-darwin
add_executable(llvm-libtool-darwin IMPORTED)

# Create imported target llvm-link
add_executable(llvm-link IMPORTED)

# Create imported target llvm-lipo
add_executable(llvm-lipo IMPORTED)

# Create imported target llvm-lto2
add_executable(llvm-lto2 IMPORTED)
set_property(TARGET llvm-lto2 PROPERTY ENABLE_EXPORTS 1)

# Create imported target llvm-mc
add_executable(llvm-mc IMPORTED)

# Create imported target llvm-mca
add_executable(llvm-mca IMPORTED)

# Create imported target llvm-ml
add_executable(llvm-ml IMPORTED)

# Create imported target llvm-modextract
add_executable(llvm-modextract IMPORTED)

# Create imported target llvm-mt
add_executable(llvm-mt IMPORTED)

# Create imported target llvm-nm
add_executable(llvm-nm IMPORTED)

# Create imported target llvm-objcopy
add_executable(llvm-objcopy IMPORTED)

# Create imported target llvm-objdump
add_executable(llvm-objdump IMPORTED)

# Create imported target llvm-opt-report
add_executable(llvm-opt-report IMPORTED)

# Create imported target llvm-pdbutil
add_executable(llvm-pdbutil IMPORTED)

# Create imported target llvm-profgen
add_executable(llvm-profgen IMPORTED)

# Create imported target llvm-rc
add_executable(llvm-rc IMPORTED)

# Create imported target llvm-readobj
add_executable(llvm-readobj IMPORTED)

# Create imported target llvm-readtapi
add_executable(llvm-readtapi IMPORTED)

# Create imported target llvm-reduce
add_executable(llvm-reduce IMPORTED)

# Create imported target llvm-remarkutil
add_executable(llvm-remarkutil IMPORTED)

# Create imported target llvm-rtdyld
add_executable(llvm-rtdyld IMPORTED)

# Create imported target llvm-sim
add_executable(llvm-sim IMPORTED)

# Create imported target llvm-size
add_executable(llvm-size IMPORTED)

# Create imported target llvm-split
add_executable(llvm-split IMPORTED)

# Create imported target llvm-stress
add_executable(llvm-stress IMPORTED)

# Create imported target llvm-strings
add_executable(llvm-strings IMPORTED)

# Create imported target llvm-symbolizer
add_executable(llvm-symbolizer IMPORTED)

# Create imported target llvm-tli-checker
add_executable(llvm-tli-checker IMPORTED)

# Create imported target llvm-undname
add_executable(llvm-undname IMPORTED)

# Create imported target llvm-xray
add_executable(llvm-xray IMPORTED)

# Create imported target LLVMOptDriver
add_library(LLVMOptDriver SHARED IMPORTED)

# Create imported target opt
add_executable(opt IMPORTED)
set_property(TARGET opt PROPERTY ENABLE_EXPORTS 1)

# Create imported target reduce-chunk-list
add_executable(reduce-chunk-list IMPORTED)

# Create imported target Remarks
add_library(Remarks SHARED IMPORTED)

# Create imported target sancov
add_executable(sancov IMPORTED)

# Create imported target sanstats
add_executable(sanstats IMPORTED)

# Create imported target verify-uselistorder
add_executable(verify-uselistorder IMPORTED)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/LLVMExports-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
