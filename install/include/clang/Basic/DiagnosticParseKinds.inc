#ifdef PARSESTART
__PARSESTART = DIAG_START_PARSE,
#undef PARSESTART
#endif

DIAG(compat_cxx11_enum_fixed_underlying_type, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "enumeration types with a fixed underlying type are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(compat_pre_cxx11_enum_fixed_underlying_type, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "enumeration types with a fixed underlying type are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(err_acc_expected_reduction_operator, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing reduction operator, expected '+', '*', 'max', 'min', '&', '|', '^', '&&', or '||', follwed by a ':'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_incorrect_bind_arg, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected identifier or string literal", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_invalid_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid OpenACC clause %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_invalid_default_clause_kind, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid value for 'default' clause; expected 'present' or 'none'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_invalid_directive, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid OpenACC directive %select{%1|'%1 %2'}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_invalid_open_paren, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected clause-list or newline in OpenACC directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_invalid_reduction_operator, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid reduction operator,  expected '+', '*', 'max', 'min', '&', '|', '^', '&&', or '||'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_invalid_tag_kind, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid tag %0 on '%1' %select{directive|clause}2", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_missing_directive, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected OpenACC directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_modifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{unknown|duplicate}0 modifier %1 in OpenACC modifier-list on '%2' clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_acc_unexpected_directive, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected OpenACC directive %select{|'#pragma acc %1'}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_access_specifier_interface, CLASS_ERROR, (unsigned)diag::Severity::Error, "interface types cannot specify '%select{private|protected}0' access", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_address_of_label_outside_fn, CLASS_ERROR, (unsigned)diag::Severity::Error, "use of address-of-label extension outside of a function body", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_alias_declaration_not_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "name defined in alias declaration must be an identifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_alias_declaration_pack_expansion, CLASS_ERROR, (unsigned)diag::Severity::Error, "alias declaration cannot be a pack expansion", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_alias_declaration_specialization, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_anon_bitfield_member_init, CLASS_ERROR, (unsigned)diag::Severity::Error, "anonymous bit-field cannot have a default member initializer", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_anon_type_definition, CLASS_ERROR, (unsigned)diag::Severity::Error, "declaration of anonymous %0 must be a definition", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_anonymous_enum_bitfield, CLASS_ERROR, (unsigned)diag::Severity::Error, "ISO C++ only allows ':' in member enumeration declaration to introduce a fixed underlying type, not an anonymous bit-field", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_arc_bridge_retain, CLASS_ERROR, (unsigned)diag::Severity::Error, "unknown cast annotation __bridge_retain; did you mean __bridge_retained?", 0, SFINAE_SubstitutionFailure, false, true, true, false, 9)
DIAG(err_argument_required_after_attribute, CLASS_ERROR, (unsigned)diag::Severity::Error, "argument required after attribute", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_asm_duplicate_qual, CLASS_ERROR, (unsigned)diag::Severity::Error, "duplicate asm qualifier '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 13)
DIAG(err_asm_empty, CLASS_ERROR, (unsigned)diag::Severity::Error, "__asm used with no assembly instructions", 0, SFINAE_SubstitutionFailure, false, true, true, false, 13)
DIAG(err_asm_expected_string, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected string literal %select{or parenthesized constant expression |}0in 'asm'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_asm_operand_wide_string_literal, CLASS_ERROR, (unsigned)diag::Severity::Error, "cannot use %select{unicode|wide}0 string literal in 'asm'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_asm_qualifier_ignored, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'volatile', 'inline', 'goto', or '('", 0, SFINAE_SubstitutionFailure, false, true, true, false, 13)
DIAG(err_assume_attr_expects_cond_expr, CLASS_ERROR, (unsigned)diag::Severity::Error, "use of this expression in an %0 attribute requires parentheses", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_at_defs_cxx, CLASS_ERROR, (unsigned)diag::Severity::Error, "@defs is not supported in Objective-C++", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_at_in_class, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected '@' in member specification", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_atimport, CLASS_ERROR, (unsigned)diag::Severity::Error, "use of '@import' when modules are disabled", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_attribute_argument_parm_pack_not_supported, CLASS_ERROR, (unsigned)diag::Severity::Error, "attribute %0 does not support argument pack expansion", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_attribute_not_import_attr, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0 attribute cannot be applied to a module import", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_attribute_not_module_attr, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0 attribute cannot be applied to a module", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_attribute_requires_arguments, CLASS_ERROR, (unsigned)diag::Severity::Error, "parentheses must be omitted if %0 attribute's argument list is empty", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_attributes_misplaced, CLASS_ERROR, (unsigned)diag::Severity::Error, "misplaced attributes; expected attributes here", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_attributes_not_allowed, CLASS_ERROR, (unsigned)diag::Severity::Error, "an attribute list cannot appear here", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_avail_query_expected_platform_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a platform name here", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_avail_query_unrecognized_platform_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "unrecognized platform name %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_availability_expected_change, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'introduced', 'deprecated', or 'obsoleted'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_availability_expected_environment, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an environment name, e.g., 'compute'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_availability_expected_platform, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a platform name, e.g., 'macos'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_availability_query_repeated_platform, CLASS_ERROR, (unsigned)diag::Severity::Error, "version for '%0' already specified", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_availability_query_repeated_star, CLASS_ERROR, (unsigned)diag::Severity::Error, "'*' query has already been specified", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_availability_query_wildcard_required, CLASS_ERROR, (unsigned)diag::Severity::Error, "must handle potential future platforms with '*'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_availability_redundant, CLASS_ERROR, (unsigned)diag::Severity::Error, "redundant %0 availability change; only the last specified change will be used", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_availability_unknown_change, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_binding_multiple_ellipses, CLASS_ERROR, (unsigned)diag::Severity::Error, "multiple packs in structured binding declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_bool_redeclaration, CLASS_ERROR, (unsigned)diag::Severity::Error, "redeclaration of C++ built-in type 'bool'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_bracket_depth_exceeded, CLASS_ERROR, (unsigned)diag::Severity::Fatal, "bracket nesting level exceeded maximum of %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_brackets_go_after_unqualified_id, CLASS_ERROR, (unsigned)diag::Severity::Error, "brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_c11_noreturn_misplaced, CLASS_ERROR, (unsigned)diag::Severity::Error, "'_Noreturn' keyword must precede function declarator", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_capture_default_first, CLASS_ERROR, (unsigned)diag::Severity::Error, "capture default must be first", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_class_on_template_template_param, CLASS_ERROR, (unsigned)diag::Severity::Error, "template template parameter requires 'class'%select{| or 'typename'}0 after the parameter list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_concept_definition_not_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "name defined in concept definition must be an identifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 19)
DIAG(err_concept_legacy_bool_keyword, CLASS_ERROR, (unsigned)diag::Severity::Error, "ISO C++ does not permit the 'bool' keyword after 'concept'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 19)
DIAG(err_constructor_bad_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing return type for function %0; did you mean the constructor name %1?", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ctor_init_missing_comma, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing ',' between base or member initializers", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_cxx11_attribute_forbids_arguments, CLASS_ERROR, (unsigned)diag::Severity::Error, "attribute %0 cannot have an argument list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_cxx11_attribute_forbids_ellipsis, CLASS_ERROR, (unsigned)diag::Severity::Error, "attribute %0 cannot be used as an attribute pack", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_declaration_does_not_declare_param, CLASS_ERROR, (unsigned)diag::Severity::Error, "declaration does not declare a parameter", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_declspec_after_virtspec, CLASS_ERROR, (unsigned)diag::Severity::Error, "'%0' qualifier may not appear after the virtual specifier '%1'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_default_arg_unparsed, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected end of default argument expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_default_delete_in_multiple_declaration, CLASS_ERROR, (unsigned)diag::Severity::Error, "'= %select{default|delete}0' is a function definition and must occur in a standalone declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_default_template_template_parameter_not_template, CLASS_ERROR, (unsigned)diag::Severity::Error, "default template argument for a template template parameter must be a class template", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_destructor_template_id, CLASS_ERROR, (unsigned)diag::Severity::Error, "destructor name %0 does not refer to a template", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_destructor_tilde_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a class name after '~' to name a destructor", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_destructor_tilde_scope, CLASS_ERROR, (unsigned)diag::Severity::Error, "'~' in destructor name should be after nested name specifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_dup_virtual, CLASS_ERROR, (unsigned)diag::Severity::Error, "duplicate 'virtual' in base specifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_duplicate_class_virt_specifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "class already marked '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_duplicate_default_assoc, CLASS_ERROR, (unsigned)diag::Severity::Error, "duplicate default generic association", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_duplicate_virt_specifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "class member already marked '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_dynamic_and_noexcept_specification, CLASS_ERROR, (unsigned)diag::Severity::Error, "cannot have both throw() and noexcept() clause on the same function", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_empty_enum, CLASS_ERROR, (unsigned)diag::Severity::Error, "use of empty enum", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_empty_requires_expr, CLASS_ERROR, (unsigned)diag::Severity::Error, "a requires expression must contain at least one requirement", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_enumerator_list_missing_comma, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing ',' between enumerators", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_enumerator_unnamed_no_def, CLASS_ERROR, (unsigned)diag::Severity::Error, "unnamed enumeration must be a definition", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_except_spec_unparsed, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected end of exception specification", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_begin_assumes, CLASS_ERROR, (unsigned)diag::Severity::Error, "'#pragma omp end assumes' with no matching '#pragma omp begin assumes'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_begin_declare_variant, CLASS_ERROR, (unsigned)diag::Severity::Error, "'#pragma omp end declare variant' with no matching '#pragma omp begin declare variant'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_capture, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected variable name or 'this' in lambda capture list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_case_before_expression, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'case' keyword before expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_catch, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected catch", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_class_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected class name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_class_name_not_template, CLASS_ERROR, (unsigned)diag::Severity::Error, "'typename' is redundant; base classes are implicitly types", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_coloncolon_after_super, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '::' after '__super'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_comma_greater, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ',' or '>' in template-parameter-list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_comma_or_rsquare, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ',' or ']' in lambda capture list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_end_declare_target_or_variant, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '#pragma omp end declare %select{target|variant}0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_end_of_enumerator, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '= constant-expression' or end of enumerator definition", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_equal_designator, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '=' or another designator", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_expression, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_external_declaration, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected external declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_field_designator, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a field designator, such as '.field = 4'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_fn_body, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected function body after function declarator", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_fold_operator, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a foldable binary operator in fold expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_init_in_condition, CLASS_ERROR, (unsigned)diag::Severity::Error, "variable declaration in condition must have an initializer", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_init_in_condition_lparen, CLASS_ERROR, (unsigned)diag::Severity::Error, "variable declaration in condition cannot have a parenthesized initializer", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_lambda_body, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected body of lambda expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_lbrace_after_base_specifiers, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '{' after base class list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_lbrace_in_compound_literal, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '{' in compound literal", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_less_after, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '<' after '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_lparen_after, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '(' after '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_lparen_after_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '(' for function-style cast or type construction", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_member_name_or_semi, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected member name or ';' after declaration specifiers", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_member_name_or_semi_objcxx_keyword, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_member_or_base_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected class member or base class name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_method_body, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected method body", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_minus_or_plus, CLASS_ERROR, (unsigned)diag::Severity::Error, "method type specifier must start with '-' or '+'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_objc_container, CLASS_ERROR, (unsigned)diag::Severity::Error, "'@end' must appear in an Objective-C context", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_parameter_pack, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected the name of a parameter pack", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_parentheses_around_typename, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected parentheses around type name in %0 expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_property_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected property name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_punc, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ')' or ',' after '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_qualified_after_typename, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a qualified name after 'typename'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_rparen_after, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ')' after '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_selector_for_method, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected selector for Objective-C method", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semantic_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected HLSL Semantic identifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_expected_semi_after_attribute_list, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after attribute list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_after_expr, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_after_method_proto, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after method prototype", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_after_namespace_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after namespace name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_after_static_assert, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_after_stmt, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after %0 statement", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_decl_list, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' at end of declaration list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_declaration, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' at end of declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_for, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' in 'for' statement specifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_semi_requirement, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' at end of requirement", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_sequence_or_directive, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an OpenMP 'directive' or 'sequence' attribute argument", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_star_this_capture, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'this' following '*' in lambda capture list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_statement, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected statement", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_template, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected template", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_template_parameter, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected template parameter", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_token_instead_of_objcxx_keyword, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected %0; %1 is a keyword in Objective-C++", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a type", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_type_name_after_typename, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an identifier or template-id after '::'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_unqualified_id, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected %select{identifier|unqualified-id}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_version, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a version of the form 'major[.minor[.subminor]]'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_expected_while, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'while' in do/while loop", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_explicit_instantiation_enum, CLASS_ERROR, (unsigned)diag::Severity::Error, "enumerations cannot be explicitly instantiated", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_explicit_instantiation_with_definition, CLASS_ERROR, (unsigned)diag::Severity::Error, "explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_explicit_spec_non_template, CLASS_ERROR, (unsigned)diag::Severity::Error, "explicit %select{specialization|instantiation}0 of %select{non-|undeclared }3template %1 %2", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_export_empty, CLASS_ERROR, (unsigned)diag::Severity::Error, "export declaration cannot be empty", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_external_source_symbol_duplicate_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "duplicate %0 clause in an 'external_source_symbol' attribute", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_external_source_symbol_expected_keyword, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'language', 'defined_in', 'generated_declaration', or 'USR'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_extraneous_closing_brace, CLASS_ERROR, (unsigned)diag::Severity::Error, "extraneous closing brace ('}')", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_extraneous_rparen_in_condition, CLASS_ERROR, (unsigned)diag::Severity::Error, "extraneous ')' after condition, expected a statement", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_extraneous_token_before_semi, CLASS_ERROR, (unsigned)diag::Severity::Error, "extraneous '%0' before ';'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_fold_operator_mismatch, CLASS_ERROR, (unsigned)diag::Severity::Error, "operators in fold expression must be the same", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_for_co_await_not_range_for, CLASS_ERROR, (unsigned)diag::Severity::Error, "'co_await' modifier can only be applied to range-based for loop", 0, SFINAE_SubstitutionFailure, false, true, true, false, 17)
DIAG(err_for_range_expected_decl, CLASS_ERROR, (unsigned)diag::Severity::Error, "for range declaration must declare a variable", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_for_range_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "range-based for loop requires type for loop variable", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_friend_concept, CLASS_ERROR, (unsigned)diag::Severity::Error, "friend declaration cannot be a concept", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_friend_decl_defines_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "cannot define a type in a friend declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_friend_explicit_instantiation, CLASS_ERROR, (unsigned)diag::Severity::Error, "friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_friend_invalid_in_context, CLASS_ERROR, (unsigned)diag::Severity::Error, "'friend' used outside of class", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_func_def_no_params, CLASS_ERROR, (unsigned)diag::Severity::Error, "function definition does not declare parameters", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_function_declared_typedef, CLASS_ERROR, (unsigned)diag::Severity::Error, "function definition declared 'typedef'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_function_definition_not_allowed, CLASS_ERROR, (unsigned)diag::Severity::Error, "function definition is not allowed here", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_function_is_not_record, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected %0 in function call; perhaps remove the %0?", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_function_parameter_limit_exceeded, CLASS_ERROR, (unsigned)diag::Severity::Error, "too many function parameters; subsequent parameters will be ignored", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_function_scope_depth_exceeded, CLASS_ERROR, (unsigned)diag::Severity::Fatal, "function scope depth exceeded maximum of %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_global_asm_qualifier_ignored, CLASS_ERROR, (unsigned)diag::Severity::Error, "meaningless '%0' on asm outside function", 0, SFINAE_SubstitutionFailure, false, true, true, false, 13)
DIAG(err_global_module_introducer_not_at_start, CLASS_ERROR, (unsigned)diag::Severity::Error, "'module;' introducing a global module fragment can appear only at the start of the translation unit", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_gnu_inline_asm_disabled, CLASS_ERROR, (unsigned)diag::Severity::Error, "GNU-style inline assembly is disabled", 0, SFINAE_SubstitutionFailure, false, true, true, false, 13)
DIAG(err_hlsl_packoffset_invalid_reg, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid resource class specifier '%0' for packoffset, expected 'c'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_hlsl_separate_attr_arg_and_number, CLASS_ERROR, (unsigned)diag::Severity::Error, "wrong argument format for hlsl attribute, use %0 instead", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_hlsl_unexpected_end_of_params, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected %0 to denote end of parameters, or, another valid parameter of %1", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_hlsl_unsupported_component, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid component '%0' used; expected 'x', 'y', 'z', or 'w'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_hlsl_virtual_function, CLASS_ERROR, (unsigned)diag::Severity::Error, "virtual functions are unsupported in HLSL", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_hlsl_virtual_inheritance, CLASS_ERROR, (unsigned)diag::Severity::Error, "virtual inheritance is unsupported in HLSL", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_id_after_template_in_nested_name_spec, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected template name after 'template' keyword in nested name specifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_illegal_decl_reference_to_reference, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0 declared as a reference to a reference", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_illegal_super_cast, CLASS_ERROR, (unsigned)diag::Severity::Error, "cannot cast 'super' (it isn't an expression)", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_import_in_wrong_fragment, CLASS_ERROR, (unsigned)diag::Severity::Error, "module%select{| partition}0 imports cannot be in the %select{global|private}1 module fragment", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_import_not_allowed_here, CLASS_ERROR, (unsigned)diag::Severity::Error, "imports must immediately follow the module declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_incomplete_array_member_init, CLASS_ERROR, (unsigned)diag::Severity::Error, "array bound cannot be deduced from a default member initializer", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_init_list_bin_op, CLASS_ERROR, (unsigned)diag::Severity::Error, "initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_inline_ms_asm_parsing, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 13)
DIAG(err_inline_namespace_alias, CLASS_ERROR, (unsigned)diag::Severity::Error, "namespace alias cannot be inline", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_inline_nested_namespace_definition, CLASS_ERROR, (unsigned)diag::Severity::Error, "nested namespace definition cannot be 'inline'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_invalid_declaration_in_hlsl_buffer, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid declaration inside %select{tbuffer|cbuffer}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_invalid_operator_on_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "cannot use %select{dot|arrow}0 operator on a type", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_invalid_reference_qualifier_application, CLASS_ERROR, (unsigned)diag::Severity::Error, "'%0' qualifier may not be applied to a reference", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_invalid_token_after_declarator_suggest_equal, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid %0 at end of declaration; did you mean '='?", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_invalid_token_after_toplevel_declarator, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after top level declarator", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_keyword_as_parameter, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid parameter name: '%0' is a keyword", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_keyword_misplaced, CLASS_ERROR, (unsigned)diag::Severity::Error, "misplaced %0; expected %0 here", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_keyword_not_allowed, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0 cannot appear here", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_keyword_not_import_attr, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0 cannot be applied to a module import", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_keyword_not_module_attr, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0 cannot be applied to a module", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_l_square_l_square_not_attribute, CLASS_ERROR, (unsigned)diag::Severity::Error, "C++11 only allows consecutive left square brackets when introducing an attribute", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_lambda_after_delete, CLASS_ERROR, (unsigned)diag::Severity::Error, "'[]' after delete interpreted as 'delete[]'; add parentheses to treat this as a lambda-expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_lambda_capture_misplaced_ellipsis, CLASS_ERROR, (unsigned)diag::Severity::Error, "ellipsis in pack %select{|init-}0capture must appear %select{after|before}0 the name of the capture", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_lambda_capture_multiple_ellipses, CLASS_ERROR, (unsigned)diag::Severity::Error, "multiple ellipses in pack capture", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_lambda_decl_specifier_repeated, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{'mutable'|'static'|'constexpr'|'consteval'}0 cannot appear multiple times in a lambda declarator", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_lambda_template_parameter_list_empty, CLASS_ERROR, (unsigned)diag::Severity::Error, "lambda template parameter list cannot be empty", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_literal_operator_string_not_empty, CLASS_ERROR, (unsigned)diag::Severity::Error, "string literal after 'operator' must be '\"\"'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_literal_operator_string_prefix, CLASS_ERROR, (unsigned)diag::Severity::Error, "string literal after 'operator' cannot have an encoding prefix", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_misplaced_ellipsis_in_declaration, CLASS_ERROR, (unsigned)diag::Severity::Error, "'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_missing_before_module_end, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected %0 at end of module", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_missing_catch_finally, CLASS_ERROR, (unsigned)diag::Severity::Error, "@try statement without a @catch and @finally clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_missing_comma_before_ellipsis, CLASS_ERROR, (unsigned)diag::Severity::Error, "C requires a comma prior to the ellipsis in a variadic function type", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_missing_dependent_template_keyword, CLASS_ERROR, (unsigned)diag::Severity::Error, "use 'template' keyword to treat '%0' as a dependent template name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_missing_end_of_definition, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing '}' at end of definition of %q0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_missing_param, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected parameter declarator", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_missing_whitespace_digraph, CLASS_ERROR, (unsigned)diag::Severity::Error, "found '<::' after a %select{template name|addrspace_cast|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_modifier_expected_colon, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing ':' after %0 modifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_module_expected_ident, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a module name after '%select{module|import}0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_module_expected_semi, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after module name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_module_fragment_exported, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{global|private}0 module fragment cannot be exported", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_ms_attributes_not_enabled, CLASS_ERROR, (unsigned)diag::Severity::Error, "'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_declspec_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "__declspec attributes must be an identifier or string literal", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_duplicate_accessor, CLASS_ERROR, (unsigned)diag::Severity::Error, "property declaration specifies '%0' accessor twice", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_expected_accessor_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected name of accessor method", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_expected_comma_or_rparen, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ',' or ')' at end of property accessor list", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_expected_equal, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '=' after '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_has_set_accessor, CLASS_ERROR, (unsigned)diag::Severity::Error, "putter for property must be specified as 'put', not 'set'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_initializer, CLASS_ERROR, (unsigned)diag::Severity::Error, "property declaration cannot have a default member initializer", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_missing_accessor_kind, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing 'get=' or 'put='", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_no_getter_or_putter, CLASS_ERROR, (unsigned)diag::Severity::Error, "property does not specify a getter or a putter", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_ms_property_unknown_accessor, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'get' or 'put' in property declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_msasm_unable_to_create_target, CLASS_ERROR, (unsigned)diag::Severity::Error, "MS-style inline assembly is not available: %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 13)
DIAG(err_msasm_unsupported_arch, CLASS_ERROR, (unsigned)diag::Severity::Error, "unsupported architecture '%0' for MS-style inline assembly", 0, SFINAE_SubstitutionFailure, false, true, true, false, 13)
DIAG(err_multiple_template_declarators, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_namespace_nonnamespace_scope, CLASS_ERROR, (unsigned)diag::Severity::Error, "namespaces can only be defined in global or namespace scope", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_no_matching_param, CLASS_ERROR, (unsigned)diag::Severity::Error, "parameter named %0 is missing", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_nsnumber_nonliteral_unary, CLASS_ERROR, (unsigned)diag::Severity::Error, "@%0 must be followed by a number to form an NSNumber object", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_concat_string, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected token after Objective-C string", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_directive_only_in_protocol, CLASS_ERROR, (unsigned)diag::Severity::Error, "directive may only be specified in protocols only", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_expected_equal_for_getter, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '=' for Objective-C getter", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_expected_equal_for_setter, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '=' for Objective-C setter", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_expected_property_attr, CLASS_ERROR, (unsigned)diag::Severity::Error, "unknown property attribute %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_expected_selector_for_getter_setter, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected selector for Objective-C %select{setter|getter}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_expected_type_parameter, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected type parameter name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 27)
DIAG(err_objc_illegal_interface_qual, CLASS_ERROR, (unsigned)diag::Severity::Error, "illegal interface qualifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_illegal_visibility_spec, CLASS_ERROR, (unsigned)diag::Severity::Error, "illegal visibility specification", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_missing_end, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing '@end'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_parameterized_implementation, CLASS_ERROR, (unsigned)diag::Severity::Error, "@implementation cannot have type parameters", 0, SFINAE_SubstitutionFailure, false, true, true, false, 27)
DIAG(err_objc_postfix_attribute, CLASS_ERROR, (unsigned)diag::Severity::Error, "postfix attributes are not allowed on Objective-C directives", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_postfix_attribute_hint, CLASS_ERROR, (unsigned)diag::Severity::Error, "postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_property_bitfield, CLASS_ERROR, (unsigned)diag::Severity::Error, "property name cannot be a bit-field", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_property_requires_field_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "property requires fields to be named", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_type_args_after_protocols, CLASS_ERROR, (unsigned)diag::Severity::Error, "protocol qualifiers must precede type arguments", 0, SFINAE_SubstitutionFailure, false, true, true, false, 27)
DIAG(err_objc_unexpected_atend, CLASS_ERROR, (unsigned)diag::Severity::Error, "'@end' appears where closing brace '}' is expected", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_unexpected_attr, CLASS_ERROR, (unsigned)diag::Severity::Error, "prefix attribute must be followed by an interface, protocol, or implementation", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objc_unknown_at, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an Objective-C directive after '@'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objcbridge_related_expected_related_class, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a related Objective-C class name, e.g., 'NSColor'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_objcbridge_related_selector_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a class method selector with single argument, e.g., 'colorWithCGColor:'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_begin_declare_target_unexpected_implicit_to_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected '(', only 'to', 'link' or 'device_type' clauses expected for 'begin declare target' directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_decl_in_declare_simd_variant, CLASS_ERROR, (unsigned)diag::Severity::Error, "function declaration is expected after 'declare %select{simd|variant}0' directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_simd_inbranch_notinbranch, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected '%0' clause, '%1' is specified already", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_indirect_device_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "only 'device_type(any)' clause is allowed with indirect clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_missing_enter_or_link_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected at least one %select{'enter' or 'link'|'enter', 'link' or 'indirect'}0 clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_missing_to_or_link_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected at least one %select{'to' or 'link'|'to', 'link' or 'indirect'}0 clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_multiple, CLASS_ERROR, (unsigned)diag::Severity::Error, "%0 appears multiple times in clauses on the same declare target directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_unexpected_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected '%0' clause, only %select{'device_type'|'to' or 'link'|'to', 'link' or 'device_type'|'device_type', 'indirect'|'to', 'link', 'device_type' or 'indirect'}1 clauses expected", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_unexpected_clause_52, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected '%0' clause, only %select{'device_type'|'enter' or 'link'|'enter', 'link' or 'device_type'|'device_type', 'indirect'|'enter', 'link', 'device_type' or 'indirect'}1 clauses expected", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_unexpected_enter_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected 'enter' clause, use 'to' instead", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_unexpected_to_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected 'to' clause, use 'enter' instead", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_wrong_clause_after_implicit_enter, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected clause after an implicit 'enter' clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_target_wrong_clause_after_implicit_to, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected clause after an implicit 'to' clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_variant_duplicate_nested_trait, CLASS_ERROR, (unsigned)diag::Severity::Error, "nested OpenMP context selector contains duplicated trait '%0' in selector '%1' and set '%2' with different score", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_variant_nested_user_condition, CLASS_ERROR, (unsigned)diag::Severity::Error, "nested user conditions in OpenMP context selector not supported (yet)", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_declare_variant_wrong_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected %select{'match'|'match', 'adjust_args', or 'append_args'}0 clause on 'omp declare variant' directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_deprecate_old_syntax, CLASS_ERROR, (unsigned)diag::Severity::Error, "old syntax '%0' on '%1' clause was deprecated, use new syntax '%2'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_duplicate_modifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "duplicate modifier '%0' in '%1' clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected at least one clause on '#pragma omp %0' directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_clause_argument, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '%0' clause with an argument on '#pragma omp %1' construct", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_colon, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing ':' in %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_context_selector, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected valid context selector in %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_equal_in_iterator, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '=' in iterator specifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_identifier_for_critical, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected identifier specifying the name of the 'omp critical' directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_interop_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected interop type: 'target' and/or 'targetsync'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_modifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected modifier in '%0' clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_punc, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ',' or ')' in '%0' %select{clause|directive}1", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_punc_after_interop_mod, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ',' after interop modifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_punc_after_iterator, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ',' or ')' after iterator specifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_expected_reduction_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_immediate_directive, CLASS_ERROR, (unsigned)diag::Severity::Error, "'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_invalid_dsa, CLASS_ERROR, (unsigned)diag::Severity::Error, "data-sharing attribute '%0' in '%1' clause requires OpenMP version %2 or above", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_map_modifier_specification_list, CLASS_ERROR, (unsigned)diag::Severity::Error, "empty modifier-specification-list is not allowed", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_map_type_missing, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing map type", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_map_type_modifier_missing, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing map type modifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_mapper_expected_declarator, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected declarator on 'omp declare mapper' directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_mapper_illegal_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "illegal OpenMP user-defined mapper identifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_missing_comma, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing ',' after %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_more_one_map_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "map type is already specified", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_multiple_step_or_linear_modifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "multiple %select{'step size'|'linear modifier'}0 found in linear clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_requires_out_inout_depend_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "reserved locator 'omp_all_memory' requires 'out' or 'inout' dependency types", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_sink_and_source_iteration_not_allowd, CLASS_ERROR, (unsigned)diag::Severity::Error, " '%0 %select{sink:|source:}1' must be with '%select{omp_cur_iteration - 1|omp_cur_iteration}1'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unexpected_append_op, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected operation specified in 'append_args' clause, expected 'interop'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unexpected_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected OpenMP clause '%0' in directive '#pragma omp %1'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unexpected_clause_extension_only, CLASS_ERROR, (unsigned)diag::Severity::Error, "OpenMP clause '%0' is only available as extension, use '-fopenmp-extensions'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unexpected_directive, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected OpenMP directive %select{|'#pragma omp %1'}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unexpected_execution_modifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected 'execution' modifier in non-executable context", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unknown_adjust_args_op, CLASS_ERROR, (unsigned)diag::Severity::Error, "incorrect adjust_args type, expected 'need_device_ptr' or 'nothing'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unknown_directive, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an OpenMP directive", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unknown_map_type, CLASS_ERROR, (unsigned)diag::Severity::Error, "incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_unknown_map_type_modifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "incorrect map type modifier, expected one of: 'always', 'close', 'mapper'%select{|, 'present'|, 'present', 'iterator'}0%select{|, 'ompx_hold'}1%select{|, 'self'}2", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_omp_variant_ctx_second_match_extension, CLASS_ERROR, (unsigned)diag::Severity::Error, "only a single match extension allowed per OpenMP context selector", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_opencl_taking_function_address_parser, CLASS_ERROR, (unsigned)diag::Severity::Error, "taking address of function is not allowed", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_openclcxx_virtual_function, CLASS_ERROR, (unsigned)diag::Severity::Error, "virtual functions are not supported in C++ for OpenCL", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_out_of_line_constructor_template_id, CLASS_ERROR, (unsigned)diag::Severity::Error, "out-of-line constructor for %0 cannot have template arguments", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_override_control_interface, CLASS_ERROR, (unsigned)diag::Severity::Error, "'%0' keyword not permitted with interface types", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_paren_sizeof_parameter_pack, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing parentheses around the size of parameter pack %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_partition_import_outside_module, CLASS_ERROR, (unsigned)diag::Severity::Error, "module partition imports must be within a module purview", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_placeholder_expected_auto_or_decltype_auto, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'auto' or 'decltype(auto)' after concept name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 19)
DIAG(err_postfix_after_unary_requires_parens, CLASS_ERROR, (unsigned)diag::Severity::Error, "expression cannot be followed by a postfix %0 operator; add parentheses", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_duplicate_subject, CLASS_ERROR, (unsigned)diag::Severity::Error, "duplicate attribute subject matcher '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_expected_attribute, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an attribute after '('", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_expected_attribute_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected identifier that represents an attribute name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_expected_attribute_syntax, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_expected_period, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '.' after pragma attribute namespace %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_expected_push_pop_paren, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected 'push', 'pop', or '(' after '#pragma clang attribute'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_expected_subject_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an identifier that corresponds to an attribute subject rule", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_expected_subject_sub_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_extra_tokens_after_attribute, CLASS_ERROR, (unsigned)diag::Severity::Error, "extra tokens after attribute in a '#pragma clang attribute push'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_invalid_argument, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_invalid_subject_set_specifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected attribute subject set specifier 'apply_to'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_namespace_on_attribute, CLASS_ERROR, (unsigned)diag::Severity::Error, "namespace can only apply to 'push' or 'pop' directives", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_unknown_subject_rule, CLASS_ERROR, (unsigned)diag::Severity::Error, "unknown attribute subject rule '%0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_unknown_subject_sub_rule, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_attribute_unsupported_attribute, CLASS_ERROR, (unsigned)diag::Severity::Error, "attribute %0 is not supported by '#pragma clang attribute'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_cannot_end_force_cuda_host_device, CLASS_ERROR, (unsigned)diag::Severity::Error, "force_cuda_host_device end pragma without matching force_cuda_host_device begin", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_clang_section_expected_equal, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text|relro}0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_comment_malformed, CLASS_ERROR, (unsigned)diag::Severity::Error, "pragma comment requires parenthesized identifier and optional string", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_comment_unknown_kind, CLASS_ERROR, (unsigned)diag::Severity::Error, "unknown kind of pragma comment", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_detect_mismatch_malformed, CLASS_ERROR, (unsigned)diag::Severity::Error, "pragma detect_mismatch is malformed; it requires two comma-separated string literals", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_expected_clang_section_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected one of [bss|data|rodata|text|relro] section kind in '#pragma %0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_expected_integer, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected an integer argument in '#pragma %0'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_file_or_compound_scope, CLASS_ERROR, (unsigned)diag::Severity::Error, "'#pragma %0' can only appear at file scope or at the start of a compound statement", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_float_control_malformed, CLASS_ERROR, (unsigned)diag::Severity::Error, "pragma float_control is malformed; use 'float_control({push|pop})' or 'float_control({precise|except}, {on|off} [,push])'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_fp_invalid_argument, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected argument '%0' to '#pragma clang fp %1'; expected %select{'fast' or 'on' or 'off'|'on' or 'off'|'on' or 'off'|'ignore', 'maytrap' or 'strict'|'source', 'double' or 'extended'}2", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_fp_invalid_option, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{invalid|missing}0 option%select{ %1|}0; expected 'contract', 'reassociate', 'reciprocal', or 'exceptions'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_invalid_keyword, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_loop_invalid_option, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, pipeline, pipeline_initiation_interval, vectorize_predicate, or distribute", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_loop_invalid_vectorize_option, CLASS_ERROR, (unsigned)diag::Severity::Error, "vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_loop_missing_argument, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_misplaced_in_decl, CLASS_ERROR, (unsigned)diag::Severity::Error, "this pragma cannot appear in %0 declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_missing_argument, CLASS_ERROR, (unsigned)diag::Severity::Error, "missing argument to '#pragma %0'%select{|; expected %2}1", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_optimize_extra_argument, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected extra argument '%0' to '#pragma clang optimize'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_optimize_invalid_argument, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_pipeline_invalid_keyword, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid argument; expected 'disable'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_pragma_pointers_to_members_unknown_kind, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_private_module_fragment_expected_semi, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected ';' after private module fragment declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_ptrauth_qualifier_bad_arg_count, CLASS_ERROR, (unsigned)diag::Severity::Error, "'__ptrauth' qualifier must take between 1 and 3 arguments", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_clause_inside_parens, CLASS_ERROR, (unsigned)diag::Severity::Error, "trailing requires clause should be placed outside parentheses", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_clause_must_appear_after_trailing_return, CLASS_ERROR, (unsigned)diag::Severity::Error, "trailing return type must appear before trailing requires clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_clause_on_declarator_not_declaring_a_function, CLASS_ERROR, (unsigned)diag::Severity::Error, "trailing requires clause can only be used when declaring a function", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_expr_expected_type_constraint, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected concept name with optional arguments", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_expr_explicit_object_parameter, CLASS_ERROR, (unsigned)diag::Severity::Error, "a requires expression cannot have an explicit object parameter", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_expr_in_simple_requirement, CLASS_ERROR, (unsigned)diag::Severity::Error, "requires expression in requirement body; did you intend to place it in a nested requirement? (add another 'requires' before the expression)", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_expr_missing_arrow, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected '->' before expression type requirement", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_expr_parameter_list_ellipsis, CLASS_ERROR, (unsigned)diag::Severity::Error, "varargs not allowed in requires expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_requires_expr_simple_requirement_noexcept, CLASS_ERROR, (unsigned)diag::Severity::Error, "'noexcept' can only be used in a compound requirement (with '{' '}' around the expression)", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_right_angle_bracket_equal_needs_space, CLASS_ERROR, (unsigned)diag::Severity::Error, "a space is required between a right angle bracket and an equals sign (use '> =')", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_scoped_enum_missing_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "scoped enumeration requires a name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_single_decl_assign_in_for_range, CLASS_ERROR, (unsigned)diag::Severity::Error, "range-based 'for' statement uses ':', not '='", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_sizeof_parameter_pack, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected parenthesized parameter pack name in 'sizeof...' expression", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_static_lambda, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "static lambdas are a C++23 extension", 132, SFINAE_Suppress, false, false, true, false, 2)
DIAG(err_static_lambda_captures, CLASS_ERROR, (unsigned)diag::Severity::Error, "a static lambda cannot have any captures", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_static_mutable_lambda, CLASS_ERROR, (unsigned)diag::Severity::Error, "lambda cannot be both mutable and static", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_stmtexpr_file_scope, CLASS_ERROR, (unsigned)diag::Severity::Error, "statement expression not allowed at file scope", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_super_in_using_declaration, CLASS_ERROR, (unsigned)diag::Severity::Error, "'__super' cannot be used with a using declaration", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_synthesized_property_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "expected a property name in @synthesize", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_template_defn_explicit_instantiation, CLASS_ERROR, (unsigned)diag::Severity::Error, "%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_template_spec_syntax_non_template, CLASS_ERROR, (unsigned)diag::Severity::Error, "identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>|<unused>|refers to a concept}1", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_templated_invalid_declaration, CLASS_ERROR, (unsigned)diag::Severity::Error, "a static_assert declaration cannot be a template", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_templated_using_directive_declaration, CLASS_ERROR, (unsigned)diag::Severity::Error, "cannot template a using %select{directive|declaration}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_this_captured_by_reference, CLASS_ERROR, (unsigned)diag::Severity::Error, "'this' cannot be captured by reference", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_two_right_angle_brackets_need_space, CLASS_ERROR, (unsigned)diag::Severity::Error, "a space is required between consecutive right angle brackets (use '> >')", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_type_safety_unknown_flag, CLASS_ERROR, (unsigned)diag::Severity::Error, "invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_type_trait_arity, CLASS_ERROR, (unsigned)diag::Severity::Error, "type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_type_unparsed, CLASS_ERROR, (unsigned)diag::Severity::Error, "unparsed tokens following type", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_typename_identifiers_only, CLASS_ERROR, (unsigned)diag::Severity::Error, "typename is allowed for identifiers only", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_typename_invalid_constexpr, CLASS_ERROR, (unsigned)diag::Severity::Error, "type name does not allow %select{<ERROR>|constexpr|consteval|constinit}0 specifier to be specified", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_typename_invalid_functionspec, CLASS_ERROR, (unsigned)diag::Severity::Error, "type name does not allow function specifier to be specified", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_typename_invalid_storageclass, CLASS_ERROR, (unsigned)diag::Severity::Error, "type name does not allow storage class to be specified", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_typename_refers_to_non_type_template, CLASS_ERROR, (unsigned)diag::Severity::Error, "typename specifier refers to a non-type template", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_typename_requires_specqual, CLASS_ERROR, (unsigned)diag::Severity::Error, "type name requires a specifier or qualifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_at, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected '@' in program", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_colon_in_nested_name_spec, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected ':' in nested name specifier; did you mean '::'?", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_module_decl, CLASS_ERROR, (unsigned)diag::Severity::Error, "module declaration can only appear at the top level", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_unexpected_namespace_attributes_alias, CLASS_ERROR, (unsigned)diag::Severity::Error, "attributes cannot be specified on namespace alias", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_nested_namespace_attribute, CLASS_ERROR, (unsigned)diag::Severity::Error, "attributes cannot be specified on a nested namespace definition", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_protocol_qualifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "@implementation declaration cannot be protocol qualified", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_qualified_namespace_alias, CLASS_ERROR, (unsigned)diag::Severity::Error, "namespace alias must be a single identifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_scope_on_base_decltype, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected namespace scope prior to decltype", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_semi, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected ';' before %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_template_after_using, CLASS_ERROR, (unsigned)diag::Severity::Error, "'template' keyword not permitted after 'using' keyword", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_template_in_destructor_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "'template' keyword not permitted in destructor name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_template_in_unqualified_id, CLASS_ERROR, (unsigned)diag::Severity::Error, "'template' keyword not permitted here", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_token_in_nested_name_spec, CLASS_ERROR, (unsigned)diag::Severity::Error, "'%0' cannot be a part of nested name specifier; did you mean ':'?", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_typedef_ident, CLASS_ERROR, (unsigned)diag::Severity::Error, "unexpected type name %0: expected identifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unexpected_unqualified_id, CLASS_ERROR, (unsigned)diag::Severity::Error, "type-id cannot have a name", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unknown_hlsl_semantic, CLASS_ERROR, (unsigned)diag::Severity::Error, "unknown HLSL semantic %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 0)
DIAG(err_unknown_template_name, CLASS_ERROR, (unsigned)diag::Severity::Error, "unknown template name %0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unparenthesized_non_primary_expr_in_requires_clause, CLASS_ERROR, (unsigned)diag::Severity::Error, "parentheses are required around this expression in a requires clause", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unspecified_size_with_static, CLASS_ERROR, (unsigned)diag::Severity::Error, "'static' may not be used without an array size", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unspecified_vla_size_with_static, CLASS_ERROR, (unsigned)diag::Severity::Error, "'static' may not be used with an unspecified variable length array size", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_unsupported_module_partition, CLASS_ERROR, (unsigned)diag::Severity::Error, "module partitions are only supported for C++20 onwards", 0, SFINAE_SubstitutionFailure, false, true, true, false, 15)
DIAG(err_using_attribute_ns_conflict, CLASS_ERROR, (unsigned)diag::Severity::Error, "attribute with scope specifier cannot follow default scope specifier", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_using_enum_expect_identifier, CLASS_ERROR, (unsigned)diag::Severity::Error, "using enum %select{requires an enum or typedef name|does not permit an elaborated enum specifier}0", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_using_namespace_in_class, CLASS_ERROR, (unsigned)diag::Severity::Error, "'using namespace' is not allowed in classes", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_virt_specifier_outside_class, CLASS_ERROR, (unsigned)diag::Severity::Error, "'%0' specifier is not allowed outside a class definition", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_while_loop_outside_of_a_function, CLASS_ERROR, (unsigned)diag::Severity::Error, "while loop outside of a function", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(err_zero_version, CLASS_ERROR, (unsigned)diag::Severity::Error, "version number must have non-zero major, minor, or sub-minor version", 0, SFINAE_SubstitutionFailure, false, true, true, false, 2)
DIAG(ext_abstract_pack_declarator_parens, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "ISO C++11 requires a parenthesized pack declaration to have a name", 31, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_alias_declaration, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "alias declarations are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_alias_in_init_statement, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "alias declaration in this context is a C++23 extension", 132, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_alignof_expr, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "%0 applied to an expression is a GNU extension", 381, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_auto_storage_class, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases", 69, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_auto_type, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "'__auto_type' is a GNU extension", 384, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_bit_int, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "'_BitInt' in %select{C17 and earlier|C++}0 is a Clang extension", 78, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_bitfield_member_init, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "default member initializer for bit-field is a C++20 extension", 129, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c2y_case_range, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "case ranges are a C2y extension", 159, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c2y_feature, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "'%0' is a C2y extension", 159, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c2y_generic_with_type_arg, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "passing a type argument as the first operand to '_Generic' is a C2y extension", 159, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c11_feature, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "'%0' is a C11 extension", 154, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c23_enum_fixed_underlying_type, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "enumeration types with a fixed underlying type are a C23 extension", 156, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c99_compound_literal, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "compound literals are a C99-specific feature", 162, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c99_feature, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "'%0' is a C99 extension", 162, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c99_variable_decl_in_for_loop, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "variable declaration in for loop is a C99-specific feature", 162, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c_label_end_of_compound_statement, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "label at end of compound statement is a C23 extension", 156, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c_label_followed_by_declaration, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "label followed by a declaration is a C23 extension", 156, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c_nullptr, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "'nullptr' is a C23 extension", 156, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_c_static_assert_no_message, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'_Static_assert' with no message is a C23 extension", 156, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_consteval_if, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "consteval if is a C++23 extension", 132, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_constexpr_if, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "constexpr if is a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_constexpr_on_lambda_cxx17, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'constexpr' on lambda expressions is a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_cxx11_attr_placement, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "ISO C++ does not allow %select{an attribute list|%0}1 to appear here", 210, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_cxx_binding_pack, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "structured binding packs are a C++2c extension ", 134, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_cxx_label_end_of_compound_statement, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "label at end of compound statement is a C++23 extension", 132, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_cxx_static_assert_no_message, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'static_assert' with no message is a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_cxx_static_assert_user_generated_message, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'static_assert' with a user-generated message is a C++26 extension", 134, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_decl_attrs_on_binding, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "an attribute specifier sequence attached to a structured binding declaration is a C++2c extension", 134, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_decl_attrs_on_lambda, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "%select{an attribute specifier sequence|%0}1 in this position is a C++23 extension", 133, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_decltype_auto_type_specifier, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'decltype(auto)' type specifier is a C++14 extension", 115, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_decomp_decl_empty, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "ISO C++17 does not allow a decomposition group to be empty", 304, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_defaulted_deleted_function, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "%select{defaulted|deleted}0 function definitions are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_delete_with_message, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "'= delete' with a message is a C++2c extension", 134, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_dynamic_exception_spec, CLASS_EXTENSION, (unsigned)diag::Severity::Error, "ISO C++17 does not allow dynamic exception specifications", 297, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_elaborated_enum_class, CLASS_EXTENSION, (unsigned)diag::Severity::Error, "reference to enumeration must use 'enum' not 'enum %select{struct|class}0'", 301, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_ellipsis_exception_spec, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "exception specification of '...' is a Microsoft extension", 554, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_empty_translation_unit, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "ISO C requires a translation unit to contain at least one declaration", 306, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_enum_base_in_type_specifier, CLASS_EXTENSION, (unsigned)diag::Severity::Error, "non-defining declaration of enumeration with a fixed underlying type is only permitted as a standalone declaration%select{|; missing list of enumerators?}0", 300, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_enumerator_list_comma_c, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "commas at the end of enumerator lists are a C99-specific feature", 162, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_enumerator_list_comma_cxx, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "commas at the end of enumerator lists are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_expected_semi_decl_list, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "expected ';' at end of declaration list", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_explicit_bool, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "explicit(bool) is a C++20 extension", 129, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_extern_template, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "extern templates are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_extra_semi, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0", 331, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_extra_semi_cxx11, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "extra ';' outside of a function is a C++11 extension", 106, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_fold_expression, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "pack fold expression is a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_for_range, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "range-based for loop is a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_for_range_init_stmt, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "range-based for loop initialization statements are a C++20 extension", 129, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_generalized_initializer_lists, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "generalized initializer lists are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_address_of_label, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "use of GNU address-of-label extension", 399, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_array_range, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "use of GNU array range extension", 390, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_case_range, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "case ranges are a GNU extension", 386, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_conditional_expr, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "use of GNU ?: conditional expression extension, omitting middle operand", 389, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_indirect_goto, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "use of GNU indirect-goto extension", 399, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_missing_equal_designator, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "use of GNU 'missing =' extension in designator", 390, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_old_style_field_designator, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "use of GNU old-style field designator extension", 390, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_statement_expr, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "use of GNU statement expression extension", 405, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_gnu_statement_expr_macro, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "use of GNU statement expression extension from macro expansion", 406, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_hlsl_access_specifiers, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "access specifiers are a clang HLSL extension", 422, SFINAE_Suppress, false, false, true, false, 0)
DIAG(ext_hlsl_lambda, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "lambdas are a %select{C++11|clang HLSL}0 extension", 422, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_ident_list_in_param, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "type-less parameter names in function declaration", 745, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_init_statement, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'%select{if|switch}0' initialization statements are a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_inline_namespace, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "inline namespaces are a C++11 feature", 107, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_inline_nested_namespace_definition, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "inline nested namespace definition is a C++20 extension", 129, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_keyword_as_ident, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1", 514, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_lambda, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "lambdas are a %select{C++11|clang HLSL}0 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_lambda_missing_parens, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "lambda without a parameter clause is a C++23 extension", 132, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_lambda_template_parameter_list, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "explicit template parameter list for lambdas is a C++20 extension", 129, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_ms_abstract_keyword, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'abstract' keyword is a Microsoft extension", 542, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_ms_c_enum_fixed_underlying_type, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "enumeration types with a fixed underlying type are a Microsoft extension", 558, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_ms_sealed_keyword, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'sealed' keyword is a Microsoft extension", 568, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_ms_static_assert, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "use of 'static_assert' without inclusion of <assert.h> is a Microsoft extension", 569, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_multi_using_declaration, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "use of multiple declarators in a single using declaration is a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_nested_namespace_definition, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "nested namespace definition is a C++17 extension; define each namespace separately", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_nonstatic_member_init, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "default member initializer for non-static data member is a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_ns_enum_attribute, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_nullability, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "type nullability specifier %0 is a Clang extension", 658, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_omp_attributes, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "specifying OpenMP directives with [[]] is an OpenMP 5.1 extension", 712, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_override_control_keyword, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "'%0' keyword is a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_ref_qualifier, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "reference qualifiers on functions are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_rvalue_reference, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "rvalue references are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_scoped_enum, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "scoped enumerations are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_stdc_pragma_ignored, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "unknown pragma in STDC namespace", 1005, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_template_template_param_typename, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "template template parameter using 'typename' is a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_thread_before, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "'__thread' before '%0'", 745, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_using_attribute_ns, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "default scope specifier for attributes is a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_using_declaration_pack, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "pack expansion of using declaration is a C++17 extension", 120, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_using_enum_declaration, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "using enum declaration is a C++20 extension", 129, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_variadic_friends, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "variadic 'friend' declarations are a C++2c extension", 134, SFINAE_Suppress, false, false, true, false, 2)
DIAG(ext_warn_gnu_final, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "__final is a GNU extension, consider using C++11 final", 377, SFINAE_Suppress, false, false, true, false, 2)
DIAG(missing_template_arg_list_after_template_kw, CLASS_EXTENSION, (unsigned)diag::Severity::Error, "a template argument list is expected after a name prefixed by the template keyword", 599, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_bracket_depth, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "use -fbracket-depth=N to increase maximum nesting level", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_compound_token_split_second_token_here, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "%select{|second }0%1 token is here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_exception_spec_deprecated, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "use '%0' instead", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_extra_comma_message_arg, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "comma separating Objective-C messaging arguments", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_force_empty_selector_name, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_max_tokens_total_override, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "total token limit set here", 0, SFINAE_Suppress, false, false, true, false, 0)
DIAG(note_meant_to_use_typename, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "did you mean to use 'typename'?", 0, SFINAE_Suppress, false, false, true, false, 27)
DIAG(note_misplaced_ellipsis_vararg_add_comma, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "insert ',' before '...' to silence this warning", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_misplaced_ellipsis_vararg_add_ellipsis, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_misplaced_ellipsis_vararg_existing_ellipsis, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "preceding '...' declares a function parameter pack", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_missing_end_of_definition_before, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "still within definition of %q0 here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_missing_selector_name, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "introduce a parameter name to make %0 part of the selector", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_objc_container_start, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "%select{class|protocol|category|class extension|implementation|category implementation}0 started here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_omp_assumption_clause_continue_here, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "the ignored tokens spans until here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_omp_ctx_compatible_set_and_selector_for_property, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "the context property '%0' can be nested in the context selector '%1' which is nested in the context set '%2'; try 'match(%2={%1(%0)})'", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_omp_ctx_compatible_set_for_selector, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "the context selector '%0' can be nested in the context set '%1'; try 'match(%1={%0%select{|(property)}2})'", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_omp_declare_variant_ctx_continue_here, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "the ignored %select{set|selector|property}0 spans until here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_omp_declare_variant_ctx_is_a, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "'%0' is a context %select{set|selector|property}1 not a context %select{set|selector|property}2", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_omp_declare_variant_ctx_options, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "context %select{set|selector|property}0 options are: %1", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_omp_declare_variant_ctx_try, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "try 'match(%0={%1%2})'", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_omp_declare_variant_ctx_used_here, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "the previous context %select{set|selector|property}0 '%1' used here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_ompx_bare_clause, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "OpenMP extension clause '%0' only allowed with '#pragma omp %1'", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_pragma_attribute_namespace_on_attribute, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "omit the namespace to add attributes to the most-recently pushed attribute group", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_pragma_attribute_use_attribute_kw, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "use the GNU '__attribute__' syntax", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_pragma_loop_invalid_vectorize_option, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_previous_default_assoc, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "previous default generic association is here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_previous_ellipsis, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "previous binding pack specified here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_previous_map_type_specified_here, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "map type '%0' is previous specified here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_previous_statement, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "previous statement is here", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(note_unparenthesized_non_primary_expr_in_requires_clause, CLASS_NOTE, (unsigned)diag::Severity::Fatal, "parentheses are required around this expression in a requires clause", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_arc_bridge_cast_nonarc, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'%0' casts have no effect when not using ARC", 34, SFINAE_Suppress, false, false, true, false, 9)
DIAG(warn_atimport_in_framework_header, CLASS_WARNING, (unsigned)diag::Severity::Warning, "use of '@import' in framework header is discouraged, including this header requires -fmodules", 55, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_attribute_no_decl, CLASS_WARNING, (unsigned)diag::Severity::Warning, "attribute %0 ignored, because it is not attached to a declaration", 425, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_attribute_on_function_definition, CLASS_WARNING, (unsigned)diag::Severity::Warning, "GCC does not allow %0 attribute in this position on a function definition", 377, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_availability_and_unavailable, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'unavailable' availability overrides all other availability information", 71, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c2y_compat_generic_with_type_arg, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "passing a type argument as the first operand to '_Generic' is incompatible with C standards before C2y", 785, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c2y_compat_keyword, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'%0' is incompatible with C standards before C2y", 785, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c11_compat_keyword, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'%0' is incompatible with C standards before C11", 779, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c17_compat_enum_fixed_underlying_type, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "enumeration types with a fixed underlying type are incompatible with C standards before C23", 781, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c17_compat_static_assert_no_message, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'_Static_assert' with no message is incompatible with C standards before C23", 781, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c23_compat_case_range, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "case ranges are incompatible with C standards before C2y", 785, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c23_compat_keyword, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'%0' is incompatible with C standards before C23", 781, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c23_compat_label_end_of_compound_statement, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "label at end of compound statement is incompatible with C standards before C23", 781, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_c23_compat_label_followed_by_declaration, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "label followed by a declaration is incompatible with C standards before C23", 781, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_clause_expected_string, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected string literal in 'clause %0' - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_compound_token_split_by_macro, CLASS_WARNING, (unsigned)diag::Severity::Warning, "%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 appear in different macro expansion contexts", 186, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_compound_token_split_by_whitespace, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 are separated by whitespace", 187, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cstyle_param, CLASS_WARNING, (unsigned)diag::Severity::Warning, "use of C-style parameters in Objective-C method declarations is deprecated", 247, SFINAE_Suppress, false, false, true, false, 34)
DIAG(warn_cuda_attr_lambda_position, CLASS_WARNING, (unsigned)diag::Severity::Warning, "nvcc does not allow '__%0__' to appear after the parameter list in lambdas", 208, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx11_compat_decltype_auto_type_specifier, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'decltype(auto)' type specifier is incompatible with C++ standards before C++14", 767, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx11_right_shift_in_template_arg, CLASS_WARNING, (unsigned)diag::Severity::Warning, "use of right-shift operator ('>>') in template argument will require parentheses in C++11", 101, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_constexpr_if, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "constexpr if is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_constexpr_on_lambda, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "constexpr on lambda expressions is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_fold_expression, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "pack fold expression is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_init_statement, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_nested_namespace_definition, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "nested namespace definition is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_ns_enum_attribute, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17", 770, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_static_assert_no_message, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'static_assert' with no message is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_template_template_param_typename, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "template template parameter using 'typename' is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx14_compat_using_attribute_ns, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "default scope specifier for attributes is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx17_compat_bitfield_member_init, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "default member initializer for bit-field is incompatible with C++ standards before C++20", 771, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx17_compat_explicit_bool, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "explicit(bool) is incompatible with C++ standards before C++20", 771, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx17_compat_for_range_init_stmt, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "range-based for loop initialization statements are incompatible with C++ standards before C++20", 771, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx17_compat_inline_nested_namespace_definition, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "inline nested namespace definition is incompatible with C++ standards before C++20", 771, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx17_compat_lambda_template_parameter_list, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "explicit template parameter list for lambdas is incompatible with C++ standards before C++20", 771, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx17_compat_multi_using_declaration, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx17_compat_using_declaration_pack, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "pack expansion using declaration is incompatible with C++ standards before C++17", 769, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx17_compat_using_enum_declaration, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "using enum declaration is incompatible with C++ standards before C++20", 771, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx20_alias_in_init_statement, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "alias declaration in this context is incompatible with C++ standards before C++23", 773, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx20_compat_consteval_if, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "consteval if is incompatible with C++ standards before C++23", 773, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx20_compat_decl_attrs_on_lambda, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "%select{an attribute specifier sequence|%1}0 in this position is incompatible with C++ standards before C++23", 773, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx20_compat_explicit_bool, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "this expression will be parsed as explicit(bool) in C++20", 126, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx20_compat_label_end_of_compound_statement, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "label at end of compound statement is incompatible with C++ standards before C++23", 773, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx20_compat_static_assert_user_generated_message, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'static_assert' with a user-generated message is incompatible with C++ standards before C++26", 775, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx20_compat_static_lambda, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "static lambdas are incompatible with C++ standards before C++23", 773, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx23_compat_binding_pack, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "structured binding packs are incompatible with C++ standards before C++2c", 775, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx23_compat_decl_attrs_on_binding, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "an attribute specifier sequence attached to a structured binding declaration is incompatible with C++ standards before C++2c", 775, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx23_delete_with_message, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'= delete' with a message is incompatible with C++ standards before C++2c", 775, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx23_variadic_friends, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "variadic 'friend' declarations are incompatible with C++ standards before C++2c", 775, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_alias_declaration, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "alias declarations are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_alignas, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'alignas' is incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_alignof, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "alignof expressions are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_attribute, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "[[]] attributes are incompatible with C++ standards before C++11", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_decltype, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'decltype' type specifier is incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_defaulted_deleted_function, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "%select{defaulted|deleted}0 function definitions are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_enumerator_list_comma, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "commas at the end of enumerator lists are incompatible with C++98", 152, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_extern_template, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "extern templates are incompatible with C++98", 152, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_for_range, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "range-based for loop is incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_generalized_initializer_lists, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "generalized initializer lists are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_inline_namespace, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "inline namespaces are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_lambda, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "lambda expressions are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_literal_operator, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "literal operators are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_noexcept_decl, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "noexcept specifications are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_noexcept_expr, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "noexcept expressions are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_nonstatic_member_init, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "default member initializer for non-static data members is incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_nullptr, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'nullptr' is incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_override_control_keyword, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'%0' keyword is incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_ref_qualifier, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "reference qualifiers on functions are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_rvalue_reference, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "rvalue references are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_scoped_enum, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "scoped enumerations are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_static_assert, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "'static_assert' declarations are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_top_level_semi, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "extra ';' outside of a function is incompatible with C++98", 150, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_trailing_return_type, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "trailing return types are incompatible with C++98", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_cxx98_compat_two_right_angle_brackets, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "consecutive right angle brackets are incompatible with C++98 (use '> >')", 148, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_dangling_else, CLASS_WARNING, (unsigned)diag::Severity::Warning, "add explicit braces to avoid dangling else", 215, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_deprecated_for_co_await, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'for co_await' belongs to CoroutineTS instead of C++20, which is deprecated", 246, SFINAE_Suppress, false, false, true, false, 17)
DIAG(warn_deprecated_missing_comma_before_ellipsis, CLASS_WARNING, (unsigned)diag::Severity::Warning, "declaration of a variadic function without a comma before '...' is deprecated", 256, SFINAE_Suppress, false, false, true, false, 34)
DIAG(warn_empty_init_statement, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "empty initialization statement of '%select{if|switch|range-based for}0' has no effect", 305, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_exception_spec_deprecated, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "dynamic exception specifications are deprecated", 248, SFINAE_Suppress, false, false, true, false, 34)
DIAG(warn_expected_consistent_version_separator, CLASS_WARNING, (unsigned)diag::Severity::Warning, "use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'", 71, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_expected_qualified_after_typename, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "expected a qualified name after 'typename'", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_ext_c23_attributes, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "[[]] attributes are a C23 extension", 156, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_ext_cxx11_attributes, CLASS_EXTENSION, (unsigned)diag::Severity::Ignored, "[[]] attributes are a C++11 extension", 105, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_ext_int_deprecated, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'_ExtInt' is deprecated; use '_BitInt' instead", 268, SFINAE_Suppress, false, false, true, false, 34)
DIAG(warn_extra_semi_after_mem_fn_def, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "extra ';' after member function definition", 331, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_gcc_attribute_location, CLASS_WARNING, (unsigned)diag::Severity::Warning, "GCC does not allow an attribute in this position on a function declaration", 377, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_gcc_variable_decl_in_for_loop, CLASS_WARNING, (unsigned)diag::Severity::Warning, "GCC does not allow variable declarations in for loop initializers before C99", 377, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_max_tokens, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "the number of preprocessor source tokens (%0) exceeds this token limit (%1)", 536, SFINAE_Suppress, false, false, true, false, 0)
DIAG(warn_max_tokens_total, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "the total number of preprocessor source tokens (%0) exceeds the token limit (%1)", 536, SFINAE_Suppress, false, false, true, false, 0)
DIAG(warn_microsoft_dependent_exists, CLASS_WARNING, (unsigned)diag::Severity::Warning, "dependent %select{__if_not_exists|__if_exists}0 declarations are ignored", 555, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_microsoft_qualifiers_ignored, CLASS_WARNING, (unsigned)diag::Severity::Warning, "qualifiers after comma in declarator list are ignored", 425, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_misleading_indentation, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "misleading indentation; statement is not part of the previous '%select{if|else|for|while}0'", 578, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_misplaced_ellipsis_vararg, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0", 24, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_missing_dependent_template_keyword, CLASS_EXTENSION, (unsigned)diag::Severity::Warning, "use 'template' keyword to treat '%0' as a dependent template name", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_missing_selector_name, CLASS_WARNING, (unsigned)diag::Severity::Warning, "%0 used as the name of the previous parameter rather than as part of the selector", 597, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_no_support_for_eval_method_source_on_m32, CLASS_WARNING, (unsigned)diag::Severity::Warning, "setting the floating point evaluation method to `source` on a target without SSE is not supported", 766, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_null_statement, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "empty expression statement has no effect; remove unnecessary ';' to silence this warning", 332, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_objc_protocol_qualifier_missing_id, CLASS_WARNING, (unsigned)diag::Severity::Warning, "protocol has no object type specified; defaults to qualified 'id'", 0, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp51_compat_attributes, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "specifying OpenMP directives with [[]] is incompatible with OpenMP standards before OpenMP 5.1", 787, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_ctx_incompatible_property_for_selector, CLASS_WARNING, (unsigned)diag::Severity::Warning, "the context property '%0' is not valid for the context selector '%1' and the context set '%2'; property ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_ctx_incompatible_score_for_property, CLASS_WARNING, (unsigned)diag::Severity::Warning, "the context selector '%0' in the context set '%1' cannot have a score (%quoted2); score ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_ctx_incompatible_selector_for_set, CLASS_WARNING, (unsigned)diag::Severity::Warning, "the context selector '%0' is not valid for the context set '%1'; selector ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_ctx_selector_without_properties, CLASS_WARNING, (unsigned)diag::Severity::Warning, "the context selector '%0' in context set '%1' requires a context property defined in parentheses; selector ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_declare_variant_ctx_mutiple_use, CLASS_WARNING, (unsigned)diag::Severity::Warning, "the context %select{set|selector|property}0 '%1' was used already in the same 'omp declare variant' directive; %select{set|selector|property}0 ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_declare_variant_ctx_not_a_property, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'%0' is not a valid context property for the context selector '%1' and the context set '%2'; property ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_declare_variant_ctx_not_a_selector, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'%0' is not a valid context selector for the context set '%1'; selector ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_declare_variant_ctx_not_a_set, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'%0' is not a valid context set in a `declare variant`; set ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_declare_variant_expected, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected '%0' after the %1; '%0' assumed", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_declare_variant_string_literal_or_identifier, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected identifier or string literal describing a context %select{set|selector|property}0; %select{set|selector|property}0 skipped", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_depend_in_ordered_deprecated, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'depend' clause for 'ordered' is deprecated; use 'doacross' instead", 234, SFINAE_Suppress, false, false, true, false, 34)
DIAG(warn_omp_extra_tokens_at_eol, CLASS_WARNING, (unsigned)diag::Severity::Warning, "extra tokens at the end of '#pragma omp %0' are ignored", 333, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_invalid_attribute_for_ompx_attributes, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'ompx_attribute' clause only allows 'amdgpu_flat_work_group_size', 'amdgpu_waves_per_eu', and 'launch_bounds'; %0 is ignored", 714, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_more_one_device_type_clause, CLASS_WARNING, (unsigned)diag::Severity::Warning, "more than one 'device_type' clause is specified", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_more_one_interop_type, CLASS_WARNING, (unsigned)diag::Severity::Warning, "interop type '%0' cannot be specified more than once", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_more_one_omp_all_memory, CLASS_WARNING, (unsigned)diag::Severity::Warning, "reserved locator 'omp_all_memory' cannot be specified more than once", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_unknown_assumption_clause_missing_id, CLASS_WARNING, (unsigned)diag::Severity::Warning, "valid %0 clauses start with %1; %select{token|tokens}2 will be ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_omp_unknown_assumption_clause_without_args, CLASS_WARNING, (unsigned)diag::Severity::Warning, "%0 clause should not be followed by arguments; tokens will be ignored", 713, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_acc_ignored, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "unexpected '#pragma acc ...' in program", 888, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_align_expected_equal, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected '=' following '#pragma %select{align|options align}0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_align_invalid_option, CLASS_WARNING, (unsigned)diag::Severity::Warning, "invalid alignment option in '#pragma %select{align|options align}0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_comment_ignored, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'#pragma comment %0' ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_debug_dependent_argument, CLASS_WARNING, (unsigned)diag::Severity::Warning, "%select{value|type}0-dependent expression passed as an argument to debug command", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_action_or_r_paren, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected action or ')' in '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_colon, CLASS_WARNING, (unsigned)diag::Severity::Warning, "missing ':' after %0 - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_colon_r_paren, CLASS_WARNING, (unsigned)diag::Severity::Warning, "missing ':' or ')' after %0 - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_comma, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected ',' in '#pragma %0'", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_identifier, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected identifier in '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_init_seg, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_integer, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected integer between %0 and %1 inclusive in '#pragma %2' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_lparen, CLASS_WARNING, (unsigned)diag::Severity::Warning, "missing '(' after '#pragma %0' - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_non_wide_string, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected non-wide string literal in '#pragma %0'", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_predicate, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_punc, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected ')' or ',' in '#pragma %0'", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_rparen, CLASS_WARNING, (unsigned)diag::Severity::Warning, "missing ')' after '#pragma %0' - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_section_label_or_name, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected a stack label or a string literal for the section name in '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_section_name, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected a string literal for the section name in '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_section_push_pop_or_name, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected push, pop or a string literal for the section name in '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_expected_string, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected string literal in '#pragma %0' - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_extension_is_core, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "OpenCL extension %0 is core feature or supported optional core feature - ignoring", 746, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_extra_tokens_at_eol, CLASS_WARNING, (unsigned)diag::Severity::Warning, "extra tokens at end of '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_force_cuda_host_device_bad_arg, CLASS_WARNING, (unsigned)diag::Severity::Warning, "incorrect use of #pragma clang force_cuda_host_device begin|end", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_fp_ignored, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'#pragma %0' is not supported on this target - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_init_seg_unsupported_target, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'#pragma init_seg' is only supported when targeting a Microsoft environment", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_intrinsic_builtin, CLASS_WARNING, (unsigned)diag::Severity::Warning, "%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1", 430, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_invalid_action, CLASS_WARNING, (unsigned)diag::Severity::Warning, "unknown action for '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_invalid_argument, CLASS_WARNING, (unsigned)diag::Severity::Warning, "unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_invalid_specific_action, CLASS_WARNING, (unsigned)diag::Severity::Warning, "unknown action '%1' for '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_missing_argument, CLASS_WARNING, (unsigned)diag::Severity::Warning, "missing argument to '#pragma %0'%select{|; expected %2}1", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_ms_fenv_access, CLASS_WARNING, (unsigned)diag::Severity::Warning, "incorrect use of '#pragma fenv_access (on|off)' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_ms_struct, CLASS_WARNING, (unsigned)diag::Severity::Warning, "incorrect use of '#pragma ms_struct on|off' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_omp_ignored, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "unexpected '#pragma omp ...' in program", 889, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_options_expected_align, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected 'align' following '#pragma options' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_pack_malformed, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected integer or identifier in '#pragma pack' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_unknown_extension, CLASS_WARNING, (unsigned)diag::Severity::Warning, "OpenCL extension %0 unknown or does not require pragma - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_unroll_cuda_value_in_parens, CLASS_WARNING, (unsigned)diag::Severity::Warning, "argument to '#pragma unroll' should not be in parentheses in CUDA C/C++", 208, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_unsupported_action, CLASS_WARNING, (unsigned)diag::Severity::Warning, "known but unsupported action '%1' for '#pragma %0' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_unsupported_extension, CLASS_WARNING, (unsigned)diag::Severity::Warning, "unsupported OpenCL extension %0 - ignoring", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pragma_unused_expected_var, CLASS_WARNING, (unsigned)diag::Severity::Warning, "expected '#pragma unused' argument to be a variable name", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pre_c23_compat_attributes, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "[[]] attributes are incompatible with C standards before C23", 781, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_pre_cxx26_ambiguous_pack_indexing_type, CLASS_WARNING, (unsigned)diag::Severity::Warning, "%0 is no longer a pack expansion but a pack indexing type; add a name to specify a pack expansion", 775, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_semicolon_before_method_body, CLASS_WARNING, (unsigned)diag::Severity::Ignored, "semicolon before method body is ignored", 853, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_static_inline_explicit_inst_ignored, CLASS_WARNING, (unsigned)diag::Severity::Warning, "ignoring '%select{static|inline}0' keyword on explicit template instantiation", 896, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_stdc_fenv_round_not_supported, CLASS_WARNING, (unsigned)diag::Severity::Warning, "pragma STDC FENV_ROUND is not supported", 1005, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_stdc_unknown_rounding_mode, CLASS_WARNING, (unsigned)diag::Severity::Warning, "invalid or unsupported rounding mode in '#pragma STDC FENV_ROUND' - ignored", 432, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_unknown_declare_variant_isa_trait, CLASS_WARNING, (unsigned)diag::Severity::Warning, "isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further", 889, SFINAE_Suppress, false, false, true, false, 2)
DIAG(warn_wrong_clang_attr_namespace, CLASS_WARNING, (unsigned)diag::Severity::Warning, "'__clang__' is a predefined macro name, not an attribute scope specifier; did you mean '_Clang' instead?", 425, SFINAE_Suppress, false, false, true, false, 2)
