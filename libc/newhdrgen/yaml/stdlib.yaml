header: stdlib.h
standards: 
      - stdc
macros: []
types:
  - type_name: __atexithandler_t
  - type_name: __qsortrcompare_t
  - type_name: __qsortcompare_t
  - type_name: __bsearchcompare_t
  - type_name: size_t
  - type_name: lldiv_t
  - type_name: ldiv_t
  - type_name: div_t
enums: []
objects: []
functions:
  - name: abs
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
  - name: atoi
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char *
  - name: atof
    standards: 
      - stdc
    return_type: double
    arguments:
      - type: const char * __restrict
  - name: atol
    standards: 
      - stdc
    return_type: long
    arguments:
      - type: const char *
  - name: atoll
    standards: 
      - stdc
    return_type: long long
    arguments:
      - type: const char *
  - name: bsearch
    standards: 
      - stdc
    return_type: void *
    arguments:
      - type: const void *
      - type: const void *
      - type: size_t
      - type: size_t
      - type: __bsearchcompare_t
  - name: div
    standards: 
      - stdc
    return_type: div_t
    arguments:
      - type: int
      - type: int
  - name: labs
    standards: 
      - stdc
    return_type: long
    arguments:
      - type: long
  - name: ldiv
    standards: 
      - stdc
    return_type: ldiv_t
    arguments:
      - type: long
      - type: long
  - name: llabs
    standards: 
      - stdc
    return_type: long long
    arguments:
      - type: long long
  - name: lldiv
    standards: 
      - stdc
    return_type: lldiv_t
    arguments:
      - type: long long
      - type: long long
  - name: qsort
    standards: 
      - stdc
    return_type: void
    arguments:
      - type: void *
      - type: size_t
      - type: size_t
      - type: __qsortcompare_t
  - name: qsort_r
    standards: 
      - GNUExtensions 
    return_type: void
    arguments:
      - type: void *
      - type: size_t
      - type: size_t
      - type: __qsortrcompare_t
      - type: void *
  - name: rand
    standards: 
      - stdc
    return_type: int
    arguments: []
  - name: srand
    standards: 
      - stdc
    return_type: void
    arguments:
      - type: unsigned int
  - name: strfromd
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: char * __restrict
      - type: size_t
      - type: const char * __restrict
      - type: double
  - name: strfromf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: char * __restrict
      - type: size_t
      - type: const char * __restrict
      - type: float
  - name: strfroml
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: char * __restrict
      - type: size_t
      - type: const char * __restrict
      - type: long double
  - name: strtod
    standards: 
      - stdc
    return_type: double
    arguments:
      - type: const char * __restrict
      - type: char * * __restrict
  - name: strtof
    standards: 
      - stdc
    return_type: float
    arguments:
      - type: const char * __restrict
      - type: char * * __restrict
  - name: strtol
    standards: 
      - stdc
    return_type: long
    arguments:
      - type: const char * __restrict
      - type: char * * __restrict
      - type: int
  - name: strtold
    standards: 
      - stdc
    return_type: long double
    arguments:
      - type: const char * __restrict
      - type: char * * __restrict
  - name: strtoll
    standards: 
      - stdc
    return_type: long long
    arguments:
      - type: const char * __restrict
      - type: char * * __restrict
      - type: int
  - name: strtoul
    standards: 
      - stdc
    return_type: unsigned long
    arguments:
      - type: const char * __restrict
      - type: char * * __restrict
      - type: int
  - name: strtoull
    standards: 
      - stdc
    return_type: unsigned long long
    arguments:
      - type: const char * __restrict
      - type: char * * __restrict
      - type: int
  - name: malloc
    standards: 
      - stdc
    return_type: void *
    arguments:
      - type: size_t
  - name: calloc
    standards: 
      - stdc
    return_type: void *
    arguments:
      - type: size_t
      - type: size_t
  - name: realloc
    standards: 
      - stdc
    return_type: void *
    arguments:
      - type: void *
      - type: size_t
  - name: aligned_alloc
    standards: 
      - stdc
    return_type: void *
    arguments:
      - type: size_t
      - type: size_t
  - name: free
    standards: 
      - stdc
    return_type: void
    arguments:
      - type: void *
  - name: _Exit
    standards: 
      - stdc
    return_type: _Noreturn void
    arguments:
      - type: int
  - name: abort
    standards: 
      - stdc
    return_type: _Noreturn void
    arguments: []
  - name: at_quick_exit
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: __atexithandler_t
  - name: atexit
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: __atexithandler_t
  - name: exit
    standards: 
      - stdc
    return_type: _Noreturn void
    arguments:
      - type: int
  - name: getenv
    standards: 
      - stdc
    return_type: char *
    arguments:
      - type: const char *
  - name: quick_exit
    standards: 
      - stdc
    return_type: _Noreturn void
    arguments:
      - type: int
