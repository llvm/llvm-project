header: stdio.h
macros:
  - macro_name: _IONBF
    macro_value: 2
  - macro_name: _IOLBF
    macro_value: 1
  - macro_name: _IOFBF
    macro_value: 0
  - macro_name: stdout
    macro_value: stdout
  - macro_name: stdin
    macro_value: stdin
types:
  - type_name: size_t
  - type_name: off_t
  - type_name: cookie_io_functions_t
  - type_name: FILE
enums: []
objects:
  - object_name: stdin
    object_type: FILE *
  - object_name: stdout
    object_type: FILE *
  - object_name: stderr
    object_type: FILE *
functions:
  - name: remove
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char *
  - name: rename
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char *
      - type: const char *
  - name: sprintf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: char * __restrict
      - type: const char * __restrict
      - type: ...
  - name: snprintf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: char * __restrict
      - type: size_t
      - type: const char * __restrict
      - type: ...
  - name: fprintf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE * __restrict
      - type: const char * __restrict
      - type: ...
  - name: printf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char * __restrict
      - type: ...
  - name: vsprintf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: char * __restrict
      - type: const char * __restrict
      - type: va_list
  - name: vsnprintf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: char * __restrict
      - type: size_t
      - type: const char * __restrict
      - type: va_list
  - name: vfprintf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE * __restrict
      - type: const char * __restrict
      - type: va_list
  - name: vprintf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char * __restrict
      - type: va_list
  - name: sscanf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char * __restrict
      - type: const char * __restrict
      - type: ...
  - name: scanf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char * __restrict
      - type: ...
  - name: fscanf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE * __restrict
      - type: const char * __restrict
      - type: ... 
  - name: fileno
    standards: 
      - POSIX
    return_type: int
    arguments:
      - type: FILE *
  - name: clearerr
    standards: 
      - stdc
    return_type: void
    arguments:
      - type: FILE *
  - name: clearerr_unlocked
    standards: 
      - GNUExtensions
    return_type: void
    arguments:
      - type: FILE *
  - name: fclose
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE *
  - name: flockfile
    standards: 
      - POSIX 
    return_type: void
    arguments:
      - type: FILE *
  - name: feof
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE *
  - name: feof_unlocked
    standards: 
      - GNUExtensions
    return_type: int
    arguments:
      - type: FILE *
  - name: ferror
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE *
  - name: ferror_unlocked
    standards: 
      - GNUExtensions
    return_type: int
    arguments:
      - type: FILE *
  - name: fgetc
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE *
  - name: fgetc_unlocked
    standards: 
      - GNUExtensions
    return_type: int
    arguments:
      - type: FILE *
  - name: fgets
    standards: 
      - stdc 
    return_type: char *
    arguments:
      - type: char * __restrict
      - type: int
      - type: FILE * __restrict
  - name: fflush
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE *
  - name: fopen
    standards: 
      - stdc 
    return_type: FILE *
    arguments:
      - type: const char *
      - type: const char *
  - name: fputc
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
      - type: FILE *
  - name: fputs
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char * __restrict
      - type: FILE * __restrict
  - name: fopencookie
    standards: 
      - GNUExtensions
    return_type: FILE *
    arguments:
      - type: void *
      - type: const char *
      - type: cookie_io_functions_t
  - name: fread
    standards: 
      - stdc
    return_type: size_t
    arguments:
      - type: void * __restrict
      - type: size_t
      - type: size_t
      - type: FILE * __restrict
  - name: fread_unlocked
    standards: 
      - GNUExtensions
    return_type: size_t
    arguments:
      - type: void * __restrict
      - type: size_t
      - type: size_t
      - type: FILE * __restrict
  - name: fseek
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE *
      - type: long
      - type: int
  - name: ftell 
    standards: 
      - stdc
    return_type: long
    arguments:
      - type: FILE *
  - name: funlockfile
    standards: 
      - POSIX
    return_type: void
    arguments:
      - type: FILE *
  - name: fwrite
    standards: 
      - stdc
    return_type: size_t
    arguments:
      - type: const void * __restrict
      - type: size_t
      - type: size_t
      - type: FILE * __restrict
  - name: fwrite_unlocked
    standards: 
      - GNUExtensions
    return_type: size_t
    arguments:
      - type: const void * __restrict
      - type: size_t
      - type: size_t
      - type: FILE * __restrict
  - name: getc
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE *
  - name: getc_unlocked
    standards: 
      - POSIX
    return_type: int
    arguments:
      - type: FILE *
  - name: getchar
    standards: 
      - stdc
    return_type: int
    arguments: []
  - name: getchar_unlocked
    standards: 
      - POSIX
    return_type: int
    arguments: []
  - name: putc
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
      - type: FILE *
  - name: putchar
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
  - name: puts
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const char *
  - name: setbuf
    standards: 
      - stdc
    return_type: void
    arguments:
      - type: FILE * __restrict
      - type: char * __restrict
  - name: setvbuf
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: FILE * __restrict
      - type: char * __restrict
      - type: int
      - type: size_t
  - name: ungetc
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
      - type: FILE *
  - name: stderr
    standards: 
      - stdc
    return_type: extern FILE *
    arguments: []
  - name: stdin
    standards: 
      - stdc
    return_type: extern FILE *
    arguments: []
  - name: stdout
    standards: 
      - stdc 
    return_type: extern FILE *
    arguments: []
