header: fenv.h
macros: []
types:
  - type_name: fenv_t
  - type_name: fexcept_t
enums: []
objects: []
functions:
  - name: feclearexcept
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
  - name: fetestexcept
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
  - name: fetestexceptflag
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const fexcept_t *
      - type: int
  - name: feraiseexcept
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
  - name: fesetround
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
  - name: fegetround
    standards: 
      - stdc
    return_type: int
    arguments: []
  - name: fegetenv
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: fenv_t *
  - name: fesetenv
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const fenv_t *
  - name: fegetexceptflag
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: fexcept_t *
      - type: int
  - name: fesetexcept
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: int
  - name: fesetexceptflag
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const fexcept_t *
      - type: int
  - name: feholdexcept
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: fenv_t *
  - name: feupdateenv
    standards: 
      - stdc
    return_type: int
    arguments:
      - type: const fenv_t *
  - name: fedisableexcept
    standards: 
      - GNUExtensions
    return_type: int 
    arguments: 
      - type: int 
    guard: null
  - name: feenableexcept
    standards: 
      - GNUExtensions
    return_type: int 
    arguments:
      - type: int
    attributes: []
  - name: fegetexcept
    standards: 
      - GNUExtensions
    return_type: int
    arguments: []
