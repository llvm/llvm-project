// RUN: mlir-lsp-server -lit-test < %s | FileCheck -strict-whitespace %s
{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":123,"rootPath":"mlir","capabilities":{},"trace":"off"}}
// -----
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{
  "uri":"test:///foo.mlir",
  "languageId":"mlir",
  "version":1,
  "text":"func.func private @foo(%arg: i32) -> i32 {\n%cast = \"builtin.unrealized_conversion_cast\"() : () -> (i32)\nreturn %"
}}}
// -----
{"jsonrpc":"2.0","id":1,"method":"textDocument/completion","params":{
  "textDocument":{"uri":"test:///foo.mlir"},
  "position":{"line":0,"character":0}
}}
//      CHECK:  "id": 1
// CHECK-NEXT:  "jsonrpc": "2.0",
// CHECK-NEXT:  "result": {
// CHECK-NEXT:    "isIncomplete": false,
// CHECK-NEXT:    "items": [
// CHECK:           {
// CHECK:             "detail": "dialect",
// CHECK:             "insertTextFormat": 1,
// CHECK:             "kind": 9,
// CHECK:             "label": "builtin",
// CHECK:             "sortText": "2"
// CHECK:           },
// CHECK:           {
// CHECK:             "detail": "operation",
// CHECK:             "insertTextFormat": 1,
// CHECK:             "kind": 5,
// CHECK:             "label": "module",
// CHECK:             "sortText": "1"
// CHECK:           }
// CHECK:         ]
// CHECK-NEXT:  }
// -----
{"jsonrpc":"2.0","id":1,"method":"textDocument/completion","params":{
  "textDocument":{"uri":"test:///foo.mlir"},
  "position":{"line":1,"character":9}
}}
//      CHECK:  "id": 1
// CHECK-NEXT:  "jsonrpc": "2.0",
// CHECK-NEXT:  "result": {
// CHECK-NEXT:    "isIncomplete": false,
// CHECK-NEXT:    "items": [
// CHECK:           {
// CHECK:             "detail": "dialect",
// CHECK:             "insertTextFormat": 1,
// CHECK:             "kind": 9,
// CHECK:             "label": "builtin",
// CHECK:             "sortText": "2"
// CHECK:           },
// CHECK-NOT:       "detail": "operation",
// CHECK:         ]
// CHECK-NEXT:  }
// -----
{"jsonrpc":"2.0","id":1,"method":"textDocument/completion","params":{
  "textDocument":{"uri":"test:///foo.mlir"},
  "position":{"line":1,"character":17}
}}
//      CHECK:  "id": 1
// CHECK-NEXT:  "jsonrpc": "2.0",
// CHECK-NEXT:  "result": {
// CHECK-NEXT:    "isIncomplete": false,
// CHECK-NEXT:    "items": [
// CHECK-NOT:       "detail": "dialect",
// CHECK:           {
// CHECK:             "detail": "operation",
// CHECK:             "insertTextFormat": 1,
// CHECK:             "kind": 5,
// CHECK:             "label": "module",
// CHECK:             "sortText": "1"
// CHECK:           }
// CHECK:         ]
// CHECK-NEXT:  }
// -----
{"jsonrpc":"2.0","id":1,"method":"textDocument/completion","params":{
  "textDocument":{"uri":"test:///foo.mlir"},
  "position":{"line":2,"character":8}
}}
//      CHECK:  "id": 1
// CHECK-NEXT:  "jsonrpc": "2.0",
// CHECK-NEXT:  "result": {
// CHECK-NEXT:    "isIncomplete": false,
// CHECK-NEXT:    "items": [
// CHECK-NEXT:      {
// CHECK-NEXT:        "detail": "builtin.unrealized_conversion_cast: i32",
// CHECK-NEXT:        "insertText": "cast",
// CHECK-NEXT:        "insertTextFormat": 1,
// CHECK-NEXT:        "kind": 6,
// CHECK-NEXT:        "label": "%cast"
// CHECK-NEXT:      },
// CHECK-NEXT:      {
// CHECK-NEXT:        "detail": "arg #0: i32",
// CHECK-NEXT:        "insertText": "arg",
// CHECK-NEXT:        "insertTextFormat": 1,
// CHECK-NEXT:        "kind": 6,
// CHECK-NEXT:        "label": "%arg"
// CHECK-NEXT:      }
// CHECK:         ]
// CHECK-NEXT:  }
// -----
{"jsonrpc":"2.0","id":3,"method":"shutdown"}
// -----
{"jsonrpc":"2.0","method":"exit"}
