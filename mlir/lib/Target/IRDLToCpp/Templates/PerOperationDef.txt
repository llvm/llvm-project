/*
0: Operation CppName
1: Operand count
2: Result count
3: Build definitions

4: open namespace
5: close namespace
6: namespace path
*/

R"(

//===----------------------------------------------------------------------===//
// {6}::{0} definitions
//===----------------------------------------------------------------------===//

{4}

::llvm::LogicalResult {0}::verifyInvariantsImpl() {{
  return ::mlir::success();
}

::llvm::LogicalResult {0}::verifyInvariants() {{
  return verifyInvariantsImpl();
}

::mlir::ParseResult {0}::parse(::mlir::OpAsmParser &parser, ::mlir::OperationState &result) {{
  assert(false && "not implemented");
  return ::mlir::failure();
}

{3}

void {0}::build(::mlir::OpBuilder &odsBuilder, ::mlir::OperationState &odsState, ::mlir::TypeRange resultTypes, ::mlir::ValueRange operands, ::llvm::ArrayRef<::mlir::NamedAttribute> attributes) {{
  assert(operands.size() == {1});
  assert(resultTypes.size() == {2});
  odsState.addOperands(operands);
  odsState.addAttributes(attributes);
  odsState.addTypes(resultTypes);
}



void {0}::print(::mlir::OpAsmPrinter &_odsPrinter) {{
  assert(false && "not implemented");
}

{5}

MLIR_DEFINE_EXPLICIT_TYPE_ID({6}::{0})
)"