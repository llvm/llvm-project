name: PR Subscriber

on:
  workflow_run:
    workflows: ["PR Receive Label"]
    types:
      - completed

permissions:
  actions: read
  contents: read

jobs:
  auto-subscribe:
    runs-on: ubuntu-latest
    if: >
      github.repository == 'llvm/llvm-project' &&
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Setup Automation Script
        run: |
          curl -O -L https://raw.githubusercontent.com/"$GITHUB_REPOSITORY"/main/llvm/utils/git/github-automation.py
          curl -O -L https://raw.githubusercontent.com/"$GITHUB_REPOSITORY"/main/llvm/utils/git/requirements.txt
          curl -O -L https://raw.githubusercontent.com/"$GITHUB_REPOSITORY"/main/.github/workflows/pr-subscriber-wait.py
          chmod a+x github-automation.py
          pip install -r requirements.txt

      - name: 'Wait for other actions'
        # We can't use the concurrency tag for these jobs, because it will
        # cancel pending jobs if another job is running.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 pr-subscriber-wait.py


      # From: https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
      # Updated version here: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#using-data-from-the-triggering-workflow
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id
            });
            const matchArtifact = artifacts.data.artifacts.find((artifact) =>
              artifact.name === 'pr'
            );
            const download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip'
            });
            const { writeFileSync } = require('node:fs');
            writeFileSync('${{ github.workspace }}/pr.zip', Buffer.from(download.data));

      - run: unzip pr.zip

      - name: Update watchers
        # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        run: |
          PR_NUMBER=$(cat NR)
          LABEL_NAME=$(cat LABEL)
          ./github-automation.py \
            --token '${{ secrets.ISSUE_SUBSCRIBER_TOKEN }}' \
            pr-subscriber \
            --issue-number "$PR_NUMBER" \
            --label-name "$LABEL_NAME"
