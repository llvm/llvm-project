name: "Check code formatting"
on: pull_request_target
permissions:
  pull-requests: write

jobs:
  code_formatter:
    runs-on: ubuntu-latest
    steps:
      # Get changed files before checking out the repository to force the action
      # to analyze the diff from the Github API rather than looking at the
      # shallow clone and erroring out, which is significantly more prone to
      # failure.
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          separator: ","

      - name: Calculate number of commits to fetch
        run: echo "PR_FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 1 ))" >> "${GITHUB_ENV}"

      - name: Fetch PR sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: ${{ env.PR_FETCH_DEPTH }}
          path: pr-sources

      # We need to make sure that we aren't executing/using any code from the
      # PR for security reasons as we're using pull_request_target. Checkout
      # the target branch with the necessary files.
      - name: Fetch LLVM Sources
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            llvm/utils/git/requirements_formatting.txt
            llvm/utils/git/code-format-helper.py
          sparse-checkout-cone-mode: false
          path: llvm-sources

      - name: "Listed files"
        run: |
          echo "Formatting files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Install clang-format
        uses: aminya/setup-cpp@v1
        with:
          clangformat: 17.0.1

      - name: Setup Python env
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'llvm-sources/llvm/utils/git/requirements_formatting.txt'

      - name: Install python dependencies
        run: pip install -r llvm-sources/llvm/utils/git/requirements_formatting.txt

      - name: Run code formatter
        env:
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_DEPTH: ${{ github.event.pull_request.commits }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        working-directory: ./pr-sources
        run: |
          python ../llvm-sources/llvm/utils/git/code-format-helper.py \
            --token ${{ secrets.GITHUB_TOKEN }} \
            --issue-number $GITHUB_PR_NUMBER \
            --start-rev HEAD~$PR_DEPTH \
            --end-rev HEAD \
            --changed-files "$CHANGED_FILES"
