@LIT_SITE_CFG_IN_HEADER@

import sys

config.llvm_tools_dir = lit_config.substitute("@LLVM_TOOLS_DIR@")
config.llvm_shlib_dir = lit_config.substitute(path(r"@SHLIBDIR@"))
config.llvm_plugin_ext = "@LLVM_PLUGIN_EXT@"
config.target_triple = "@LLVM_TARGET_TRIPLE@"
config.llvm_target_triple_env = "@LLVM_TARGET_TRIPLE_ENV@"
config.lit_tools_dir = "@LLVM_LIT_TOOLS_DIR@"
config.errc_messages = "@LLVM_LIT_ERRC_MESSAGES@"
config.flang_src_dir = "@FLANG_SOURCE_DIR@"
config.flang_bin_dir = "@FLANG_BINARY_DIR@/bin"
config.flang_libs_dir = "@FLANG_BINARY_DIR@/lib"
config.flang_tools_dir = lit_config.substitute("@FLANG_TOOLS_DIR@")
config.flang_llvm_tools_dir = "@CMAKE_BINARY_DIR@/bin"
config.flang_rt_obj_root = "@FLANG_RT_BINARY_DIR@"
config.flang_rt_src_dir = "@FLANG_RT_SOURCE_DIR@"
config.flang_rt_lib_dir = "@FLANG_RT_BINARY_DIR@/lib"
config.flang_rt_test_triple = "@FLANG_RT_TEST_TARGET_TRIPLE@"
config.python_executable = "@PYTHON_EXECUTABLE@"
config.has_plugins = @LLVM_ENABLE_PLUGINS@
config.linked_bye_extension = @LLVM_BYE_LINK_INTO_TOOLS@
config.cc = "@CMAKE_C_COMPILER@"
config.targets_to_build = "@TARGETS_TO_BUILD@"

import lit.llvm
lit.llvm.initialize(lit_config, config)

# Let the main config do the real work.
lit_config.load_config(config, "@FLANG_RT_SOURCE_DIR@/test/lit.cfg.py")
