if(LIBOMP_OMPD_SUPPORT)

if(NOT OPENMP_TEST_COMPILER_ID STREQUAL "Clang")
  message(STATUS "LIBOMPD: Can only test with Clang compiler")
  message(WARNING "LIBOMPD: The check-libompd target will not be available!")
  return()
endif()

find_package(LLVM REQUIRED CONFIG)
list(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")
include(AddLLVM)


#find_program(LLVM_LIT_PATH
#  NAMES llvm-lit lit
#  HINTS ${LLVM_TOOLS_BINARY_DIR} 
#  PATHS ${LLVM_ROOT_DIR}/bin /usr/bin /usr/local/bin /opt/local/bin
#  DOC "llvm-lit executable. (Workaround for AddLLVM.cmake path not being set)"
#)
#if(LLVM_LIT_PATH)
#  set(LLVM_EXTERNAL_LIT ${LLVM_LIT_PATH})
#endif()

#find_program(FILECHECK_EXECUTABLE
#  NAMES Filecheck FileCheck
#  HINTS ${LLVM_TOOLS_BINARY_DIR} 
#  PATHS ${LLVM_ROOT_DIR}/bin /usr/bin /usr/local/bin /opt/local/bin
#  DOC "Filecheck executable. (Workaround for AddLLVM.cmake path not being set)"
#)
#if(LLVM_FILECHECK_PATH)
#  set(LLVM_EXTERNAL_FILECHECK ${LLVM_FILECHECK_PATH})
#endif()

set(PYTHON_PLUGIN ${ompd_BINARY_DIR}/gdb-plugin/python-module)

# Configure the lit.site.cfg.in file
set(AUTO_GEN_COMMENT "## Autogenerated by libomp configuration.\n# Do not edit!")
configure_file(lit.site.cfg.in lit.site.cfg @ONLY)
add_openmp_testsuite(check-ompd "Running OMPD tests"
  ${CMAKE_CURRENT_BINARY_DIR}
  DEPENDS omp ompd ompd_gdb_plugin)

endif()
