# Description:
#   MLIR Tutorial

load("//mlir:tblgen.bzl", "gentbl_cc_library", "td_library")

licenses(["notice"])

package(default_visibility = ["//visibility:public"])

td_library(
    name = "TransformTdFiles",
    srcs = [
        "include/MyExtension.td",
        "include/MyExtensionTypes.td",
    ],
    includes = ["include"],
    deps = [
        "//mlir:OpBaseTdFiles",
        "//mlir:SideEffectInterfacesTdFiles",
        "//mlir:TransformDialectTdFiles",
    ],
)

gentbl_cc_library(
    name = "TransformIncGen",
    tbl_outs = [
        (
            ["-gen-op-decls"],
            "include/MyExtension.h.inc",
        ),
        (
            ["-gen-op-defs"],
            "include/MyExtension.cpp.inc",
        ),
    ],
    tblgen = "//mlir:mlir-tblgen",
    td_file = "include/MyExtension.td",
    deps = [":TransformTdFiles"],
)

gentbl_cc_library(
    name = "TransformTypesIncGen",
    tbl_outs = [
        (
            ["-gen-typedef-decls"],
            "include/MyExtensionTypes.h.inc",
        ),
        (
            ["-gen-typedef-defs"],
            "include/MyExtensionTypes.cpp.inc",
        ),
    ],
    tblgen = "//mlir:mlir-tblgen",
    td_file = "include/MyExtensionTypes.td",
    deps = [":TransformTdFiles"],
)

cc_library(
    name = "MyExtension",
    srcs = glob(["lib/*.cpp"]),
    hdrs = glob(["include/*.h"]),
    includes = ["include"],
    deps = [
        ":TransformIncGen",
        ":TransformTypesIncGen",
        "//llvm:Support",
        "//mlir:CallOpInterfaces",
        "//mlir:FuncDialect",
        "//mlir:IR",
        "//mlir:SCFDialect",
        "//mlir:Support",
        "//mlir:TransformDialect",
        "//mlir:TransformDialectInterfaces",
    ],
)

cc_binary(
    name = "transform-opt-ch3",
    srcs = glob(["transform-opt/*.cpp"]),
    local_defines = ["MLIR_INCLUDE_TESTS"],
    deps = [
        ":MyExtension",
        "//mlir:AllExtensions",
        "//mlir:AllPassesAndDialects",
        "//mlir:IR",
        "//mlir:MlirOptLib",
        "//mlir:RegisterAllDialects",
        "//mlir:RegisterAllExtensions",
        "//mlir:TransformDialectTransforms",
        "//mlir:Transforms",
        "//mlir/test:TestTransformDialect",
    ],
)
