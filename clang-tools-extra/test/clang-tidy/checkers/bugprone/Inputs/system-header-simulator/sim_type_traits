
#ifndef _SIM_TYPE_TRAITS
#define _SIM_TYPE_TRAITS

#pragma clang system_header
namespace std {

template< class T > struct remove_reference      {typedef T type;};
template< class T > struct remove_reference<T&>  {typedef T type;};
template< class T > struct remove_reference<T&&> {typedef T type;};

template<typename T> typename remove_reference<T>::type&& move(T&& a);

template< class T >
using remove_reference_t = typename remove_reference<T>::type;

} // namespace std

#endif // _SIM_TYPE_TRAITS
