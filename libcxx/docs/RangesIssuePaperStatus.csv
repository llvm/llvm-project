"Number","Name","Status","Assignee"
`P0896R4 <https://wg21.link/P0896R4>`__,<ranges>,,
`P1035R7 <https://wg21.link/P1035R7>`__,Input Range Adaptors,,
`P1207R4 <https://wg21.link/P1207R4>`__,Movability Of Single-Pass Iterators,,
`P1243R4 <https://wg21.link/P1243R4>`__,Rangify New Algorithms,,
`P1248R1 <https://wg21.link/P1248R1>`__,Fixing Relations,,
`P1252R2 <https://wg21.link/P1252R2>`__,Ranges Design Cleanup,,
`P1391R4 <https://wg21.link/P1391R4>`__,Range Constructor For string_view,,
`P1456R1 <https://wg21.link/P1456R1>`__,Move-Only Views,,
`P1474R1 <https://wg21.link/P1474R1>`__,Helpful Pointers For contiguous_iterator,,
`P1522R1 <https://wg21.link/P1522R1>`__,Iterator Difference Type And Integer Overflow,,
`P1523R1 <https://wg21.link/P1523R1>`__,Views And Size Types,,
`P1638R1 <https://wg21.link/P1638R1>`__,basic_istream_view::iterator Should Not Be Copyable,,
`P1716R3 <https://wg21.link/P1716R3>`__,Range Comparison Algorithms Are Over-Constrained,,
`P1739R4 <https://wg21.link/P1739R4>`__,Avoiding Template Bloat For Ranges,,
`P1862R1 <https://wg21.link/P1862R1>`__,Range Adaptors For Non-Copyable Iterators,,
`P1870R1 <https://wg21.link/P1870R1>`__,safe_range,,
`P1871R1 <https://wg21.link/P1871R1>`__,disable_sized_sentinel_for,,
`P1878R1 <https://wg21.link/P1878R1>`__,Constraining Readable Types,,
`P1970R2 <https://wg21.link/P1970R2>`__,ranges::ssize,,
`P1983R0 <https://wg21.link/P1983R0>`__,Fixing Minor Ranges Issues,,
`P1994R1 <https://wg21.link/P1994R1>`__,elements_view Needs Its Own sentinel,,
`P2091R0 <https://wg21.link/P2091R0>`__,Fixing Issues With Range Access CPOs,,
`P2106R0 <https://wg21.link/P2106R0>`__,Range Algorithm Result Types,,
`LWG-3169 <https://wg21.link/LWG-3169>`__, ranges permutation generators discard useful information,,
`LWG-3173 <https://wg21.link/LWG-3173>`__, Enable CTAD for ref-view,,
`LWG-3179 <https://wg21.link/LWG-3179>`__, subrange should always model Range,,
`LWG-3180 <https://wg21.link/LWG-3180>`__, Inconsistently named return type for ranges::minmax_element,,
`LWG-3183 <https://wg21.link/LWG-3183>`__, Normative permission to specialize Ranges variable templates,,
`LWG-3186 <https://wg21.link/LWG-3186>`__," ranges removal, partition, and partial_sort_copy algorithms discard useful information",,
`LWG-3191 <https://wg21.link/LWG-3191>`__, std::ranges::shuffle synopsis does not match algorithm definition,,
`LWG-3276 <https://wg21.link/LWG-3276>`__, Class split_view::outer_iterator::value_type should inherit from view_interface,,
`LWG-3280 <https://wg21.link/LWG-3280>`__, View converting constructors can cause constraint recursion and are unneeded,,
`LWG-3281 <https://wg21.link/LWG-3281>`__, Conversion from pair-like types to subrange is a silent semantic promotion,,
`LWG-3282 <https://wg21.link/LWG-3282>`__, subrange converting constructor should disallow derived to base conversions,,
`LWG-3286 <https://wg21.link/LWG-3286>`__, ranges::size is not required to be valid after a call to ranges::begin on an input range,,
`LWG-3291 <https://wg21.link/LWG-3291>`__, iota_view::iterator has the wrong iterator_category,,
`LWG-3292 <https://wg21.link/LWG-3292>`__, iota_view is under-constrained,,
`LWG-3299 <https://wg21.link/LWG-3299>`__, Pointers don't need customized iterator behavior,,
`LWG-3301 <https://wg21.link/LWG-3301>`__, transform_view::iterator has incorrect iterator_category,,
`LWG-3302 <https://wg21.link/LWG-3302>`__, Range adaptor objects keys and values are unspecified,,
`LWG-3313 <https://wg21.link/LWG-3313>`__, join_view::iterator::operator-- is incorrectly constrained,,
`LWG-3323 <https://wg21.link/LWG-3323>`__, has-tuple-element helper concept needs convertible_to,,
`LWG-3325 <https://wg21.link/LWG-3325>`__, Constrain return type of transformation function for transform_view,,
`LWG-3335 <https://wg21.link/LWG-3335>`__, range_size_t and views::all_t,,
`LWG-3355 <https://wg21.link/LWG-3355>`__, The memory algorithms should support move-only input iterators introduced by P1207,,
`LWG-3363 <https://wg21.link/LWG-3363>`__, drop_while_view should opt-out of sized_range,,
`LWG-3364 <https://wg21.link/LWG-3364>`__, Initialize data members of ranges and their iterators,,
`LWG-3381 <https://wg21.link/LWG-3381>`__, begin and data must agree for contiguous_range,,
`LWG-3384 <https://wg21.link/LWG-3384>`__, transform_view::sentinel has an incorrect operator-,,
`LWG-3385 <https://wg21.link/LWG-3385>`__, common_iterator is not sufficiently constrained for non-copyable iterators,,
`LWG-3387 <https://wg21.link/LWG-3387>`__, [range.reverse.view] reverse_view<V> unintentionally requires range<const V>,,
`LWG-3388 <https://wg21.link/LWG-3388>`__, view iterator types have ill-formed <=> operators,,
`LWG-3389 <https://wg21.link/LWG-3389>`__, A move-only iterator still does not have a counted_iterator,,
`LWG-3397 <https://wg21.link/LWG-3397>`__, ranges::basic_istream_view::iterator should not provide iterator_category,,
`LWG-3398 <https://wg21.link/LWG-3398>`__, tuple_element_t is also wrong for const subrange,,
`LWG-3474 <https://wg21.link/LWG-3474>`__, Nesting join_views is broken because of CTAD,,
`LWG-3500 <https://wg21.link/LWG-3500>`__, join_view::iterator::operator->() is bogus,,
`LWG-3505 <https://wg21.link/LWG-3505>`__, split_view::outer-iterator::operator++ misspecified,,
